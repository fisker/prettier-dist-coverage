{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9149,"endOffset":9220,"count":3673}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9225,"endOffset":9274,"count":3983}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9279,"endOffset":9324,"count":3650}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10889,"endOffset":10956,"count":3666}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":11614,"endOffset":11642,"count":1578}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11943,"endOffset":11971,"count":310}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12395,"endOffset":12451,"count":3}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":12604,"endOffset":12642,"count":177}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/per_context/messageport","functions":[{"functionName":"","ranges":[{"startOffset":407,"endOffset":993,"count":2740}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5981,"endOffset":6243,"count":106}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6509,"endOffset":6663,"count":468},{"startOffset":6645,"endOffset":6660,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9476,"endOffset":9551,"count":326}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9562,"endOffset":9656,"count":2013}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9667,"endOffset":10012,"count":1512},{"startOffset":9743,"endOffset":9905,"count":0},{"startOffset":9961,"endOffset":9985,"count":129},{"startOffset":9985,"endOffset":10011,"count":1383}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10275,"endOffset":10384,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10542,"endOffset":11205,"count":157},{"startOffset":10623,"endOffset":10815,"count":0},{"startOffset":10879,"endOffset":11176,"count":21},{"startOffset":11138,"endOffset":11142,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":11209,"endOffset":11843,"count":16},{"startOffset":11247,"endOffset":11266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11580,"endOffset":11683,"count":16}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":12139,"endOffset":12483,"count":16},{"startOffset":12258,"endOffset":12473,"count":468},{"startOffset":12335,"endOffset":12344,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12487,"endOffset":13309,"count":1549}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13504,"endOffset":13869,"count":1395}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2771,"endOffset":2862,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12891,"endOffset":13601,"count":2}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":12951,"endOffset":13234,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13381,"endOffset":13437,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13447,"endOffset":13502,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":13512,"endOffset":13593,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":14657,"endOffset":14954,"count":7}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":14690,"endOffset":14896,"count":2456}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":16339,"endOffset":17101,"count":2},{"startOffset":16710,"endOffset":17100,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":17119,"endOffset":17199,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":17256,"endOffset":17408,"count":1}],"isBlockCoverage":true},{"functionName":"ErrnoException","ranges":[{"startOffset":19603,"endOffset":20164,"count":1},{"startOffset":20002,"endOffset":20042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56957,"endOffset":57273,"count":2},{"startOffset":57026,"endOffset":57132,"count":0},{"startOffset":57237,"endOffset":57263,"count":0}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":8814},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3830,"endOffset":3880,"count":14531}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3886,"endOffset":3944,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4086,"endOffset":4122,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4128,"endOffset":4547,"count":1},{"startOffset":4187,"endOffset":4469,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8066,"endOffset":8228,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8330,"endOffset":8526,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12072,"endOffset":12122,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13230,"endOffset":13266,"count":6434}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14136,"endOffset":14171,"count":9}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4385,"endOffset":4410,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5763,"endOffset":6041,"count":339},{"startOffset":5989,"endOffset":6039,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":6147,"endOffset":7193,"count":339},{"startOffset":6295,"endOffset":6647,"count":0},{"startOffset":7004,"endOffset":7011,"count":1},{"startOffset":7012,"endOffset":7018,"count":338}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7587,"endOffset":7726,"count":1}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7935,"endOffset":8241,"count":334}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9618,"endOffset":9784,"count":339},{"startOffset":9673,"endOffset":9782,"count":2}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9786,"endOffset":9953,"count":8},{"startOffset":9841,"endOffset":9951,"count":2}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":11102,"endOffset":11841,"count":422},{"startOffset":11433,"endOffset":11814,"count":334},{"startOffset":11668,"endOffset":11810,"count":311}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12698,"endOffset":12903,"count":415},{"startOffset":12800,"endOffset":12880,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12905,"endOffset":12976,"count":1079}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":15228,"endOffset":15718,"count":413},{"startOffset":15428,"endOffset":15700,"count":827},{"startOffset":15459,"endOffset":15564,"count":413},{"startOffset":15542,"endOffset":15555,"count":0},{"startOffset":15564,"endOffset":15602,"count":414},{"startOffset":15602,"endOffset":15617,"count":1},{"startOffset":15617,"endOffset":15662,"count":413},{"startOffset":15662,"endOffset":15700,"count":414},{"startOffset":15700,"endOffset":15717,"count":0}],"isBlockCoverage":true},{"functionName":"listOnTimeout","ranges":[{"startOffset":15722,"endOffset":18460,"count":414},{"startOffset":15925,"endOffset":17915,"count":497},{"startOffset":16146,"endOffset":16374,"count":83},{"startOffset":16374,"endOffset":16414,"count":414},{"startOffset":16414,"endOffset":16429,"count":0},{"startOffset":16429,"endOffset":16631,"count":414},{"startOffset":16631,"endOffset":16948,"count":0},{"startOffset":16948,"endOffset":17059,"count":414},{"startOffset":17059,"endOffset":17181,"count":83},{"startOffset":17181,"endOffset":17295,"count":414},{"startOffset":17295,"endOffset":17363,"count":0},{"startOffset":17372,"endOffset":17882,"count":414},{"startOffset":17408,"endOffset":17436,"count":83},{"startOffset":17438,"endOffset":17547,"count":83},{"startOffset":17547,"endOffset":17874,"count":331},{"startOffset":17702,"endOffset":17734,"count":0},{"startOffset":17843,"endOffset":17864,"count":0},{"startOffset":17882,"endOffset":17915,"count":414},{"startOffset":17915,"endOffset":18456,"count":331}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14549,"endOffset":14619,"count":16240}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14994,"endOffset":15284,"count":14870},{"startOffset":15250,"endOffset":15283,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16096,"endOffset":16159,"count":88271}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16161,"endOffset":16220,"count":17684}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16222,"endOffset":16277,"count":16240}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16338,"endOffset":16399,"count":14869}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16890,"endOffset":17066,"count":17684},{"startOffset":17038,"endOffset":17064,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17069,"endOffset":17189,"count":17684},{"startOffset":17133,"endOffset":17158,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":17192,"endOffset":17402,"count":1370},{"startOffset":17329,"endOffset":17344,"count":0},{"startOffset":17357,"endOffset":17401,"count":0}],"isBlockCoverage":true},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17405,"endOffset":17468,"count":2740}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17534,"endOffset":18104,"count":17684},{"startOffset":17754,"endOffset":17804,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18169,"endOffset":18780,"count":17684},{"startOffset":18285,"endOffset":18298,"count":0},{"startOffset":18377,"endOffset":18483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1087,"endOffset":1146,"count":546}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1881,"endOffset":2192,"count":29},{"startOffset":1974,"endOffset":2142,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2438,"endOffset":2819,"count":51},{"startOffset":2558,"endOffset":2612,"count":0},{"startOffset":2652,"endOffset":2706,"count":0},{"startOffset":2749,"endOffset":2815,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3063,"endOffset":3526,"count":30},{"startOffset":3235,"endOffset":3303,"count":0},{"startOffset":3337,"endOffset":3405,"count":0},{"startOffset":3442,"endOffset":3522,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3757,"endOffset":4189,"count":29},{"startOffset":3827,"endOffset":3891,"count":0},{"startOffset":3923,"endOffset":3987,"count":0},{"startOffset":4011,"endOffset":4014,"count":0},{"startOffset":4111,"endOffset":4187,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4381,"endOffset":4493,"count":8512}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4735,"endOffset":5181,"count":58},{"startOffset":4813,"endOffset":4867,"count":0},{"startOffset":4888,"endOffset":4902,"count":41},{"startOffset":4920,"endOffset":4934,"count":33},{"startOffset":4957,"endOffset":4971,"count":17},{"startOffset":4973,"endOffset":4994,"count":41},{"startOffset":4997,"endOffset":5179,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5369,"endOffset":5702,"count":8},{"startOffset":5440,"endOffset":5700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5513,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5898,"endOffset":6012,"count":6},{"startOffset":5955,"endOffset":6010,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6594,"endOffset":7613,"count":61},{"startOffset":6685,"endOffset":6925,"count":38},{"startOffset":6736,"endOffset":6808,"count":0},{"startOffset":6847,"endOffset":6919,"count":0},{"startOffset":6925,"endOffset":7609,"count":23},{"startOffset":7038,"endOffset":7055,"count":21},{"startOffset":7057,"endOffset":7129,"count":0},{"startOffset":7227,"endOffset":7249,"count":0},{"startOffset":7251,"endOffset":7323,"count":0},{"startOffset":7479,"endOffset":7529,"count":0},{"startOffset":7531,"endOffset":7603,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8567,"endOffset":8845,"count":25},{"startOffset":8629,"endOffset":8692,"count":0},{"startOffset":8725,"endOffset":8843,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11213,"endOffset":11443,"count":25},{"startOffset":11278,"endOffset":11441,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11548,"endOffset":11860,"count":10},{"startOffset":11694,"endOffset":11713,"count":0},{"startOffset":11715,"endOffset":11858,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12692,"endOffset":12909,"count":31},{"startOffset":12739,"endOffset":12835,"count":0},{"startOffset":12837,"endOffset":12907,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13109,"endOffset":13225,"count":6799}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14978,"endOffset":15188,"count":2773},{"startOffset":15118,"endOffset":15186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2329,"endOffset":2978,"count":32}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2428,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2475,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3727,"endOffset":4781,"count":32}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4091,"endOffset":4393,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5051,"endOffset":5125,"count":1},{"startOffset":5097,"endOffset":5123,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5304,"endOffset":5435,"count":537},{"startOffset":5356,"endOffset":5373,"count":527},{"startOffset":5374,"endOffset":5392,"count":1},{"startOffset":5408,"endOffset":5434,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":8212,"endOffset":8368,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8263,"endOffset":8365,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9343,"endOffset":9664,"count":1},{"startOffset":9416,"endOffset":9453,"count":0},{"startOffset":9459,"endOffset":9473,"count":0},{"startOffset":9621,"endOffset":9663,"count":0}],"isBlockCoverage":true},{"functionName":"getSystemErrorName","ranges":[{"startOffset":10847,"endOffset":10976,"count":1},{"startOffset":10942,"endOffset":10973,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11211,"endOffset":13072,"count":10},{"startOffset":11331,"endOffset":11387,"count":1},{"startOffset":11474,"endOffset":11751,"count":2},{"startOffset":11751,"endOffset":12858,"count":8},{"startOffset":12858,"endOffset":13020,"count":25},{"startOffset":13020,"endOffset":13071,"count":8}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11951,"endOffset":12470,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":13630,"endOffset":13757,"count":49},{"startOffset":13711,"endOffset":13741,"count":12}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":14877,"endOffset":15216,"count":2999}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15001,"endOffset":15213,"count":2999},{"startOffset":15037,"endOffset":15056,"count":0},{"startOffset":15169,"endOffset":15177,"count":0}],"isBlockCoverage":true},{"functionName":"createDeferredPromise","ranges":[{"startOffset":15456,"endOffset":15650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15550,"endOffset":15606,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":15963,"endOffset":16183,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":16682,"endOffset":17615,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16901,"endOffset":17044,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17147,"endOffset":17343,"count":9}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":17617,"endOffset":18517,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17829,"endOffset":18065,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18170,"endOffset":18241,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18519,"endOffset":18619,"count":1}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":19814,"endOffset":20004,"count":711}],"isBlockCoverage":true},{"functionName":"getLazy","ranges":[{"startOffset":22025,"endOffset":22237,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22106,"endOffset":22234,"count":2234},{"startOffset":22150,"endOffset":22212,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22362,"endOffset":23039,"count":1},{"startOffset":22832,"endOffset":23009,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23112,"endOffset":23209,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23211,"endOffset":23755,"count":10}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23286,"endOffset":23353,"count":10}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":23357,"endOffset":23575,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":23579,"endOffset":23707,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23711,"endOffset":23753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":495,"endOffset":623,"count":1172},{"startOffset":553,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":625,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":745,"endOffset":889,"count":5},{"startOffset":801,"endOffset":861,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":891,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":949,"endOffset":1072,"count":1172}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":12943}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":8751}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":133,"endOffset":225,"count":828},{"startOffset":186,"endOffset":198,"count":331},{"startOffset":198,"endOffset":224,"count":497}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":760}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":422},{"startOffset":594,"endOffset":611,"count":83},{"startOffset":613,"endOffset":636,"count":339}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":997,"endOffset":1057,"count":7}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":334},{"startOffset":826,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":879,"endOffset":917,"count":827}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":978,"endOffset":1642,"count":414},{"startOffset":1192,"endOffset":1551,"count":83},{"startOffset":1258,"endOffset":1305,"count":0},{"startOffset":1420,"endOffset":1426,"count":0}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1646,"endOffset":2134,"count":334},{"startOffset":1821,"endOffset":2043,"count":332},{"startOffset":1909,"endOffset":1915,"count":84},{"startOffset":1915,"endOffset":2043,"count":248}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2138,"endOffset":2468,"count":333},{"startOffset":2296,"endOffset":2310,"count":332},{"startOffset":2312,"endOffset":2464,"count":331},{"startOffset":2332,"endOffset":2382,"count":0},{"startOffset":2392,"endOffset":2414,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":2472,"endOffset":2626,"count":331},{"startOffset":2573,"endOffset":2580,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":503,"endOffset":976,"count":1},{"startOffset":595,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":870,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":958,"endOffset":969,"count":9}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1404,"endOffset":1412,"count":4780}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1533,"endOffset":2091,"count":9},{"startOffset":1608,"endOffset":2063,"count":6},{"startOffset":1627,"endOffset":2016,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1716,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2311,"endOffset":3337,"count":9}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2342,"endOffset":2438,"count":9}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2453,"endOffset":2847,"count":9},{"startOffset":2700,"endOffset":2730,"count":3},{"startOffset":2737,"endOffset":2776,"count":4},{"startOffset":2783,"endOffset":2837,"count":2}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2877,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2965,"endOffset":3160,"count":9},{"startOffset":3013,"endOffset":3043,"count":3},{"startOffset":3050,"endOffset":3089,"count":4},{"startOffset":3096,"endOffset":3150,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3231,"endOffset":3265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3130,"endOffset":6441,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3675,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3837,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4315,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4976,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5407,"endOffset":5595,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5655,"endOffset":5846,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5906,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6201,"endOffset":6390,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6575,"endOffset":6644,"count":44}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7129,"endOffset":7185,"count":1}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":8095,"endOffset":8173,"count":502}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8281,"endOffset":8329,"count":48}],"isBlockCoverage":false},{"functionName":"hasEventListener","ranges":[{"startOffset":8446,"endOffset":8625,"count":169},{"startOffset":8516,"endOffset":8550,"count":0}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10152,"endOffset":10820,"count":44}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12193,"endOffset":12308,"count":8}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12311,"endOffset":12460,"count":100}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13617,"endOffset":15920,"count":5125}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15923,"endOffset":17839,"count":236}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18017,"endOffset":18109,"count":218}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18396,"endOffset":18499,"count":18}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18502,"endOffset":18766,"count":40},{"startOffset":18665,"endOffset":18704,"count":36},{"startOffset":18704,"endOffset":18764,"count":4}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":18768,"endOffset":19009,"count":97}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19200,"endOffset":19326,"count":97}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19936,"endOffset":21299,"count":169},{"startOffset":20059,"endOffset":20071,"count":18},{"startOffset":20071,"endOffset":20170,"count":151},{"startOffset":20170,"endOffset":20199,"count":128},{"startOffset":20201,"endOffset":20572,"count":39},{"startOffset":20313,"endOffset":20564,"count":0},{"startOffset":20572,"endOffset":21273,"count":112},{"startOffset":20610,"endOffset":21273,"count":100},{"startOffset":20691,"endOffset":20830,"count":185},{"startOffset":20728,"endOffset":20760,"count":111},{"startOffset":20762,"endOffset":20820,"count":94},{"startOffset":20868,"endOffset":20880,"count":6},{"startOffset":20880,"endOffset":20920,"count":94},{"startOffset":20920,"endOffset":20933,"count":45},{"startOffset":20933,"endOffset":21094,"count":49},{"startOffset":21000,"endOffset":21047,"count":1},{"startOffset":21094,"endOffset":21137,"count":94},{"startOffset":21137,"endOffset":21160,"count":57},{"startOffset":21160,"endOffset":21221,"count":94},{"startOffset":21221,"endOffset":21265,"count":1},{"startOffset":21273,"endOffset":21298,"count":145}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24551,"endOffset":25256,"count":3600}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":25508,"endOffset":25981,"count":41}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":28065,"endOffset":29783,"count":3},{"startOffset":28221,"endOffset":28230,"count":0},{"startOffset":28236,"endOffset":28295,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28317,"endOffset":29779,"count":3},{"startOffset":29624,"endOffset":29775,"count":0}],"isBlockCoverage":true},{"functionName":"errorListener","ranges":[{"startOffset":28366,"endOffset":28558,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":28581,"endOffset":28855,"count":3},{"startOffset":28652,"endOffset":28717,"count":0},{"startOffset":28744,"endOffset":28828,"count":0}],"isBlockCoverage":true},{"functionName":"abortListener","ranges":[{"startOffset":29359,"endOffset":29599,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":30354,"endOffset":30786,"count":3},{"startOffset":30534,"endOffset":30581,"count":0},{"startOffset":30585,"endOffset":30784,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":3893,"endOffset":4081,"count":3}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4097,"endOffset":4219,"count":19}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8395,"endOffset":8423,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8681,"endOffset":9646,"count":1}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11465,"endOffset":11737,"count":8},{"startOffset":11576,"endOffset":11589,"count":0},{"startOffset":11590,"endOffset":11601,"count":0},{"startOffset":11603,"endOffset":11704,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11916,"endOffset":12018,"count":25}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":12696,"endOffset":13028,"count":25},{"startOffset":12739,"endOffset":12773,"count":0},{"startOffset":12812,"endOffset":12991,"count":18},{"startOffset":12860,"endOffset":12873,"count":3},{"startOffset":12991,"endOffset":13027,"count":7}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13030,"endOffset":13682,"count":1}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13931,"endOffset":14291,"count":1}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16155,"endOffset":16306,"count":519}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":16372,"endOffset":17519,"count":6},{"startOffset":16489,"endOffset":17518,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18002,"endOffset":18048,"count":2}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":20963,"endOffset":21026,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21317,"endOffset":23141,"count":3},{"startOffset":21404,"endOffset":21703,"count":2},{"startOffset":21467,"endOffset":21703,"count":0},{"startOffset":21708,"endOffset":22127,"count":0},{"startOffset":22132,"endOffset":22286,"count":0},{"startOffset":22291,"endOffset":22447,"count":0},{"startOffset":22452,"endOffset":22833,"count":0},{"startOffset":22838,"endOffset":22970,"count":1},{"startOffset":22875,"endOffset":22924,"count":0},{"startOffset":22957,"endOffset":22970,"count":0},{"startOffset":22975,"endOffset":23135,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24765,"endOffset":25380,"count":13},{"startOffset":24837,"endOffset":24885,"count":3},{"startOffset":24885,"endOffset":24937,"count":10},{"startOffset":24937,"endOffset":24947,"count":0},{"startOffset":24947,"endOffset":25029,"count":10},{"startOffset":24977,"endOffset":24987,"count":0},{"startOffset":25029,"endOffset":25055,"count":10},{"startOffset":25055,"endOffset":25067,"count":0},{"startOffset":25073,"endOffset":25083,"count":10},{"startOffset":25083,"endOffset":25121,"count":0},{"startOffset":25121,"endOffset":25147,"count":10},{"startOffset":25147,"endOffset":25157,"count":8},{"startOffset":25157,"endOffset":25193,"count":2},{"startOffset":25193,"endOffset":25227,"count":0},{"startOffset":25227,"endOffset":25298,"count":2},{"startOffset":25298,"endOffset":25339,"count":0},{"startOffset":25339,"endOffset":25379,"count":2}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":44}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29764,"endOffset":30013,"count":3}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30291,"endOffset":30427,"count":10}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30682,"endOffset":30754,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/per_thread","functions":[{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7998,"endOffset":12145,"count":1},{"startOffset":8339,"endOffset":8630,"count":182},{"startOffset":8391,"endOffset":8626,"count":144},{"startOffset":8488,"endOffset":8620,"count":74},{"startOffset":9090,"endOffset":9512,"count":24},{"startOffset":9144,"endOffset":9508,"count":12},{"startOffset":9233,"endOffset":9302,"count":3},{"startOffset":9367,"endOffset":9436,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8634,"endOffset":9038,"count":31},{"startOffset":8696,"endOffset":8710,"count":30},{"startOffset":8712,"endOffset":8724,"count":2},{"startOffset":8724,"endOffset":8801,"count":29},{"startOffset":8801,"endOffset":8970,"count":2},{"startOffset":8851,"endOffset":8898,"count":1},{"startOffset":8970,"endOffset":9037,"count":27}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9546,"endOffset":9608,"count":230}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9918,"endOffset":9994,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":10000,"endOffset":10069,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10075,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10154,"endOffset":10206,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10212,"endOffset":11027,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11033,"endOffset":11198,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11204,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11387,"endOffset":11448,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11454,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12335,"endOffset":12665,"count":1},{"startOffset":12415,"endOffset":12590,"count":0},{"startOffset":12622,"endOffset":12663,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3557,"endOffset":3757,"count":4120},{"startOffset":3608,"endOffset":3639,"count":518},{"startOffset":3641,"endOffset":3755,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3776,"endOffset":3907,"count":12324}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":3911,"endOffset":3972,"count":11734}],"isBlockCoverage":true},{"functionName":"isSymbolicLink","ranges":[{"startOffset":4178,"endOffset":4243,"count":11734}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":5491,"endOffset":6606,"count":2999},{"startOffset":5715,"endOffset":6388,"count":12324},{"startOffset":5784,"endOffset":6310,"count":0},{"startOffset":6453,"endOffset":6604,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6049,"endOffset":6300,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7391,"endOffset":8017,"count":4160},{"startOffset":7475,"endOffset":7507,"count":4120},{"startOffset":7509,"endOffset":7541,"count":40},{"startOffset":7541,"endOffset":7578,"count":4120},{"startOffset":7578,"endOffset":7696,"count":518},{"startOffset":7696,"endOffset":7818,"count":3602},{"startOffset":7735,"endOffset":7818,"count":0},{"startOffset":7818,"endOffset":7932,"count":4120},{"startOffset":7932,"endOffset":7996,"count":0},{"startOffset":7996,"endOffset":8016,"count":4120}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8075,"endOffset":8608,"count":1},{"startOffset":8145,"endOffset":8284,"count":0},{"startOffset":8316,"endOffset":8606,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9349,"endOffset":9656,"count":8751}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":9692,"endOffset":9749,"count":8749}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":9781,"endOffset":9838,"count":2}],"isBlockCoverage":true},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":10074,"endOffset":10131,"count":8736}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10437,"endOffset":10519,"count":35004}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11006,"endOffset":11117,"count":35004}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12289,"endOffset":12831,"count":8751}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13172,"endOffset":13402,"count":17487},{"startOffset":13209,"endOffset":13287,"count":0},{"startOffset":13289,"endOffset":13356,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":13520,"endOffset":14599,"count":8751},{"startOffset":13600,"endOffset":14126,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15001,"endOffset":16257,"count":546},{"startOffset":15082,"endOffset":15137,"count":0},{"startOffset":15160,"endOffset":15186,"count":0},{"startOffset":15211,"endOffset":15238,"count":544},{"startOffset":15243,"endOffset":15254,"count":0},{"startOffset":15276,"endOffset":15313,"count":0},{"startOffset":15318,"endOffset":15344,"count":0},{"startOffset":15349,"endOffset":15361,"count":0},{"startOffset":15383,"endOffset":15419,"count":0},{"startOffset":15425,"endOffset":15472,"count":2},{"startOffset":15477,"endOffset":15488,"count":0},{"startOffset":15510,"endOffset":15567,"count":0},{"startOffset":15573,"endOffset":15619,"count":0},{"startOffset":15624,"endOffset":15635,"count":0},{"startOffset":15657,"endOffset":15712,"count":0},{"startOffset":15718,"endOffset":15766,"count":0},{"startOffset":15771,"endOffset":15782,"count":0},{"startOffset":15804,"endOffset":15862,"count":0},{"startOffset":15867,"endOffset":15878,"count":0},{"startOffset":15900,"endOffset":15958,"count":0},{"startOffset":15964,"endOffset":16011,"count":0},{"startOffset":16016,"endOffset":16027,"count":0},{"startOffset":16049,"endOffset":16105,"count":0},{"startOffset":16110,"endOffset":16121,"count":0},{"startOffset":16143,"endOffset":16199,"count":0},{"startOffset":16203,"endOffset":16256,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17234,"endOffset":17697,"count":25},{"startOffset":17290,"endOffset":17378,"count":0},{"startOffset":17399,"endOffset":17487,"count":0},{"startOffset":17528,"endOffset":17693,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17756,"endOffset":18241,"count":1},{"startOffset":17819,"endOffset":17919,"count":0},{"startOffset":17959,"endOffset":18068,"count":0},{"startOffset":18090,"endOffset":18178,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18284,"endOffset":18996,"count":12943},{"startOffset":18346,"endOffset":18368,"count":0},{"startOffset":18370,"endOffset":18477,"count":0},{"startOffset":18668,"endOffset":18688,"count":0},{"startOffset":18758,"endOffset":18826,"count":0},{"startOffset":18845,"endOffset":18995,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19041,"endOffset":19176,"count":12338}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19219,"endOffset":19340,"count":26},{"startOffset":19270,"endOffset":19289,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25024,"endOffset":25600,"count":25},{"startOffset":25146,"endOffset":25598,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3494,"endOffset":4283,"count":1283}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4062,"endOffset":4127,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4131,"endOffset":4206,"count":960}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4210,"endOffset":4281,"count":960}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":21737,"endOffset":21862,"count":13235},{"startOffset":21788,"endOffset":21804,"count":312},{"startOffset":21805,"endOffset":21831,"count":312},{"startOffset":21832,"endOffset":21858,"count":312}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22189,"endOffset":33222,"count":1679}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":22319,"endOffset":22807,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":22816,"endOffset":23280,"count":1679},{"startOffset":22912,"endOffset":22960,"count":0},{"startOffset":23065,"endOffset":23096,"count":728},{"startOffset":23236,"endOffset":23276,"count":1418}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":23291,"endOffset":23533,"count":248},{"startOffset":23356,"endOffset":23404,"count":0},{"startOffset":23504,"endOffset":23521,"count":33},{"startOffset":23522,"endOffset":23528,"count":215}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23537,"endOffset":24257,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":24261,"endOffset":24595,"count":35},{"startOffset":24331,"endOffset":24594,"count":0}],"isBlockCoverage":true},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":24599,"endOffset":24710,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":24714,"endOffset":25153,"count":1641},{"startOffset":24982,"endOffset":25149,"count":0}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":25401,"endOffset":27046,"count":1488},{"startOffset":25510,"endOffset":25531,"count":35},{"startOffset":25532,"endOffset":25630,"count":0},{"startOffset":26326,"endOffset":27042,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":27050,"endOffset":27235,"count":452}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":27239,"endOffset":27424,"count":1154}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":27428,"endOffset":27647,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":27665,"endOffset":28534,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":28538,"endOffset":28642,"count":1173}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":28646,"endOffset":28819,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":28823,"endOffset":29050,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":29054,"endOffset":29227,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":29231,"endOffset":29454,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":29458,"endOffset":29631,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":29635,"endOffset":30066,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":30070,"endOffset":30235,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":30239,"endOffset":30521,"count":467},{"startOffset":30405,"endOffset":30430,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":30525,"endOffset":30698,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":30702,"endOffset":30810,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":30814,"endOffset":30979,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":30983,"endOffset":31275,"count":925},{"startOffset":31049,"endOffset":31099,"count":0},{"startOffset":31132,"endOffset":31180,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":31279,"endOffset":31452,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":31456,"endOffset":31653,"count":35}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":31657,"endOffset":31861,"count":35}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":31879,"endOffset":32237,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":32241,"endOffset":32456,"count":35},{"startOffset":32285,"endOffset":32347,"count":0},{"startOffset":32373,"endOffset":32455,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":32460,"endOffset":32625,"count":35}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":32629,"endOffset":32812,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":32823,"endOffset":33220,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":42504,"endOffset":43025,"count":467},{"startOffset":42567,"endOffset":42623,"count":0},{"startOffset":42701,"endOffset":42984,"count":52806},{"startOffset":42732,"endOffset":42980,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":43027,"endOffset":43439,"count":467},{"startOffset":43154,"endOffset":43175,"count":180},{"startOffset":43175,"endOffset":43269,"count":287},{"startOffset":43205,"endOffset":43269,"count":0},{"startOffset":43307,"endOffset":43348,"count":0},{"startOffset":43381,"endOffset":43408,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":43992,"endOffset":46009,"count":308},{"startOffset":44099,"endOffset":44180,"count":0},{"startOffset":44229,"endOffset":44306,"count":0},{"startOffset":44354,"endOffset":44435,"count":0},{"startOffset":44483,"endOffset":44571,"count":0},{"startOffset":44618,"endOffset":44697,"count":0},{"startOffset":44744,"endOffset":44823,"count":0},{"startOffset":44870,"endOffset":44948,"count":0},{"startOffset":44995,"endOffset":45081,"count":0},{"startOffset":45128,"endOffset":45219,"count":0},{"startOffset":45381,"endOffset":45464,"count":0},{"startOffset":45511,"endOffset":45603,"count":0},{"startOffset":45650,"endOffset":45729,"count":0},{"startOffset":45776,"endOffset":45861,"count":0},{"startOffset":45908,"endOffset":45987,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":46011,"endOffset":47870,"count":308},{"startOffset":46133,"endOffset":46179,"count":0},{"startOffset":46181,"endOffset":47319,"count":0},{"startOffset":47345,"endOffset":47375,"count":0},{"startOffset":47668,"endOffset":47680,"count":0},{"startOffset":47682,"endOffset":47721,"count":0},{"startOffset":47724,"endOffset":47775,"count":0},{"startOffset":47781,"endOffset":47797,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":47872,"endOffset":48009,"count":12943},{"startOffset":47947,"endOffset":47968,"count":12918},{"startOffset":47968,"endOffset":48008,"count":25}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":2158,"endOffset":2235,"count":2582149}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2470,"endOffset":4418,"count":23900},{"startOffset":2687,"endOffset":4402,"count":2569437},{"startOffset":2720,"endOffset":2762,"count":2545537},{"startOffset":2762,"endOffset":2853,"count":23900},{"startOffset":2805,"endOffset":2811,"count":11188},{"startOffset":2811,"endOffset":2853,"count":12712},{"startOffset":2853,"endOffset":2886,"count":2558249},{"startOffset":2886,"endOffset":4303,"count":250522},{"startOffset":2918,"endOffset":2931,"count":224651},{"startOffset":2933,"endOffset":2958,"count":26433},{"startOffset":2958,"endOffset":4260,"count":224089},{"startOffset":2980,"endOffset":4015,"count":1574},{"startOffset":3009,"endOffset":3035,"count":1483},{"startOffset":3036,"endOffset":3110,"count":25},{"startOffset":3111,"endOffset":3185,"count":25},{"startOffset":3187,"endOffset":3875,"count":1549},{"startOffset":3219,"endOffset":3696,"count":1458},{"startOffset":3339,"endOffset":3415,"count":0},{"startOffset":3696,"endOffset":3865,"count":91},{"startOffset":3724,"endOffset":3865,"count":0},{"startOffset":3875,"endOffset":4007,"count":116},{"startOffset":3938,"endOffset":3956,"count":25},{"startOffset":3957,"endOffset":3963,"count":91},{"startOffset":4015,"endOffset":4260,"count":222515},{"startOffset":4061,"endOffset":4130,"count":198706},{"startOffset":4130,"endOffset":4205,"count":23809},{"startOffset":4260,"endOffset":4303,"count":249064},{"startOffset":4303,"endOffset":4398,"count":2307727},{"startOffset":4331,"endOffset":4345,"count":28092},{"startOffset":4347,"endOffset":4368,"count":3927},{"startOffset":4368,"endOffset":4398,"count":2303800}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":36750,"endOffset":37854,"count":11188},{"startOffset":36872,"endOffset":36892,"count":17686},{"startOffset":36899,"endOffset":37204,"count":17669},{"startOffset":37030,"endOffset":37057,"count":0},{"startOffset":37233,"endOffset":37408,"count":0},{"startOffset":37793,"endOffset":37843,"count":0},{"startOffset":37844,"endOffset":37849,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":37920,"endOffset":38533,"count":12712},{"startOffset":38006,"endOffset":38017,"count":0},{"startOffset":38345,"endOffset":38439,"count":0},{"startOffset":38473,"endOffset":38485,"count":0},{"startOffset":38509,"endOffset":38521,"count":12338},{"startOffset":38522,"endOffset":38528,"count":374}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":38600,"endOffset":38756,"count":1049}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":38825,"endOffset":39189,"count":12339},{"startOffset":38874,"endOffset":38885,"count":0},{"startOffset":38950,"endOffset":39079,"count":24679},{"startOffset":39114,"endOffset":39125,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":39279,"endOffset":41639,"count":2364},{"startOffset":39392,"endOffset":39402,"count":1},{"startOffset":39402,"endOffset":39529,"count":2363},{"startOffset":39529,"endOffset":39539,"count":0},{"startOffset":39539,"endOffset":39811,"count":2363},{"startOffset":39812,"endOffset":39819,"count":0},{"startOffset":39893,"endOffset":40128,"count":146572},{"startOffset":40041,"endOffset":40047,"count":0},{"startOffset":40104,"endOffset":40122,"count":9458},{"startOffset":40128,"endOffset":41113,"count":2363},{"startOffset":40460,"endOffset":40642,"count":0},{"startOffset":40650,"endOffset":41107,"count":0},{"startOffset":41113,"endOffset":41638,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":41705,"endOffset":41781,"count":15984}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":41847,"endOffset":42523,"count":5186},{"startOffset":41930,"endOffset":41941,"count":0},{"startOffset":42115,"endOffset":42368,"count":80619},{"startOffset":42186,"endOffset":42270,"count":5186},{"startOffset":42270,"endOffset":42362,"count":75433},{"startOffset":42396,"endOffset":42423,"count":0},{"startOffset":42440,"endOffset":42452,"count":2829},{"startOffset":42460,"endOffset":42472,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":42619,"endOffset":45049,"count":4044},{"startOffset":42680,"endOffset":42713,"count":1338},{"startOffset":42845,"endOffset":42865,"count":1338},{"startOffset":42866,"endOffset":42897,"count":1338},{"startOffset":42899,"endOffset":44423,"count":1338},{"startOffset":42936,"endOffset":42946,"count":0},{"startOffset":43067,"endOffset":44252,"count":26926},{"startOffset":43167,"endOffset":43405,"count":1338},{"startOffset":43405,"endOffset":44244,"count":25588},{"startOffset":43452,"endOffset":43681,"count":1338},{"startOffset":43709,"endOffset":44234,"count":6690},{"startOffset":43867,"endOffset":44019,"count":1338},{"startOffset":44033,"endOffset":44222,"count":0},{"startOffset":44287,"endOffset":44310,"count":0},{"startOffset":44346,"endOffset":44364,"count":0},{"startOffset":44423,"endOffset":44471,"count":2706},{"startOffset":44471,"endOffset":44956,"count":39708},{"startOffset":44542,"endOffset":44766,"count":2706},{"startOffset":44766,"endOffset":44950,"count":37002},{"startOffset":44788,"endOffset":44950,"count":2706},{"startOffset":44956,"endOffset":44984,"count":2706},{"startOffset":44984,"endOffset":44994,"count":0},{"startOffset":44994,"endOffset":45048,"count":2706}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":45115,"endOffset":46758,"count":8739},{"startOffset":45448,"endOffset":46363,"count":148142},{"startOffset":45502,"endOffset":45748,"count":8739},{"startOffset":45722,"endOffset":45748,"count":0},{"startOffset":45748,"endOffset":45771,"count":139403},{"startOffset":45771,"endOffset":45928,"count":8739},{"startOffset":45928,"endOffset":45953,"count":139403},{"startOffset":45953,"endOffset":46153,"count":12785},{"startOffset":46069,"endOffset":46082,"count":8722},{"startOffset":46082,"endOffset":46145,"count":4063},{"startOffset":46129,"endOffset":46145,"count":4061},{"startOffset":46153,"endOffset":46357,"count":126618},{"startOffset":46180,"endOffset":46357,"count":103526},{"startOffset":46389,"endOffset":46410,"count":8722},{"startOffset":46411,"endOffset":46504,"count":8722},{"startOffset":46505,"endOffset":46674,"count":8643},{"startOffset":46602,"endOffset":46634,"count":38},{"startOffset":46635,"endOffset":46673,"count":0},{"startOffset":46676,"endOffset":46700,"count":96},{"startOffset":46700,"endOffset":46757,"count":8643}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":46985,"endOffset":49457,"count":7},{"startOffset":47135,"endOffset":47146,"count":0},{"startOffset":47316,"endOffset":47346,"count":0},{"startOffset":47666,"endOffset":48628,"count":73},{"startOffset":47762,"endOffset":48008,"count":7},{"startOffset":47982,"endOffset":48008,"count":0},{"startOffset":48008,"endOffset":48031,"count":66},{"startOffset":48031,"endOffset":48188,"count":7},{"startOffset":48188,"endOffset":48218,"count":66},{"startOffset":48218,"endOffset":48418,"count":2},{"startOffset":48347,"endOffset":48410,"count":0},{"startOffset":48418,"endOffset":48622,"count":64},{"startOffset":48445,"endOffset":48622,"count":8},{"startOffset":48688,"endOffset":48701,"count":0},{"startOffset":48702,"endOffset":48705,"count":0},{"startOffset":48745,"endOffset":48842,"count":2},{"startOffset":48843,"endOffset":49018,"count":2},{"startOffset":48944,"endOffset":48977,"count":0},{"startOffset":48978,"endOffset":49017,"count":0},{"startOffset":49020,"endOffset":49099,"count":5},{"startOffset":49099,"endOffset":49298,"count":2},{"startOffset":49390,"endOffset":49436,"count":0}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/process/task_queues","functions":[{"functionName":"hasTickScheduled","ranges":[{"startOffset":982,"endOffset":1057,"count":2}],"isBlockCoverage":true},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":22337},{"startOffset":1135,"endOffset":1138,"count":14426},{"startOffset":1139,"endOffset":1142,"count":7911}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1247,"endOffset":1443,"count":1},{"startOffset":1409,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":7911},{"startOffset":1501,"endOffset":2304,"count":7912},{"startOffset":1547,"endOffset":2279,"count":14530},{"startOffset":1748,"endOffset":1781,"count":33},{"startOffset":1781,"endOffset":2155,"count":14497},{"startOffset":1868,"endOffset":1901,"count":6554},{"startOffset":1914,"endOffset":1956,"count":56},{"startOffset":1969,"endOffset":2020,"count":7887},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":14530},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":33},{"startOffset":2743,"endOffset":2780,"count":6554},{"startOffset":2785,"endOffset":2836,"count":56},{"startOffset":2841,"endOffset":2906,"count":7887},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3083,"endOffset":3109,"count":14426},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1267,"endOffset":1379,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1414,"endOffset":1569,"count":1},{"startOffset":1473,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4097,"endOffset":4187,"count":7911},{"startOffset":4177,"endOffset":4180,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":4219,"endOffset":4298,"count":2}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12037,"endOffset":13386,"count":7911},{"startOffset":12197,"endOffset":12376,"count":0},{"startOffset":12582,"endOffset":13292,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3130,"endOffset":3182,"count":44884}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3186,"endOffset":3253,"count":14530}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3257,"endOffset":3344,"count":14530}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3348,"endOffset":3563,"count":22442},{"startOffset":3441,"endOffset":3453,"count":7912},{"startOffset":3453,"endOffset":3562,"count":14530}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3683,"endOffset":3730,"count":22442}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3734,"endOffset":3998,"count":14530},{"startOffset":3775,"endOffset":3968,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4002,"endOffset":4257,"count":22442},{"startOffset":4094,"endOffset":4115,"count":22338},{"startOffset":4117,"endOffset":4236,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:async_hooks","functions":[{"functionName":"AsyncResource","ranges":[{"startOffset":4564,"endOffset":5761,"count":1371},{"startOffset":4802,"endOffset":4838,"count":1},{"startOffset":4839,"endOffset":4860,"count":1370},{"startOffset":5092,"endOffset":5171,"count":0},{"startOffset":5323,"endOffset":5486,"count":0},{"startOffset":5518,"endOffset":5540,"count":1},{"startOffset":5542,"endOffset":5757,"count":0}],"isBlockCoverage":true},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5765,"endOffset":6081,"count":2740}],"isBlockCoverage":true},{"functionName":"emitDestroy","ranges":[{"startOffset":6085,"endOffset":6260,"count":1370},{"startOffset":6146,"endOffset":6199,"count":0}],"isBlockCoverage":true},{"functionName":"asyncId","ranges":[{"startOffset":6264,"endOffset":6313,"count":1370}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1886,"endOffset":1911,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2207,"endOffset":3391,"count":7},{"startOffset":2260,"endOffset":2267,"count":0},{"startOffset":2327,"endOffset":2373,"count":0},{"startOffset":2464,"endOffset":2502,"count":0},{"startOffset":2508,"endOffset":2543,"count":0},{"startOffset":3118,"endOffset":3260,"count":2}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4093,"endOffset":4762,"count":338},{"startOffset":4260,"endOffset":4267,"count":0},{"startOffset":4297,"endOffset":4338,"count":0},{"startOffset":4343,"endOffset":4390,"count":0},{"startOffset":4395,"endOffset":4628,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4857,"endOffset":4982,"count":2},{"startOffset":4896,"endOffset":4940,"count":1}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5082,"endOffset":5448,"count":45},{"startOffset":5125,"endOffset":5144,"count":7},{"startOffset":5146,"endOffset":5213,"count":7},{"startOffset":5213,"endOffset":5274,"count":38},{"startOffset":5276,"endOffset":5446,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":5685,"endOffset":6356,"count":1},{"startOffset":5854,"endOffset":5861,"count":0},{"startOffset":5891,"endOffset":5932,"count":0},{"startOffset":5937,"endOffset":5984,"count":0},{"startOffset":5989,"endOffset":6222,"count":0}],"isBlockCoverage":true},{"functionName":"clearInterval","ranges":[{"startOffset":6453,"endOffset":6751,"count":1}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":945,"endOffset":1275,"count":1},{"startOffset":1006,"endOffset":1273,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":676,"endOffset":804,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1579,"endOffset":1642,"count":168}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1729,"endOffset":2313,"count":1},{"startOffset":1837,"endOffset":2020,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2631,"endOffset":3231,"count":167},{"startOffset":2933,"endOffset":2966,"count":0},{"startOffset":3019,"endOffset":3155,"count":0},{"startOffset":3157,"endOffset":3230,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":4659,"endOffset":6205,"count":167},{"startOffset":4858,"endOffset":4878,"count":0},{"startOffset":4881,"endOffset":4888,"count":0},{"startOffset":5036,"endOffset":5132,"count":0},{"startOffset":5168,"endOffset":5234,"count":0},{"startOffset":5323,"endOffset":5340,"count":0},{"startOffset":5785,"endOffset":5799,"count":0},{"startOffset":5847,"endOffset":5994,"count":0},{"startOffset":6104,"endOffset":6127,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":7259,"endOffset":7680,"count":167},{"startOffset":7373,"endOffset":7581,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":7870,"endOffset":8666,"count":167},{"startOffset":8041,"endOffset":8605,"count":927061},{"startOffset":8417,"endOffset":8440,"count":899466},{"startOffset":8441,"endOffset":8464,"count":899466},{"startOffset":8466,"endOffset":8601,"count":27595}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":8818,"endOffset":9098,"count":167},{"startOffset":9046,"endOffset":9096,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":10135,"endOffset":10539,"count":167}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10213,"endOffset":10396,"count":180},{"startOffset":10302,"endOffset":10350,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1182,"endOffset":1207,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1676,"endOffset":1808,"count":568}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1924,"endOffset":2415,"count":1},{"startOffset":2103,"endOffset":2107,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2482,"endOffset":2609,"count":94},{"startOffset":2547,"endOffset":2583,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2836,"endOffset":3216,"count":157},{"startOffset":2925,"endOffset":2942,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3309,"endOffset":3422,"count":344},{"startOffset":3353,"endOffset":3401,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":4011,"endOffset":6543,"count":344},{"startOffset":4150,"endOffset":4213,"count":0},{"startOffset":4280,"endOffset":5551,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4423,"endOffset":5546,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5573,"endOffset":5713,"count":913}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5899,"endOffset":6045,"count":22}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":6190,"endOffset":6312,"count":1}],"isBlockCoverage":true},{"functionName":"stripBOM","ranges":[{"startOffset":6755,"endOffset":6910,"count":3},{"startOffset":6837,"endOffset":6890,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9391,"endOffset":9894,"count":167},{"startOffset":9496,"endOffset":9523,"count":0},{"startOffset":9660,"endOffset":9757,"count":0},{"startOffset":9759,"endOffset":9893,"count":0}],"isBlockCoverage":true},{"functionName":"urlToFilename","ranges":[{"startOffset":9964,"endOffset":10102,"count":2},{"startOffset":10086,"endOffset":10101,"count":0}],"isBlockCoverage":true},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":11438,"endOffset":11512,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":11516,"endOffset":11593,"count":343}],"isBlockCoverage":true},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":11597,"endOffset":11671,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":11675,"endOffset":11752,"count":2}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:fs","functions":[{"functionName":"makeCallback","ranges":[{"startOffset":4712,"endOffset":4824,"count":2999}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4780,"endOffset":4821,"count":2999}],"isBlockCoverage":true},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5005,"endOffset":5172,"count":8736}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5078,"endOffset":5169,"count":8736},{"startOffset":5109,"endOffset":5124,"count":0}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":5197,"endOffset":5457,"count":6863},{"startOffset":5396,"endOffset":5416,"count":658}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7469,"endOffset":7640,"count":20},{"startOffset":7544,"endOffset":7573,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10271,"endOffset":10502,"count":25},{"startOffset":10414,"endOffset":10426,"count":0},{"startOffset":10428,"endOffset":10484,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10504,"endOffset":10815,"count":25},{"startOffset":10622,"endOffset":10674,"count":0},{"startOffset":10761,"endOffset":10773,"count":0},{"startOffset":10775,"endOffset":10792,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":10817,"endOffset":11072,"count":25},{"startOffset":11015,"endOffset":11027,"count":0},{"startOffset":11029,"endOffset":11046,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11296,"endOffset":12935,"count":544},{"startOffset":11418,"endOffset":11449,"count":27},{"startOffset":11451,"endOffset":11622,"count":518},{"startOffset":11622,"endOffset":11706,"count":26},{"startOffset":11706,"endOffset":11712,"count":0},{"startOffset":11713,"endOffset":11753,"count":26},{"startOffset":11841,"endOffset":11851,"count":25},{"startOffset":11852,"endOffset":11855,"count":0},{"startOffset":11985,"endOffset":12008,"count":0},{"startOffset":12008,"endOffset":12260,"count":25},{"startOffset":12260,"endOffset":12629,"count":0},{"startOffset":12629,"endOffset":12689,"count":25},{"startOffset":12689,"endOffset":12785,"count":0},{"startOffset":12785,"endOffset":12847,"count":25},{"startOffset":12807,"endOffset":12847,"count":0},{"startOffset":12847,"endOffset":12873,"count":25},{"startOffset":12873,"endOffset":12916,"count":0},{"startOffset":12916,"endOffset":12934,"count":25}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13453,"endOffset":13500,"count":26}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14492,"endOffset":14699,"count":27}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":18270,"endOffset":19297,"count":25},{"startOffset":18492,"endOffset":18758,"count":0},{"startOffset":18788,"endOffset":18809,"count":0},{"startOffset":18900,"endOffset":18919,"count":0},{"startOffset":18952,"endOffset":19082,"count":0}],"isBlockCoverage":true},{"functionName":"writeSync","ranges":[{"startOffset":23179,"endOffset":24312,"count":1},{"startOffset":23410,"endOffset":23560,"count":0},{"startOffset":23640,"endOffset":23665,"count":0},{"startOffset":23765,"endOffset":23801,"count":0},{"startOffset":23992,"endOffset":24262,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirSync","ranges":[{"startOffset":34560,"endOffset":35151,"count":1},{"startOffset":34707,"endOffset":34732,"count":0},{"startOffset":34873,"endOffset":34893,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":37503,"endOffset":38281,"count":2999},{"startOffset":37603,"endOffset":37612,"count":0},{"startOffset":37725,"endOffset":37791,"count":0},{"startOffset":37818,"endOffset":37892,"count":0},{"startOffset":37959,"endOffset":37995,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":38024,"endOffset":38154,"count":2999},{"startOffset":38058,"endOffset":38106,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":38545,"endOffset":39053,"count":4},{"startOffset":38682,"endOffset":38748,"count":0},{"startOffset":38775,"endOffset":38828,"count":0},{"startOffset":39015,"endOffset":39041,"count":0}],"isBlockCoverage":true},{"functionName":"lstat","ranges":[{"startOffset":39879,"endOffset":40528,"count":8736},{"startOffset":40140,"endOffset":40175,"count":0},{"startOffset":40177,"endOffset":40374,"count":0}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":42288,"endOffset":42869,"count":7},{"startOffset":42428,"endOffset":42463,"count":0},{"startOffset":42465,"endOffset":42646,"count":0},{"startOffset":42813,"endOffset":42830,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":43084,"endOffset":43424,"count":10},{"startOffset":43358,"endOffset":43385,"count":0},{"startOffset":43385,"endOffset":43423,"count":8}],"isBlockCoverage":true},{"functionName":"writeFileSync","ranges":[{"startOffset":62101,"endOffset":63361,"count":2},{"startOffset":62290,"endOffset":62298,"count":0},{"startOffset":62373,"endOffset":62379,"count":0},{"startOffset":62466,"endOffset":62530,"count":1},{"startOffset":62498,"endOffset":62529,"count":0},{"startOffset":62532,"endOffset":62806,"count":1},{"startOffset":62806,"endOffset":62923,"count":0},{"startOffset":62923,"endOffset":63007,"count":1},{"startOffset":63007,"endOffset":63013,"count":0},{"startOffset":63014,"endOffset":63053,"count":1},{"startOffset":63137,"endOffset":63273,"count":1},{"startOffset":63273,"endOffset":63304,"count":0},{"startOffset":63309,"endOffset":63359,"count":1}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":69496,"endOffset":69706,"count":379},{"startOffset":69563,"endOffset":69686,"count":758},{"startOffset":69641,"endOffset":69680,"count":379},{"startOffset":69686,"endOffset":69705,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":69711,"endOffset":69998,"count":379},{"startOffset":69796,"endOffset":69826,"count":0},{"startOffset":69846,"endOffset":69997,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":70404,"endOffset":70479,"count":3748}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":70653,"endOffset":74472,"count":605},{"startOffset":70777,"endOffset":70795,"count":0},{"startOffset":70921,"endOffset":70926,"count":603},{"startOffset":70956,"endOffset":70991,"count":226},{"startOffset":70991,"endOffset":71553,"count":379},{"startOffset":71553,"endOffset":71743,"count":0},{"startOffset":71743,"endOffset":71880,"count":379},{"startOffset":71880,"endOffset":74399,"count":3748},{"startOffset":71992,"endOffset":72123,"count":379},{"startOffset":72123,"endOffset":72281,"count":3369},{"startOffset":72376,"endOffset":72381,"count":3738},{"startOffset":72398,"endOffset":72535,"count":3090},{"startOffset":72489,"endOffset":72513,"count":0},{"startOffset":72535,"endOffset":72596,"count":658},{"startOffset":72596,"endOffset":72601,"count":648},{"startOffset":72638,"endOffset":72687,"count":0},{"startOffset":72687,"endOffset":73876,"count":658},{"startOffset":72983,"endOffset":73008,"count":0},{"startOffset":73093,"endOffset":73098,"count":648},{"startOffset":73137,"endOffset":73796,"count":0},{"startOffset":73840,"endOffset":73870,"count":0},{"startOffset":73876,"endOffset":74191,"count":0},{"startOffset":74193,"endOffset":74395,"count":0},{"startOffset":74399,"endOffset":74408,"count":379},{"startOffset":74408,"endOffset":74413,"count":377}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":74661,"endOffset":74842,"count":6}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":82731,"endOffset":82922,"count":6},{"startOffset":82779,"endOffset":82920,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":85261,"endOffset":85329,"count":2}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":85386,"endOffset":85456,"count":2}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":85648,"endOffset":85724,"count":1}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":85789,"endOffset":85867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":86562,"endOffset":86658,"count":1}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:internal/encoding","functions":[{"functionName":"validateDecoder","ranges":[{"startOffset":1482,"endOffset":1607,"count":25},{"startOffset":1563,"endOffset":1605,"count":0}],"isBlockCoverage":true},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9404,"endOffset":9583,"count":2},{"startOffset":9515,"endOffset":9582,"count":0}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":11141,"endOffset":12104,"count":2},{"startOffset":11397,"endOffset":11444,"count":0},{"startOffset":11528,"endOffset":11551,"count":0},{"startOffset":11592,"endOffset":11620,"count":0},{"startOffset":12028,"endOffset":12053,"count":0},{"startOffset":12055,"endOffset":12098,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":12381,"endOffset":13076,"count":25},{"startOffset":12550,"endOffset":12558,"count":0},{"startOffset":12668,"endOffset":13075,"count":0}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2743,"endOffset":2863,"count":3}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":7972,"endOffset":8610,"count":3},{"startOffset":8057,"endOffset":8114,"count":0},{"startOffset":8173,"endOffset":8240,"count":0},{"startOffset":8283,"endOffset":8413,"count":0}],"isBlockCoverage":true},{"functionName":"getSystemErrorName","ranges":[{"startOffset":11391,"endOffset":11607,"count":1},{"startOffset":11501,"endOffset":11572,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":13428,"endOffset":13521,"count":1}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":13525,"endOffset":13626,"count":1}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":13630,"endOffset":13691,"count":1}],"isBlockCoverage":true}]},{"scriptId":"52","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":332,"endOffset":576,"count":10809},{"startOffset":392,"endOffset":537,"count":1}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/console/constructor","functions":[{"functionName":"Console","ranges":[{"startOffset":2711,"endOffset":4744,"count":1},{"startOffset":2989,"endOffset":3043,"count":0},{"startOffset":3418,"endOffset":3476,"count":0},{"startOffset":3530,"endOffset":3588,"count":0},{"startOffset":3693,"endOffset":3802,"count":0},{"startOffset":3840,"endOffset":4146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4262,"endOffset":4628,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5297,"endOffset":5538,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5763,"endOffset":6408,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5972,"endOffset":6067,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6079,"endOffset":6109,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6239,"endOffset":6338,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6350,"endOffset":6380,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6500,"endOffset":7908,"count":1}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10593,"endOffset":11482,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10661,"endOffset":11479,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20356,"endOffset":21346,"count":1},{"startOffset":20675,"endOffset":21345,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21241,"endOffset":21342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"node:internal/event_target","functions":[{"functionName":"isEvent","ranges":[{"startOffset":2317,"endOffset":2389,"count":12}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2391,"endOffset":7263,"count":6}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2707,"endOffset":3185,"count":6},{"startOffset":2786,"endOffset":2821,"count":0},{"startOffset":2853,"endOffset":2888,"count":0},{"startOffset":2918,"endOffset":2927,"count":0},{"startOffset":2961,"endOffset":2973,"count":0},{"startOffset":3005,"endOffset":3015,"count":0},{"startOffset":3062,"endOffset":3077,"count":0},{"startOffset":3079,"endOffset":3116,"count":0}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":3294,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3584,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4103,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4466,"endOffset":4590,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4631,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4783,"endOffset":4935,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":4976,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5127,"endOffset":5234,"count":6},{"startOffset":5170,"endOffset":5206,"count":0}],"isBlockCoverage":true},{"functionName":"get cancelable","ranges":[{"startOffset":5271,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5426,"endOffset":5576,"count":6},{"startOffset":5481,"endOffset":5517,"count":0},{"startOffset":5546,"endOffset":5571,"count":0}],"isBlockCoverage":true},{"functionName":"get timeStamp","ranges":[{"startOffset":5612,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":5946,"endOffset":6093,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6130,"endOffset":6277,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6314,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6463,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6613,"endOffset":6770,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6807,"endOffset":6935,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":6972,"endOffset":7130,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7134,"endOffset":7261,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":10923,"endOffset":12387,"count":21},{"startOffset":11258,"endOffset":11277,"count":0},{"startOffset":11301,"endOffset":11323,"count":0},{"startOffset":11347,"endOffset":11369,"count":0},{"startOffset":11450,"endOffset":11469,"count":0},{"startOffset":11507,"endOffset":11543,"count":0},{"startOffset":11615,"endOffset":12071,"count":0},{"startOffset":12184,"endOffset":12383,"count":0}],"isBlockCoverage":true},{"functionName":"Listener.callback","ranges":[{"startOffset":12214,"endOffset":12344,"count":0}],"isBlockCoverage":false},{"functionName":"get once","ranges":[{"startOffset":12391,"endOffset":12451,"count":2743}],"isBlockCoverage":true},{"functionName":"get passive","ranges":[{"startOffset":12523,"endOffset":12589,"count":2743}],"isBlockCoverage":true},{"functionName":"get isNodeStyleListener","ranges":[{"startOffset":12592,"endOffset":12672,"count":5486}],"isBlockCoverage":true},{"functionName":"get weak","ranges":[{"startOffset":12675,"endOffset":12735,"count":2764}],"isBlockCoverage":true},{"functionName":"get removed","ranges":[{"startOffset":12835,"endOffset":12901,"count":2743}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":12904,"endOffset":13021,"count":21},{"startOffset":12946,"endOffset":12973,"count":0}],"isBlockCoverage":true},{"functionName":"initEventTarget","ranges":[{"startOffset":13457,"endOffset":13676,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13969,"endOffset":14825,"count":21},{"startOffset":14130,"endOffset":14178,"count":0},{"startOffset":14180,"endOffset":14821,"count":0}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":15268,"endOffset":18375,"count":21},{"startOffset":15363,"endOffset":15405,"count":0},{"startOffset":15442,"endOffset":15489,"count":0},{"startOffset":16219,"endOffset":16621,"count":0},{"startOffset":16671,"endOffset":17124,"count":0},{"startOffset":17734,"endOffset":17924,"count":0},{"startOffset":17926,"endOffset":18374,"count":0}],"isBlockCoverage":true},{"functionName":"signal.addEventListener.__proto__","ranges":[{"startOffset":16446,"endOffset":16524,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":20041,"endOffset":20502,"count":6},{"startOffset":20100,"endOffset":20142,"count":0},{"startOffset":20179,"endOffset":20215,"count":0},{"startOffset":20258,"endOffset":20314,"count":0},{"startOffset":20357,"endOffset":20399,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20506,"endOffset":22802,"count":2746},{"startOffset":20805,"endOffset":20881,"count":6},{"startOffset":20952,"endOffset":20978,"count":2743},{"startOffset":20980,"endOffset":21080,"count":3},{"startOffset":21080,"endOffset":22727,"count":2743},{"startOffset":21498,"endOffset":21507,"count":3},{"startOffset":21517,"endOffset":21550,"count":0},{"startOffset":21553,"endOffset":21883,"count":0},{"startOffset":21908,"endOffset":22078,"count":0},{"startOffset":22188,"endOffset":22236,"count":0},{"startOffset":22275,"endOffset":22311,"count":0},{"startOffset":22483,"endOffset":22541,"count":0},{"startOffset":22585,"endOffset":22603,"count":0},{"startOffset":22615,"endOffset":22632,"count":0},{"startOffset":22641,"endOffset":22698,"count":0},{"startOffset":22727,"endOffset":22764,"count":2743},{"startOffset":22764,"endOffset":22798,"count":3}],"isBlockCoverage":true},{"functionName":"createEvent","ranges":[{"startOffset":20574,"endOffset":20774,"count":0}],"isBlockCoverage":false},{"functionName":"iterationCondition","ranges":[{"startOffset":21157,"endOffset":21322,"count":5486},{"startOffset":21198,"endOffset":21288,"count":2743},{"startOffset":21289,"endOffset":21315,"count":2743},{"startOffset":21297,"endOffset":21306,"count":3}],"isBlockCoverage":true},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":23607,"endOffset":23670,"count":6}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":25612,"endOffset":25817,"count":21},{"startOffset":25673,"endOffset":25719,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListener","ranges":[{"startOffset":27682,"endOffset":28054,"count":21},{"startOffset":27762,"endOffset":27814,"count":0},{"startOffset":27838,"endOffset":28053,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":28056,"endOffset":28614,"count":21},{"startOffset":28145,"endOffset":28173,"count":0},{"startOffset":28203,"endOffset":28223,"count":0}],"isBlockCoverage":true},{"functionName":"isEventTarget","ranges":[{"startOffset":28919,"endOffset":28995,"count":27}],"isBlockCoverage":true},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":28997,"endOffset":29081,"count":21}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":29893,"endOffset":31359,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30053,"endOffset":30189,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30288,"endOffset":31126,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":31387,"endOffset":32077,"count":1},{"startOffset":31818,"endOffset":31980,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":31456,"endOffset":31597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4438,"endOffset":4568,"count":21},{"startOffset":4491,"endOffset":4545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1424,"endOffset":3026,"count":2},{"startOffset":1576,"endOffset":1710,"count":0},{"startOffset":1716,"endOffset":1910,"count":0},{"startOffset":2217,"endOffset":2245,"count":0},{"startOffset":2247,"endOffset":2468,"count":0},{"startOffset":2651,"endOffset":2905,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2841,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3639,"endOffset":3730,"count":3},{"startOffset":3693,"endOffset":3728,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3732,"endOffset":4424,"count":339},{"startOffset":3769,"endOffset":3783,"count":338},{"startOffset":3783,"endOffset":4017,"count":1},{"startOffset":4017,"endOffset":4075,"count":0},{"startOffset":4075,"endOffset":4423,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4090,"endOffset":4268,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4426,"endOffset":5117,"count":2767},{"startOffset":4463,"endOffset":4477,"count":2766},{"startOffset":4477,"endOffset":4711,"count":1},{"startOffset":4711,"endOffset":4769,"count":0},{"startOffset":4769,"endOffset":5116,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4783,"endOffset":4961,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5119,"endOffset":7610,"count":1},{"startOffset":5154,"endOffset":5167,"count":0},{"startOffset":5222,"endOffset":5326,"count":0},{"startOffset":5332,"endOffset":5466,"count":0},{"startOffset":5800,"endOffset":5828,"count":0},{"startOffset":5830,"endOffset":6001,"count":0},{"startOffset":6277,"endOffset":6501,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6458,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7080,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7128,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7383,"endOffset":7456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":433,"endOffset":504,"count":8}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":831,"endOffset":1004,"count":1},{"startOffset":910,"endOffset":1002,"count":0}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":3}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":908,"count":3}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":910,"endOffset":1105,"count":1},{"startOffset":1012,"endOffset":1048,"count":0},{"startOffset":1050,"endOffset":1103,"count":0}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4692,"endOffset":4783,"count":1},{"startOffset":4739,"endOffset":4775,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4832,"endOffset":4875,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":6287,"endOffset":6701,"count":2635},{"startOffset":6385,"endOffset":6483,"count":355},{"startOffset":6461,"endOffset":6479,"count":70},{"startOffset":6483,"endOffset":6556,"count":2565},{"startOffset":6556,"endOffset":6570,"count":285},{"startOffset":6572,"endOffset":6682,"count":76},{"startOffset":6682,"endOffset":6700,"count":2565}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":7192,"endOffset":7394,"count":776},{"startOffset":7264,"endOffset":7274,"count":770},{"startOffset":7291,"endOffset":7344,"count":770},{"startOffset":7301,"endOffset":7343,"count":424},{"startOffset":7346,"endOffset":7392,"count":709}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7511,"endOffset":7667,"count":1260},{"startOffset":7592,"endOffset":7607,"count":0},{"startOffset":7609,"endOffset":7665,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":7851,"endOffset":8090,"count":107},{"startOffset":7952,"endOffset":7967,"count":0},{"startOffset":7969,"endOffset":8088,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8037,"endOffset":8079,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8181,"endOffset":8931,"count":350},{"startOffset":8487,"endOffset":8497,"count":0},{"startOffset":8515,"endOffset":8879,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10914,"endOffset":10939,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":11659,"endOffset":12270,"count":1}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":13154,"endOffset":14433,"count":111},{"startOffset":13276,"endOffset":13357,"count":41},{"startOffset":13357,"endOffset":13451,"count":70},{"startOffset":13451,"endOffset":13495,"count":17},{"startOffset":13496,"endOffset":13563,"count":13},{"startOffset":13589,"endOffset":14414,"count":0},{"startOffset":14414,"endOffset":14432,"count":70}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":14794,"endOffset":15057,"count":1012},{"startOffset":14883,"endOffset":14894,"count":707},{"startOffset":14894,"endOffset":14923,"count":305},{"startOffset":14923,"endOffset":14951,"count":0},{"startOffset":14952,"endOffset":14975,"count":305},{"startOffset":14978,"endOffset":15021,"count":0},{"startOffset":15021,"endOffset":15056,"count":305}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":15322,"endOffset":15542,"count":390},{"startOffset":15411,"endOffset":15524,"count":850},{"startOffset":15490,"endOffset":15520,"count":160},{"startOffset":15524,"endOffset":15541,"count":230}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":15726,"endOffset":16202,"count":349},{"startOffset":15950,"endOffset":16184,"count":358},{"startOffset":16001,"endOffset":16014,"count":0},{"startOffset":16152,"endOffset":16180,"count":340},{"startOffset":16184,"endOffset":16201,"count":9}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16325,"endOffset":16618,"count":691},{"startOffset":16377,"endOffset":16394,"count":3},{"startOffset":16394,"endOffset":16452,"count":688},{"startOffset":16452,"endOffset":16616,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":16826,"endOffset":17754,"count":691},{"startOffset":16885,"endOffset":16902,"count":3},{"startOffset":16902,"endOffset":17024,"count":688},{"startOffset":17025,"endOffset":17050,"count":187},{"startOffset":17052,"endOffset":17075,"count":501},{"startOffset":17075,"endOffset":17122,"count":187},{"startOffset":17122,"endOffset":17148,"count":0},{"startOffset":17148,"endOffset":17314,"count":187},{"startOffset":17210,"endOffset":17285,"count":0},{"startOffset":17314,"endOffset":17752,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":18102,"endOffset":18920,"count":666},{"startOffset":18309,"endOffset":18324,"count":355},{"startOffset":18339,"endOffset":18350,"count":355},{"startOffset":18350,"endOffset":18451,"count":311},{"startOffset":18451,"endOffset":18473,"count":205},{"startOffset":18475,"endOffset":18918,"count":94},{"startOffset":18755,"endOffset":18914,"count":2},{"startOffset":18812,"endOffset":18893,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":18982,"endOffset":19477,"count":267},{"startOffset":19125,"endOffset":19153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19401,"endOffset":19473,"count":1068},{"startOffset":19425,"endOffset":19473,"count":267}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":19770,"endOffset":23329,"count":692},{"startOffset":19880,"endOffset":19903,"count":11},{"startOffset":19903,"endOffset":19966,"count":681},{"startOffset":19943,"endOffset":19966,"count":0},{"startOffset":20099,"endOffset":20122,"count":111},{"startOffset":20122,"endOffset":20705,"count":581},{"startOffset":20344,"endOffset":20698,"count":1},{"startOffset":20589,"endOffset":20679,"count":0},{"startOffset":20760,"endOffset":20914,"count":355},{"startOffset":20877,"endOffset":20910,"count":91},{"startOffset":20914,"endOffset":20976,"count":581},{"startOffset":20976,"endOffset":23310,"count":1142},{"startOffset":21117,"endOffset":21127,"count":1051},{"startOffset":21128,"endOffset":21224,"count":1041},{"startOffset":21162,"endOffset":21200,"count":0},{"startOffset":21231,"endOffset":21254,"count":466},{"startOffset":21254,"endOffset":21282,"count":676},{"startOffset":21282,"endOffset":21422,"count":666},{"startOffset":21375,"endOffset":21416,"count":92},{"startOffset":21422,"endOffset":21552,"count":582},{"startOffset":21552,"endOffset":22785,"count":581},{"startOffset":21574,"endOffset":22558,"count":262},{"startOffset":21607,"endOffset":21796,"count":261},{"startOffset":21662,"endOffset":21722,"count":0},{"startOffset":21796,"endOffset":22550,"count":1},{"startOffset":21850,"endOffset":22490,"count":0},{"startOffset":22581,"endOffset":22779,"count":319},{"startOffset":22661,"endOffset":22713,"count":266},{"startOffset":22785,"endOffset":22805,"count":582},{"startOffset":22805,"endOffset":22816,"count":218},{"startOffset":22818,"endOffset":23036,"count":111},{"startOffset":22920,"endOffset":22968,"count":1},{"startOffset":23036,"endOffset":23056,"count":582},{"startOffset":23056,"endOffset":23132,"count":475},{"startOffset":23132,"endOffset":23310,"count":107},{"startOffset":23310,"endOffset":23328,"count":12}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":25406,"endOffset":26594,"count":354},{"startOffset":25678,"endOffset":25717,"count":0},{"startOffset":26038,"endOffset":26472,"count":34915},{"startOffset":26134,"endOffset":26342,"count":3168},{"startOffset":26161,"endOffset":26301,"count":2788},{"startOffset":26342,"endOffset":26466,"count":31747},{"startOffset":26362,"endOffset":26466,"count":7733},{"startOffset":26397,"endOffset":26423,"count":4945},{"startOffset":26423,"endOffset":26458,"count":2788}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":26729,"endOffset":28016,"count":692},{"startOffset":26809,"endOffset":26875,"count":0},{"startOffset":26960,"endOffset":27159,"count":430},{"startOffset":27040,"endOffset":27090,"count":290},{"startOffset":27091,"endOffset":27158,"count":0},{"startOffset":27161,"endOffset":27488,"count":262},{"startOffset":27221,"endOffset":27236,"count":259},{"startOffset":27238,"endOffset":27348,"count":259},{"startOffset":27348,"endOffset":27388,"count":3},{"startOffset":27477,"endOffset":27483,"count":0},{"startOffset":27488,"endOffset":27556,"count":430},{"startOffset":27557,"endOffset":27576,"count":430},{"startOffset":27578,"endOffset":27827,"count":0},{"startOffset":27827,"endOffset":28015,"count":430}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":29472,"endOffset":30472,"count":15},{"startOffset":29591,"endOffset":29632,"count":0},{"startOffset":29634,"endOffset":29874,"count":0},{"startOffset":29997,"endOffset":30290,"count":14},{"startOffset":30292,"endOffset":30444,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":31138,"endOffset":35016,"count":916},{"startOffset":31221,"endOffset":32049,"count":913},{"startOffset":31680,"endOffset":32045,"count":108},{"startOffset":31860,"endOffset":31932,"count":4},{"startOffset":31932,"endOffset":31977,"count":104},{"startOffset":31977,"endOffset":32045,"count":0},{"startOffset":32049,"endOffset":32102,"count":808},{"startOffset":32102,"endOffset":32374,"count":12},{"startOffset":32231,"endOffset":32291,"count":0},{"startOffset":32374,"endOffset":32527,"count":796},{"startOffset":32527,"endOffset":33453,"count":318},{"startOffset":32606,"endOffset":32648,"count":305},{"startOffset":32648,"endOffset":32861,"count":13},{"startOffset":32861,"endOffset":32925,"count":11},{"startOffset":32925,"endOffset":33228,"count":2},{"startOffset":33228,"endOffset":33292,"count":0},{"startOffset":33292,"endOffset":33453,"count":2},{"startOffset":33453,"endOffset":33513,"count":478},{"startOffset":33513,"endOffset":33596,"count":129},{"startOffset":33596,"endOffset":33695,"count":349},{"startOffset":33695,"endOffset":33726,"count":347},{"startOffset":33750,"endOffset":34127,"count":347},{"startOffset":33768,"endOffset":33953,"count":1},{"startOffset":33953,"endOffset":34003,"count":346},{"startOffset":34127,"endOffset":34988,"count":349},{"startOffset":34331,"endOffset":34734,"count":0},{"startOffset":34916,"endOffset":34984,"count":0},{"startOffset":34988,"endOffset":35015,"count":349}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":35478,"endOffset":38364,"count":820},{"startOffset":35575,"endOffset":35600,"count":129},{"startOffset":35600,"endOffset":35650,"count":691},{"startOffset":35650,"endOffset":35669,"count":2},{"startOffset":35671,"endOffset":36522,"count":2},{"startOffset":35710,"endOffset":36329,"count":0},{"startOffset":36434,"endOffset":36518,"count":0},{"startOffset":36522,"endOffset":36590,"count":689},{"startOffset":36590,"endOffset":36617,"count":691},{"startOffset":36617,"endOffset":36665,"count":0},{"startOffset":36667,"endOffset":37309,"count":0},{"startOffset":37309,"endOffset":37470,"count":691},{"startOffset":37470,"endOffset":37666,"count":0},{"startOffset":37666,"endOffset":37806,"count":691},{"startOffset":37806,"endOffset":37826,"count":677},{"startOffset":37826,"endOffset":37930,"count":12},{"startOffset":37930,"endOffset":38003,"count":47},{"startOffset":37985,"endOffset":37997,"count":0},{"startOffset":38003,"endOffset":38363,"count":12}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":38791,"endOffset":39372,"count":92},{"startOffset":38989,"endOffset":39118,"count":0},{"startOffset":39237,"endOffset":39371,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":40021,"endOffset":40688,"count":349},{"startOffset":40356,"endOffset":40386,"count":0},{"startOffset":40388,"endOffset":40440,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":40975,"endOffset":41274,"count":913},{"startOffset":41035,"endOffset":41153,"count":0}],"isBlockCoverage":true},{"functionName":"loadESMFromCJS","ranges":[{"startOffset":41474,"endOffset":46342,"count":2},{"startOffset":41717,"endOffset":42064,"count":0},{"startOffset":42221,"endOffset":44095,"count":0},{"startOffset":46087,"endOffset":46143,"count":0},{"startOffset":46231,"endOffset":46269,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41787,"endOffset":41949,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":46694,"endOffset":48701,"count":343},{"startOffset":46987,"endOffset":47859,"count":0},{"startOffset":47924,"endOffset":48382,"count":174},{"startOffset":47970,"endOffset":48132,"count":1},{"startOffset":48132,"endOffset":48378,"count":173},{"startOffset":48574,"endOffset":48681,"count":167}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":49102,"endOffset":50633,"count":345},{"startOffset":49201,"endOffset":49211,"count":0},{"startOffset":49229,"endOffset":49382,"count":0},{"startOffset":49434,"endOffset":49603,"count":343},{"startOffset":49567,"endOffset":49599,"count":0},{"startOffset":49632,"endOffset":49805,"count":2},{"startOffset":49805,"endOffset":50029,"count":343},{"startOffset":50029,"endOffset":50059,"count":1},{"startOffset":50059,"endOffset":50150,"count":343},{"startOffset":50150,"endOffset":50184,"count":1},{"startOffset":50186,"endOffset":50397,"count":0},{"startOffset":50397,"endOffset":50593,"count":343},{"startOffset":50593,"endOffset":50614,"count":1},{"startOffset":50614,"endOffset":50632,"count":343}],"isBlockCoverage":true},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":50887,"endOffset":51292,"count":347},{"startOffset":51050,"endOffset":51125,"count":4},{"startOffset":51125,"endOffset":51272,"count":343}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":51471,"endOffset":53565,"count":345},{"startOffset":51682,"endOffset":53433,"count":336},{"startOffset":51745,"endOffset":51767,"count":0},{"startOffset":51863,"endOffset":53354,"count":2},{"startOffset":52003,"endOffset":52201,"count":0},{"startOffset":52556,"endOffset":53354,"count":0},{"startOffset":53354,"endOffset":53429,"count":334},{"startOffset":53395,"endOffset":53429,"count":160},{"startOffset":53433,"endOffset":53516,"count":9},{"startOffset":53516,"endOffset":53564,"count":343}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":53747,"endOffset":54153,"count":3},{"startOffset":53857,"endOffset":53867,"count":0},{"startOffset":53885,"endOffset":53987,"count":0},{"startOffset":54070,"endOffset":54151,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":54335,"endOffset":54677,"count":1},{"startOffset":54391,"endOffset":54401,"count":0},{"startOffset":54419,"endOffset":54568,"count":0}],"isBlockCoverage":true},{"functionName":"createRequireFromPath","ranges":[{"startOffset":54829,"endOffset":55290,"count":1},{"startOffset":55009,"endOffset":55051,"count":0},{"startOffset":55089,"endOffset":55125,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":55716,"endOffset":56261,"count":1},{"startOffset":55861,"endOffset":56057,"count":0},{"startOffset":56097,"endOffset":56181,"count":0}],"isBlockCoverage":true},{"functionName":"isRelative","ranges":[{"startOffset":56411,"endOffset":56752,"count":581},{"startOffset":56494,"endOffset":56511,"count":226},{"startOffset":56511,"endOffset":56556,"count":355},{"startOffset":56557,"endOffset":56599,"count":354},{"startOffset":56600,"endOffset":56643,"count":90},{"startOffset":56644,"endOffset":56749,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":56872,"endOffset":57837,"count":1},{"startOffset":56913,"endOffset":56938,"count":0},{"startOffset":56990,"endOffset":57013,"count":0},{"startOffset":57221,"endOffset":57263,"count":0},{"startOffset":57562,"endOffset":57704,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":59034,"endOffset":59092,"count":1},{"startOffset":59067,"endOffset":59078,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1112,"endOffset":3862,"count":2854},{"startOffset":1208,"endOffset":1245,"count":2558},{"startOffset":1245,"endOffset":1922,"count":296},{"startOffset":1922,"endOffset":1931,"count":0},{"startOffset":1932,"endOffset":1946,"count":0},{"startOffset":1947,"endOffset":1969,"count":296},{"startOffset":1993,"endOffset":3812,"count":125},{"startOffset":2061,"endOffset":2657,"count":0},{"startOffset":2947,"endOffset":2981,"count":87},{"startOffset":2983,"endOffset":3023,"count":87},{"startOffset":3083,"endOffset":3129,"count":52},{"startOffset":3189,"endOffset":3235,"count":0},{"startOffset":3346,"endOffset":3405,"count":23},{"startOffset":3377,"endOffset":3404,"count":15},{"startOffset":3407,"endOffset":3447,"count":23},{"startOffset":3481,"endOffset":3677,"count":1},{"startOffset":3602,"endOffset":3655,"count":0},{"startOffset":3705,"endOffset":3808,"count":0},{"startOffset":3812,"endOffset":3861,"count":296}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":3930,"endOffset":4020,"count":2748}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4237,"endOffset":5057,"count":1025},{"startOffset":4424,"endOffset":4994,"count":2326},{"startOffset":4673,"endOffset":4719,"count":0},{"startOffset":4721,"endOffset":4748,"count":0},{"startOffset":4815,"endOffset":4842,"count":0},{"startOffset":4913,"endOffset":4990,"count":1025},{"startOffset":4994,"endOffset":5056,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1284,"endOffset":1390,"count":49}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1520,"endOffset":1635,"count":48}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1785,"endOffset":2290,"count":1},{"startOffset":1968,"endOffset":1972,"count":0},{"startOffset":2085,"endOffset":2089,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":2360,"endOffset":2719,"count":48},{"startOffset":2473,"endOffset":2681,"count":0}],"isBlockCoverage":true},{"functionName":"defaultInitializeImportMetaForModule","ranges":[{"startOffset":5810,"endOffset":6039,"count":4}],"isBlockCoverage":true},{"functionName":"initializeImportMetaObject","ranges":[{"startOffset":6353,"endOffset":6808,"count":4},{"startOffset":6531,"endOffset":6806,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":10602,"endOffset":10988,"count":1}],"isBlockCoverage":true},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":11116,"endOffset":11179,"count":1}],"isBlockCoverage":true},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":12820,"endOffset":13281,"count":25},{"startOffset":12960,"endOffset":12971,"count":0},{"startOffset":13077,"endOffset":13099,"count":0},{"startOffset":13178,"endOffset":13264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1060,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":2474,"endOffset":4718,"count":1},{"startOffset":3485,"endOffset":3589,"count":0},{"startOffset":4477,"endOffset":4639,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4720,"endOffset":5455,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":5457,"endOffset":6205,"count":1},{"startOffset":5827,"endOffset":5858,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6207,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":6690,"endOffset":9027,"count":1},{"startOffset":7675,"endOffset":7727,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9029,"endOffset":9310,"count":13},{"startOffset":9150,"endOffset":9308,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9312,"endOffset":9832,"count":1},{"startOffset":9687,"endOffset":9826,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9716,"endOffset":9818,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":9907,"endOffset":10326,"count":1},{"startOffset":9981,"endOffset":10141,"count":0},{"startOffset":10235,"endOffset":10324,"count":0}],"isBlockCoverage":true},{"functionName":"setupEventsource","ranges":[{"startOffset":10394,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10623,"endOffset":11575,"count":1},{"startOffset":10758,"endOffset":10775,"count":0},{"startOffset":11264,"endOffset":11573,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":10949,"endOffset":11125,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11426,"endOffset":11525,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":11577,"endOffset":12098,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12204,"endOffset":12481,"count":1},{"startOffset":12343,"endOffset":12360,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":12483,"endOffset":12708,"count":1},{"startOffset":12585,"endOffset":12707,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":12710,"endOffset":12959,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12855,"endOffset":12950,"count":1}],"isBlockCoverage":true},{"functionName":"setupDebugEnv","ranges":[{"startOffset":12961,"endOffset":13192,"count":1},{"startOffset":13112,"endOffset":13190,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13254,"endOffset":13442,"count":1},{"startOffset":13342,"endOffset":13440,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":13444,"endOffset":14178,"count":1},{"startOffset":13639,"endOffset":14176,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":13752,"endOffset":13906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14098,"endOffset":14170,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":14180,"endOffset":14439,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":14441,"endOffset":15023,"count":1}],"isBlockCoverage":true},{"functionName":"setupNetworkInspection","ranges":[{"startOffset":15025,"endOffset":15338,"count":1},{"startOffset":15162,"endOffset":15336,"count":0}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15533,"endOffset":17485,"count":1},{"startOffset":16245,"endOffset":16547,"count":16},{"startOffset":16290,"endOffset":16522,"count":0},{"startOffset":16864,"endOffset":17061,"count":0},{"startOffset":17089,"endOffset":17483,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":17487,"endOffset":18052,"count":1},{"startOffset":17563,"endOffset":18050,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":18054,"endOffset":18324,"count":1},{"startOffset":18141,"endOffset":18322,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":18326,"endOffset":20323,"count":1},{"startOffset":18468,"endOffset":19897,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":18492,"endOffset":18579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20155,"endOffset":20315,"count":6},{"startOffset":20233,"endOffset":20309,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":20325,"endOffset":22144,"count":1},{"startOffset":20453,"endOffset":22142,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":22146,"endOffset":22267,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":22269,"endOffset":22852,"count":1},{"startOffset":22605,"endOffset":22850,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22854,"endOffset":23052,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":23054,"endOffset":23241,"count":1},{"startOffset":23139,"endOffset":23239,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":23348,"endOffset":23696,"count":1},{"startOffset":23542,"endOffset":23694,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23698,"endOffset":23792,"count":1}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":569,"endOffset":1672,"count":1},{"startOffset":743,"endOffset":847,"count":0},{"startOffset":1140,"endOffset":1151,"count":0},{"startOffset":1378,"endOffset":1646,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1833,"endOffset":3041,"count":1},{"startOffset":1939,"endOffset":1955,"count":0},{"startOffset":2429,"endOffset":2445,"count":0},{"startOffset":2561,"endOffset":2577,"count":0},{"startOffset":2640,"endOffset":2657,"count":0},{"startOffset":2881,"endOffset":2914,"count":0},{"startOffset":2919,"endOffset":2955,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":5520,"endOffset":6505,"count":1},{"startOffset":6089,"endOffset":6503,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6257,"endOffset":6497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5468,"endOffset":5949,"count":1},{"startOffset":5611,"endOffset":5816,"count":0},{"startOffset":5864,"endOffset":5948,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5945,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3781,"endOffset":3884,"count":12},{"startOffset":3833,"endOffset":3862,"count":1}],"isBlockCoverage":true}]},{"scriptId":"80","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1182,"count":1}],"isBlockCoverage":false}]},{"scriptId":"81","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest/bin/jest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true}]},{"scriptId":"82","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1384,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":180,"endOffset":1382,"count":2},{"startOffset":253,"endOffset":278,"count":0},{"startOffset":1290,"endOffset":1302,"count":0},{"startOffset":1303,"endOffset":1357,"count":0},{"startOffset":1358,"endOffset":1379,"count":0}],"isBlockCoverage":true}]},{"scriptId":"83","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/resolve-cwd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":208,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":77,"endOffset":125,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.silent","ranges":[{"startOffset":151,"endOffset":206,"count":2}],"isBlockCoverage":true}]},{"scriptId":"84","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/resolve-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"resolveFrom","ranges":[{"startOffset":125,"endOffset":1017,"count":2},{"startOffset":204,"endOffset":313,"count":0},{"startOffset":350,"endOffset":455,"count":0},{"startOffset":517,"endOffset":681,"count":0},{"startOffset":987,"endOffset":1016,"count":0}],"isBlockCoverage":true},{"functionName":"resolveFileName","ranges":[{"startOffset":764,"endOffset":895,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1037,"endOffset":1102,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.silent","ranges":[{"startOffset":1128,"endOffset":1199,"count":2}],"isBlockCoverage":true}]},{"scriptId":"85","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35375,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1594,"endOffset":1724,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1878,"endOffset":1999,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2161,"endOffset":2283,"count":42}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3037,"endOffset":28050,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":4147,"endOffset":4340,"count":1},{"startOffset":4235,"endOffset":4292,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5896,"endOffset":6140,"count":1},{"startOffset":5999,"endOffset":6081,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":6144,"endOffset":6567,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForImport","ranges":[{"startOffset":7195,"endOffset":7447,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForRequireInImportedCJS","ranges":[{"startOffset":7948,"endOffset":8205,"count":0}],"isBlockCoverage":false},{"functionName":"#getJobFromResolveResult","ranges":[{"startOffset":8787,"endOffset":9263,"count":0}],"isBlockCoverage":false},{"functionName":"importSyncForRequire","ranges":[{"startOffset":9798,"endOffset":11850,"count":2},{"startOffset":10628,"endOffset":11185,"count":0},{"startOffset":11486,"endOffset":11520,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleJobForRequire","ranges":[{"startOffset":12274,"endOffset":15729,"count":81},{"startOffset":12403,"endOffset":12781,"count":33},{"startOffset":12502,"endOffset":12691,"count":0},{"startOffset":12750,"endOffset":12773,"count":0},{"startOffset":13081,"endOffset":13132,"count":0},{"startOffset":13319,"endOffset":14069,"count":40},{"startOffset":13478,"endOffset":13758,"count":0},{"startOffset":14069,"endOffset":14357,"count":41},{"startOffset":14357,"endOffset":14374,"count":2},{"startOffset":14375,"endOffset":14394,"count":39},{"startOffset":14429,"endOffset":14504,"count":0},{"startOffset":14504,"endOffset":14801,"count":41},{"startOffset":14801,"endOffset":14816,"count":0},{"startOffset":14818,"endOffset":14872,"count":0},{"startOffset":14872,"endOffset":14942,"count":41},{"startOffset":14942,"endOffset":15424,"count":2},{"startOffset":15129,"endOffset":15418,"count":0},{"startOffset":15424,"endOffset":15457,"count":41},{"startOffset":15457,"endOffset":15491,"count":0}],"isBlockCoverage":true},{"functionName":"#translate","ranges":[{"startOffset":16299,"endOffset":16599,"count":41},{"startOffset":16458,"endOffset":16521,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTranslateForRequireInImportedCJS","ranges":[{"startOffset":17016,"endOffset":17936,"count":0}],"isBlockCoverage":false},{"functionName":"loadAndTranslate","ranges":[{"startOffset":18298,"endOffset":18496,"count":0}],"isBlockCoverage":false},{"functionName":"#createModuleJob","ranges":[{"startOffset":19308,"endOffset":20285,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":20747,"endOffset":20981,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":21047,"endOffset":21594,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22320,"endOffset":22641,"count":0}],"isBlockCoverage":false},{"functionName":"#cachedDefaultResolve","ranges":[{"startOffset":23003,"endOffset":23450,"count":81},{"startOffset":23254,"endOffset":23288,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":23875,"endOffset":24172,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":24883,"endOffset":25064,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":25276,"endOffset":25616,"count":81}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":25931,"endOffset":26162,"count":0}],"isBlockCoverage":false},{"functionName":"#loadAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":26522,"endOffset":26790,"count":0}],"isBlockCoverage":false},{"functionName":"#loadSync","ranges":[{"startOffset":27334,"endOffset":27427,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":27431,"endOffset":27582,"count":41},{"startOffset":27489,"endOffset":27578,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":27586,"endOffset":27921,"count":4},{"startOffset":27654,"endOffset":27738,"count":0}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":27982,"endOffset":28048,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28104,"endOffset":30731,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":31115,"endOffset":32777,"count":1},{"startOffset":31560,"endOffset":32727,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":31635,"endOffset":32130,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32450,"endOffset":32538,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":32890,"endOffset":33066,"count":0}],"isBlockCoverage":false},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":33568,"endOffset":33680,"count":6}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":34922,"endOffset":35267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1326,"endOffset":1364,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1785,"endOffset":3160,"count":41},{"startOffset":1981,"endOffset":2108,"count":0},{"startOffset":2180,"endOffset":2325,"count":0},{"startOffset":2590,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2764,"count":0},{"startOffset":2770,"endOffset":3154,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3392,"endOffset":3806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12184,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4050,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4164,"endOffset":4242,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4280,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4395,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4600,"endOffset":10134,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10189,"endOffset":10258,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10348,"endOffset":11281,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11348,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":11855,"endOffset":12134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/node_modules/pkg-dir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":452,"count":1}],"isBlockCoverage":true},{"functionName":"pkgDir","ranges":[{"startOffset":95,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":342,"endOffset":450,"count":2}],"isBlockCoverage":true}]},{"scriptId":"90","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":2},{"startOffset":1116,"endOffset":1121,"count":0},{"startOffset":1559,"endOffset":1823,"count":4},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1764,"count":2},{"startOffset":1764,"endOffset":1780,"count":0},{"startOffset":1780,"endOffset":1823,"count":2}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":4},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"91","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1336,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":4},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":947,"endOffset":1334,"count":4},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1285,"endOffset":1309,"count":2},{"startOffset":1314,"endOffset":1329,"count":2},{"startOffset":1332,"endOffset":1333,"count":2}],"isBlockCoverage":true}]},{"scriptId":"92","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1239,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-local/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":61,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/p-try/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"pTry","ranges":[{"startOffset":28,"endOffset":107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46464,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2799,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3945,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5124,"endOffset":6304,"count":4},{"startOffset":5224,"endOffset":5241,"count":0},{"startOffset":5322,"endOffset":5485,"count":2},{"startOffset":5485,"endOffset":5847,"count":0},{"startOffset":5847,"endOffset":6302,"count":2},{"startOffset":5890,"endOffset":6302,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7395,"endOffset":8155,"count":4},{"startOffset":7562,"endOffset":7646,"count":0},{"startOffset":7686,"endOffset":7697,"count":0},{"startOffset":7937,"endOffset":7941,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":8939,"endOffset":10695,"count":35},{"startOffset":9075,"endOffset":9326,"count":0},{"startOffset":9388,"endOffset":9572,"count":0},{"startOffset":9661,"endOffset":9697,"count":0},{"startOffset":9763,"endOffset":9953,"count":0},{"startOffset":9976,"endOffset":10354,"count":0},{"startOffset":10600,"endOffset":10605,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":11109,"endOffset":11320,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11716,"endOffset":11911,"count":2},{"startOffset":11885,"endOffset":11907,"count":0}],"isBlockCoverage":true},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12549,"endOffset":12932,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13388,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15122,"endOffset":17861,"count":98},{"startOffset":15291,"endOffset":15302,"count":0},{"startOffset":15303,"endOffset":15339,"count":0},{"startOffset":15341,"endOffset":15425,"count":0},{"startOffset":15475,"endOffset":16018,"count":0},{"startOffset":16110,"endOffset":16720,"count":0},{"startOffset":16939,"endOffset":17023,"count":0},{"startOffset":17067,"endOffset":17860,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15793,"endOffset":15806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16319,"endOffset":16332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16465,"endOffset":16478,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17202,"endOffset":17215,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17442,"endOffset":17455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17795,"endOffset":17808,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":18053,"endOffset":18197,"count":340},{"startOffset":18149,"endOffset":18194,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18992,"endOffset":21242,"count":204},{"startOffset":19185,"endOffset":19339,"count":98},{"startOffset":19339,"endOffset":21125,"count":106},{"startOffset":19371,"endOffset":20217,"count":12},{"startOffset":19402,"endOffset":19428,"count":0},{"startOffset":19748,"endOffset":19896,"count":0},{"startOffset":19936,"endOffset":19963,"count":0},{"startOffset":19998,"endOffset":20055,"count":0},{"startOffset":20089,"endOffset":20151,"count":0},{"startOffset":20153,"endOffset":20217,"count":0},{"startOffset":20217,"endOffset":21125,"count":94},{"startOffset":20370,"endOffset":20598,"count":340},{"startOffset":20428,"endOffset":20592,"count":0},{"startOffset":20641,"endOffset":21050,"count":193},{"startOffset":20698,"endOffset":20720,"count":184},{"startOffset":20722,"endOffset":21044,"count":94},{"startOffset":20993,"endOffset":21006,"count":0},{"startOffset":21050,"endOffset":21125,"count":0},{"startOffset":21125,"endOffset":21241,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21526,"endOffset":22469,"count":100},{"startOffset":21632,"endOffset":21656,"count":96},{"startOffset":21658,"endOffset":21674,"count":4},{"startOffset":21674,"endOffset":21728,"count":96},{"startOffset":21730,"endOffset":21747,"count":0},{"startOffset":21747,"endOffset":21887,"count":96},{"startOffset":21887,"endOffset":22438,"count":198},{"startOffset":21997,"endOffset":22054,"count":96},{"startOffset":22054,"endOffset":22434,"count":102},{"startOffset":22110,"endOffset":22434,"count":0},{"startOffset":22438,"endOffset":22468,"count":96}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":22966,"endOffset":25541,"count":100},{"startOffset":23174,"endOffset":23211,"count":8},{"startOffset":23274,"endOffset":23328,"count":98},{"startOffset":23329,"endOffset":23383,"count":98},{"startOffset":23385,"endOffset":23718,"count":98},{"startOffset":23613,"endOffset":23687,"count":0},{"startOffset":23718,"endOffset":23857,"count":2},{"startOffset":23857,"endOffset":25046,"count":6},{"startOffset":23971,"endOffset":24101,"count":0},{"startOffset":24103,"endOffset":25042,"count":0},{"startOffset":25046,"endOffset":25065,"count":2},{"startOffset":25065,"endOffset":25475,"count":0},{"startOffset":25475,"endOffset":25540,"count":2}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":25915,"endOffset":26470,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":26957,"endOffset":29414,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":29528,"endOffset":29641,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":29806,"endOffset":30864,"count":10},{"startOffset":29997,"endOffset":30225,"count":0},{"startOffset":30287,"endOffset":30339,"count":0},{"startOffset":30512,"endOffset":30547,"count":0},{"startOffset":30574,"endOffset":30693,"count":0},{"startOffset":30754,"endOffset":30807,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31188,"endOffset":33260,"count":23},{"startOffset":31302,"endOffset":31348,"count":13},{"startOffset":31348,"endOffset":31807,"count":10},{"startOffset":31686,"endOffset":31803,"count":0},{"startOffset":31807,"endOffset":31978,"count":10},{"startOffset":31978,"endOffset":33045,"count":30},{"startOffset":32237,"endOffset":32514,"count":20},{"startOffset":32314,"endOffset":32351,"count":0},{"startOffset":32514,"endOffset":32695,"count":10},{"startOffset":32695,"endOffset":32812,"count":6},{"startOffset":32812,"endOffset":32954,"count":4},{"startOffset":32954,"endOffset":33045,"count":0},{"startOffset":33045,"endOffset":33259,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33371,"endOffset":33481,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33600,"endOffset":33879,"count":129},{"startOffset":33670,"endOffset":33861,"count":50},{"startOffset":33744,"endOffset":33857,"count":0},{"startOffset":33861,"endOffset":33878,"count":79}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34028,"endOffset":34219,"count":129},{"startOffset":34114,"endOffset":34131,"count":0},{"startOffset":34160,"endOffset":34176,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34582,"endOffset":35954,"count":48},{"startOffset":34773,"endOffset":34792,"count":0},{"startOffset":35095,"endOffset":35319,"count":25},{"startOffset":35156,"endOffset":35315,"count":0},{"startOffset":35319,"endOffset":35825,"count":23},{"startOffset":35375,"endOffset":35447,"count":0},{"startOffset":35543,"endOffset":35598,"count":0},{"startOffset":35600,"endOffset":35753,"count":0},{"startOffset":35863,"endOffset":35889,"count":13},{"startOffset":35889,"endOffset":35953,"count":35}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36154,"endOffset":37980,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":38360,"endOffset":39732,"count":81},{"startOffset":38666,"endOffset":39726,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":39872,"endOffset":40145,"count":81},{"startOffset":39949,"endOffset":40000,"count":0},{"startOffset":40037,"endOffset":40057,"count":0},{"startOffset":40059,"endOffset":40143,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":40769,"endOffset":44767,"count":81},{"startOffset":40926,"endOffset":40936,"count":0},{"startOffset":40938,"endOffset":41747,"count":0},{"startOffset":41851,"endOffset":41890,"count":0},{"startOffset":41988,"endOffset":42047,"count":25},{"startOffset":42047,"endOffset":42095,"count":56},{"startOffset":42095,"endOffset":42230,"count":58},{"startOffset":42230,"endOffset":42275,"count":0},{"startOffset":42276,"endOffset":42311,"count":0},{"startOffset":42313,"endOffset":42476,"count":0},{"startOffset":42476,"endOffset":42639,"count":58},{"startOffset":42543,"endOffset":42631,"count":0},{"startOffset":42646,"endOffset":42705,"count":0},{"startOffset":42710,"endOffset":42825,"count":23},{"startOffset":42775,"endOffset":42797,"count":0},{"startOffset":43159,"endOffset":43182,"count":0},{"startOffset":43255,"endOffset":43265,"count":0},{"startOffset":43295,"endOffset":43342,"count":33},{"startOffset":43342,"endOffset":43401,"count":48},{"startOffset":43401,"endOffset":43908,"count":0},{"startOffset":43908,"endOffset":44064,"count":48},{"startOffset":44064,"endOffset":44086,"count":0},{"startOffset":44087,"endOffset":44105,"count":48},{"startOffset":44118,"endOffset":44541,"count":0},{"startOffset":44541,"endOffset":44766,"count":48}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45030,"endOffset":45643,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46069,"endOffset":46460,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1072,"endOffset":2165,"count":51},{"startOffset":1190,"endOffset":1910,"count":96},{"startOffset":1324,"endOffset":1344,"count":0},{"startOffset":1534,"endOffset":1569,"count":51},{"startOffset":1569,"endOffset":1886,"count":45},{"startOffset":1886,"endOffset":1906,"count":0},{"startOffset":1910,"endOffset":2164,"count":0}],"isBlockCoverage":true}]},{"scriptId":"98","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8075,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1056,"endOffset":1087,"count":26}],"isBlockCoverage":true},{"functionName":"detectModuleFormat","ranges":[{"startOffset":1255,"endOffset":1496,"count":6},{"startOffset":1313,"endOffset":1357,"count":4},{"startOffset":1342,"endOffset":1354,"count":0},{"startOffset":1357,"endOffset":1379,"count":2},{"startOffset":1379,"endOffset":1401,"count":0},{"startOffset":1401,"endOffset":1470,"count":2},{"startOffset":1470,"endOffset":1480,"count":0},{"startOffset":1481,"endOffset":1493,"count":2}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1557,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":2048,"endOffset":2407,"count":41},{"startOffset":2148,"endOffset":2392,"count":123},{"startOffset":2210,"endOffset":2245,"count":0},{"startOffset":2253,"endOffset":2382,"count":41},{"startOffset":2341,"endOffset":2345,"count":0},{"startOffset":2392,"endOffset":2406,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2637,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"warnTypelessPackageJsonFile","ranges":[{"startOffset":2901,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":3669,"endOffset":6736,"count":41},{"startOffset":3971,"endOffset":4004,"count":35},{"startOffset":4004,"endOffset":4137,"count":6},{"startOffset":4137,"endOffset":4496,"count":0},{"startOffset":4503,"endOffset":4626,"count":0},{"startOffset":4633,"endOffset":5411,"count":6},{"startOffset":5080,"endOffset":5099,"count":0},{"startOffset":5101,"endOffset":5380,"count":0},{"startOffset":5421,"endOffset":6735,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":6872,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":7362,"endOffset":7597,"count":52},{"startOffset":7516,"endOffset":7538,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":7742,"endOffset":7965,"count":15},{"startOffset":7883,"endOffset":7905,"count":0}],"isBlockCoverage":true}]},{"scriptId":"99","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1798,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":660,"endOffset":998,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1368,"endOffset":1704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-cli/bin/jest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1},{"startOffset":326,"endOffset":366,"count":0}],"isBlockCoverage":true}]},{"scriptId":"101","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-cli/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30382,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":30377,"count":1}],"isBlockCoverage":true},{"functionName":"./src/args.ts","ranges":[{"startOffset":350,"endOffset":23149,"count":1}],"isBlockCoverage":true},{"functionName":"_jestConfig","ranges":[{"startOffset":540,"endOffset":672,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":865,"endOffset":3052,"count":1},{"startOffset":909,"endOffset":968,"count":0},{"startOffset":970,"endOffset":1070,"count":0},{"startOffset":1166,"endOffset":1398,"count":4},{"startOffset":1186,"endOffset":1202,"count":0},{"startOffset":1204,"endOffset":1394,"count":0},{"startOffset":1423,"endOffset":1439,"count":0},{"startOffset":1441,"endOffset":1542,"count":0},{"startOffset":1571,"endOffset":1593,"count":0},{"startOffset":1595,"endOffset":1773,"count":0},{"startOffset":1837,"endOffset":1869,"count":0},{"startOffset":1871,"endOffset":2089,"count":0},{"startOffset":2116,"endOffset":2151,"count":0},{"startOffset":2153,"endOffset":2347,"count":0},{"startOffset":2374,"endOffset":2409,"count":0},{"startOffset":2411,"endOffset":2605,"count":0},{"startOffset":2624,"endOffset":2672,"count":0},{"startOffset":2673,"endOffset":2799,"count":0},{"startOffset":2801,"endOffset":3035,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2745,"endOffset":2760,"count":0}],"isBlockCoverage":false},{"functionName":"./src/run.ts","ranges":[{"startOffset":23182,"endOffset":28574,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":23363,"endOffset":23499,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":23447,"endOffset":23481,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":23500,"endOffset":23640,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":23641,"endOffset":23782,"count":0}],"isBlockCoverage":false},{"functionName":"_yargs","ranges":[{"startOffset":23783,"endOffset":23923,"count":1}],"isBlockCoverage":true},{"functionName":"_yargs","ranges":[{"startOffset":23871,"endOffset":23905,"count":0}],"isBlockCoverage":false},{"functionName":"_core","ranges":[{"startOffset":23924,"endOffset":24043,"count":1}],"isBlockCoverage":true},{"functionName":"_core","ranges":[{"startOffset":23991,"endOffset":24025,"count":1}],"isBlockCoverage":true},{"functionName":"_jestConfig","ranges":[{"startOffset":24044,"endOffset":24176,"count":1}],"isBlockCoverage":true},{"functionName":"_jestConfig","ranges":[{"startOffset":24124,"endOffset":24158,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":24177,"endOffset":24303,"count":0}],"isBlockCoverage":false},{"functionName":"_jestValidate","ranges":[{"startOffset":24304,"endOffset":24442,"count":1}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":24390,"endOffset":24424,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":24517,"endOffset":24602,"count":1},{"startOffset":24579,"endOffset":24582,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":24603,"endOffset":25217,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":24754,"endOffset":25207,"count":2},{"startOffset":24801,"endOffset":24922,"count":1},{"startOffset":24897,"endOffset":24922,"count":0},{"startOffset":24924,"endOffset":24933,"count":0},{"startOffset":24933,"endOffset":24944,"count":1},{"startOffset":24944,"endOffset":24947,"count":0},{"startOffset":24948,"endOffset":24951,"count":1},{"startOffset":24953,"endOffset":25000,"count":1},{"startOffset":24969,"endOffset":24985,"count":0},{"startOffset":25000,"endOffset":25020,"count":1},{"startOffset":25020,"endOffset":25195,"count":17},{"startOffset":25167,"endOffset":25179,"count":0},{"startOffset":25195,"endOffset":25206,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":25410,"endOffset":26028,"count":1},{"startOffset":25715,"endOffset":26026,"count":0}],"isBlockCoverage":true},{"functionName":"buildArgv","ranges":[{"startOffset":26029,"endOffset":26879,"count":1},{"startOffset":26166,"endOffset":26174,"count":0},{"startOffset":26646,"endOffset":26668,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26606,"endOffset":26644,"count":0}],"isBlockCoverage":false},{"functionName":"Object.keys.reduce.$0","ranges":[{"startOffset":26729,"endOffset":26837,"count":2}],"isBlockCoverage":true},{"functionName":"getProjectListFromCLIArgs","ranges":[{"startOffset":26914,"endOffset":27387,"count":1},{"startOffset":26990,"endOffset":27023,"count":0},{"startOffset":27085,"endOffset":27297,"count":0}],"isBlockCoverage":true},{"functionName":"readResultsAndExit","ranges":[{"startOffset":27416,"endOffset":28564,"count":1},{"startOffset":27489,"endOffset":27523,"count":0},{"startOffset":27703,"endOffset":27987,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27572,"endOffset":27670,"count":1},{"startOffset":27628,"endOffset":27666,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28141,"endOffset":28539,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":28796,"endOffset":29524,"count":3},{"startOffset":28988,"endOffset":29043,"count":1},{"startOffset":29043,"endOffset":29523,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29750,"endOffset":30323,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29936,"endOffset":29980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30054,"endOffset":30092,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30175,"endOffset":30218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/core/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":138402,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":138397,"count":1}],"isBlockCoverage":true},{"functionName":"./package.json","ranges":[{"startOffset":351,"endOffset":2344,"count":1}],"isBlockCoverage":true},{"functionName":"./src/FailedTestsCache.ts","ranges":[{"startOffset":2390,"endOffset":3560,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2721,"endOffset":3512,"count":0}],"isBlockCoverage":true},{"functionName":"./src/FailedTestsInteractiveMode.ts","ranges":[{"startOffset":3616,"endOffset":8882,"count":1}],"isBlockCoverage":true},{"functionName":"_ansiEscapes","ranges":[{"startOffset":3755,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":3915,"endOffset":4055,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":4003,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":4056,"endOffset":4182,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":4130,"endOffset":4164,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWatcher","ranges":[{"startOffset":4183,"endOffset":4318,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4319,"endOffset":4404,"count":1},{"startOffset":4381,"endOffset":4384,"count":0}],"isBlockCoverage":true},{"functionName":"describeKey","ranges":[{"startOffset":4652,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4870,"endOffset":8824,"count":0}],"isBlockCoverage":true},{"functionName":"./src/ReporterDispatcher.ts","ranges":[{"startOffset":8930,"endOffset":11438,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9261,"endOffset":11388,"count":1}],"isBlockCoverage":true},{"functionName":"ReporterDispatcher","ranges":[{"startOffset":9304,"endOffset":9349,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":9352,"endOffset":9412,"count":2}],"isBlockCoverage":true},{"functionName":"unregister","ranges":[{"startOffset":9415,"endOffset":9554,"count":0}],"isBlockCoverage":false},{"functionName":"onTestFileResult","ranges":[{"startOffset":9557,"endOffset":9998,"count":1370},{"startOffset":9653,"endOffset":9881,"count":2740},{"startOffset":9692,"endOffset":9769,"count":0}],"isBlockCoverage":true},{"functionName":"onTestFileStart","ranges":[{"startOffset":10001,"endOffset":10261,"count":1370},{"startOffset":10075,"endOffset":10257,"count":2740},{"startOffset":10113,"endOffset":10168,"count":0}],"isBlockCoverage":true},{"functionName":"onRunStart","ranges":[{"startOffset":10264,"endOffset":10450,"count":1},{"startOffset":10345,"endOffset":10446,"count":2}],"isBlockCoverage":true},{"functionName":"onTestCaseStart","ranges":[{"startOffset":10453,"endOffset":10668,"count":0}],"isBlockCoverage":false},{"functionName":"onTestCaseResult","ranges":[{"startOffset":10671,"endOffset":10883,"count":0}],"isBlockCoverage":false},{"functionName":"onRunComplete","ranges":[{"startOffset":10886,"endOffset":11091,"count":1},{"startOffset":10975,"endOffset":11087,"count":2}],"isBlockCoverage":true},{"functionName":"getErrors","ranges":[{"startOffset":11148,"endOffset":11326,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11196,"endOffset":11316,"count":2},{"startOffset":11284,"endOffset":11302,"count":0}],"isBlockCoverage":true},{"functionName":"hasErrors","ranges":[{"startOffset":11329,"endOffset":11386,"count":1}],"isBlockCoverage":true},{"functionName":"./src/SearchSource.ts","ranges":[{"startOffset":11480,"endOffset":22060,"count":1}],"isBlockCoverage":true},{"functionName":"os","ranges":[{"startOffset":11619,"endOffset":11749,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":11750,"endOffset":11886,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":11834,"endOffset":11868,"count":0}],"isBlockCoverage":false},{"functionName":"_micromatch","ranges":[{"startOffset":11887,"endOffset":12042,"count":0}],"isBlockCoverage":false},{"functionName":"_jestConfig","ranges":[{"startOffset":12043,"endOffset":12175,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":12176,"endOffset":12318,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":12266,"endOffset":12300,"count":0}],"isBlockCoverage":false},{"functionName":"_jestResolveDependencies","ranges":[{"startOffset":12319,"endOffset":12491,"count":0}],"isBlockCoverage":false},{"functionName":"_jestSnapshot","ranges":[{"startOffset":12492,"endOffset":12630,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":12631,"endOffset":12757,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":12705,"endOffset":12739,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":12758,"endOffset":12843,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":12844,"endOffset":13458,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":12995,"endOffset":13448,"count":1},{"startOffset":13042,"endOffset":13051,"count":0},{"startOffset":13138,"endOffset":13163,"count":0},{"startOffset":13165,"endOffset":13174,"count":0},{"startOffset":13185,"endOffset":13188,"count":0},{"startOffset":13210,"endOffset":13226,"count":0},{"startOffset":13261,"endOffset":13436,"count":17},{"startOffset":13408,"endOffset":13420,"count":0}],"isBlockCoverage":true},{"functionName":"regexToMatcher","ranges":[{"startOffset":13674,"endOffset":13948,"count":0}],"isBlockCoverage":false},{"functionName":"toTests","ranges":[{"startOffset":13966,"endOffset":14051,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13996,"endOffset":14050,"count":6511}],"isBlockCoverage":true},{"functionName":"hasSCM","ranges":[{"startOffset":14068,"endOffset":14274,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePosix","ranges":[{"startOffset":14276,"endOffset":14354,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14355,"endOffset":22016,"count":1}],"isBlockCoverage":true},{"functionName":"SearchSource","ranges":[{"startOffset":14436,"endOffset":15447,"count":1},{"startOffset":15316,"endOffset":15443,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14619,"endOffset":14684,"count":1}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":14744,"endOffset":14774,"count":6511}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":15179,"endOffset":15222,"count":6511}],"isBlockCoverage":true},{"functionName":"_getOrBuildDependencyResolver","ranges":[{"startOffset":15450,"endOffset":15778,"count":0}],"isBlockCoverage":false},{"functionName":"_filterTestPathsWithStats","ranges":[{"startOffset":15781,"endOffset":16647,"count":1},{"startOffset":16136,"endOffset":16313,"count":0}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":16178,"endOffset":16224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16347,"endOffset":16624,"count":6511},{"startOffset":16459,"endOffset":16591,"count":19533},{"startOffset":16493,"endOffset":16534,"count":14390},{"startOffset":16534,"endOffset":16583,"count":5143}],"isBlockCoverage":true},{"functionName":"_getAllTestPaths","ranges":[{"startOffset":16650,"endOffset":16828,"count":1}],"isBlockCoverage":true},{"functionName":"isTestFilePath","ranges":[{"startOffset":16831,"endOffset":16931,"count":0}],"isBlockCoverage":false},{"functionName":"findMatchingTests","ranges":[{"startOffset":16934,"endOffset":17043,"count":1}],"isBlockCoverage":true},{"functionName":"findRelatedTests","ranges":[{"startOffset":17046,"endOffset":18352,"count":0}],"isBlockCoverage":false},{"functionName":"findTestsByPaths","ranges":[{"startOffset":18355,"endOffset":18540,"count":0}],"isBlockCoverage":false},{"functionName":"findRelatedTestsFromPattern","ranges":[{"startOffset":18543,"endOffset":18866,"count":0}],"isBlockCoverage":false},{"functionName":"findTestRelatedToChangedFiles","ranges":[{"startOffset":18869,"endOffset":19173,"count":0}],"isBlockCoverage":false},{"functionName":"_getTestPaths","ranges":[{"startOffset":19176,"endOffset":20074,"count":1},{"startOffset":19275,"endOffset":19486,"count":0},{"startOffset":19567,"endOffset":19597,"count":0},{"startOffset":19599,"endOffset":19650,"count":0},{"startOffset":19687,"endOffset":19695,"count":0},{"startOffset":19696,"endOffset":19715,"count":0},{"startOffset":19717,"endOffset":19767,"count":0},{"startOffset":19807,"endOffset":19815,"count":0},{"startOffset":19816,"endOffset":19835,"count":0},{"startOffset":19837,"endOffset":19928,"count":0}],"isBlockCoverage":true},{"functionName":"filterPathsWin32","ranges":[{"startOffset":20077,"endOffset":20650,"count":0}],"isBlockCoverage":false},{"functionName":"getTestPaths","ranges":[{"startOffset":20653,"endOffset":21342,"count":1},{"startOffset":20879,"endOffset":21313,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20971,"endOffset":20988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21263,"endOffset":21297,"count":0}],"isBlockCoverage":false},{"functionName":"findRelatedSourcesFromTestsInChangedFiles","ranges":[{"startOffset":21345,"endOffset":22014,"count":0}],"isBlockCoverage":false},{"functionName":"./src/SnapshotInteractiveMode.ts","ranges":[{"startOffset":22113,"endOffset":28790,"count":1}],"isBlockCoverage":true},{"functionName":"_ansiEscapes","ranges":[{"startOffset":22252,"endOffset":22411,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":22412,"endOffset":22552,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":22553,"endOffset":22679,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":22627,"endOffset":22661,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWatcher","ranges":[{"startOffset":22680,"endOffset":22815,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":22816,"endOffset":22901,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23149,"endOffset":28735,"count":0}],"isBlockCoverage":true},{"functionName":"./src/TestNamePatternPrompt.ts","ranges":[{"startOffset":28841,"endOffset":29811,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":28980,"endOffset":29115,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":29063,"endOffset":29097,"count":0}],"isBlockCoverage":false},{"functionName":"TestNamePatternPrompt","ranges":[{"startOffset":29377,"endOffset":29442,"count":0}],"isBlockCoverage":false},{"functionName":"_onChange","ranges":[{"startOffset":29445,"endOffset":29549,"count":0}],"isBlockCoverage":false},{"functionName":"_printPrompt","ranges":[{"startOffset":29552,"endOffset":29756,"count":0}],"isBlockCoverage":false},{"functionName":"./src/TestPathPatternPrompt.ts","ranges":[{"startOffset":29862,"endOffset":30836,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":30001,"endOffset":30136,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":30084,"endOffset":30118,"count":0}],"isBlockCoverage":false},{"functionName":"TestPathPatternPrompt","ranges":[{"startOffset":30398,"endOffset":30467,"count":0}],"isBlockCoverage":false},{"functionName":"_onChange","ranges":[{"startOffset":30470,"endOffset":30574,"count":0}],"isBlockCoverage":false},{"functionName":"_printPrompt","ranges":[{"startOffset":30577,"endOffset":30781,"count":0}],"isBlockCoverage":false},{"functionName":"./src/TestScheduler.ts","ranges":[{"startOffset":30879,"endOffset":44142,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":31061,"endOffset":31201,"count":0}],"isBlockCoverage":false},{"functionName":"_ciInfo","ranges":[{"startOffset":31202,"endOffset":31322,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":31323,"endOffset":31464,"count":0}],"isBlockCoverage":false},{"functionName":"_reporters","ranges":[{"startOffset":31465,"endOffset":31599,"count":1}],"isBlockCoverage":true},{"functionName":"_reporters","ranges":[{"startOffset":31547,"endOffset":31581,"count":1}],"isBlockCoverage":true},{"functionName":"_testResult","ranges":[{"startOffset":31600,"endOffset":31738,"count":1}],"isBlockCoverage":true},{"functionName":"_testResult","ranges":[{"startOffset":31686,"endOffset":31720,"count":1370}],"isBlockCoverage":true},{"functionName":"_transform","ranges":[{"startOffset":31739,"endOffset":31873,"count":1}],"isBlockCoverage":true},{"functionName":"_transform","ranges":[{"startOffset":31821,"endOffset":31855,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":31874,"endOffset":32022,"count":0}],"isBlockCoverage":false},{"functionName":"_jestSnapshot","ranges":[{"startOffset":32023,"endOffset":32161,"count":1}],"isBlockCoverage":true},{"functionName":"_jestSnapshot","ranges":[{"startOffset":32109,"endOffset":32143,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":32162,"endOffset":32288,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":32236,"endOffset":32270,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":32471,"endOffset":32556,"count":1},{"startOffset":32537,"endOffset":32553,"count":0}],"isBlockCoverage":true},{"functionName":"createTestScheduler","ranges":[{"startOffset":32749,"endOffset":32929,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":32930,"endOffset":42910,"count":1}],"isBlockCoverage":true},{"functionName":"TestScheduler","ranges":[{"startOffset":32998,"endOffset":33164,"count":1}],"isBlockCoverage":true},{"functionName":"addReporter","ranges":[{"startOffset":33167,"endOffset":33235,"count":2}],"isBlockCoverage":true},{"functionName":"removeReporter","ranges":[{"startOffset":33238,"endOffset":33333,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleTests","ranges":[{"startOffset":33336,"endOffset":40026,"count":1},{"startOffset":33549,"endOffset":33666,"count":1370},{"startOffset":33614,"endOffset":33660,"count":0},{"startOffset":38110,"endOffset":39069,"count":0},{"startOffset":39227,"endOffset":39331,"count":0},{"startOffset":39346,"endOffset":39525,"count":0}],"isBlockCoverage":true},{"functionName":"onResult","ranges":[{"startOffset":33960,"endOffset":35143,"count":1370},{"startOffset":34025,"endOffset":34050,"count":0},{"startOffset":34098,"endOffset":34288,"count":0},{"startOffset":34385,"endOffset":34911,"count":0}],"isBlockCoverage":true},{"functionName":"onFailure","ranges":[{"startOffset":35167,"endOffset":35648,"count":0}],"isBlockCoverage":false},{"functionName":"updateSnapshotState","ranges":[{"startOffset":35682,"endOffset":36653,"count":1},{"startOffset":36294,"endOffset":36299,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35780,"endOffset":35872,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36921,"endOffset":37551,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38181,"endOffset":38214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38252,"endOffset":38302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38340,"endOffset":38381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38417,"endOffset":38654,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38691,"endOffset":38923,"count":0}],"isBlockCoverage":false},{"functionName":"_partitionTests","ranges":[{"startOffset":40029,"endOffset":40651,"count":1},{"startOffset":40112,"endOffset":40387,"count":0},{"startOffset":40615,"endOffset":40647,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40140,"endOffset":40358,"count":0}],"isBlockCoverage":false},{"functionName":"_setupReporters","ranges":[{"startOffset":40654,"endOffset":41940,"count":1},{"startOffset":41057,"endOffset":41113,"count":0},{"startOffset":41198,"endOffset":41392,"count":0},{"startOffset":41401,"endOffset":41469,"count":0},{"startOffset":41478,"endOffset":41560,"count":0},{"startOffset":41577,"endOffset":41678,"count":0},{"startOffset":41697,"endOffset":41800,"count":0}],"isBlockCoverage":true},{"functionName":"_addCustomReporter","ranges":[{"startOffset":41943,"endOffset":42373,"count":0}],"isBlockCoverage":false},{"functionName":"_bailIfNeeded","ranges":[{"startOffset":42376,"endOffset":42908,"count":1370},{"startOffset":42478,"endOffset":42540,"count":0},{"startOffset":42542,"endOffset":42904,"count":0}],"isBlockCoverage":true},{"functionName":"createAggregatedResults","ranges":[{"startOffset":42943,"endOffset":43163,"count":1}],"isBlockCoverage":true},{"functionName":"getEstimatedTime","ranges":[{"startOffset":43190,"endOffset":43410,"count":1},{"startOffset":43261,"endOffset":43338,"count":0},{"startOffset":43339,"endOffset":43407,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43365,"endOffset":43390,"count":0}],"isBlockCoverage":false},{"functionName":"strToError","ranges":[{"startOffset":43431,"endOffset":43757,"count":0}],"isBlockCoverage":false},{"functionName":"buildExecError","ranges":[{"startOffset":43782,"endOffset":44132,"count":0}],"isBlockCoverage":false},{"functionName":"./src/cli/index.ts","ranges":[{"startOffset":44181,"endOffset":54527,"count":1}],"isBlockCoverage":true},{"functionName":"_perf_hooks","ranges":[{"startOffset":44337,"endOffset":44468,"count":1}],"isBlockCoverage":true},{"functionName":"_perf_hooks","ranges":[{"startOffset":44416,"endOffset":44450,"count":3}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":44469,"endOffset":44609,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":44610,"endOffset":44751,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":44752,"endOffset":44891,"count":0}],"isBlockCoverage":false},{"functionName":"_console","ranges":[{"startOffset":44892,"endOffset":45020,"count":1}],"isBlockCoverage":true},{"functionName":"_console","ranges":[{"startOffset":44968,"endOffset":45002,"count":0}],"isBlockCoverage":false},{"functionName":"_jestConfig","ranges":[{"startOffset":45021,"endOffset":45153,"count":1}],"isBlockCoverage":true},{"functionName":"_jestConfig","ranges":[{"startOffset":45101,"endOffset":45135,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRuntime","ranges":[{"startOffset":45154,"endOffset":45313,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRuntime","ranges":[{"startOffset":45261,"endOffset":45295,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":45314,"endOffset":45440,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":45388,"endOffset":45422,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":45441,"endOffset":45576,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":45524,"endOffset":45558,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":46585,"endOffset":47199,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":47200,"endOffset":47285,"count":10},{"startOffset":47266,"endOffset":47282,"count":0}],"isBlockCoverage":true},{"functionName":"runCLI","ranges":[{"startOffset":47545,"endOffset":50424,"count":1},{"startOffset":47840,"endOffset":47856,"count":0},{"startOffset":48021,"endOffset":48099,"count":0},{"startOffset":48123,"endOffset":48233,"count":0},{"startOffset":48257,"endOffset":48645,"count":0},{"startOffset":48867,"endOffset":49318,"count":0},{"startOffset":49478,"endOffset":49745,"count":0},{"startOffset":49762,"endOffset":49851,"count":0},{"startOffset":49938,"endOffset":50323,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48361,"endOffset":48392,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49413,"endOffset":49440,"count":1}],"isBlockCoverage":true},{"functionName":"openHandles.openHandles","ranges":[{"startOffset":49731,"endOffset":49739,"count":0}],"isBlockCoverage":false},{"functionName":"buildContextsAndHasteMaps","ranges":[{"startOffset":50459,"endOffset":51337,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50631,"endOffset":51280,"count":1}],"isBlockCoverage":true},{"functionName":"_run10000","ranges":[{"startOffset":51357,"endOffset":53405,"count":1},{"startOffset":51713,"endOffset":51898,"count":0},{"startOffset":52085,"endOffset":52112,"count":0},{"startOffset":52114,"endOffset":52843,"count":0},{"startOffset":53163,"endOffset":53286,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51813,"endOffset":51892,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52390,"endOffset":52546,"count":0}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":52570,"endOffset":52838,"count":0}],"isBlockCoverage":false},{"functionName":"runWatch","ranges":[{"startOffset":53424,"endOffset":53960,"count":0}],"isBlockCoverage":false},{"functionName":"runWithoutWatch","ranges":[{"startOffset":53986,"endOffset":54517,"count":1}],"isBlockCoverage":true},{"functionName":"startRun","ranges":[{"startOffset":54096,"endOffset":54493,"count":1}],"isBlockCoverage":true},{"functionName":"./src/collectHandles.ts","ranges":[{"startOffset":54571,"endOffset":61349,"count":1}],"isBlockCoverage":true},{"functionName":"asyncHooks","ranges":[{"startOffset":54767,"endOffset":54922,"count":0}],"isBlockCoverage":false},{"functionName":"_util","ranges":[{"startOffset":54923,"endOffset":55036,"count":1}],"isBlockCoverage":true},{"functionName":"_util","ranges":[{"startOffset":54984,"endOffset":55018,"count":0}],"isBlockCoverage":false},{"functionName":"v8","ranges":[{"startOffset":55037,"endOffset":55167,"count":0}],"isBlockCoverage":false},{"functionName":"vm","ranges":[{"startOffset":55168,"endOffset":55298,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":55299,"endOffset":55447,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":55448,"endOffset":55574,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":55575,"endOffset":56189,"count":0}],"isBlockCoverage":false},{"functionName":"stackIsFromUser","ranges":[{"startOffset":56382,"endOffset":56918,"count":0}],"isBlockCoverage":false},{"functionName":"alwaysActive","ranges":[{"startOffset":56940,"endOffset":56950,"count":0}],"isBlockCoverage":false},{"functionName":"runGC","ranges":[{"startOffset":57085,"endOffset":57426,"count":0}],"isBlockCoverage":false},{"functionName":"collectHandles","ranges":[{"startOffset":57568,"endOffset":60256,"count":0}],"isBlockCoverage":false},{"functionName":"formatHandleErrors","ranges":[{"startOffset":60257,"endOffset":61340,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getChangedFilesPromise.ts","ranges":[{"startOffset":61401,"endOffset":63040,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":61556,"endOffset":61696,"count":0}],"isBlockCoverage":false},{"functionName":"_jestChangedFiles","ranges":[{"startOffset":61697,"endOffset":61848,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":61849,"endOffset":61997,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":61998,"endOffset":62083,"count":0}],"isBlockCoverage":false},{"functionName":"getChangedFilesPromise","ranges":[{"startOffset":62276,"endOffset":63031,"count":1},{"startOffset":62365,"endOffset":63009,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62426,"endOffset":62454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62710,"endOffset":63003,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getConfigsOfProjectsToRun.ts","ranges":[{"startOffset":63095,"endOffset":64327,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":63382,"endOffset":63467,"count":1},{"startOffset":63448,"endOffset":63464,"count":0}],"isBlockCoverage":true},{"functionName":"getConfigsOfProjectsToRun","ranges":[{"startOffset":63660,"endOffset":63914,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63801,"endOffset":63910,"count":1}],"isBlockCoverage":true},{"functionName":"always","ranges":[{"startOffset":63930,"endOffset":63940,"count":2}],"isBlockCoverage":true},{"functionName":"createProjectFilter","ranges":[{"startOffset":63942,"endOffset":64318,"count":1},{"startOffset":64074,"endOffset":64121,"count":0},{"startOffset":64167,"endOffset":64217,"count":0}],"isBlockCoverage":true},{"functionName":"selected","ranges":[{"startOffset":64076,"endOffset":64121,"count":0}],"isBlockCoverage":false},{"functionName":"notIgnore","ranges":[{"startOffset":64169,"endOffset":64217,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":64230,"endOffset":64301,"count":1}],"isBlockCoverage":true},{"functionName":"./src/getNoTestFound.ts","ranges":[{"startOffset":64371,"endOffset":66290,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":64518,"endOffset":64658,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":64659,"endOffset":64785,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":64786,"endOffset":64871,"count":0}],"isBlockCoverage":false},{"functionName":"getNoTestFound","ranges":[{"startOffset":65064,"endOffset":66281,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getNoTestFoundFailed.ts","ranges":[{"startOffset":66340,"endOffset":67388,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":66493,"endOffset":66633,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":66634,"endOffset":66760,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":66761,"endOffset":66846,"count":0}],"isBlockCoverage":false},{"functionName":"getNoTestFoundFailed","ranges":[{"startOffset":67039,"endOffset":67379,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getNoTestFoundPassWithNoTests.ts","ranges":[{"startOffset":67447,"endOffset":68152,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":67609,"endOffset":67749,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67750,"endOffset":67835,"count":0}],"isBlockCoverage":false},{"functionName":"getNoTestFoundPassWithNoTests","ranges":[{"startOffset":68028,"endOffset":68143,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getNoTestFoundRelatedToChangedFiles.ts","ranges":[{"startOffset":68217,"endOffset":69422,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":68385,"endOffset":68525,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":68526,"endOffset":68652,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":68653,"endOffset":68738,"count":0}],"isBlockCoverage":false},{"functionName":"getNoTestFoundRelatedToChangedFiles","ranges":[{"startOffset":68931,"endOffset":69413,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getNoTestFoundVerbose.ts","ranges":[{"startOffset":69473,"endOffset":71956,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":69627,"endOffset":69767,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":69768,"endOffset":69894,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":69895,"endOffset":69980,"count":0}],"isBlockCoverage":false},{"functionName":"getNoTestFoundVerbose","ranges":[{"startOffset":70173,"endOffset":71947,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getNoTestsFoundMessage.ts","ranges":[{"startOffset":72008,"endOffset":73878,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":72752,"endOffset":72837,"count":5},{"startOffset":72818,"endOffset":72834,"count":0}],"isBlockCoverage":true},{"functionName":"getNoTestsFoundMessage","ranges":[{"startOffset":73030,"endOffset":73869,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getProjectDisplayName.ts","ranges":[{"startOffset":73929,"endOffset":74388,"count":1}],"isBlockCoverage":true},{"functionName":"getProjectDisplayName","ranges":[{"startOffset":74275,"endOffset":74379,"count":1},{"startOffset":74357,"endOffset":74363,"count":0}],"isBlockCoverage":true},{"functionName":"./src/getProjectNamesMissingWarning.ts","ranges":[{"startOffset":74447,"endOffset":75893,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":74630,"endOffset":74770,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":74879,"endOffset":74964,"count":1},{"startOffset":74945,"endOffset":74961,"count":0}],"isBlockCoverage":true},{"functionName":"getProjectNamesMissingWarning","ranges":[{"startOffset":75157,"endOffset":75884,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getSelectProjectsMessage.ts","ranges":[{"startOffset":75947,"endOffset":78265,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":76125,"endOffset":76265,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":76374,"endOffset":76459,"count":1},{"startOffset":76440,"endOffset":76456,"count":0}],"isBlockCoverage":true},{"functionName":"getSelectProjectsMessage","ranges":[{"startOffset":76652,"endOffset":76844,"count":0}],"isBlockCoverage":false},{"functionName":"getNoSelectionWarning","ranges":[{"startOffset":76845,"endOffset":77598,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectsRunningMessage","ranges":[{"startOffset":77599,"endOffset":78020,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectNameListElement","ranges":[{"startOffset":78021,"endOffset":78256,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/activeFiltersMessage.ts","ranges":[{"startOffset":78319,"endOffset":79688,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":78458,"endOffset":78598,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":78599,"endOffset":78725,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":78726,"endOffset":78811,"count":0}],"isBlockCoverage":false},{"functionName":"activeFilters","ranges":[{"startOffset":79026,"endOffset":79627,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/createContext.ts","ranges":[{"startOffset":79735,"endOffset":80517,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRuntime","ranges":[{"startOffset":79881,"endOffset":80040,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRuntime","ranges":[{"startOffset":79988,"endOffset":80022,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":80041,"endOffset":80126,"count":1},{"startOffset":80107,"endOffset":80123,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":80319,"endOffset":80508,"count":1}],"isBlockCoverage":true},{"functionName":"./src/lib/handleDeprecationWarnings.ts","ranges":[{"startOffset":80576,"endOffset":82206,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":80734,"endOffset":80874,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWatcher","ranges":[{"startOffset":80875,"endOffset":81010,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":81011,"endOffset":81096,"count":0}],"isBlockCoverage":false},{"functionName":"handleDeprecationWarnings","ranges":[{"startOffset":81289,"endOffset":82197,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/isValidPath.ts","ranges":[{"startOffset":82251,"endOffset":82894,"count":1}],"isBlockCoverage":true},{"functionName":"_jestSnapshot","ranges":[{"startOffset":82395,"endOffset":82533,"count":0}],"isBlockCoverage":false},{"functionName":"isValidPath","ranges":[{"startOffset":82726,"endOffset":82885,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/logDebugMessages.ts","ranges":[{"startOffset":82944,"endOffset":83751,"count":1}],"isBlockCoverage":true},{"functionName":"logDebugMessages","ranges":[{"startOffset":83440,"endOffset":83742,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/serializeToJSON.ts","ranges":[{"startOffset":83800,"endOffset":84961,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":83948,"endOffset":84074,"count":0}],"isBlockCoverage":false},{"functionName":"serializeToJSON","ranges":[{"startOffset":84555,"endOffset":84952,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/updateGlobalConfig.ts","ranges":[{"startOffset":85013,"endOffset":87875,"count":1}],"isBlockCoverage":true},{"functionName":"_pattern","ranges":[{"startOffset":85164,"endOffset":85292,"count":0}],"isBlockCoverage":false},{"functionName":"updateGlobalConfig","ranges":[{"startOffset":85485,"endOffset":87866,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/watchPluginsHelpers.ts","ranges":[{"startOffset":87928,"endOffset":89698,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":88110,"endOffset":88236,"count":0}],"isBlockCoverage":false},{"functionName":"filterInteractivePlugins","ranges":[{"startOffset":88462,"endOffset":88842,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedUsageRows","ranges":[{"startOffset":88932,"endOffset":89639,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/FailedTestsInteractive.ts","ranges":[{"startOffset":89758,"endOffset":92378,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":89918,"endOffset":90053,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":90001,"endOffset":90035,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":90172,"endOffset":90257,"count":1},{"startOffset":90238,"endOffset":90254,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":90450,"endOffset":92318,"count":0}],"isBlockCoverage":true},{"functionName":"./src/plugins/Quit.ts","ranges":[{"startOffset":92420,"endOffset":93355,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":92559,"endOffset":92694,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":92642,"endOffset":92676,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":92887,"endOffset":93298,"count":0}],"isBlockCoverage":true},{"functionName":"./src/plugins/TestNamePattern.ts","ranges":[{"startOffset":93408,"endOffset":95102,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":93568,"endOffset":93703,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":93651,"endOffset":93685,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":93922,"endOffset":94007,"count":2},{"startOffset":93988,"endOffset":94004,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":94200,"endOffset":95034,"count":0}],"isBlockCoverage":true},{"functionName":"./src/plugins/TestPathPattern.ts","ranges":[{"startOffset":95155,"endOffset":96851,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":95315,"endOffset":95450,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":95398,"endOffset":95432,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":95669,"endOffset":95754,"count":2},{"startOffset":95735,"endOffset":95751,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":95947,"endOffset":96783,"count":0}],"isBlockCoverage":true},{"functionName":"./src/plugins/UpdateSnapshots.ts","ranges":[{"startOffset":96904,"endOffset":98100,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":97043,"endOffset":97178,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":97126,"endOffset":97160,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":97371,"endOffset":98032,"count":0}],"isBlockCoverage":true},{"functionName":"./src/plugins/UpdateSnapshotsInteractive.ts","ranges":[{"startOffset":98164,"endOffset":101078,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":98324,"endOffset":98459,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":98407,"endOffset":98441,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":98572,"endOffset":98657,"count":1},{"startOffset":98638,"endOffset":98654,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":98850,"endOffset":101000,"count":0}],"isBlockCoverage":true},{"functionName":"./src/runGlobalHook.ts","ranges":[{"startOffset":101121,"endOffset":104207,"count":1}],"isBlockCoverage":true},{"functionName":"util","ranges":[{"startOffset":101267,"endOffset":101403,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":101404,"endOffset":101538,"count":0}],"isBlockCoverage":false},{"functionName":"_prettyFormat","ranges":[{"startOffset":101539,"endOffset":101701,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":101702,"endOffset":101787,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":101788,"endOffset":102402,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalHook","ranges":[{"startOffset":102595,"endOffset":104198,"count":2},{"startOffset":102796,"endOffset":102854,"count":0},{"startOffset":102991,"endOffset":103157,"count":0},{"startOffset":103158,"endOffset":103226,"count":0},{"startOffset":103317,"endOffset":104186,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102721,"endOffset":102760,"count":2740}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":103034,"endOffset":103082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103394,"endOffset":103645,"count":0}],"isBlockCoverage":false},{"functionName":"./src/runJest.ts","ranges":[{"startOffset":104244,"endOffset":114966,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":104405,"endOffset":104541,"count":0}],"isBlockCoverage":false},{"functionName":"_perf_hooks","ranges":[{"startOffset":104542,"endOffset":104673,"count":1}],"isBlockCoverage":true},{"functionName":"_perf_hooks","ranges":[{"startOffset":104621,"endOffset":104655,"count":11}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":104674,"endOffset":104814,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":104815,"endOffset":104956,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":104957,"endOffset":105096,"count":0}],"isBlockCoverage":false},{"functionName":"_console","ranges":[{"startOffset":105097,"endOffset":105225,"count":0}],"isBlockCoverage":false},{"functionName":"_testResult","ranges":[{"startOffset":105226,"endOffset":105364,"count":0}],"isBlockCoverage":false},{"functionName":"_jestResolve","ranges":[{"startOffset":105365,"endOffset":105524,"count":1}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":105472,"endOffset":105506,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":105525,"endOffset":105651,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":105599,"endOffset":105633,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWatcher","ranges":[{"startOffset":105652,"endOffset":105787,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWatcher","ranges":[{"startOffset":105735,"endOffset":105769,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":106342,"endOffset":106427,"count":6},{"startOffset":106408,"endOffset":106424,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":106428,"endOffset":107042,"count":0}],"isBlockCoverage":false},{"functionName":"getTestPaths","ranges":[{"startOffset":107256,"endOffset":108206,"count":1},{"startOffset":107475,"endOffset":107502,"count":0},{"startOffset":107503,"endOffset":107516,"count":0},{"startOffset":107518,"endOffset":107845,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107905,"endOffset":108034,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":108080,"endOffset":108112,"count":1370}],"isBlockCoverage":true},{"functionName":"processResults","ranges":[{"startOffset":108231,"endOffset":109202,"count":1},{"startOffset":108424,"endOffset":108482,"count":0},{"startOffset":108555,"endOffset":108696,"count":0},{"startOffset":108711,"endOffset":109172,"count":0}],"isBlockCoverage":true},{"functionName":"runJest","ranges":[{"startOffset":109280,"endOffset":114957,"count":1},{"startOffset":109905,"endOffset":109926,"count":0},{"startOffset":109928,"endOffset":110247,"count":0},{"startOffset":110880,"endOffset":111212,"count":0},{"startOffset":111288,"endOffset":111896,"count":0},{"startOffset":111930,"endOffset":112098,"count":0},{"startOffset":112156,"endOffset":112554,"count":0},{"startOffset":112586,"endOffset":112617,"count":0},{"startOffset":112618,"endOffset":112651,"count":0},{"startOffset":112653,"endOffset":112777,"count":0},{"startOffset":112838,"endOffset":112896,"count":0},{"startOffset":113184,"endOffset":113788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110032,"endOffset":110060,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":110285,"endOffset":110330,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110447,"endOffset":110791,"count":1},{"startOffset":110639,"endOffset":110669,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":111338,"endOffset":111355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113414,"endOffset":113583,"count":0}],"isBlockCoverage":false},{"functionName":"./src/testSchedulerHelper.ts","ranges":[{"startOffset":115015,"endOffset":116615,"count":1}],"isBlockCoverage":true},{"functionName":"shouldRunInBand","ranges":[{"startOffset":115389,"endOffset":116606,"count":1},{"startOffset":115717,"endOffset":115739,"count":0},{"startOffset":115975,"endOffset":115998,"count":0},{"startOffset":116561,"endOffset":116582,"count":0},{"startOffset":116583,"endOffset":116598,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116280,"endOffset":116313,"count":0}],"isBlockCoverage":false},{"functionName":"./src/version.ts","ranges":[{"startOffset":116652,"endOffset":117182,"count":1}],"isBlockCoverage":true},{"functionName":"getVersion","ranges":[{"startOffset":117130,"endOffset":117173,"count":1}],"isBlockCoverage":true},{"functionName":"./src/watch.ts","ranges":[{"startOffset":117217,"endOffset":136143,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":117376,"endOffset":117512,"count":0}],"isBlockCoverage":false},{"functionName":"_ansiEscapes","ranges":[{"startOffset":117513,"endOffset":117672,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":117673,"endOffset":117813,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":117814,"endOffset":117955,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":117956,"endOffset":118096,"count":0}],"isBlockCoverage":false},{"functionName":"_pattern","ranges":[{"startOffset":118097,"endOffset":118225,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":118226,"endOffset":118374,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":118375,"endOffset":118501,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":118449,"endOffset":118483,"count":0}],"isBlockCoverage":false},{"functionName":"_jestValidate","ranges":[{"startOffset":118502,"endOffset":118640,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWatcher","ranges":[{"startOffset":118641,"endOffset":118776,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":120281,"endOffset":120366,"count":14},{"startOffset":120347,"endOffset":120363,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":120367,"endOffset":120981,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":121788,"endOffset":132886,"count":0}],"isBlockCoverage":false},{"functionName":"checkForConflicts","ranges":[{"startOffset":132913,"endOffset":134051,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginIdentifier","ranges":[{"startOffset":134081,"endOffset":134414,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginKey","ranges":[{"startOffset":134437,"endOffset":134615,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":134631,"endOffset":135970,"count":0}],"isBlockCoverage":false},{"functionName":"showToggleUsagePrompt","ranges":[{"startOffset":136002,"endOffset":136133,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":136365,"endOffset":137093,"count":53},{"startOffset":136557,"endOffset":136612,"count":12},{"startOffset":136612,"endOffset":137092,"count":41}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":137319,"endOffset":138343,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":137508,"endOffset":137559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":137649,"endOffset":137713,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":137794,"endOffset":137840,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":137917,"endOffset":137958,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":138256,"endOffset":138341,"count":2},{"startOffset":138322,"endOffset":138338,"count":0}],"isBlockCoverage":true}]},{"scriptId":"103","url":"node:timers/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6369,"count":1}],"isBlockCoverage":false},{"functionName":"cancelListenerHandler","ranges":[{"startOffset":682,"endOffset":852,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":854,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":2165,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":3404,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"Scheduler","ranges":[{"startOffset":5634,"endOffset":5694,"count":0}],"isBlockCoverage":true},{"functionName":"yield","ranges":[{"startOffset":5740,"endOffset":5854,"count":0}],"isBlockCoverage":false},{"functionName":"wait","ranges":[{"startOffset":6055,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6303,"endOffset":6348,"count":1}],"isBlockCoverage":true}]},{"scriptId":"104","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-util/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38792,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":38787,"count":1}],"isBlockCoverage":true},{"functionName":"./src/ErrorWithStack.ts","ranges":[{"startOffset":360,"endOffset":1209,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorWithStack","ranges":[{"startOffset":730,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"./src/clearLine.ts","ranges":[{"startOffset":1248,"endOffset":1688,"count":1}],"isBlockCoverage":true},{"functionName":"clearLine","ranges":[{"startOffset":1582,"endOffset":1679,"count":1},{"startOffset":1631,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"./src/convertDescriptorToString.ts","ranges":[{"startOffset":1743,"endOffset":2527,"count":1}],"isBlockCoverage":true},{"functionName":"convertDescriptorToString","ranges":[{"startOffset":2093,"endOffset":2518,"count":0}],"isBlockCoverage":false},{"functionName":"./src/createDirectory.ts","ranges":[{"startOffset":2572,"endOffset":3859,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":2720,"endOffset":2859,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":2807,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":2860,"endOffset":3474,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":3011,"endOffset":3464,"count":1},{"startOffset":3058,"endOffset":3067,"count":0},{"startOffset":3154,"endOffset":3179,"count":0},{"startOffset":3181,"endOffset":3190,"count":0},{"startOffset":3201,"endOffset":3204,"count":0},{"startOffset":3226,"endOffset":3242,"count":0},{"startOffset":3277,"endOffset":3452,"count":105},{"startOffset":3414,"endOffset":3422,"count":97},{"startOffset":3424,"endOffset":3436,"count":8},{"startOffset":3437,"endOffset":3450,"count":97}],"isBlockCoverage":true},{"functionName":"createDirectory","ranges":[{"startOffset":3667,"endOffset":3850,"count":1},{"startOffset":3769,"endOffset":3848,"count":0}],"isBlockCoverage":true},{"functionName":"./src/createProcessObject.ts","ranges":[{"startOffset":3908,"endOffset":7348,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4175,"endOffset":4260,"count":1},{"startOffset":4241,"endOffset":4257,"count":0}],"isBlockCoverage":true},{"functionName":"createProcessEnv","ranges":[{"startOffset":4922,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"createProcessObject","ranges":[{"startOffset":6281,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"./src/deepCyclicCopy.ts","ranges":[{"startOffset":7392,"endOffset":9404,"count":1}],"isBlockCoverage":true},{"functionName":"deepCyclicCopy","ranges":[{"startOffset":7756,"endOffset":8231,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyObject","ranges":[{"startOffset":8232,"endOffset":8978,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyArray","ranges":[{"startOffset":8979,"endOffset":9395,"count":0}],"isBlockCoverage":false},{"functionName":"./src/formatTime.ts","ranges":[{"startOffset":9444,"endOffset":10089,"count":1}],"isBlockCoverage":true},{"functionName":"formatTime","ranges":[{"startOffset":9779,"endOffset":10080,"count":337}],"isBlockCoverage":true},{"functionName":"./src/garbage-collection-utils.ts","ranges":[{"startOffset":10143,"endOffset":15352,"count":1}],"isBlockCoverage":true},{"functionName":"deleteProperties","ranges":[{"startOffset":10901,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"protectProperties","ranges":[{"startOffset":11774,"endOffset":12797,"count":0}],"isBlockCoverage":false},{"functionName":"canDeleteProperties","ranges":[{"startOffset":12933,"endOffset":13100,"count":0}],"isBlockCoverage":false},{"functionName":"deleteProperty","ranges":[{"startOffset":13523,"endOffset":14205,"count":0}],"isBlockCoverage":false},{"functionName":"emitAccessWarning","ranges":[{"startOffset":14242,"endOffset":15094,"count":0}],"isBlockCoverage":false},{"functionName":"getProtectedKeys","ranges":[{"startOffset":15095,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"./src/globsToMatcher.ts","ranges":[{"startOffset":15396,"endOffset":18859,"count":1}],"isBlockCoverage":true},{"functionName":"_picomatch","ranges":[{"startOffset":15564,"endOffset":15716,"count":1}],"isBlockCoverage":true},{"functionName":"_picomatch","ranges":[{"startOffset":15664,"endOffset":15698,"count":3}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":15825,"endOffset":15910,"count":2},{"startOffset":15887,"endOffset":15890,"count":1},{"startOffset":15891,"endOffset":15907,"count":1}],"isBlockCoverage":true},{"functionName":"globsToMatcher","ranges":[{"startOffset":16837,"endOffset":18850,"count":1},{"startOffset":16896,"endOffset":17048,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17032,"endOffset":17043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17078,"endOffset":17586,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17598,"endOffset":18847,"count":6511},{"startOffset":17761,"endOffset":18358,"count":26044},{"startOffset":17848,"endOffset":17878,"count":0},{"startOffset":17943,"endOffset":17953,"count":24655},{"startOffset":17955,"endOffset":18176,"count":0},{"startOffset":18194,"endOffset":18205,"count":1389},{"startOffset":18207,"endOffset":18352,"count":1389},{"startOffset":18817,"endOffset":18833,"count":0}],"isBlockCoverage":true},{"functionName":"./src/installCommonGlobals.ts","ranges":[{"startOffset":18909,"endOffset":21784,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":19083,"endOffset":19222,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":19421,"endOffset":19506,"count":2},{"startOffset":19487,"endOffset":19503,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":19507,"endOffset":20121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20360,"endOffset":20391,"count":14}],"isBlockCoverage":true},{"functionName":"installCommonGlobals","ranges":[{"startOffset":20394,"endOffset":21775,"count":0}],"isBlockCoverage":false},{"functionName":"./src/interopRequireDefault.ts","ranges":[{"startOffset":21835,"endOffset":22510,"count":1}],"isBlockCoverage":true},{"functionName":"interopRequireDefault","ranges":[{"startOffset":22399,"endOffset":22501,"count":4},{"startOffset":22474,"endOffset":22498,"count":0}],"isBlockCoverage":true},{"functionName":"./src/invariant.ts","ranges":[{"startOffset":22549,"endOffset":22993,"count":1}],"isBlockCoverage":true},{"functionName":"invariant","ranges":[{"startOffset":22883,"endOffset":22984,"count":1},{"startOffset":22947,"endOffset":22982,"count":0}],"isBlockCoverage":true},{"functionName":"./src/isInteractive.ts","ranges":[{"startOffset":23036,"endOffset":23922,"count":1}],"isBlockCoverage":true},{"functionName":"_ciInfo","ranges":[{"startOffset":23175,"endOffset":23295,"count":1}],"isBlockCoverage":true},{"functionName":"_ciInfo","ranges":[{"startOffset":23243,"endOffset":23277,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsInteractive","ranges":[{"startOffset":23488,"endOffset":23818,"count":1},{"startOffset":23565,"endOffset":23817,"count":0}],"isBlockCoverage":true},{"functionName":"./src/isNonNullable.ts","ranges":[{"startOffset":23965,"endOffset":24369,"count":1}],"isBlockCoverage":true},{"functionName":"isNonNullable","ranges":[{"startOffset":24303,"endOffset":24360,"count":0}],"isBlockCoverage":false},{"functionName":"./src/isPromise.ts","ranges":[{"startOffset":24408,"endOffset":24922,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":24742,"endOffset":24913,"count":0}],"isBlockCoverage":false},{"functionName":"./src/pluralize.ts","ranges":[{"startOffset":24961,"endOffset":25410,"count":1}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":25295,"endOffset":25401,"count":0}],"isBlockCoverage":false},{"functionName":"./src/preRunMessage.ts","ranges":[{"startOffset":25453,"endOffset":26481,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":25632,"endOffset":25772,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":25949,"endOffset":26034,"count":2},{"startOffset":26015,"endOffset":26031,"count":0}],"isBlockCoverage":true},{"functionName":"print","ranges":[{"startOffset":26227,"endOffset":26371,"count":1},{"startOffset":26282,"endOffset":26369,"count":0}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":26372,"endOffset":26472,"count":1},{"startOffset":26428,"endOffset":26470,"count":0}],"isBlockCoverage":true},{"functionName":"./src/replacePathSepForGlob.ts","ranges":[{"startOffset":26532,"endOffset":26980,"count":1}],"isBlockCoverage":true},{"functionName":"replacePathSepForGlob","ranges":[{"startOffset":26878,"endOffset":26971,"count":6519}],"isBlockCoverage":true},{"functionName":"./src/requireOrImportModule.ts","ranges":[{"startOffset":27031,"endOffset":29385,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":27206,"endOffset":27319,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":27267,"endOffset":27301,"count":3}],"isBlockCoverage":true},{"functionName":"_url","ranges":[{"startOffset":27320,"endOffset":27430,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault2","ranges":[{"startOffset":27540,"endOffset":27626,"count":1},{"startOffset":27607,"endOffset":27623,"count":0}],"isBlockCoverage":true},{"functionName":"importModule","ranges":[{"startOffset":27819,"endOffset":28602,"count":0}],"isBlockCoverage":false},{"functionName":"requireOrImportModule","ranges":[{"startOffset":28603,"endOffset":29376,"count":4},{"startOffset":28728,"endOffset":28750,"count":0},{"startOffset":28752,"endOffset":28850,"count":0},{"startOffset":28894,"endOffset":28966,"count":0},{"startOffset":29050,"endOffset":29086,"count":0},{"startOffset":29163,"endOffset":29374,"count":0}],"isBlockCoverage":true},{"functionName":"./src/setGlobal.ts","ranges":[{"startOffset":29424,"endOffset":30152,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobal","ranges":[{"startOffset":29867,"endOffset":30143,"count":0}],"isBlockCoverage":false},{"functionName":"./src/specialChars.ts","ranges":[{"startOffset":30194,"endOffset":30905,"count":1},{"startOffset":30694,"endOffset":30704,"count":0},{"startOffset":30759,"endOffset":30769,"count":0},{"startOffset":30842,"endOffset":30864,"count":0}],"isBlockCoverage":true},{"functionName":"./src/tryRealpath.ts","ranges":[{"startOffset":30946,"endOffset":31640,"count":1}],"isBlockCoverage":true},{"functionName":"_gracefulFs","ranges":[{"startOffset":31090,"endOffset":31222,"count":1}],"isBlockCoverage":true},{"functionName":"_gracefulFs","ranges":[{"startOffset":31170,"endOffset":31204,"count":5}],"isBlockCoverage":true},{"functionName":"tryRealpath","ranges":[{"startOffset":31415,"endOffset":31631,"count":6},{"startOffset":31508,"endOffset":31614,"count":0}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":31862,"endOffset":32590,"count":29},{"startOffset":32054,"endOffset":32109,"count":7},{"startOffset":32109,"endOffset":32589,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32816,"endOffset":38733,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":33007,"endOffset":33060,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33150,"endOffset":33223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33303,"endOffset":33351,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":33447,"endOffset":33511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33597,"endOffset":33651,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":33736,"endOffset":33789,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33876,"endOffset":33946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34027,"endOffset":34076,"count":337}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34161,"endOffset":34214,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34305,"endOffset":34364,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34456,"endOffset":34516,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34596,"endOffset":34644,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34728,"endOffset":34780,"count":6812}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34864,"endOffset":34916,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34996,"endOffset":35044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35124,"endOffset":35172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35292,"endOffset":35363,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35455,"endOffset":35515,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":35607,"endOffset":35667,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":35747,"endOffset":35795,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35908,"endOffset":35958,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault2","ranges":[{"startOffset":38030,"endOffset":38116,"count":18},{"startOffset":38097,"endOffset":38113,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":38117,"endOffset":38731,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":38268,"endOffset":38721,"count":2},{"startOffset":38324,"endOffset":38436,"count":0},{"startOffset":38438,"endOffset":38461,"count":0},{"startOffset":38462,"endOffset":38465,"count":0},{"startOffset":38467,"endOffset":38720,"count":0}],"isBlockCoverage":true}]},{"scriptId":"105","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/ci-info/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2746,"count":1},{"startOffset":820,"endOffset":930,"count":0},{"startOffset":931,"endOffset":964,"count":0},{"startOffset":965,"endOffset":1002,"count":0},{"startOffset":1003,"endOffset":1032,"count":0},{"startOffset":1033,"endOffset":1089,"count":0},{"startOffset":1090,"endOffset":1131,"count":0},{"startOffset":1132,"endOffset":1173,"count":0},{"startOffset":1174,"endOffset":1186,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173,"endOffset":213,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":294,"endOffset":617,"count":51},{"startOffset":355,"endOffset":367,"count":2},{"startOffset":368,"endOffset":382,"count":49},{"startOffset":505,"endOffset":521,"count":50},{"startOffset":521,"endOffset":616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":454,"count":51}],"isBlockCoverage":true},{"functionName":"checkEnv","ranges":[{"startOffset":1191,"endOffset":1736,"count":52},{"startOffset":1269,"endOffset":1286,"count":46},{"startOffset":1286,"endOffset":1380,"count":6},{"startOffset":1380,"endOffset":1557,"count":1},{"startOffset":1506,"endOffset":1544,"count":0},{"startOffset":1557,"endOffset":1579,"count":5},{"startOffset":1579,"endOffset":1652,"count":1},{"startOffset":1652,"endOffset":1735,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1605,"endOffset":1647,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1686,"endOffset":1733,"count":4}],"isBlockCoverage":true},{"functionName":"checkPR","ranges":[{"startOffset":1738,"endOffset":2745,"count":1},{"startOffset":1800,"endOffset":1871,"count":0},{"startOffset":1921,"endOffset":2363,"count":0},{"startOffset":2393,"endOffset":2549,"count":0},{"startOffset":2661,"endOffset":2739,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2106,"endOffset":2180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2486,"endOffset":2540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5948,"endOffset":5967,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":0},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":709,"endOffset":728,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":7641}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":20},{"startOffset":3059,"endOffset":3101,"count":9},{"startOffset":3101,"endOffset":3184,"count":11}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":20}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":6356},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":6356},{"startOffset":4136,"endOffset":4146,"count":0},{"startOffset":4173,"endOffset":4177,"count":0},{"startOffset":4190,"endOffset":5134,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9712,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2026,"endOffset":2272,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2085,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2654,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2716,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2778,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2841,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2902,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2967,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3020,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3075,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3128,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3181,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3235,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3293,"endOffset":3317,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3352,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3404,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3559,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3939,"endOffset":4368,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4399,"endOffset":4441,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4468,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4518,"endOffset":4568,"count":3}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4599,"endOffset":4621,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4653,"endOffset":5258,"count":1},{"startOffset":4702,"endOffset":4999,"count":0},{"startOffset":5195,"endOffset":5236,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5287,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5338,"endOffset":5385,"count":1}],"isBlockCoverage":true},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5418,"endOffset":5435,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5523,"endOffset":5776,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5778,"endOffset":6723,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6934,"endOffset":7627,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7711,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8058,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8617,"endOffset":8843,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5045,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1526,"endOffset":1632,"count":11}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1634,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2252,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2476,"endOffset":3442,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3733,"endOffset":4167,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4223,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4400,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4582,"endOffset":4721,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4763,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4938,"endOffset":4988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68429,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1645,"endOffset":1670,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4172,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4653,"endOffset":4747,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4749,"endOffset":5132,"count":3},{"startOffset":4916,"endOffset":4938,"count":0},{"startOffset":4973,"endOffset":5131,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5135,"endOffset":5273,"count":27},{"startOffset":5230,"endOffset":5248,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5276,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5560,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5887,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6290,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6367,"endOffset":6483,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6485,"endOffset":6588,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6590,"endOffset":6777,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7271,"endOffset":7997,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8069,"endOffset":8672,"count":15},{"startOffset":8425,"endOffset":8666,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8674,"endOffset":9014,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8793,"endOffset":9006,"count":12},{"startOffset":8895,"endOffset":9000,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9266,"endOffset":13893,"count":27},{"startOffset":9326,"endOffset":9353,"count":12},{"startOffset":9353,"endOffset":9379,"count":15},{"startOffset":9381,"endOffset":9510,"count":0},{"startOffset":9510,"endOffset":9828,"count":15},{"startOffset":9580,"endOffset":9828,"count":0},{"startOffset":9828,"endOffset":9872,"count":15},{"startOffset":9890,"endOffset":10086,"count":0},{"startOffset":10086,"endOffset":10648,"count":15},{"startOffset":10648,"endOffset":10674,"count":0},{"startOffset":10674,"endOffset":11080,"count":15},{"startOffset":11080,"endOffset":11188,"count":12},{"startOffset":11188,"endOffset":12436,"count":3},{"startOffset":11716,"endOffset":11754,"count":0},{"startOffset":11830,"endOffset":11841,"count":2},{"startOffset":11843,"endOffset":11884,"count":2},{"startOffset":11885,"endOffset":11897,"count":2},{"startOffset":11899,"endOffset":12432,"count":0},{"startOffset":12436,"endOffset":12522,"count":15},{"startOffset":12523,"endOffset":12600,"count":0},{"startOffset":12601,"endOffset":12647,"count":0},{"startOffset":12649,"endOffset":12864,"count":0},{"startOffset":12864,"endOffset":13397,"count":15},{"startOffset":13399,"endOffset":13664,"count":9},{"startOffset":13432,"endOffset":13601,"count":0},{"startOffset":13633,"endOffset":13660,"count":8},{"startOffset":13664,"endOffset":13688,"count":15},{"startOffset":13688,"endOffset":13740,"count":0},{"startOffset":13740,"endOffset":13892,"count":15}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14066,"endOffset":14196,"count":1378},{"startOffset":14168,"endOffset":14190,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14316,"endOffset":14936,"count":6},{"startOffset":14430,"endOffset":14531,"count":0},{"startOffset":14558,"endOffset":14570,"count":0},{"startOffset":14848,"endOffset":14860,"count":0},{"startOffset":14887,"endOffset":14934,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14504,"endOffset":14525,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14939,"endOffset":15085,"count":6}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15292,"endOffset":15800,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15882,"endOffset":16386,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16420,"endOffset":16797,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16833,"endOffset":17439,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17470,"endOffset":17514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17600,"endOffset":17644,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17724,"endOffset":17780,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17891,"endOffset":18206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18295,"endOffset":18375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18463,"endOffset":18508,"count":6}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":18516,"endOffset":18766,"count":8},{"startOffset":18716,"endOffset":18764,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":18858,"endOffset":19177,"count":8},{"startOffset":19021,"endOffset":19113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19088,"endOffset":19107,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19204,"endOffset":19360,"count":6}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19398,"endOffset":19748,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":19776,"endOffset":20114,"count":6},{"startOffset":19809,"endOffset":19828,"count":0},{"startOffset":19829,"endOffset":19844,"count":0},{"startOffset":19845,"endOffset":19874,"count":0},{"startOffset":19876,"endOffset":20061,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.resume","ranges":[{"startOffset":20144,"endOffset":20328,"count":11},{"startOffset":20177,"endOffset":20196,"count":0},{"startOffset":20197,"endOffset":20212,"count":0},{"startOffset":20213,"endOffset":20243,"count":0},{"startOffset":20245,"endOffset":20274,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":20356,"endOffset":20542,"count":28},{"startOffset":20390,"endOffset":20409,"count":0},{"startOffset":20410,"endOffset":20425,"count":0},{"startOffset":20426,"endOffset":20456,"count":0},{"startOffset":20458,"endOffset":20487,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20589,"endOffset":20688,"count":6}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20722,"endOffset":20869,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20901,"endOffset":22415,"count":12},{"startOffset":21198,"endOffset":21204,"count":0},{"startOffset":21424,"endOffset":21669,"count":0},{"startOffset":21710,"endOffset":21946,"count":0},{"startOffset":22165,"endOffset":22236,"count":0},{"startOffset":22258,"endOffset":22413,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21499,"endOffset":21584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21890,"endOffset":21938,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22444,"endOffset":22543,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22578,"endOffset":22875,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":22878,"endOffset":23060,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23087,"endOffset":23178,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23211,"endOffset":23277,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23309,"endOffset":23373,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23403,"endOffset":23463,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23500,"endOffset":23776,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":23808,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23903,"endOffset":23962,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23993,"endOffset":24056,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24097,"endOffset":24144,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24180,"endOffset":25092,"count":1372},{"startOffset":24402,"endOffset":24746,"count":0},{"startOffset":24827,"endOffset":24883,"count":0},{"startOffset":24937,"endOffset":24973,"count":0},{"startOffset":25052,"endOffset":25090,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24497,"endOffset":24611,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24618,"endOffset":24697,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25123,"endOffset":25191,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25221,"endOffset":25302,"count":1372}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25495,"endOffset":25599,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25631,"endOffset":26560,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26565,"endOffset":27364,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27367,"endOffset":29467,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29470,"endOffset":32410,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":32439,"endOffset":34035,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":34078,"endOffset":34232,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":34235,"endOffset":34381,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":34383,"endOffset":38314,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":38316,"endOffset":42415,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":42417,"endOffset":42476,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":42502,"endOffset":42689,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":42718,"endOffset":42911,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":42915,"endOffset":44603,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":44605,"endOffset":45015,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":45017,"endOffset":45538,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":45540,"endOffset":46858,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":46860,"endOffset":47356,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":47358,"endOffset":47788,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":47790,"endOffset":49402,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":49513,"endOffset":49578,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":49646,"endOffset":51098,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":51100,"endOffset":53794,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":53861,"endOffset":53923,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":53926,"endOffset":54041,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":54044,"endOffset":55626,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":55655,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":60020,"endOffset":60563,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":60645,"endOffset":60688,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":60764,"endOffset":61057,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":61060,"endOffset":62963,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":63112,"endOffset":63865,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":63894,"endOffset":64784,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":64826,"endOffset":64946,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":64988,"endOffset":65374,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":65378,"endOffset":65461,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":65520,"endOffset":65682,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65904,"endOffset":65940,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":65944,"endOffset":65985,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":66065,"endOffset":66096,"count":1607}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":66100,"endOffset":66136,"count":27}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":66175,"endOffset":66416,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":66442,"endOffset":66540,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":66568,"endOffset":66667,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":66809,"endOffset":67478,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":67517,"endOffset":67758,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":67887,"endOffset":67989,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":67993,"endOffset":68115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5095,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2552,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3214,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4400,"endOffset":4432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4530,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4664,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4886,"endOffset":5093,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1019,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1601,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4706,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5181,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5331,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5661,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5805,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6177,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6720,"endOffset":6834,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6838,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8282,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8713,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9233,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9783,"endOffset":10453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12429,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1609,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1744,"endOffset":1902,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2372,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2633,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3340,"endOffset":3740,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3784,"endOffset":3844,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3881,"endOffset":3964,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3997,"endOffset":4076,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4080,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4200,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4407,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4629,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":4982,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6329,"endOffset":7097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7101,"endOffset":7455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7459,"endOffset":8066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8070,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8326,"endOffset":8774,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":8778,"endOffset":8862,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":8907,"endOffset":8915,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9393,"endOffset":9806,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":9808,"endOffset":10170,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10172,"endOffset":10828,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":10976,"endOffset":11168,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11240,"endOffset":11329,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11423,"endOffset":11980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8492,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":891,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1000,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1011,"endOffset":7061,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7063,"endOffset":7972,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7974,"endOffset":8432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5511,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":592,"endOffset":5509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12389,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1056,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1487,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1817,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2105,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2281,"endOffset":3325,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3327,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3927,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4022,"endOffset":10539,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10541,"endOffset":12342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7354,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":487,"endOffset":798,"count":42},{"startOffset":531,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":908,"endOffset":1785,"count":21},{"startOffset":1077,"endOffset":1081,"count":0},{"startOffset":1182,"endOffset":1259,"count":0},{"startOffset":1620,"endOffset":1727,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1646,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1787,"endOffset":2411,"count":21},{"startOffset":2372,"endOffset":2409,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1847,"endOffset":2316,"count":21},{"startOffset":1889,"endOffset":1910,"count":0},{"startOffset":2159,"endOffset":2181,"count":0},{"startOffset":2196,"endOffset":2256,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2413,"endOffset":2500,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2502,"endOffset":2822,"count":21},{"startOffset":2742,"endOffset":2786,"count":12},{"startOffset":2791,"endOffset":2820,"count":9}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2824,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3173,"endOffset":3863,"count":15}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3865,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5006,"endOffset":5422,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5424,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6165,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6263,"endOffset":6323,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6325,"endOffset":6445,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6480,"endOffset":7262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6588,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2350,"endOffset":4313,"count":26},{"startOffset":2414,"endOffset":2441,"count":0},{"startOffset":3031,"endOffset":4054,"count":23},{"startOffset":3128,"endOffset":3264,"count":6},{"startOffset":3302,"endOffset":3477,"count":1},{"startOffset":3529,"endOffset":3555,"count":0},{"startOffset":3608,"endOffset":3636,"count":0},{"startOffset":3690,"endOffset":3720,"count":0},{"startOffset":3775,"endOffset":3807,"count":0},{"startOffset":3860,"endOffset":3888,"count":0},{"startOffset":3945,"endOffset":3981,"count":0},{"startOffset":4013,"endOffset":4050,"count":0},{"startOffset":4054,"endOffset":4096,"count":3},{"startOffset":4160,"endOffset":4311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4194,"endOffset":4305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5461,"endOffset":5673,"count":12},{"startOffset":5559,"endOffset":5590,"count":0},{"startOffset":5634,"endOffset":5666,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5679,"endOffset":5940,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6014,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6197,"endOffset":6315,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6333,"endOffset":6422,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6455,"endOffset":6586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3251,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":130,"endOffset":178,"count":26}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":292,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2127,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2396,"endOffset":3203,"count":18},{"startOffset":2655,"endOffset":3018,"count":0},{"startOffset":3024,"endOffset":3201,"count":0}],"isBlockCoverage":true}]},{"scriptId":"121","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51364,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1880,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2867,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3771,"endOffset":3993,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3846,"endOffset":3890,"count":140}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3896,"endOffset":3985,"count":144},{"startOffset":3926,"endOffset":3946,"count":39},{"startOffset":3946,"endOffset":3979,"count":105}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6167,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6261,"endOffset":6427,"count":15},{"startOffset":6291,"endOffset":6371,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6504,"endOffset":6604,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6610,"endOffset":6840,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6909,"endOffset":6997,"count":2},{"startOffset":6984,"endOffset":6990,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7003,"endOffset":7169,"count":2},{"startOffset":7113,"endOffset":7163,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7239,"endOffset":7329,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7335,"endOffset":7504,"count":2},{"startOffset":7447,"endOffset":7498,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7573,"endOffset":7676,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7682,"endOffset":7949,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":7962,"endOffset":9958,"count":26},{"startOffset":8335,"endOffset":8356,"count":23},{"startOffset":8362,"endOffset":8390,"count":8},{"startOffset":8418,"endOffset":8447,"count":23},{"startOffset":8453,"endOffset":8481,"count":0},{"startOffset":8656,"endOffset":8728,"count":23},{"startOffset":8729,"endOffset":8765,"count":3},{"startOffset":8924,"endOffset":8954,"count":23},{"startOffset":8956,"endOffset":8984,"count":15},{"startOffset":9073,"endOffset":9105,"count":23},{"startOffset":9107,"endOffset":9137,"count":0},{"startOffset":9367,"endOffset":9384,"count":23},{"startOffset":9416,"endOffset":9445,"count":0},{"startOffset":9446,"endOffset":9476,"count":0},{"startOffset":9525,"endOffset":9684,"count":0},{"startOffset":9836,"endOffset":9855,"count":23},{"startOffset":9857,"endOffset":9956,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10002,"endOffset":10119,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10122,"endOffset":11156,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":11293,"endOffset":11325,"count":9}],"isBlockCoverage":true},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11376,"endOffset":11414,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11458,"endOffset":11714,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":11943,"endOffset":12212,"count":17},{"startOffset":12078,"endOffset":12142,"count":9},{"startOffset":12143,"endOffset":12209,"count":8}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12308,"endOffset":12575,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12579,"endOffset":13645,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":13647,"endOffset":13887,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":13889,"endOffset":14222,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14224,"endOffset":15616,"count":9},{"startOffset":14404,"endOffset":14992,"count":0},{"startOffset":14994,"endOffset":15384,"count":0},{"startOffset":15386,"endOffset":15615,"count":0}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":15618,"endOffset":16215,"count":8},{"startOffset":15800,"endOffset":16088,"count":0},{"startOffset":16090,"endOffset":16214,"count":0}],"isBlockCoverage":true},{"functionName":"canPushMore","ranges":[{"startOffset":16217,"endOffset":16547,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":16549,"endOffset":17493,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":17525,"endOffset":17680,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":17744,"endOffset":18314,"count":2},{"startOffset":18116,"endOffset":18157,"count":0},{"startOffset":18237,"endOffset":18264,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18375,"endOffset":18726,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":18839,"endOffset":19320,"count":55},{"startOffset":18887,"endOffset":18944,"count":32},{"startOffset":18950,"endOffset":18959,"count":38},{"startOffset":18959,"endOffset":19007,"count":17},{"startOffset":19007,"endOffset":19016,"count":6},{"startOffset":19016,"endOffset":19219,"count":11},{"startOffset":19144,"endOffset":19190,"count":0},{"startOffset":19219,"endOffset":19313,"count":0},{"startOffset":19314,"endOffset":19317,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":19417,"endOffset":24092,"count":55},{"startOffset":19601,"endOffset":19619,"count":32},{"startOffset":19619,"endOffset":19686,"count":23},{"startOffset":19650,"endOffset":19686,"count":0},{"startOffset":19851,"endOffset":19900,"count":0},{"startOffset":19921,"endOffset":19956,"count":32},{"startOffset":20142,"endOffset":20188,"count":23},{"startOffset":20189,"endOffset":20341,"count":0},{"startOffset":20343,"endOffset":20520,"count":0},{"startOffset":20629,"endOffset":20662,"count":49},{"startOffset":20664,"endOffset":20739,"count":21},{"startOffset":20739,"endOffset":22034,"count":34},{"startOffset":22034,"endOffset":22075,"count":0},{"startOffset":22077,"endOffset":22462,"count":34},{"startOffset":22462,"endOffset":23164,"count":17},{"startOffset":22849,"endOffset":22901,"count":0},{"startOffset":23128,"endOffset":23160,"count":0},{"startOffset":23164,"endOffset":23194,"count":34},{"startOffset":23194,"endOffset":23219,"count":6},{"startOffset":23219,"endOffset":23242,"count":28},{"startOffset":23242,"endOffset":23358,"count":34},{"startOffset":23339,"endOffset":23342,"count":0},{"startOffset":23358,"endOffset":23540,"count":0},{"startOffset":23540,"endOffset":23926,"count":34},{"startOffset":23863,"endOffset":23896,"count":17},{"startOffset":23904,"endOffset":23922,"count":0},{"startOffset":23926,"endOffset":23947,"count":34},{"startOffset":23947,"endOffset":24005,"count":0},{"startOffset":24007,"endOffset":24075,"count":0},{"startOffset":24075,"endOffset":24091,"count":34}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24095,"endOffset":25057,"count":17},{"startOffset":24193,"endOffset":24200,"count":0},{"startOffset":24252,"endOffset":24274,"count":0},{"startOffset":24298,"endOffset":24485,"count":0},{"startOffset":24551,"endOffset":24753,"count":0}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":25258,"endOffset":25589,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":25591,"endOffset":26263,"count":17},{"startOffset":26182,"endOffset":26224,"count":0},{"startOffset":26225,"endOffset":26240,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":26613,"endOffset":26820,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":26822,"endOffset":28651,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":28922,"endOffset":28988,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29017,"endOffset":33527,"count":18},{"startOffset":29134,"endOffset":29358,"count":3},{"startOffset":29306,"endOffset":29333,"count":0},{"startOffset":29505,"endOffset":29545,"count":0},{"startOffset":29546,"endOffset":29586,"count":0},{"startOffset":29611,"endOffset":29618,"count":0},{"startOffset":29676,"endOffset":29700,"count":0},{"startOffset":33398,"endOffset":33416,"count":0},{"startOffset":33460,"endOffset":33509,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":29770,"endOffset":29996,"count":30},{"startOffset":29861,"endOffset":29992,"count":18}],"isBlockCoverage":true},{"functionName":"onend","ranges":[{"startOffset":30000,"endOffset":30058,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":30103,"endOffset":30995,"count":18},{"startOffset":30306,"endOffset":30358,"count":0},{"startOffset":30880,"endOffset":30906,"count":0},{"startOffset":30907,"endOffset":30973,"count":0},{"startOffset":30981,"endOffset":30991,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":30999,"endOffset":32001,"count":0}],"isBlockCoverage":false},{"functionName":"ondata","ranges":[{"startOffset":32031,"endOffset":32191,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":32313,"endOffset":32724,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":32904,"endOffset":32987,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":33021,"endOffset":33126,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":33163,"endOffset":33229,"count":18}],"isBlockCoverage":true},{"functionName":"pipeOnDrain","ranges":[{"startOffset":33530,"endOffset":34207,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":34238,"endOffset":34939,"count":18},{"startOffset":34425,"endOffset":34437,"count":0},{"startOffset":34452,"endOffset":34668,"count":0},{"startOffset":34784,"endOffset":34796,"count":0},{"startOffset":34866,"endOffset":34879,"count":15}],"isBlockCoverage":true},{"functionName":"Readable.on","ranges":[{"startOffset":35065,"endOffset":36074,"count":174},{"startOffset":35197,"endOffset":35626,"count":23},{"startOffset":35426,"endOffset":35446,"count":0},{"startOffset":35626,"endOffset":36057,"count":151},{"startOffset":35655,"endOffset":36057,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":36169,"endOffset":36876,"count":162},{"startOffset":36369,"endOffset":36755,"count":0},{"startOffset":36779,"endOffset":36814,"count":18},{"startOffset":36816,"endOffset":36859,"count":12}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":36979,"endOffset":37573,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":37576,"endOffset":38278,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":38280,"endOffset":38368,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":38522,"endOffset":39027,"count":23},{"startOffset":38612,"endOffset":38950,"count":17},{"startOffset":38874,"endOffset":38921,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":39030,"endOffset":39203,"count":17}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":39205,"endOffset":39519,"count":17},{"startOffset":39332,"endOffset":39357,"count":9},{"startOffset":39502,"endOffset":39517,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":39548,"endOffset":39860,"count":15}],"isBlockCoverage":true},{"functionName":"flow","ranges":[{"startOffset":39863,"endOffset":40014,"count":34},{"startOffset":39985,"endOffset":40010,"count":32},{"startOffset":40011,"endOffset":40012,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":40198,"endOffset":41219,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":41264,"endOffset":41316,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":41349,"endOffset":41492,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":41495,"endOffset":41744,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":41746,"endOffset":42822,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43041,"endOffset":43430,"count":28},{"startOffset":43364,"endOffset":43379,"count":24},{"startOffset":43380,"endOffset":43398,"count":16},{"startOffset":43399,"endOffset":43423,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":43436,"endOffset":43566,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43648,"endOffset":43712,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43794,"endOffset":44002,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44090,"endOffset":44156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44237,"endOffset":44319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44401,"endOffset":44461,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44472,"endOffset":44581,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44657,"endOffset":44711,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44791,"endOffset":44879,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44957,"endOffset":45042,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45111,"endOffset":45195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45240,"endOffset":45324,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45395,"endOffset":45482,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45488,"endOffset":45777,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45852,"endOffset":45940,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46081,"endOffset":46126,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46206,"endOffset":46264,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46270,"endOffset":46431,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":46737,"endOffset":49189,"count":6},{"startOffset":46832,"endOffset":49188,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":49191,"endOffset":49417,"count":21}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":49419,"endOffset":50312,"count":21},{"startOffset":49605,"endOffset":49626,"count":15},{"startOffset":49628,"endOffset":50310,"count":15},{"startOffset":49713,"endOffset":49746,"count":6},{"startOffset":49748,"endOffset":49802,"count":6},{"startOffset":49802,"endOffset":50306,"count":9},{"startOffset":50265,"endOffset":50300,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":50314,"endOffset":50474,"count":6}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":50492,"endOffset":50561,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":50626,"endOffset":50790,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":50811,"endOffset":50945,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":50965,"endOffset":51099,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":51118,"endOffset":51362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1741,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":570,"endOffset":729,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":764,"endOffset":1075,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1120,"endOffset":1739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":287,"endOffset":454,"count":54},{"startOffset":385,"endOffset":408,"count":0},{"startOffset":445,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":456,"endOffset":586,"count":60},{"startOffset":523,"endOffset":555,"count":16},{"startOffset":556,"endOffset":583,"count":44}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":588,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":801,"endOffset":1234,"count":54},{"startOffset":948,"endOffset":1160,"count":0}],"isBlockCoverage":true}]},{"scriptId":"124","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5141,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2172,"endOffset":2422,"count":8},{"startOffset":2272,"endOffset":2405,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2633,"endOffset":2832,"count":8}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3155,"endOffset":3540,"count":7909},{"startOffset":3212,"endOffset":3223,"count":0},{"startOffset":3259,"endOffset":3410,"count":0},{"startOffset":3440,"endOffset":3494,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3817,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4219,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4514,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4819,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4975,"endOffset":5090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4341,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":4316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33628,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2779,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3852,"endOffset":4074,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3927,"endOffset":3971,"count":41}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3977,"endOffset":4066,"count":154},{"startOffset":4007,"endOffset":4027,"count":22},{"startOffset":4027,"endOffset":4060,"count":132}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7038,"endOffset":7116,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7122,"endOffset":7288,"count":15},{"startOffset":7152,"endOffset":7232,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7358,"endOffset":7458,"count":75},{"startOffset":7409,"endOffset":7443,"count":3},{"startOffset":7444,"endOffset":7455,"count":72}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7464,"endOffset":7737,"count":1},{"startOffset":7502,"endOffset":7564,"count":0},{"startOffset":7581,"endOffset":7642,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7814,"endOffset":7914,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7920,"endOffset":8150,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8291,"endOffset":8368,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8374,"endOffset":8538,"count":1372},{"startOffset":8439,"endOffset":8482,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8725,"endOffset":8825,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8831,"endOffset":9028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9098,"endOffset":9176,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9182,"endOffset":9349,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9362,"endOffset":11664,"count":26},{"startOffset":9613,"endOffset":9634,"count":23},{"startOffset":9640,"endOffset":9668,"count":8},{"startOffset":9696,"endOffset":9725,"count":23},{"startOffset":9731,"endOffset":9759,"count":0},{"startOffset":9977,"endOffset":10049,"count":23},{"startOffset":10050,"endOffset":10086,"count":3},{"startOffset":10104,"endOffset":10138,"count":23},{"startOffset":10140,"endOffset":10171,"count":11},{"startOffset":10246,"endOffset":10276,"count":23},{"startOffset":10278,"endOffset":10306,"count":15},{"startOffset":10395,"endOffset":10427,"count":23},{"startOffset":10429,"endOffset":10459,"count":0},{"startOffset":10690,"endOffset":10715,"count":23},{"startOffset":10716,"endOffset":10722,"count":3},{"startOffset":10754,"endOffset":10783,"count":0},{"startOffset":10784,"endOffset":10814,"count":0},{"startOffset":10863,"endOffset":11072,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11666,"endOffset":11830,"count":26}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":11868,"endOffset":11997,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12093,"endOffset":12204,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12253,"endOffset":12439,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12442,"endOffset":13548,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13630,"endOffset":13834,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":13935,"endOffset":14003,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14006,"endOffset":15404,"count":1372},{"startOffset":14110,"endOffset":14137,"count":0},{"startOffset":14182,"endOffset":14227,"count":0},{"startOffset":14366,"endOffset":14389,"count":0},{"startOffset":14396,"endOffset":14516,"count":0},{"startOffset":14605,"endOffset":14689,"count":0},{"startOffset":14695,"endOffset":15015,"count":0},{"startOffset":15071,"endOffset":15120,"count":0},{"startOffset":15166,"endOffset":15216,"count":0},{"startOffset":15229,"endOffset":15320,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15433,"endOffset":15624,"count":1372},{"startOffset":15488,"endOffset":15521,"count":0},{"startOffset":15523,"endOffset":15568,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15653,"endOffset":15751,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":15782,"endOffset":16020,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16063,"endOffset":16388,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16578,"endOffset":17782,"count":1372},{"startOffset":16695,"endOffset":16698,"count":0},{"startOffset":16829,"endOffset":17236,"count":0},{"startOffset":17296,"endOffset":17335,"count":0},{"startOffset":17526,"endOffset":17547,"count":0},{"startOffset":17562,"endOffset":17600,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":17784,"endOffset":18221,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":18223,"endOffset":18608,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":18610,"endOffset":21216,"count":1372},{"startOffset":18727,"endOffset":18801,"count":0},{"startOffset":18895,"endOffset":18917,"count":0},{"startOffset":19066,"endOffset":19680,"count":0},{"startOffset":19731,"endOffset":19772,"count":0},{"startOffset":19849,"endOffset":19870,"count":0},{"startOffset":20304,"endOffset":20424,"count":0},{"startOffset":20508,"endOffset":20567,"count":0},{"startOffset":20585,"endOffset":21151,"count":0},{"startOffset":21157,"endOffset":21210,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21218,"endOffset":21405,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":21407,"endOffset":21915,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":21987,"endOffset":22538,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":22604,"endOffset":24274,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":24304,"endOffset":24473,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":24537,"endOffset":26177,"count":25},{"startOffset":24642,"endOffset":24702,"count":0},{"startOffset":24744,"endOffset":24789,"count":0},{"startOffset":24824,"endOffset":24931,"count":0},{"startOffset":24999,"endOffset":25045,"count":0},{"startOffset":25058,"endOffset":25084,"count":0},{"startOffset":25140,"endOffset":25558,"count":17},{"startOffset":25558,"endOffset":25752,"count":8},{"startOffset":25603,"endOffset":25658,"count":0},{"startOffset":25704,"endOffset":25752,"count":0},{"startOffset":25786,"endOffset":26159,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":26180,"endOffset":26609,"count":34}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":26611,"endOffset":27243,"count":17},{"startOffset":26695,"endOffset":26776,"count":0},{"startOffset":26809,"endOffset":26917,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":27245,"endOffset":27769,"count":17},{"startOffset":27342,"endOffset":27359,"count":0},{"startOffset":27587,"endOffset":27642,"count":0},{"startOffset":27676,"endOffset":27767,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27541,"endOffset":27578,"count":17}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":27771,"endOffset":28270,"count":17},{"startOffset":27903,"endOffset":28264,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27975,"endOffset":28137,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":28272,"endOffset":28915,"count":17},{"startOffset":28820,"endOffset":28848,"count":2},{"startOffset":28878,"endOffset":28909,"count":15}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":28917,"endOffset":29235,"count":17},{"startOffset":29022,"endOffset":29234,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29319,"endOffset":29422,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29470,"endOffset":29576,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29582,"endOffset":29832,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29879,"endOffset":30282,"count":21}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":30288,"endOffset":30422,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30477,"endOffset":30595,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30652,"endOffset":30772,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30825,"endOffset":30920,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30972,"endOffset":31088,"count":6},{"startOffset":31074,"endOffset":31081,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31144,"endOffset":31297,"count":18},{"startOffset":31283,"endOffset":31290,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31357,"endOffset":31454,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31507,"endOffset":31600,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31653,"endOffset":31743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31812,"endOffset":31909,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31968,"endOffset":32225,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":32303,"endOffset":32583,"count":21},{"startOffset":32448,"endOffset":32485,"count":0},{"startOffset":32487,"endOffset":32534,"count":0}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":32671,"endOffset":32703,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":32754,"endOffset":32792,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":32857,"endOffset":33021,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33042,"endOffset":33176,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":33196,"endOffset":33303,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33347,"endOffset":33626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7123,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5500,"count":11},{"startOffset":3990,"endOffset":4020,"count":0},{"startOffset":4230,"endOffset":4294,"count":8},{"startOffset":4295,"endOffset":4301,"count":3},{"startOffset":4338,"endOffset":4717,"count":0},{"startOffset":4987,"endOffset":5165,"count":8},{"startOffset":5044,"endOffset":5080,"count":0},{"startOffset":5133,"endOffset":5161,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5502,"endOffset":5946,"count":11},{"startOffset":5563,"endOffset":5581,"count":0},{"startOffset":5583,"endOffset":5880,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5601,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5948,"endOffset":6029,"count":11},{"startOffset":6000,"endOffset":6027,"count":0}],"isBlockCoverage":true},{"functionName":"Transform._transform","ranges":[{"startOffset":6101,"endOffset":6196,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6228,"endOffset":6965,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6996,"endOffset":7121,"count":9},{"startOffset":7032,"endOffset":7119,"count":0}],"isBlockCoverage":true}]},{"scriptId":"129","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":11},{"startOffset":1603,"endOffset":1635,"count":0}],"isBlockCoverage":true},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":219,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1138,"endOffset":1343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7170,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1057,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1201,"endOffset":2056,"count":1372},{"startOffset":1301,"endOffset":1468,"count":0},{"startOffset":1473,"endOffset":1487,"count":0},{"startOffset":1492,"endOffset":1556,"count":0},{"startOffset":1644,"endOffset":1706,"count":0},{"startOffset":1711,"endOffset":1723,"count":0},{"startOffset":1728,"endOffset":1741,"count":0},{"startOffset":1746,"endOffset":1761,"count":0},{"startOffset":1766,"endOffset":1830,"count":0},{"startOffset":1835,"endOffset":2050,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2058,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2749,"endOffset":2987,"count":1372}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2989,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3630,"endOffset":3835,"count":1372}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3837,"endOffset":4144,"count":1372},{"startOffset":4004,"endOffset":4059,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4146,"endOffset":6085,"count":6},{"startOffset":4340,"endOffset":4360,"count":0},{"startOffset":4362,"endOffset":5102,"count":0},{"startOffset":5123,"endOffset":5140,"count":0},{"startOffset":5471,"endOffset":5664,"count":0},{"startOffset":5749,"endOffset":5816,"count":0},{"startOffset":5861,"endOffset":5901,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6087,"endOffset":6963,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10086,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":808,"endOffset":1217,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":888,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":930,"endOffset":1047,"count":10}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1099,"count":10},{"startOffset":1087,"endOffset":1092,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1103,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1161,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1219,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1426,"endOffset":1794,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1796,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1848,"endOffset":2176,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2258,"endOffset":2492,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2496,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2947,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":3119,"endOffset":3318,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3322,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3369,"endOffset":3709,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3713,"endOffset":4052,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":4074,"endOffset":4215,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4226,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4415,"endOffset":4500,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4504,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4545,"endOffset":4638,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4642,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4683,"endOffset":4727,"count":7}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4731,"endOffset":4743,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4747,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4874,"endOffset":5140,"count":10},{"startOffset":4952,"endOffset":4967,"count":0},{"startOffset":5000,"endOffset":5027,"count":0},{"startOffset":5029,"endOffset":5109,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5142,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5234,"endOffset":5328,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5330,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5554,"endOffset":5696,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5698,"endOffset":6223,"count":5},{"startOffset":5854,"endOffset":5923,"count":0},{"startOffset":5925,"endOffset":6222,"count":0}],"isBlockCoverage":true},{"functionName":"TracingChannel","ranges":[{"startOffset":6250,"endOffset":6475,"count":1},{"startOffset":6321,"endOffset":6471,"count":5}],"isBlockCoverage":true},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6479,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6693,"endOffset":6845,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6849,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7086,"endOffset":7597,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7601,"endOffset":8787,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8791,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9888,"endOffset":9976,"count":1}],"isBlockCoverage":true}]},{"scriptId":"133","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16722,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2600,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2863,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3205,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3628,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4047,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4156,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4388,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4531,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4839,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5336,"endOffset":5584,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5936,"endOffset":9533,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10015,"endOffset":10217,"count":16},{"startOffset":10079,"endOffset":10146,"count":0},{"startOffset":10180,"endOffset":10215,"count":0}],"isBlockCoverage":true},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10278,"endOffset":11304,"count":16},{"startOffset":10427,"endOffset":10523,"count":0},{"startOffset":10640,"endOffset":10680,"count":0},{"startOffset":10682,"endOffset":11302,"count":0}],"isBlockCoverage":true},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11592,"endOffset":12856,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12944,"endOffset":13216,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13218,"endOffset":13283,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13285,"endOffset":13885,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13887,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14731,"endOffset":15847,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15884,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16006,"endOffset":16116,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16118,"endOffset":16433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":675,"endOffset":748,"count":16}],"isBlockCoverage":true},{"functionName":"PerformanceEntry","ranges":[{"startOffset":777,"endOffset":1132,"count":16},{"startOffset":962,"endOffset":1012,"count":0}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":1136,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1240,"endOffset":1355,"count":16}],"isBlockCoverage":true},{"functionName":"get startTime","ranges":[{"startOffset":1359,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1478,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1594,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1842,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2286,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2539,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2653,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2908,"endOffset":3112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6478,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2542,"endOffset":2995,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3153,"endOffset":6149,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6151,"endOffset":6424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":32},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"137","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-watcher/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15081,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":15076,"count":1}],"isBlockCoverage":true},{"functionName":"./src/BaseWatchPlugin.ts","ranges":[{"startOffset":361,"endOffset":1204,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":692,"endOffset":1142,"count":0}],"isBlockCoverage":true},{"functionName":"./src/JestHooks.ts","ranges":[{"startOffset":1243,"endOffset":2786,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1574,"endOffset":2730,"count":1}],"isBlockCoverage":true},{"functionName":"JestHooks","ranges":[{"startOffset":1635,"endOffset":2561,"count":1}],"isBlockCoverage":true},{"functionName":"onFileChange","ranges":[{"startOffset":1809,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"onTestRunComplete","ranges":[{"startOffset":1898,"endOffset":1965,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRunTestSuite","ranges":[{"startOffset":1993,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"onFileChange","ranges":[{"startOffset":2111,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"onTestRunComplete","ranges":[{"startOffset":2228,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRunTestSuite","ranges":[{"startOffset":2361,"endOffset":2550,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2466,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"isUsed","ranges":[{"startOffset":2564,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"getSubscriber","ranges":[{"startOffset":2631,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitter","ranges":[{"startOffset":2684,"endOffset":2728,"count":1}],"isBlockCoverage":true},{"functionName":"./src/PatternPrompt.ts","ranges":[{"startOffset":2829,"endOffset":5055,"count":1}],"isBlockCoverage":true},{"functionName":"_ansiEscapes","ranges":[{"startOffset":2968,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":3128,"endOffset":3268,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":3216,"endOffset":3250,"count":4}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":3269,"endOffset":3395,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":3343,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3396,"endOffset":3481,"count":1},{"startOffset":3458,"endOffset":3461,"count":0}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":3734,"endOffset":4028,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4078,"endOffset":5010,"count":0}],"isBlockCoverage":true},{"functionName":"./src/TestWatcher.ts","ranges":[{"startOffset":5096,"endOffset":6146,"count":1}],"isBlockCoverage":true},{"functionName":"_emittery","ranges":[{"startOffset":5235,"endOffset":5384,"count":1}],"isBlockCoverage":true},{"functionName":"_emittery","ranges":[{"startOffset":5332,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":5385,"endOffset":5470,"count":1},{"startOffset":5447,"endOffset":5450,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5663,"endOffset":6103,"count":1}],"isBlockCoverage":true},{"functionName":"TestWatcher","ranges":[{"startOffset":5738,"endOffset":5879,"count":1}],"isBlockCoverage":true},{"functionName":"setState","ranges":[{"startOffset":5882,"endOffset":5990,"count":0}],"isBlockCoverage":false},{"functionName":"isInterrupted","ranges":[{"startOffset":5993,"endOffset":6049,"count":1371}],"isBlockCoverage":true},{"functionName":"isWatchMode","ranges":[{"startOffset":6052,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"./src/constants.ts","ranges":[{"startOffset":6185,"endOffset":6874,"count":1},{"startOffset":6726,"endOffset":6732,"count":0}],"isBlockCoverage":true},{"functionName":"./src/index.ts","ranges":[{"startOffset":6909,"endOffset":9276,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7246,"endOffset":7300,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7379,"endOffset":7427,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7511,"endOffset":7563,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7640,"endOffset":7685,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7767,"endOffset":7817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8275,"endOffset":8614,"count":1},{"startOffset":8341,"endOffset":8348,"count":0},{"startOffset":8412,"endOffset":8419,"count":0},{"startOffset":8441,"endOffset":8476,"count":0},{"startOffset":8478,"endOffset":8485,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8557,"endOffset":8606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8822,"endOffset":9179,"count":2},{"startOffset":8888,"endOffset":8895,"count":0},{"startOffset":8959,"endOffset":8966,"count":0},{"startOffset":8988,"endOffset":9032,"count":0},{"startOffset":9034,"endOffset":9041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9113,"endOffset":9171,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":9182,"endOffset":9267,"count":5},{"startOffset":9248,"endOffset":9264,"count":0}],"isBlockCoverage":true},{"functionName":"./src/lib/Prompt.ts","ranges":[{"startOffset":9316,"endOffset":12134,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9728,"endOffset":12096,"count":0}],"isBlockCoverage":true},{"functionName":"./src/lib/patternModeHelpers.ts","ranges":[{"startOffset":12186,"endOffset":13728,"count":1}],"isBlockCoverage":true},{"functionName":"_ansiEscapes","ranges":[{"startOffset":12406,"endOffset":12565,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":12566,"endOffset":12706,"count":0}],"isBlockCoverage":false},{"functionName":"_stringLength","ranges":[{"startOffset":12707,"endOffset":12869,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":12870,"endOffset":12955,"count":0}],"isBlockCoverage":false},{"functionName":"printPatternCaret","ranges":[{"startOffset":13148,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"printRestoredPatternCaret","ranges":[{"startOffset":13401,"endOffset":13719,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":13950,"endOffset":14678,"count":9},{"startOffset":14142,"endOffset":14197,"count":1},{"startOffset":14197,"endOffset":14677,"count":8}],"isBlockCoverage":true}]},{"scriptId":"139","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13022,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":369,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"assertListener","ranges":[{"startOffset":591,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"getListeners","ranges":[{"startOffset":726,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"getEventProducers","ranges":[{"startOffset":891,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1197,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"iterator","ranges":[{"startOffset":1609,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2991,"endOffset":3512,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaEvent","ranges":[{"startOffset":3534,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"emitMetaEvent","ranges":[{"startOffset":3610,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":3852,"endOffset":4932,"count":0}],"isBlockCoverage":false},{"functionName":"get isDebugEnabled","ranges":[{"startOffset":4942,"endOffset":5159,"count":0}],"isBlockCoverage":false},{"functionName":"set isDebugEnabled","ranges":[{"startOffset":5169,"endOffset":5237,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":5240,"endOffset":6362,"count":1}],"isBlockCoverage":true},{"functionName":"Emittery.debug.logger","ranges":[{"startOffset":5592,"endOffset":6354,"count":0}],"isBlockCoverage":false},{"functionName":"logIfDebugEnabled","ranges":[{"startOffset":6365,"endOffset":6541,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":6544,"endOffset":7146,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":7149,"endOffset":7718,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":7721,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"events","ranges":[{"startOffset":7926,"endOffset":8132,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":8135,"endOffset":9014,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":9017,"endOffset":9864,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":9867,"endOffset":10108,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":10111,"endOffset":10151,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":10154,"endOffset":10360,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":10363,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":11372,"endOffset":12098,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":12101,"endOffset":12605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12690,"endOffset":12714,"count":14}],"isBlockCoverage":true}]},{"scriptId":"140","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/emittery/maps.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"141","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/yargs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1455,"count":1}],"isBlockCoverage":true},{"functionName":"Argv","ranges":[{"startOffset":272,"endOffset":462,"count":2}],"isBlockCoverage":true},{"functionName":"defineGetter","ranges":[{"startOffset":464,"endOffset":612,"count":14}],"isBlockCoverage":true},{"functionName":"lookupGetter","ranges":[{"startOffset":613,"endOffset":768,"count":2}],"isBlockCoverage":true},{"functionName":"singletonify","ranges":[{"startOffset":1010,"endOffset":1454,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1145,"endOffset":1450,"count":178},{"startOffset":1178,"endOffset":1241,"count":2},{"startOffset":1241,"endOffset":1446,"count":176},{"startOffset":1284,"endOffset":1331,"count":170},{"startOffset":1331,"endOffset":1446,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1370,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62178,"count":1},{"startOffset":60890,"endOffset":60897,"count":0},{"startOffset":60924,"endOffset":60931,"count":0},{"startOffset":60960,"endOffset":60974,"count":0},{"startOffset":61221,"endOffset":61244,"count":0},{"startOffset":61482,"endOffset":61489,"count":0},{"startOffset":61515,"endOffset":61522,"count":0},{"startOffset":61549,"endOffset":61592,"count":0},{"startOffset":61676,"endOffset":61831,"count":0}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":59,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":186,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":926,"endOffset":1377,"count":428},{"startOffset":1037,"endOffset":1082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1154,"endOffset":1372,"count":725},{"startOffset":1211,"endOffset":1235,"count":0},{"startOffset":1249,"endOffset":1310,"count":304},{"startOffset":1310,"endOffset":1371,"count":421}],"isBlockCoverage":true},{"functionName":"h","ranges":[{"startOffset":1437,"endOffset":2173,"count":430},{"startOffset":1498,"endOffset":1530,"count":2},{"startOffset":1530,"endOffset":1550,"count":428},{"startOffset":1583,"endOffset":1607,"count":443},{"startOffset":1609,"endOffset":1617,"count":20},{"startOffset":1626,"endOffset":1636,"count":5},{"startOffset":1660,"endOffset":1762,"count":0},{"startOffset":1813,"endOffset":1894,"count":0},{"startOffset":2141,"endOffset":2172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914,"endOffset":2003,"count":421},{"startOffset":1983,"endOffset":1997,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1974,"count":1017},{"startOffset":1965,"endOffset":1974,"count":596}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2026,"endOffset":2138,"count":304},{"startOffset":2046,"endOffset":2053,"count":76},{"startOffset":2053,"endOffset":2118,"count":228},{"startOffset":2118,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2092,"endOffset":2109,"count":242},{"startOffset":2100,"endOffset":2109,"count":14}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":2173,"endOffset":2244,"count":649},{"startOffset":2210,"endOffset":2218,"count":2},{"startOffset":2218,"endOffset":2243,"count":647},{"startOffset":2227,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":2244,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":2360,"endOffset":2421,"count":7},{"startOffset":2393,"endOffset":2420,"count":0}],"isBlockCoverage":true},{"functionName":"d","ranges":[{"startOffset":2421,"endOffset":2472,"count":5}],"isBlockCoverage":true},{"functionName":"u","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":2528,"endOffset":2564,"count":21}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":2564,"endOffset":2656,"count":20}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":2583,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2624,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":2656,"endOffset":2727,"count":3},{"startOffset":2701,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"y","ranges":[{"startOffset":2727,"endOffset":2765,"count":2}],"isBlockCoverage":true},{"functionName":"hideBin","ranges":[{"startOffset":2809,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":2866,"endOffset":3163,"count":1283},{"startOffset":2896,"endOffset":2900,"count":0},{"startOffset":2901,"endOffset":2970,"count":0},{"startOffset":2993,"endOffset":3003,"count":0},{"startOffset":3014,"endOffset":3110,"count":0},{"startOffset":3123,"endOffset":3125,"count":0},{"startOffset":3133,"endOffset":3143,"count":0},{"startOffset":3145,"endOffset":3153,"count":0}],"isBlockCoverage":true},{"functionName":"O","ranges":[{"startOffset":3163,"endOffset":3524,"count":63},{"startOffset":3196,"endOffset":3250,"count":0},{"startOffset":3260,"endOffset":3264,"count":0},{"startOffset":3265,"endOffset":3334,"count":0},{"startOffset":3357,"endOffset":3367,"count":0},{"startOffset":3378,"endOffset":3473,"count":0},{"startOffset":3486,"endOffset":3498,"count":0},{"startOffset":3500,"endOffset":3510,"count":0}],"isBlockCoverage":true},{"functionName":"w","ranges":[{"startOffset":3532,"endOffset":3601,"count":2}],"isBlockCoverage":true},{"functionName":"addMiddleware","ranges":[{"startOffset":3601,"endOffset":4067,"count":1},{"startOffset":3727,"endOffset":3930,"count":0}],"isBlockCoverage":true},{"functionName":"addCoerceMiddleware","ranges":[{"startOffset":4067,"endOffset":4295,"count":0}],"isBlockCoverage":false},{"functionName":"getMiddleware","ranges":[{"startOffset":4295,"endOffset":4340,"count":2}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":4340,"endOffset":4395,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":4395,"endOffset":4471,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":4471,"endOffset":4545,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4531,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":4546,"endOffset":4853,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4583,"endOffset":4848,"count":2},{"startOffset":4622,"endOffset":4644,"count":1},{"startOffset":4644,"endOffset":4680,"count":0},{"startOffset":4680,"endOffset":4688,"count":1},{"startOffset":4688,"endOffset":4768,"count":0},{"startOffset":4768,"endOffset":4795,"count":1},{"startOffset":4795,"endOffset":4827,"count":0},{"startOffset":4827,"endOffset":4846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4703,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4738,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4804,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":4853,"endOffset":4982,"count":2},{"startOffset":4918,"endOffset":4924,"count":1},{"startOffset":4936,"endOffset":4954,"count":0},{"startOffset":4960,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":4871,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4945,"endOffset":4952,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":5013,"endOffset":5177,"count":2}],"isBlockCoverage":true},{"functionName":"addDirectory","ranges":[{"startOffset":5177,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"addHandler","ranges":[{"startOffset":5536,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandHandlers","ranges":[{"startOffset":6668,"endOffset":6710,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":6710,"endOffset":6793,"count":1}],"isBlockCoverage":true},{"functionName":"hasDefaultCommand","ranges":[{"startOffset":6793,"endOffset":6841,"count":1}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":6841,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"applyBuilderUpdateUsageAndParse","ranges":[{"startOffset":7291,"endOffset":7841,"count":0}],"isBlockCoverage":false},{"functionName":"parseAndUpdateUsage","ranges":[{"startOffset":7841,"endOffset":8259,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":8259,"endOffset":8413,"count":0}],"isBlockCoverage":false},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":8413,"endOffset":8591,"count":0}],"isBlockCoverage":false},{"functionName":"handleValidationAndGetResult","ranges":[{"startOffset":8591,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddlewareAndGetResult","ranges":[{"startOffset":9288,"endOffset":9649,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":9649,"endOffset":10069,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":10069,"endOffset":10195,"count":0}],"isBlockCoverage":false},{"functionName":"cmdToParseOptions","ranges":[{"startOffset":10195,"endOffset":10508,"count":0}],"isBlockCoverage":false},{"functionName":"postProcessPositionals","ranges":[{"startOffset":10508,"endOffset":11522,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaulted","ranges":[{"startOffset":11522,"endOffset":11691,"count":0}],"isBlockCoverage":false},{"functionName":"isInConfigs","ranges":[{"startOffset":11691,"endOffset":11892,"count":0}],"isBlockCoverage":false},{"functionName":"runDefaultBuilderOn","ranges":[{"startOffset":11892,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12303,"endOffset":12629,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":12629,"endOffset":12712,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":12712,"endOffset":12848,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":12848,"endOffset":12959,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":12959,"endOffset":13106,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":13106,"endOffset":13213,"count":0}],"isBlockCoverage":false},{"functionName":"k","ranges":[{"startOffset":13214,"endOffset":13296,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":13296,"endOffset":13337,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":13337,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":13525,"endOffset":13565,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":13565,"endOffset":21218,"count":2}],"isBlockCoverage":true},{"functionName":"P.n.failFn","ranges":[{"startOffset":13618,"endOffset":13640,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.showHelpOnFail","ranges":[{"startOffset":13681,"endOffset":13806,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.fail","ranges":[{"startOffset":13823,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.usage","ranges":[{"startOffset":14295,"endOffset":14351,"count":1},{"startOffset":14310,"endOffset":14324,"count":0}],"isBlockCoverage":true},{"functionName":"P.n.getUsage","ranges":[{"startOffset":14363,"endOffset":14368,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getUsageDisabled","ranges":[{"startOffset":14388,"endOffset":14393,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getPositionalGroupName","ranges":[{"startOffset":14419,"endOffset":14440,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.example","ranges":[{"startOffset":14460,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.command","ranges":[{"startOffset":14506,"endOffset":14584,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getCommands","ranges":[{"startOffset":14599,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.describe","ranges":[{"startOffset":14625,"endOffset":14766,"count":108},{"startOffset":14655,"endOffset":14689,"count":0},{"startOffset":14708,"endOffset":14758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14667,"endOffset":14687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14733,"endOffset":14756,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getDescriptions","ranges":[{"startOffset":14785,"endOffset":14790,"count":104}],"isBlockCoverage":true},{"functionName":"P.n.epilog","ranges":[{"startOffset":14809,"endOffset":14823,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.wrap","ranges":[{"startOffset":14842,"endOffset":14855,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.getWrap","ranges":[{"startOffset":14866,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":15037,"endOffset":15258,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":15264,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":15372,"endOffset":15575,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.deferY18nLookup","ranges":[{"startOffset":15593,"endOffset":15599,"count":5}],"isBlockCoverage":true},{"functionName":"P.n.help","ranges":[{"startOffset":15607,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.cacheHelpMessage","ranges":[{"startOffset":20057,"endOffset":20082,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.clearCachedHelpMessage","ranges":[{"startOffset":20108,"endOffset":20128,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.hasCachedHelpMessage","ranges":[{"startOffset":20152,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.showHelp","ranges":[{"startOffset":20185,"endOffset":20295,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.functionDescription","ranges":[{"startOffset":20318,"endOffset":20399,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.stringifiedValues","ranges":[{"startOffset":20420,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.version","ranges":[{"startOffset":20577,"endOffset":20585,"count":4}],"isBlockCoverage":true},{"functionName":"P.n.showVersion","ranges":[{"startOffset":20600,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.reset","ranges":[{"startOffset":20712,"endOffset":20788,"count":0}],"isBlockCoverage":false},{"functionName":"P.n.freeze","ranges":[{"startOffset":20816,"endOffset":20939,"count":1}],"isBlockCoverage":true},{"functionName":"P.n.unfreeze","ranges":[{"startOffset":20951,"endOffset":21215,"count":1},{"startOffset":20987,"endOffset":21105,"count":0}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":21218,"endOffset":21257,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":21257,"endOffset":21299,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":21299,"endOffset":21334,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":21342,"endOffset":21745,"count":2},{"startOffset":21629,"endOffset":21647,"count":0},{"startOffset":21709,"endOffset":21727,"count":0},{"startOffset":21741,"endOffset":21744,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCompletion","ranges":[{"startOffset":21745,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"commandCompletions","ranges":[{"startOffset":22183,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"optionCompletions","ranges":[{"startOffset":22504,"endOffset":22928,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromOptionsCompletions","ranges":[{"startOffset":22928,"endOffset":23100,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromPositionalsCompletions","ranges":[{"startOffset":23100,"endOffset":23519,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousArgChoices","ranges":[{"startOffset":23519,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"previousArgHasChoices","ranges":[{"startOffset":23941,"endOffset":24034,"count":0}],"isBlockCoverage":false},{"functionName":"argsContainKey","ranges":[{"startOffset":24034,"endOffset":24233,"count":0}],"isBlockCoverage":false},{"functionName":"completeOptionKey","ranges":[{"startOffset":24233,"endOffset":24764,"count":0}],"isBlockCoverage":false},{"functionName":"customCompletion","ranges":[{"startOffset":24764,"endOffset":25283,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":25283,"endOffset":25489,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":25489,"endOffset":27133,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunction","ranges":[{"startOffset":27133,"endOffset":27185,"count":0}],"isBlockCoverage":false},{"functionName":"setParsed","ranges":[{"startOffset":27185,"endOffset":27221,"count":1}],"isBlockCoverage":true},{"functionName":"N","ranges":[{"startOffset":27222,"endOffset":27674,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":28887,"endOffset":29895,"count":2}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":29895,"endOffset":30205,"count":2},{"startOffset":29985,"endOffset":30031,"count":0},{"startOffset":30038,"endOffset":30050,"count":0},{"startOffset":30080,"endOffset":30082,"count":0}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":30205,"endOffset":30243,"count":2}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":30243,"endOffset":30529,"count":0}],"isBlockCoverage":false},{"functionName":"showHidden","ranges":[{"startOffset":30529,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":30579,"endOffset":30711,"count":11}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":30711,"endOffset":30805,"count":21}],"isBlockCoverage":true},{"functionName":"boolean","ranges":[{"startOffset":30805,"endOffset":30903,"count":59}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":30903,"endOffset":31275,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30987,"endOffset":31262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30997,"endOffset":31020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31023,"endOffset":31195,"count":1},{"startOffset":31069,"endOffset":31192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31198,"endOffset":31260,"count":0}],"isBlockCoverage":false},{"functionName":"choices","ranges":[{"startOffset":31275,"endOffset":31413,"count":2}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":31413,"endOffset":32093,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":32093,"endOffset":32209,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":32209,"endOffset":32699,"count":0}],"isBlockCoverage":false},{"functionName":"completion","ranges":[{"startOffset":32699,"endOffset":32998,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":32998,"endOffset":33198,"count":0}],"isBlockCoverage":false},{"functionName":"commands","ranges":[{"startOffset":33198,"endOffset":33253,"count":0}],"isBlockCoverage":false},{"functionName":"commandDir","ranges":[{"startOffset":33253,"endOffset":33439,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":33439,"endOffset":33533,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":33533,"endOffset":33907,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":33907,"endOffset":33950,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":33950,"endOffset":34210,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":34210,"endOffset":34593,"count":0}],"isBlockCoverage":false},{"functionName":"demandOption","ranges":[{"startOffset":34593,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateOption","ranges":[{"startOffset":34743,"endOffset":34868,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":34868,"endOffset":34997,"count":108}],"isBlockCoverage":true},{"functionName":"detectLocale","ranges":[{"startOffset":34997,"endOffset":35077,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":35077,"endOffset":35209,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":35209,"endOffset":35293,"count":1}],"isBlockCoverage":true},{"functionName":"epilog","ranges":[{"startOffset":35293,"endOffset":35327,"count":0}],"isBlockCoverage":false},{"functionName":"example","ranges":[{"startOffset":35327,"endOffset":35484,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":35484,"endOffset":35573,"count":0}],"isBlockCoverage":false},{"functionName":"exitProcess","ranges":[{"startOffset":35573,"endOffset":35655,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":35655,"endOffset":35852,"count":0}],"isBlockCoverage":false},{"functionName":"getAliases","ranges":[{"startOffset":35852,"endOffset":35907,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":35907,"endOffset":36099,"count":0}],"isBlockCoverage":false},{"functionName":"getDemandedOptions","ranges":[{"startOffset":36099,"endOffset":36166,"count":1}],"isBlockCoverage":true},{"functionName":"getDemandedCommands","ranges":[{"startOffset":36166,"endOffset":36235,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecatedOptions","ranges":[{"startOffset":36235,"endOffset":36306,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectLocale","ranges":[{"startOffset":36306,"endOffset":36345,"count":0}],"isBlockCoverage":false},{"functionName":"getExitProcess","ranges":[{"startOffset":36345,"endOffset":36383,"count":0}],"isBlockCoverage":false},{"functionName":"getGroups","ranges":[{"startOffset":36383,"endOffset":36449,"count":0}],"isBlockCoverage":false},{"functionName":"getHelp","ranges":[{"startOffset":36449,"endOffset":36784,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":36784,"endOffset":36819,"count":2}],"isBlockCoverage":true},{"functionName":"getStrict","ranges":[{"startOffset":36819,"endOffset":36853,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictCommands","ranges":[{"startOffset":36853,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptions","ranges":[{"startOffset":36895,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":36936,"endOffset":37189,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":37189,"endOffset":37428,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":37428,"endOffset":37520,"count":0}],"isBlockCoverage":false},{"functionName":"implies","ranges":[{"startOffset":37520,"endOffset":37639,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":37639,"endOffset":37804,"count":1},{"startOffset":37701,"endOffset":37746,"count":0}],"isBlockCoverage":true},{"functionName":"middleware","ranges":[{"startOffset":37804,"endOffset":37866,"count":1}],"isBlockCoverage":true},{"functionName":"nargs","ranges":[{"startOffset":37866,"endOffset":37991,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":37991,"endOffset":38081,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":38081,"endOffset":38177,"count":4}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":38177,"endOffset":40145,"count":104},{"startOffset":38264,"endOffset":38316,"count":1},{"startOffset":38316,"endOffset":40133,"count":103},{"startOffset":38339,"endOffset":38347,"count":0},{"startOffset":38412,"endOffset":38419,"count":0},{"startOffset":38428,"endOffset":38772,"count":0},{"startOffset":38805,"endOffset":38828,"count":10},{"startOffset":38864,"endOffset":38891,"count":0},{"startOffset":38933,"endOffset":38951,"count":0},{"startOffset":38966,"endOffset":39042,"count":0},{"startOffset":39054,"endOffset":39085,"count":0},{"startOffset":39099,"endOffset":39126,"count":0},{"startOffset":39145,"endOffset":39172,"count":0},{"startOffset":39189,"endOffset":39212,"count":0},{"startOffset":39221,"endOffset":39252,"count":0},{"startOffset":39264,"endOffset":39283,"count":0},{"startOffset":39293,"endOffset":39320,"count":2},{"startOffset":39329,"endOffset":39354,"count":0},{"startOffset":39362,"endOffset":39385,"count":0},{"startOffset":39417,"endOffset":39467,"count":48},{"startOffset":39443,"endOffset":39466,"count":6},{"startOffset":39495,"endOffset":39541,"count":21},{"startOffset":39519,"endOffset":39540,"count":0},{"startOffset":39571,"endOffset":39619,"count":4},{"startOffset":39596,"endOffset":39618,"count":0},{"startOffset":39629,"endOffset":39648,"count":82},{"startOffset":39649,"endOffset":39697,"count":49},{"startOffset":39674,"endOffset":39696,"count":4},{"startOffset":39725,"endOffset":39740,"count":0},{"startOffset":39767,"endOffset":39792,"count":0},{"startOffset":39813,"endOffset":39874,"count":0},{"startOffset":39891,"endOffset":39915,"count":0},{"startOffset":39949,"endOffset":39957,"count":0},{"startOffset":40034,"endOffset":40054,"count":0},{"startOffset":40083,"endOffset":40097,"count":0},{"startOffset":40111,"endOffset":40132,"count":55}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38288,"endOffset":38313,"count":103}],"isBlockCoverage":true},{"functionName":"options","ranges":[{"startOffset":40145,"endOffset":40182,"count":104}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":40182,"endOffset":40870,"count":1},{"startOffset":40337,"endOffset":40361,"count":0},{"startOffset":40382,"endOffset":40407,"count":0},{"startOffset":40442,"endOffset":40460,"count":0},{"startOffset":40547,"endOffset":40767,"count":0},{"startOffset":40783,"endOffset":40841,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40556,"endOffset":40635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40645,"endOffset":40723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40735,"endOffset":40765,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsync","ranges":[{"startOffset":40870,"endOffset":40947,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":40947,"endOffset":41104,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":41104,"endOffset":41191,"count":0}],"isBlockCoverage":false},{"functionName":"pkgConf","ranges":[{"startOffset":41191,"endOffset":41491,"count":0}],"isBlockCoverage":false},{"functionName":"positional","ranges":[{"startOffset":41491,"endOffset":42122,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":42122,"endOffset":42211,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":42211,"endOffset":42253,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42253,"endOffset":42294,"count":0}],"isBlockCoverage":false},{"functionName":"requiresArg","ranges":[{"startOffset":42294,"endOffset":42473,"count":55}],"isBlockCoverage":true},{"functionName":"showCompletionScript","ranges":[{"startOffset":42473,"endOffset":42662,"count":0}],"isBlockCoverage":false},{"functionName":"showHelp","ranges":[{"startOffset":42662,"endOffset":43060,"count":0}],"isBlockCoverage":false},{"functionName":"scriptName","ranges":[{"startOffset":43060,"endOffset":43121,"count":0}],"isBlockCoverage":false},{"functionName":"showHelpOnFail","ranges":[{"startOffset":43121,"endOffset":43242,"count":0}],"isBlockCoverage":false},{"functionName":"showVersion","ranges":[{"startOffset":43242,"endOffset":43343,"count":0}],"isBlockCoverage":false},{"functionName":"skipValidation","ranges":[{"startOffset":43343,"endOffset":43443,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":43443,"endOffset":43523,"count":0}],"isBlockCoverage":false},{"functionName":"strictCommands","ranges":[{"startOffset":43523,"endOffset":43611,"count":0}],"isBlockCoverage":false},{"functionName":"strictOptions","ranges":[{"startOffset":43611,"endOffset":43698,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":43698,"endOffset":43794,"count":53}],"isBlockCoverage":true},{"functionName":"terminalWidth","ranges":[{"startOffset":43794,"endOffset":43859,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":43859,"endOffset":43904,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrings","ranges":[{"startOffset":43904,"endOffset":44021,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":44021,"endOffset":44366,"count":1},{"startOffset":44152,"endOffset":44330,"count":0}],"isBlockCoverage":true},{"functionName":"usageConfiguration","ranges":[{"startOffset":44366,"endOffset":44452,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":44452,"endOffset":44991,"count":3},{"startOffset":44567,"endOffset":44646,"count":1},{"startOffset":44668,"endOffset":44685,"count":2},{"startOffset":44685,"endOffset":44787,"count":1},{"startOffset":44725,"endOffset":44737,"count":0},{"startOffset":44745,"endOffset":44787,"count":0},{"startOffset":44824,"endOffset":44826,"count":0},{"startOffset":44915,"endOffset":44923,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":44991,"endOffset":45084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45084,"endOffset":45695,"count":1},{"startOffset":45629,"endOffset":45694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45695,"endOffset":46036,"count":2}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":45713,"endOffset":45869,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":45876,"endOffset":46034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46036,"endOffset":46266,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46071,"endOffset":46220,"count":22},{"startOffset":46098,"endOffset":46105,"count":1},{"startOffset":46105,"endOffset":46147,"count":21},{"startOffset":46147,"endOffset":46187,"count":9},{"startOffset":46161,"endOffset":46187,"count":1},{"startOffset":46187,"endOffset":46219,"count":12},{"startOffset":46206,"endOffset":46219,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46266,"endOffset":46358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46358,"endOffset":46856,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46856,"endOffset":47374,"count":2},{"startOffset":46996,"endOffset":47037,"count":0},{"startOffset":47258,"endOffset":47371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47047,"endOffset":47147,"count":2},{"startOffset":47144,"endOffset":47146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47374,"endOffset":47403,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47403,"endOffset":47432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47432,"endOffset":47653,"count":1},{"startOffset":47457,"endOffset":47464,"count":0},{"startOffset":47572,"endOffset":47616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47653,"endOffset":47697,"count":2},{"startOffset":47685,"endOffset":47696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47697,"endOffset":47891,"count":1},{"startOffset":47720,"endOffset":47728,"count":0},{"startOffset":47769,"endOffset":47882,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47891,"endOffset":48310,"count":2},{"startOffset":47935,"endOffset":47960,"count":0},{"startOffset":48251,"endOffset":48261,"count":0},{"startOffset":48287,"endOffset":48291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48114,"endOffset":48169,"count":4},{"startOffset":48147,"endOffset":48169,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48310,"endOffset":48393,"count":137}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48346,"endOffset":48390,"count":137}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48393,"endOffset":48461,"count":163}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48425,"endOffset":48458,"count":163}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48461,"endOffset":48564,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48493,"endOffset":48561,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48564,"endOffset":48714,"count":176},{"startOffset":48600,"endOffset":48625,"count":0},{"startOffset":48660,"endOffset":48690,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48611,"endOffset":48622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48634,"endOffset":48655,"count":176}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48714,"endOffset":48760,"count":313},{"startOffset":48743,"endOffset":48757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48760,"endOffset":48822,"count":108}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48822,"endOffset":49732,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49013,"endOffset":49040,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49077,"endOffset":49103,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49119,"endOffset":49145,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49161,"endOffset":49188,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49207,"endOffset":49233,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49252,"endOffset":49278,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49313,"endOffset":49340,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49364,"endOffset":49391,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49414,"endOffset":49441,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49468,"endOffset":49494,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49511,"endOffset":49538,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":49560,"endOffset":49587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49732,"endOffset":49768,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49754,"endOffset":49765,"count":1}],"isBlockCoverage":true},{"functionName":"getInternalMethods","ranges":[{"startOffset":49768,"endOffset":50389,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50389,"endOffset":50417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50417,"endOffset":50445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50445,"endOffset":50473,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50473,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50501,"endOffset":50534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50534,"endOffset":50563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50563,"endOffset":50592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50592,"endOffset":50622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50622,"endOffset":50650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50650,"endOffset":50879,"count":1},{"startOffset":50669,"endOffset":50678,"count":0},{"startOffset":50686,"endOffset":50695,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50879,"endOffset":57436,"count":2},{"startOffset":51691,"endOffset":51715,"count":0},{"startOffset":51768,"endOffset":51792,"count":0},{"startOffset":57072,"endOffset":57094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51045,"endOffset":51092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51159,"endOffset":51245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51375,"endOffset":51427,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51416,"endOffset":51424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51569,"endOffset":51610,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51599,"endOffset":51607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51793,"endOffset":57008,"count":2}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51858,"endOffset":52604,"count":1},{"startOffset":51923,"endOffset":51938,"count":0},{"startOffset":51997,"endOffset":52603,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":52621,"endOffset":52783,"count":0}],"isBlockCoverage":false},{"functionName":"requiredArguments","ranges":[{"startOffset":52802,"endOffset":53192,"count":1},{"startOffset":52857,"endOffset":52935,"count":0},{"startOffset":52940,"endOffset":53191,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":53210,"endOffset":54009,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":54026,"endOffset":54359,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":54388,"endOffset":54564,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":54580,"endOffset":55078,"count":1},{"startOffset":54654,"endOffset":54661,"count":0},{"startOffset":54907,"endOffset":55077,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54685,"endOffset":54861,"count":2},{"startOffset":54706,"endOffset":54860,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54784,"endOffset":54858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54945,"endOffset":55065,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":55089,"endOffset":55318,"count":0}],"isBlockCoverage":false},{"functionName":"r.implies","ranges":[{"startOffset":55328,"endOffset":55583,"count":0}],"isBlockCoverage":false},{"functionName":"r.getImplied","ranges":[{"startOffset":55597,"endOffset":55617,"count":0}],"isBlockCoverage":false},{"functionName":"r.implications","ranges":[{"startOffset":55633,"endOffset":55877,"count":1},{"startOffset":55803,"endOffset":55876,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55683,"endOffset":55791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55854,"endOffset":55863,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicts","ranges":[{"startOffset":55899,"endOffset":56135,"count":0}],"isBlockCoverage":false},{"functionName":"r.getConflicting","ranges":[{"startOffset":56153,"endOffset":56158,"count":0}],"isBlockCoverage":false},{"functionName":"r.conflicting","ranges":[{"startOffset":56173,"endOffset":56586,"count":1},{"startOffset":56399,"endOffset":56585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56209,"endOffset":56333,"count":2},{"startOffset":56217,"endOffset":56332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56233,"endOffset":56330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56425,"endOffset":56583,"count":0}],"isBlockCoverage":false},{"functionName":"r.recommendCommands","ranges":[{"startOffset":56607,"endOffset":56783,"count":0}],"isBlockCoverage":false},{"functionName":"r.reset","ranges":[{"startOffset":56792,"endOffset":56849,"count":0}],"isBlockCoverage":false},{"functionName":"r.freeze","ranges":[{"startOffset":56877,"endOffset":56922,"count":1}],"isBlockCoverage":true},{"functionName":"r.unfreeze","ranges":[{"startOffset":56934,"endOffset":57005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57095,"endOffset":57135,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57225,"endOffset":57265,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57436,"endOffset":57487,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57487,"endOffset":59870,"count":1},{"startOffset":57524,"endOffset":57540,"count":0},{"startOffset":58128,"endOffset":58156,"count":0},{"startOffset":58213,"endOffset":58217,"count":0},{"startOffset":58273,"endOffset":58291,"count":0},{"startOffset":58404,"endOffset":58847,"count":0},{"startOffset":58883,"endOffset":58887,"count":0},{"startOffset":58888,"endOffset":58975,"count":0},{"startOffset":58980,"endOffset":59239,"count":0},{"startOffset":59259,"endOffset":59321,"count":0},{"startOffset":59323,"endOffset":59399,"count":0},{"startOffset":59443,"endOffset":59529,"count":0},{"startOffset":59545,"endOffset":59574,"count":0},{"startOffset":59684,"endOffset":59686,"count":0},{"startOffset":59692,"endOffset":59758,"count":0},{"startOffset":59761,"endOffset":59832,"count":0},{"startOffset":59857,"endOffset":59859,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57965,"endOffset":58031,"count":1},{"startOffset":57986,"endOffset":57997,"count":0},{"startOffset":58016,"endOffset":58030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58227,"endOffset":58240,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59120,"endOffset":59214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59469,"endOffset":59526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59709,"endOffset":59755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59870,"endOffset":60315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59930,"endOffset":60314,"count":1},{"startOffset":59939,"endOffset":59962,"count":0},{"startOffset":60056,"endOffset":60095,"count":0},{"startOffset":60110,"endOffset":60157,"count":0},{"startOffset":60172,"endOffset":60219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60315,"endOffset":60339,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60339,"endOffset":60441,"count":240},{"startOffset":60394,"endOffset":60440,"count":0}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":60733,"endOffset":60750,"count":11}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":61020,"endOffset":61036,"count":4}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":61065,"endOffset":61096,"count":0}],"isBlockCoverage":false},{"functionName":"execPath","ranges":[{"startOffset":61106,"endOffset":61126,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":61132,"endOffset":61152,"count":0}],"isBlockCoverage":false},{"functionName":"ue.Yargs","ranges":[{"startOffset":61923,"endOffset":62074,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":62021,"endOffset":62034,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22995,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2164,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":2901,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3178,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":4406,"endOffset":4467,"count":1373}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":4726,"endOffset":5098,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":5317,"endOffset":5693,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":5893,"endOffset":6258,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":6464,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":7080,"endOffset":7469,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":7718,"endOffset":8115,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":8320,"endOffset":8633,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":8845,"endOffset":9166,"count":5},{"startOffset":8926,"endOffset":8985,"count":0},{"startOffset":9020,"endOffset":9164,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":9190,"endOffset":9572,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":9576,"endOffset":10295,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":10297,"endOffset":13701,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":13703,"endOffset":13843,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":13845,"endOffset":14209,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":14211,"endOffset":14925,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":14927,"endOffset":16544,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":16546,"endOffset":17164,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":17166,"endOffset":17817,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":17975,"endOffset":18069,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":18248,"endOffset":18360,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":18522,"endOffset":18616,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":18782,"endOffset":18894,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":19022,"endOffset":20811,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":20814,"endOffset":21897,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":22093,"endOffset":22185,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":22393,"endOffset":22499,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":22690,"endOffset":22759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17314,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1451,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1671,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":2281,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2379,"endOffset":11135,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11137,"endOffset":11440,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11481,"endOffset":16343,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16347,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16426,"endOffset":17277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1194,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":32,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":257,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":521,"endOffset":1162,"count":1},{"startOffset":563,"endOffset":1158,"count":0}],"isBlockCoverage":true}]},{"scriptId":"146","url":"node:internal/assert/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9582,"count":1}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":1504,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":1555,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":2497,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":4144,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":5563,"endOffset":8945,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":8947,"endOffset":9547,"count":1373},{"startOffset":9008,"endOffset":9545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1497,"endOffset":3420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":1}],"isBlockCoverage":true},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":0}],"isBlockCoverage":false},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42891,"count":1},{"startOffset":41288,"endOffset":41332,"count":0},{"startOffset":41414,"endOffset":41422,"count":0},{"startOffset":41469,"endOffset":41477,"count":0},{"startOffset":41520,"endOffset":41643,"count":0},{"startOffset":41756,"endOffset":41954,"count":0},{"startOffset":41991,"endOffset":41995,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":73},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":1059},{"startOffset":1289,"endOffset":1297,"count":112},{"startOffset":1299,"endOffset":1377,"count":112},{"startOffset":1377,"endOffset":1441,"count":947}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":1},{"startOffset":1940,"endOffset":2572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39582,"count":1},{"startOffset":4702,"endOffset":4707,"count":0},{"startOffset":4862,"endOffset":4867,"count":0},{"startOffset":4991,"endOffset":5006,"count":0},{"startOffset":5665,"endOffset":5670,"count":0},{"startOffset":6308,"endOffset":6313,"count":0},{"startOffset":6469,"endOffset":6474,"count":0},{"startOffset":6632,"endOffset":6637,"count":0},{"startOffset":6794,"endOffset":6799,"count":0},{"startOffset":6959,"endOffset":6964,"count":0},{"startOffset":7431,"endOffset":7687,"count":0},{"startOffset":7817,"endOffset":7979,"count":0},{"startOffset":8807,"endOffset":16076,"count":0},{"startOffset":16361,"endOffset":16386,"count":0},{"startOffset":16596,"endOffset":16620,"count":0},{"startOffset":16801,"endOffset":16958,"count":0},{"startOffset":17003,"endOffset":17345,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5696,"endOffset":6274,"count":21},{"startOffset":5761,"endOffset":5770,"count":0},{"startOffset":6130,"endOffset":6192,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5830,"endOffset":6077,"count":340}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6339,"endOffset":6436,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6500,"endOffset":6599,"count":53}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6663,"endOffset":6762,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6825,"endOffset":6923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6990,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7185,"endOffset":7373,"count":55}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7481,"endOffset":7675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7882,"endOffset":7963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8088,"endOffset":8284,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8419,"endOffset":8576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16429,"endOffset":16534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16646,"endOffset":16714,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16840,"endOffset":16880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16890,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17055,"endOffset":17070,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17081,"endOffset":17333,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":17354,"endOffset":17625,"count":0}],"isBlockCoverage":false},{"functionName":"eatNargs","ranges":[{"startOffset":17634,"endOffset":19255,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19264,"endOffset":21069,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":21078,"endOffset":22995,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":23004,"endOffset":23349,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":23358,"endOffset":24356,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24365,"endOffset":25009,"count":0}],"isBlockCoverage":false},{"functionName":"setConfig","ranges":[{"startOffset":25018,"endOffset":26653,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25222,"endOffset":26641,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObject","ranges":[{"startOffset":26662,"endOffset":27338,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObjects","ranges":[{"startOffset":27347,"endOffset":27591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27471,"endOffset":27565,"count":0}],"isBlockCoverage":false},{"functionName":"applyEnvVars","ranges":[{"startOffset":27600,"endOffset":28476,"count":2},{"startOffset":27715,"endOffset":27784,"count":0},{"startOffset":27785,"endOffset":27789,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27865,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28485,"endOffset":29332,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28618,"endOffset":29320,"count":1},{"startOffset":28798,"endOffset":29288,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28994,"endOffset":29133,"count":0}],"isBlockCoverage":false},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29341,"endOffset":29633,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29642,"endOffset":30259,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29759,"endOffset":30247,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":30268,"endOffset":30693,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30702,"endOffset":33151,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33160,"endOffset":34753,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33219,"endOffset":34741,"count":4},{"startOffset":33268,"endOffset":33273,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33283,"endOffset":34725,"count":147},{"startOffset":33368,"endOffset":33375,"count":42},{"startOffset":33375,"endOffset":33440,"count":105},{"startOffset":33440,"endOffset":33445,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33507,"endOffset":33934,"count":116},{"startOffset":33562,"endOffset":33602,"count":0},{"startOffset":33604,"endOffset":33912,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33996,"endOffset":34449,"count":116},{"startOffset":34052,"endOffset":34070,"count":106},{"startOffset":34071,"endOffset":34111,"count":73},{"startOffset":34113,"endOffset":34427,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34499,"endOffset":34705,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34596,"endOffset":34680,"count":98}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34762,"endOffset":35047,"count":1},{"startOffset":35012,"endOffset":35028,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34956,"endOffset":34981,"count":1}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35056,"endOffset":35354,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35363,"endOffset":35643,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35652,"endOffset":36498,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36507,"endOffset":36638,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOption","ranges":[{"startOffset":36647,"endOffset":37352,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37361,"endOffset":37688,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":37697,"endOffset":38033,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":38042,"endOffset":38602,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":38611,"endOffset":38686,"count":0}],"isBlockCoverage":false},{"functionName":"checkConfiguration","ranges":[{"startOffset":38695,"endOffset":39267,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38770,"endOffset":39255,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39585,"endOffset":40787,"count":1},{"startOffset":39925,"endOffset":40413,"count":11},{"startOffset":39991,"endOffset":40403,"count":55},{"startOffset":40184,"endOffset":40389,"count":0},{"startOffset":40403,"endOffset":40413,"count":55},{"startOffset":40413,"endOffset":40419,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39746,"endOffset":39824,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40049,"endOffset":40143,"count":110}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40444,"endOffset":40762,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40507,"endOffset":40582,"count":22}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40788,"endOffset":40862,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKey","ranges":[{"startOffset":40863,"endOffset":40967,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":40968,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":42061,"endOffset":42094,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":42192,"endOffset":42511,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":42536,"endOffset":42644,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42669,"endOffset":42739,"count":1}],"isBlockCoverage":true}]},{"scriptId":"150","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/string-width/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":987},{"startOffset":327,"endOffset":338,"count":0}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/string-width/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/cliui/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/wrap-ansi/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":2},{"startOffset":235,"endOffset":261,"count":0},{"startOffset":277,"endOffset":413,"count":4},{"startOffset":331,"endOffset":404,"count":2},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"160","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"node:internal/source_map/source_map_cache_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3653,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":915,"endOffset":3564,"count":1}],"isBlockCoverage":false},{"functionName":"#cleanup","ranges":[{"startOffset":1366,"endOffset":1740,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2181,"endOffset":2496,"count":167}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2309,"endOffset":2355,"count":167}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2598,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":2979,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3036,"endOffset":3562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-validate/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":19697,"count":1}],"isBlockCoverage":true},{"functionName":"./src/condition.ts","ranges":[{"startOffset":355,"endOffset":1686,"count":1}],"isBlockCoverage":true},{"functionName":"validationConditionSingle","ranges":[{"startOffset":913,"endOffset":1147,"count":26},{"startOffset":1052,"endOffset":1088,"count":0}],"isBlockCoverage":true},{"functionName":"getValues","ranges":[{"startOffset":1148,"endOffset":1361,"count":26},{"startOffset":1215,"endOffset":1304,"count":18},{"startOffset":1306,"endOffset":1335,"count":0}],"isBlockCoverage":true},{"functionName":"validationCondition","ranges":[{"startOffset":1362,"endOffset":1496,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1451,"endOffset":1492,"count":26}],"isBlockCoverage":true},{"functionName":"multipleValidOptions","ranges":[{"startOffset":1497,"endOffset":1677,"count":9}],"isBlockCoverage":true},{"functionName":"./src/defaultConfig.ts","ranges":[{"startOffset":1729,"endOffset":2906,"count":1}],"isBlockCoverage":true},{"functionName":"./src/deprecated.ts","ranges":[{"startOffset":2946,"endOffset":3867,"count":1}],"isBlockCoverage":true},{"functionName":"deprecationMessage","ranges":[{"startOffset":3385,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"deprecationWarning","ranges":[{"startOffset":3615,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"./src/errors.ts","ranges":[{"startOffset":3903,"endOffset":5707,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":4065,"endOffset":4205,"count":0}],"isBlockCoverage":false},{"functionName":"_getType","ranges":[{"startOffset":4206,"endOffset":4335,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4448,"endOffset":4533,"count":0}],"isBlockCoverage":false},{"functionName":"errorMessage","ranges":[{"startOffset":4747,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"formatExamples","ranges":[{"startOffset":5492,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"./src/utils.ts","ranges":[{"startOffset":5742,"endOffset":8456,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":6053,"endOffset":6193,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":6141,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"_leven","ranges":[{"startOffset":6194,"endOffset":6334,"count":0}],"isBlockCoverage":false},{"functionName":"_prettyFormat","ranges":[{"startOffset":6335,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":6474,"endOffset":6559,"count":1},{"startOffset":6536,"endOffset":6539,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":7016,"endOffset":7125,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrettyObject","ranges":[{"startOffset":7179,"endOffset":7330,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7381,"endOffset":7779,"count":0}],"isBlockCoverage":true},{"functionName":"logValidationWarning","ranges":[{"startOffset":7852,"endOffset":8030,"count":0}],"isBlockCoverage":false},{"functionName":"createDidYouMeanMessage","ranges":[{"startOffset":8117,"endOffset":8387,"count":0}],"isBlockCoverage":false},{"functionName":"./src/validate.ts","ranges":[{"startOffset":8494,"endOffset":11864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":8798,"endOffset":8883,"count":1},{"startOffset":8864,"endOffset":8880,"count":0}],"isBlockCoverage":true},{"functionName":"shouldSkipValidationForPath","ranges":[{"startOffset":9148,"endOffset":9235,"count":8},{"startOffset":9228,"endOffset":9235,"count":0}],"isBlockCoverage":true},{"functionName":"_validate","ranges":[{"startOffset":9255,"endOffset":11016,"count":6},{"startOffset":9337,"endOffset":9354,"count":2},{"startOffset":9355,"endOffset":9391,"count":2},{"startOffset":9392,"endOffset":9416,"count":2},{"startOffset":9418,"endOffset":9472,"count":4},{"startOffset":9472,"endOffset":9501,"count":2},{"startOffset":9501,"endOffset":10971,"count":26},{"startOffset":9571,"endOffset":9613,"count":0},{"startOffset":9615,"endOffset":9793,"count":0},{"startOffset":9829,"endOffset":10193,"count":0},{"startOffset":10398,"endOffset":10483,"count":0},{"startOffset":10489,"endOffset":10720,"count":0},{"startOffset":10785,"endOffset":10813,"count":8},{"startOffset":10814,"endOffset":10883,"count":8},{"startOffset":10885,"endOffset":10967,"count":4},{"startOffset":10971,"endOffset":11015,"count":2}],"isBlockCoverage":true},{"functionName":"allowsMultipleTypes","ranges":[{"startOffset":11046,"endOffset":11073,"count":26}],"isBlockCoverage":true},{"functionName":"isOfTypeStringOrNumber","ranges":[{"startOffset":11106,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11188,"endOffset":11808,"count":2},{"startOffset":11391,"endOffset":11396,"count":0},{"startOffset":11429,"endOffset":11434,"count":0}],"isBlockCoverage":true},{"functionName":"./src/validateCLIOptions.ts","ranges":[{"startOffset":11912,"endOffset":15580,"count":1}],"isBlockCoverage":true},{"functionName":"_camelcase","ranges":[{"startOffset":12121,"endOffset":12273,"count":1}],"isBlockCoverage":true},{"functionName":"_camelcase","ranges":[{"startOffset":12221,"endOffset":12255,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":12274,"endOffset":12414,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":12362,"endOffset":12396,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":12467,"endOffset":12552,"count":2},{"startOffset":12529,"endOffset":12532,"count":0}],"isBlockCoverage":true},{"functionName":"createCLIValidationError","ranges":[{"startOffset":12972,"endOffset":13801,"count":0}],"isBlockCoverage":false},{"functionName":"validateDeprecatedOptions","ranges":[{"startOffset":13837,"endOffset":14221,"count":0}],"isBlockCoverage":false},{"functionName":"validateCLIOptions","ranges":[{"startOffset":14223,"endOffset":15571,"count":1},{"startOffset":14554,"endOffset":14559,"count":0},{"startOffset":15137,"endOffset":15215,"count":0},{"startOffset":15476,"endOffset":15554,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14396,"endOffset":14465,"count":104},{"startOffset":14455,"endOffset":14464,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14626,"endOffset":14856,"count":12},{"startOffset":14712,"endOffset":14836,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14978,"endOffset":15027,"count":2},{"startOffset":15007,"endOffset":15027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15033,"endOffset":15098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15271,"endOffset":15435,"count":2},{"startOffset":15357,"endOffset":15384,"count":0},{"startOffset":15385,"endOffset":15435,"count":0}],"isBlockCoverage":true},{"functionName":"./src/warnings.ts","ranges":[{"startOffset":15618,"endOffset":16988,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":15788,"endOffset":15928,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":15981,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"unknownOptionWarning","ranges":[{"startOffset":16288,"endOffset":16925,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":17210,"endOffset":17938,"count":16},{"startOffset":17402,"endOffset":17937,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18164,"endOffset":19643,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18356,"endOffset":18408,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18502,"endOffset":18562,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18639,"endOffset":18682,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18773,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18921,"endOffset":18982,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":19061,"endOffset":19108,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":19197,"endOffset":19254,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":19556,"endOffset":19641,"count":2},{"startOffset":19622,"endOffset":19638,"count":0}],"isBlockCoverage":true}]},{"scriptId":"164","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-config/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":106075,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":106070,"count":1}],"isBlockCoverage":true},{"functionName":"./src/Defaults.ts","ranges":[{"startOffset":354,"endOffset":3572,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":514,"endOffset":627,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":575,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"_ciInfo","ranges":[{"startOffset":628,"endOffset":748,"count":1}],"isBlockCoverage":true},{"functionName":"_ciInfo","ranges":[{"startOffset":696,"endOffset":730,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":749,"endOffset":891,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":839,"endOffset":873,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1052,"endOffset":1137,"count":1},{"startOffset":1118,"endOffset":1134,"count":0}],"isBlockCoverage":true},{"functionName":"./src/Deprecated.ts","ranges":[{"startOffset":3612,"endOffset":7007,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":3751,"endOffset":3891,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3892,"endOffset":3977,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeprecation","ranges":[{"startOffset":4170,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"browser","ranges":[{"startOffset":4431,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"collectCoverageOnlyFrom","ranges":[{"startOffset":4704,"endOffset":4886,"count":0}],"isBlockCoverage":false},{"functionName":"extraGlobals","ranges":[{"startOffset":4904,"endOffset":5076,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5086,"endOffset":5297,"count":0}],"isBlockCoverage":false},{"functionName":"moduleLoader","ranges":[{"startOffset":5315,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"preprocessorIgnorePatterns","ranges":[{"startOffset":5504,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"scriptPreprocessor","ranges":[{"startOffset":5753,"endOffset":5956,"count":0}],"isBlockCoverage":false},{"functionName":"setupTestFrameworkScriptFile","ranges":[{"startOffset":5990,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"testPathDirs","ranges":[{"startOffset":6237,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"testPathPattern","ranges":[{"startOffset":6416,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"testURL","ranges":[{"startOffset":6583,"endOffset":6774,"count":0}],"isBlockCoverage":false},{"functionName":"timers","ranges":[{"startOffset":6786,"endOffset":6940,"count":0}],"isBlockCoverage":false},{"functionName":"./src/Descriptions.ts","ranges":[{"startOffset":7049,"endOffset":12561,"count":1}],"isBlockCoverage":true},{"functionName":"./src/ReporterValidationErrors.ts","ranges":[{"startOffset":12615,"endOffset":15817,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":12905,"endOffset":13045,"count":0}],"isBlockCoverage":false},{"functionName":"_getType","ranges":[{"startOffset":13046,"endOffset":13175,"count":0}],"isBlockCoverage":false},{"functionName":"_jestValidate","ranges":[{"startOffset":13176,"endOffset":13314,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13367,"endOffset":13452,"count":0}],"isBlockCoverage":false},{"functionName":"createReporterError","ranges":[{"startOffset":14052,"endOffset":14473,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayReporterError","ranges":[{"startOffset":14474,"endOffset":15106,"count":0}],"isBlockCoverage":false},{"functionName":"validateReporters","ranges":[{"startOffset":15107,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"validateArrayReporter","ranges":[{"startOffset":15414,"endOffset":15808,"count":0}],"isBlockCoverage":false},{"functionName":"./src/ValidConfig.ts","ranges":[{"startOffset":15858,"endOffset":25024,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":16054,"endOffset":16196,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":16144,"endOffset":16178,"count":0}],"isBlockCoverage":false},{"functionName":"_jestValidate","ranges":[{"startOffset":16197,"endOffset":16335,"count":1}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":16283,"endOffset":16317,"count":8}],"isBlockCoverage":true},{"functionName":"_prettyFormat","ranges":[{"startOffset":16336,"endOffset":16474,"count":1}],"isBlockCoverage":true},{"functionName":"_prettyFormat","ranges":[{"startOffset":16422,"endOffset":16456,"count":1}],"isBlockCoverage":true},{"functionName":"./src/color.ts","ranges":[{"startOffset":25059,"endOffset":25906,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":25207,"endOffset":25326,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayNameColor","ranges":[{"startOffset":25626,"endOffset":25845,"count":0}],"isBlockCoverage":false},{"functionName":"./src/constants.ts","ranges":[{"startOffset":25945,"endOffset":28224,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":26381,"endOffset":26517,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":26465,"endOffset":26499,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":26518,"endOffset":27132,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":26669,"endOffset":27122,"count":1},{"startOffset":26716,"endOffset":26725,"count":0},{"startOffset":26812,"endOffset":26837,"count":0},{"startOffset":26839,"endOffset":26848,"count":0},{"startOffset":26859,"endOffset":26862,"count":0},{"startOffset":26884,"endOffset":26900,"count":0},{"startOffset":26935,"endOffset":27110,"count":17},{"startOffset":27082,"endOffset":27094,"count":0}],"isBlockCoverage":true},{"functionName":"./src/getCacheDirectory.ts","ranges":[{"startOffset":28271,"endOffset":30119,"count":1}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":28410,"endOffset":28517,"count":1}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":28465,"endOffset":28499,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":28518,"endOffset":28654,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":28602,"endOffset":28636,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":28655,"endOffset":28781,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":28729,"endOffset":28763,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":28782,"endOffset":29396,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":28933,"endOffset":29386,"count":1},{"startOffset":28980,"endOffset":28989,"count":0},{"startOffset":29076,"endOffset":29101,"count":0},{"startOffset":29103,"endOffset":29112,"count":0},{"startOffset":29123,"endOffset":29126,"count":0},{"startOffset":29148,"endOffset":29164,"count":0},{"startOffset":29199,"endOffset":29374,"count":17},{"startOffset":29346,"endOffset":29358,"count":0}],"isBlockCoverage":true},{"functionName":"getCacheDirectory","ranges":[{"startOffset":29615,"endOffset":30054,"count":1},{"startOffset":29774,"endOffset":29802,"count":0}],"isBlockCoverage":true},{"functionName":"./src/getMaxWorkers.ts","ranges":[{"startOffset":30162,"endOffset":31573,"count":1}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":30308,"endOffset":30415,"count":1}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":30363,"endOffset":30397,"count":1}],"isBlockCoverage":true},{"functionName":"getMaxWorkers","ranges":[{"startOffset":30608,"endOffset":31175,"count":2},{"startOffset":30677,"endOffset":30696,"count":0},{"startOffset":30723,"endOffset":30770,"count":0},{"startOffset":30825,"endOffset":30882,"count":0},{"startOffset":31125,"endOffset":31150,"count":0}],"isBlockCoverage":true},{"functionName":"parseWorkers","ranges":[{"startOffset":31197,"endOffset":31563,"count":0}],"isBlockCoverage":false},{"functionName":"./src/index.ts","ranges":[{"startOffset":31608,"endOffset":47133,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":31840,"endOffset":31887,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31976,"endOffset":32025,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32108,"endOffset":32159,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32242,"endOffset":32291,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32371,"endOffset":32419,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32627,"endOffset":32684,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":32690,"endOffset":32826,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":32774,"endOffset":32808,"count":2}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":32827,"endOffset":32967,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":32968,"endOffset":33107,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":33055,"endOffset":33089,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":33108,"endOffset":33234,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":33964,"endOffset":34049,"count":6},{"startOffset":34030,"endOffset":34046,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":34050,"endOffset":34664,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":34201,"endOffset":34654,"count":3},{"startOffset":34248,"endOffset":34257,"count":1},{"startOffset":34257,"endOffset":34369,"count":2},{"startOffset":34344,"endOffset":34369,"count":0},{"startOffset":34371,"endOffset":34380,"count":0},{"startOffset":34380,"endOffset":34391,"count":2},{"startOffset":34391,"endOffset":34394,"count":0},{"startOffset":34395,"endOffset":34398,"count":2},{"startOffset":34400,"endOffset":34447,"count":2},{"startOffset":34416,"endOffset":34432,"count":0},{"startOffset":34447,"endOffset":34467,"count":2},{"startOffset":34467,"endOffset":34642,"count":122},{"startOffset":34604,"endOffset":34612,"count":114},{"startOffset":34614,"endOffset":34626,"count":8},{"startOffset":34627,"endOffset":34640,"count":114},{"startOffset":34642,"endOffset":34653,"count":2}],"isBlockCoverage":true},{"functionName":"readConfig","ranges":[{"startOffset":34857,"endOffset":35988,"count":2},{"startOffset":35604,"endOffset":35615,"count":0},{"startOffset":35772,"endOffset":35813,"count":0}],"isBlockCoverage":true},{"functionName":"groupOptions","ranges":[{"startOffset":36010,"endOffset":41338,"count":2}],"isBlockCoverage":true},{"functionName":"ensureNoDuplicateConfigs","ranges":[{"startOffset":41373,"endOffset":42215,"count":1},{"startOffset":41449,"endOffset":42214,"count":0}],"isBlockCoverage":true},{"functionName":"readInitialOptions","ranges":[{"startOffset":42455,"endOffset":44396,"count":2},{"startOffset":42682,"endOffset":43096,"count":0},{"startOffset":43137,"endOffset":43665,"count":0},{"startOffset":43715,"endOffset":44112,"count":0}],"isBlockCoverage":true},{"functionName":"readConfigs","ranges":[{"startOffset":44672,"endOffset":47124,"count":1},{"startOffset":45202,"endOffset":45491,"count":0},{"startOffset":45570,"endOffset":45615,"count":0},{"startOffset":46838,"endOffset":46897,"count":0},{"startOffset":46947,"endOffset":47022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45739,"endOffset":46030,"count":1},{"startOffset":45905,"endOffset":45972,"count":0},{"startOffset":45974,"endOffset":46005,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45946,"endOffset":45971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46036,"endOffset":46434,"count":1},{"startOffset":46322,"endOffset":46327,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46525,"endOffset":46571,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46659,"endOffset":46729,"count":1}],"isBlockCoverage":true},{"functionName":"./src/normalize.ts","ranges":[{"startOffset":47172,"endOffset":81805,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":47318,"endOffset":47437,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":47385,"endOffset":47419,"count":1}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":47438,"endOffset":47545,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":47546,"endOffset":47682,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":47630,"endOffset":47664,"count":7}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":47683,"endOffset":47823,"count":0}],"isBlockCoverage":false},{"functionName":"_deepmerge","ranges":[{"startOffset":47824,"endOffset":47976,"count":0}],"isBlockCoverage":false},{"functionName":"_glob","ranges":[{"startOffset":47977,"endOffset":48090,"count":0}],"isBlockCoverage":false},{"functionName":"_gracefulFs","ranges":[{"startOffset":48091,"endOffset":48223,"count":1}],"isBlockCoverage":true},{"functionName":"_gracefulFs","ranges":[{"startOffset":48171,"endOffset":48205,"count":3}],"isBlockCoverage":true},{"functionName":"_micromatch","ranges":[{"startOffset":48224,"endOffset":48379,"count":0}],"isBlockCoverage":false},{"functionName":"_pattern","ranges":[{"startOffset":48380,"endOffset":48508,"count":1}],"isBlockCoverage":true},{"functionName":"_pattern","ranges":[{"startOffset":48456,"endOffset":48490,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":48509,"endOffset":48651,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":48599,"endOffset":48633,"count":11}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":48652,"endOffset":48812,"count":1}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":48760,"endOffset":48794,"count":9}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":48813,"endOffset":48939,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":48887,"endOffset":48921,"count":5}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":48940,"endOffset":49078,"count":1}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":49026,"endOffset":49060,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":49907,"endOffset":49992,"count":5},{"startOffset":49973,"endOffset":49989,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":49993,"endOffset":50607,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":50144,"endOffset":50597,"count":2},{"startOffset":50191,"endOffset":50312,"count":1},{"startOffset":50287,"endOffset":50312,"count":0},{"startOffset":50314,"endOffset":50323,"count":0},{"startOffset":50323,"endOffset":50334,"count":1},{"startOffset":50334,"endOffset":50337,"count":0},{"startOffset":50338,"endOffset":50341,"count":1},{"startOffset":50343,"endOffset":50390,"count":1},{"startOffset":50359,"endOffset":50375,"count":0},{"startOffset":50390,"endOffset":50410,"count":1},{"startOffset":50410,"endOffset":50585,"count":17},{"startOffset":50557,"endOffset":50569,"count":0},{"startOffset":50585,"endOffset":50596,"count":1}],"isBlockCoverage":true},{"functionName":"createConfigError","ranges":[{"startOffset":50971,"endOffset":51062,"count":0}],"isBlockCoverage":false},{"functionName":"requireResolve","ranges":[{"startOffset":51134,"endOffset":51167,"count":10}],"isBlockCoverage":true},{"functionName":"verifyDirectoryExists","ranges":[{"startOffset":51169,"endOffset":52013,"count":4},{"startOffset":51310,"endOffset":51448,"count":0},{"startOffset":51453,"endOffset":52011,"count":0}],"isBlockCoverage":true},{"functionName":"mergeOptionWithPreset","ranges":[{"startOffset":52044,"endOffset":52258,"count":0}],"isBlockCoverage":false},{"functionName":"mergeGlobalsWithPreset","ranges":[{"startOffset":52291,"endOffset":52444,"count":0}],"isBlockCoverage":false},{"functionName":"setupPreset","ranges":[{"startOffset":52466,"endOffset":54885,"count":0}],"isBlockCoverage":false},{"functionName":"setupBabelJest","ranges":[{"startOffset":54910,"endOffset":56272,"count":2},{"startOffset":55408,"endOffset":56126,"count":4},{"startOffset":55429,"endOffset":56120,"count":0},{"startOffset":56130,"endOffset":56270,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55054,"endOffset":55169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55228,"endOffset":55343,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeCollectCoverageFrom","ranges":[{"startOffset":56311,"endOffset":56859,"count":2},{"startOffset":56430,"endOffset":56451,"count":0},{"startOffset":56546,"endOffset":56735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56773,"endOffset":56835,"count":4}],"isBlockCoverage":true},{"functionName":"normalizeUnmockedModulePathPatterns","ranges":[{"startOffset":56905,"endOffset":57329,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57223,"endOffset":57328,"count":12}],"isBlockCoverage":true},{"functionName":"normalizeMissingOptions","ranges":[{"startOffset":57363,"endOffset":57744,"count":2},{"startOffset":57595,"endOffset":57600,"count":0},{"startOffset":57690,"endOffset":57724,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeRootDir","ranges":[{"startOffset":57771,"endOffset":58327,"count":2},{"startOffset":57846,"endOffset":57961,"count":0},{"startOffset":58185,"endOffset":58211,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReporters","ranges":[{"startOffset":58356,"endOffset":59401,"count":0}],"isBlockCoverage":false},{"functionName":"buildTestPathPatterns","ranges":[{"startOffset":59433,"endOffset":60039,"count":2},{"startOffset":59568,"endOffset":59618,"count":0},{"startOffset":59726,"endOffset":60010,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59514,"endOffset":59531,"count":0}],"isBlockCoverage":false},{"functionName":"printConfig","ranges":[{"startOffset":60041,"endOffset":60199,"count":0}],"isBlockCoverage":false},{"functionName":"validateExtensionsToTreatAsEsm","ranges":[{"startOffset":60200,"endOffset":61512,"count":2},{"startOffset":60296,"endOffset":60334,"count":0},{"startOffset":60353,"endOffset":61510,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60412,"endOffset":60439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60713,"endOffset":60757,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":61513,"endOffset":81796,"count":2},{"startOffset":61843,"endOffset":61879,"count":0},{"startOffset":62340,"endOffset":62403,"count":0},{"startOffset":62827,"endOffset":62861,"count":0},{"startOffset":62862,"endOffset":62901,"count":0},{"startOffset":62902,"endOffset":62948,"count":0},{"startOffset":63019,"endOffset":63404,"count":0},{"startOffset":63656,"endOffset":63811,"count":0},{"startOffset":76083,"endOffset":76099,"count":0},{"startOffset":76101,"endOffset":76296,"count":0},{"startOffset":76570,"endOffset":76596,"count":0},{"startOffset":76908,"endOffset":76973,"count":0},{"startOffset":77353,"endOffset":77393,"count":0},{"startOffset":77410,"endOffset":77488,"count":0},{"startOffset":77524,"endOffset":77700,"count":0},{"startOffset":78186,"endOffset":78370,"count":0},{"startOffset":78806,"endOffset":78849,"count":0},{"startOffset":78873,"endOffset":78907,"count":0},{"startOffset":78985,"endOffset":79022,"count":0},{"startOffset":79260,"endOffset":79280,"count":0},{"startOffset":79282,"endOffset":79453,"count":0},{"startOffset":79492,"endOffset":79513,"count":0},{"startOffset":79515,"endOffset":79656,"count":0},{"startOffset":79750,"endOffset":79868,"count":0},{"startOffset":80333,"endOffset":80357,"count":0},{"startOffset":80359,"endOffset":81158,"count":0},{"startOffset":81201,"endOffset":81247,"count":0},{"startOffset":81649,"endOffset":81726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64030,"endOffset":76029,"count":40},{"startOffset":64139,"endOffset":64171,"count":0},{"startOffset":64490,"endOffset":64508,"count":2},{"startOffset":64515,"endOffset":64541,"count":4},{"startOffset":64548,"endOffset":64837,"count":6},{"startOffset":64844,"endOffset":64863,"count":0},{"startOffset":64870,"endOffset":65106,"count":2},{"startOffset":65113,"endOffset":65218,"count":2},{"startOffset":65225,"endOffset":65247,"count":0},{"startOffset":65254,"endOffset":65476,"count":2},{"startOffset":65483,"endOffset":65510,"count":0},{"startOffset":65517,"endOffset":65536,"count":0},{"startOffset":65543,"endOffset":65565,"count":0},{"startOffset":65572,"endOffset":65587,"count":0},{"startOffset":65594,"endOffset":65618,"count":0},{"startOffset":65625,"endOffset":65653,"count":0},{"startOffset":65660,"endOffset":65678,"count":2},{"startOffset":65685,"endOffset":65945,"count":2},{"startOffset":65952,"endOffset":66261,"count":2},{"startOffset":66268,"endOffset":66824,"count":0},{"startOffset":66831,"endOffset":67171,"count":2},{"startOffset":67178,"endOffset":67678,"count":2},{"startOffset":67685,"endOffset":67765,"count":0},{"startOffset":67772,"endOffset":67806,"count":2},{"startOffset":67813,"endOffset":67845,"count":4},{"startOffset":67852,"endOffset":67882,"count":6},{"startOffset":67889,"endOffset":67920,"count":6},{"startOffset":67927,"endOffset":67958,"count":6},{"startOffset":67965,"endOffset":68084,"count":6},{"startOffset":68091,"endOffset":68582,"count":0},{"startOffset":68589,"endOffset":69339,"count":0},{"startOffset":69346,"endOffset":69371,"count":0},{"startOffset":69378,"endOffset":69857,"count":2},{"startOffset":69698,"endOffset":69759,"count":0},{"startOffset":69772,"endOffset":69832,"count":0},{"startOffset":69864,"endOffset":70080,"count":0},{"startOffset":70087,"endOffset":71352,"count":0},{"startOffset":71359,"endOffset":71909,"count":0},{"startOffset":71916,"endOffset":72858,"count":0},{"startOffset":72865,"endOffset":73122,"count":0},{"startOffset":73129,"endOffset":73301,"count":0},{"startOffset":73308,"endOffset":73324,"count":0},{"startOffset":73331,"endOffset":73344,"count":0},{"startOffset":73351,"endOffset":73371,"count":0},{"startOffset":73378,"endOffset":73410,"count":0},{"startOffset":73417,"endOffset":73435,"count":0},{"startOffset":73442,"endOffset":73465,"count":0},{"startOffset":73472,"endOffset":73496,"count":0},{"startOffset":73503,"endOffset":73528,"count":2},{"startOffset":73535,"endOffset":73560,"count":2},{"startOffset":73567,"endOffset":73586,"count":2},{"startOffset":73593,"endOffset":73618,"count":2},{"startOffset":73625,"endOffset":73650,"count":2},{"startOffset":73657,"endOffset":73671,"count":2},{"startOffset":73678,"endOffset":73708,"count":2},{"startOffset":73715,"endOffset":73730,"count":2},{"startOffset":73737,"endOffset":73755,"count":2},{"startOffset":73762,"endOffset":73786,"count":2},{"startOffset":73793,"endOffset":73819,"count":2},{"startOffset":73826,"endOffset":73843,"count":2},{"startOffset":73850,"endOffset":73871,"count":2},{"startOffset":73878,"endOffset":73896,"count":2},{"startOffset":73903,"endOffset":73920,"count":2},{"startOffset":73927,"endOffset":73947,"count":2},{"startOffset":73954,"endOffset":73976,"count":2},{"startOffset":73983,"endOffset":73993,"count":4},{"startOffset":74000,"endOffset":74020,"count":4},{"startOffset":74027,"endOffset":74041,"count":4},{"startOffset":74048,"endOffset":74066,"count":4},{"startOffset":74073,"endOffset":74092,"count":4},{"startOffset":74099,"endOffset":74119,"count":4},{"startOffset":74126,"endOffset":74152,"count":4},{"startOffset":74159,"endOffset":74177,"count":4},{"startOffset":74184,"endOffset":74207,"count":4},{"startOffset":74214,"endOffset":74231,"count":4},{"startOffset":74238,"endOffset":74254,"count":4},{"startOffset":74261,"endOffset":74279,"count":4},{"startOffset":74286,"endOffset":74306,"count":4},{"startOffset":74313,"endOffset":74333,"count":4},{"startOffset":74340,"endOffset":74355,"count":6},{"startOffset":74362,"endOffset":74384,"count":6},{"startOffset":74391,"endOffset":74421,"count":6},{"startOffset":74428,"endOffset":74442,"count":6},{"startOffset":74449,"endOffset":74465,"count":6},{"startOffset":74472,"endOffset":74490,"count":6},{"startOffset":74497,"endOffset":74523,"count":6},{"startOffset":74530,"endOffset":74555,"count":6},{"startOffset":74562,"endOffset":74585,"count":8},{"startOffset":74592,"endOffset":74622,"count":8},{"startOffset":74629,"endOffset":74656,"count":8},{"startOffset":74663,"endOffset":74692,"count":8},{"startOffset":74699,"endOffset":74722,"count":8},{"startOffset":74729,"endOffset":74746,"count":8},{"startOffset":74753,"endOffset":74768,"count":8},{"startOffset":74775,"endOffset":74809,"count":8},{"startOffset":74816,"endOffset":74829,"count":8},{"startOffset":74836,"endOffset":74852,"count":8},{"startOffset":74859,"endOffset":74875,"count":10},{"startOffset":74882,"endOffset":74951,"count":10},{"startOffset":74958,"endOffset":75087,"count":0},{"startOffset":75094,"endOffset":75897,"count":2},{"startOffset":75148,"endOffset":75153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64667,"endOffset":64810,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64975,"endOffset":65079,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66976,"endOffset":67154,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67295,"endOffset":67661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68650,"endOffset":68758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68767,"endOffset":69318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":75159,"endOffset":75880,"count":4},{"startOffset":75533,"endOffset":75870,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":77013,"endOffset":77028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":79831,"endOffset":79862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80418,"endOffset":80613,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80773,"endOffset":81056,"count":0}],"isBlockCoverage":false},{"functionName":"./src/parseShardPair.ts","ranges":[{"startOffset":81849,"endOffset":82899,"count":1}],"isBlockCoverage":true},{"functionName":"parseShardPair","ranges":[{"startOffset":82207,"endOffset":82848,"count":0}],"isBlockCoverage":false},{"functionName":"./src/readConfigFileAndSetRootDir.ts","ranges":[{"startOffset":82956,"endOffset":89903,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":83137,"endOffset":83273,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":83221,"endOffset":83255,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":83274,"endOffset":83395,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":83396,"endOffset":83535,"count":0}],"isBlockCoverage":false},{"functionName":"_parseJson","ranges":[{"startOffset":83536,"endOffset":83689,"count":0}],"isBlockCoverage":false},{"functionName":"_stripJsonComments","ranges":[{"startOffset":83690,"endOffset":83868,"count":0}],"isBlockCoverage":false},{"functionName":"_jestDocblock","ranges":[{"startOffset":83869,"endOffset":84007,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":84008,"endOffset":84134,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":84082,"endOffset":84116,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":84195,"endOffset":84280,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":84281,"endOffset":84895,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":84432,"endOffset":84885,"count":1},{"startOffset":84479,"endOffset":84488,"count":0},{"startOffset":84575,"endOffset":84600,"count":0},{"startOffset":84602,"endOffset":84611,"count":0},{"startOffset":84622,"endOffset":84625,"count":0},{"startOffset":84647,"endOffset":84663,"count":0},{"startOffset":84698,"endOffset":84873,"count":17},{"startOffset":84845,"endOffset":84857,"count":0}],"isBlockCoverage":true},{"functionName":"readConfigFileAndSetRootDir","ranges":[{"startOffset":85420,"endOffset":87272,"count":2},{"startOffset":85862,"endOffset":85893,"count":0},{"startOffset":85895,"endOffset":85959,"count":0},{"startOffset":85977,"endOffset":86157,"count":0},{"startOffset":86254,"endOffset":86418,"count":0},{"startOffset":86471,"endOffset":86621,"count":0},{"startOffset":86664,"endOffset":86710,"count":0},{"startOffset":86739,"endOffset":87073,"count":0}],"isBlockCoverage":true},{"functionName":"loadTSConfigFile","ranges":[{"startOffset":87362,"endOffset":88402,"count":0}],"isBlockCoverage":false},{"functionName":"getRegisteredCompiler","ranges":[{"startOffset":88435,"endOffset":88653,"count":0}],"isBlockCoverage":false},{"functionName":"registerTsLoader","ranges":[{"startOffset":88654,"endOffset":89894,"count":0}],"isBlockCoverage":false},{"functionName":"./src/resolveConfigPath.ts","ranges":[{"startOffset":89950,"endOffset":96368,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":90121,"endOffset":90257,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":90205,"endOffset":90239,"count":17}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":90258,"endOffset":90398,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":90399,"endOffset":90538,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":90486,"endOffset":90520,"count":25}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":90539,"endOffset":90679,"count":0}],"isBlockCoverage":false},{"functionName":"_jestValidate","ranges":[{"startOffset":90680,"endOffset":90818,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":90931,"endOffset":91016,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":91017,"endOffset":91631,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":91168,"endOffset":91621,"count":2},{"startOffset":91215,"endOffset":91224,"count":0},{"startOffset":91311,"endOffset":91336,"count":0},{"startOffset":91338,"endOffset":91347,"count":0},{"startOffset":91358,"endOffset":91361,"count":0},{"startOffset":91383,"endOffset":91399,"count":0},{"startOffset":91434,"endOffset":91609,"count":122},{"startOffset":91571,"endOffset":91579,"count":114},{"startOffset":91581,"endOffset":91593,"count":8},{"startOffset":91594,"endOffset":91607,"count":114}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":91839,"endOffset":91919,"count":16},{"startOffset":91877,"endOffset":91919,"count":6}],"isBlockCoverage":true},{"functionName":"getConfigFilename","ranges":[{"startOffset":91947,"endOffset":91992,"count":12}],"isBlockCoverage":true},{"functionName":"resolveConfigPath","ranges":[{"startOffset":91994,"endOffset":93104,"count":2},{"startOffset":92107,"endOffset":92180,"count":0},{"startOffset":92253,"endOffset":92289,"count":0},{"startOffset":92319,"endOffset":92349,"count":0},{"startOffset":92843,"endOffset":93003,"count":0}],"isBlockCoverage":true},{"functionName":"resolveConfigPathByTraversing","ranges":[{"startOffset":93143,"endOffset":94801,"count":2},{"startOffset":93492,"endOffset":94164,"count":0},{"startOffset":94200,"endOffset":94225,"count":1},{"startOffset":94227,"endOffset":94330,"count":0},{"startOffset":94360,"endOffset":94374,"count":0},{"startOffset":94404,"endOffset":94418,"count":0},{"startOffset":94423,"endOffset":94800,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93266,"endOffset":93326,"count":12}],"isBlockCoverage":true},{"functionName":"findPackageJson","ranges":[{"startOffset":94827,"endOffset":95002,"count":2},{"startOffset":94980,"endOffset":95001,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageJsonJestKey","ranges":[{"startOffset":95034,"endOffset":95274,"count":2},{"startOffset":95199,"endOffset":95239,"count":0},{"startOffset":95244,"endOffset":95252,"count":0}],"isBlockCoverage":true},{"functionName":"makeResolutionErrorMessage","ranges":[{"startOffset":95311,"endOffset":95765,"count":0}],"isBlockCoverage":false},{"functionName":"extraIfPackageJson","ranges":[{"startOffset":95767,"endOffset":95910,"count":0}],"isBlockCoverage":false},{"functionName":"makeMultipleConfigsErrorMessage","ranges":[{"startOffset":95951,"endOffset":96358,"count":0}],"isBlockCoverage":false},{"functionName":"./src/setFromArgv.ts","ranges":[{"startOffset":96409,"endOffset":98011,"count":1}],"isBlockCoverage":true},{"functionName":"setFromArgv","ranges":[{"startOffset":96883,"endOffset":98002,"count":2},{"startOffset":97940,"endOffset":97965,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":96970,"endOffset":97860,"count":4},{"startOffset":97076,"endOffset":97178,"count":0},{"startOffset":97185,"endOffset":97251,"count":0},{"startOffset":97258,"endOffset":97358,"count":0},{"startOffset":97365,"endOffset":97436,"count":0},{"startOffset":97443,"endOffset":97472,"count":0},{"startOffset":97479,"endOffset":97504,"count":0},{"startOffset":97511,"endOffset":97526,"count":0},{"startOffset":97533,"endOffset":97546,"count":0},{"startOffset":97553,"endOffset":97577,"count":0},{"startOffset":97584,"endOffset":97614,"count":0},{"startOffset":97621,"endOffset":97781,"count":0},{"startOffset":97788,"endOffset":97830,"count":0},{"startOffset":97836,"endOffset":97859,"count":0}],"isBlockCoverage":true},{"functionName":"./src/stringToBytes.ts","ranges":[{"startOffset":98054,"endOffset":100423,"count":1}],"isBlockCoverage":true},{"functionName":"stringToBytes","ranges":[{"startOffset":98594,"endOffset":100297,"count":0}],"isBlockCoverage":false},{"functionName":"./src/utils.ts","ranges":[{"startOffset":100458,"endOffset":104571,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":100755,"endOffset":100891,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":100839,"endOffset":100873,"count":31}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":100892,"endOffset":101032,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":100980,"endOffset":101014,"count":1}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":101033,"endOffset":101192,"count":1}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":101140,"endOffset":101174,"count":9}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":101193,"endOffset":101331,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":101332,"endOffset":101417,"count":2},{"startOffset":101394,"endOffset":101397,"count":1},{"startOffset":101398,"endOffset":101414,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":101418,"endOffset":102032,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":101569,"endOffset":102022,"count":1},{"startOffset":101616,"endOffset":101625,"count":0},{"startOffset":101712,"endOffset":101737,"count":0},{"startOffset":101739,"endOffset":101748,"count":0},{"startOffset":101759,"endOffset":101762,"count":0},{"startOffset":101784,"endOffset":101800,"count":0},{"startOffset":101835,"endOffset":102010,"count":17},{"startOffset":101982,"endOffset":101994,"count":0}],"isBlockCoverage":true},{"functionName":"createValidationError","ranges":[{"startOffset":102479,"endOffset":102585,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":102603,"endOffset":103132,"count":10},{"startOffset":102841,"endOffset":102853,"count":0},{"startOffset":102855,"endOffset":103061,"count":0}],"isBlockCoverage":true},{"functionName":"escapeGlobCharacters","ranges":[{"startOffset":103190,"endOffset":103242,"count":2}],"isBlockCoverage":true},{"functionName":"replaceRootDirInPath","ranges":[{"startOffset":103326,"endOffset":103515,"count":26},{"startOffset":103392,"endOffset":103418,"count":10},{"startOffset":103418,"endOffset":103514,"count":16}],"isBlockCoverage":true},{"functionName":"_replaceRootDirInObject","ranges":[{"startOffset":103602,"endOffset":103832,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceRootDirTags","ranges":[{"startOffset":103862,"endOffset":104345,"count":14},{"startOffset":103907,"endOffset":103931,"count":0},{"startOffset":103963,"endOffset":104251,"count":2},{"startOffset":104127,"endOffset":104251,"count":0},{"startOffset":104256,"endOffset":104322,"count":12},{"startOffset":104326,"endOffset":104344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":104075,"endOffset":104117,"count":8}],"isBlockCoverage":true},{"functionName":"isJSONString","ranges":[{"startOffset":104430,"endOffset":104524,"count":4},{"startOffset":104451,"endOffset":104478,"count":0},{"startOffset":104479,"endOffset":104502,"count":0},{"startOffset":104503,"endOffset":104524,"count":0}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":104793,"endOffset":105584,"count":28},{"startOffset":104985,"endOffset":105040,"count":11},{"startOffset":105040,"endOffset":105583,"count":17}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-regex-util/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1663,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":1658,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":1604,"count":1}],"isBlockCoverage":true},{"functionName":"escapePathForRegex","ranges":[{"startOffset":880,"endOffset":1138,"count":6},{"startOffset":915,"endOffset":1079,"count":0}],"isBlockCoverage":true},{"functionName":"escapeStrForRegex","ranges":[{"startOffset":1215,"endOffset":1273,"count":6}],"isBlockCoverage":true},{"functionName":"replacePathSepForRegex","ranges":[{"startOffset":1353,"endOffset":1544,"count":20},{"startOffset":1391,"endOffset":1525,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1460,"endOffset":1519,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/graceful-fs/graceful-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12680,"count":1},{"startOffset":529,"endOffset":624,"count":0},{"startOffset":859,"endOffset":1061,"count":0},{"startOffset":2292,"endOffset":2430,"count":0},{"startOffset":2590,"endOffset":2606,"count":0},{"startOffset":2608,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":626,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"publishQueue","ranges":[{"startOffset":647,"endOffset":790,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":746,"endOffset":783,"count":53}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":927,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1492,"endOffset":1899,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1518,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1930,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":1960,"endOffset":2107,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2317,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":2669,"endOffset":10035,"count":1},{"startOffset":6760,"endOffset":6877,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":2948,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":3572,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":4258,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4939,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":5617,"endOffset":6711,"count":2999},{"startOffset":5701,"endOffset":5729,"count":0},{"startOffset":5804,"endOffset":5968,"count":0}],"isBlockCoverage":true},{"functionName":"go$readdir","ranges":[{"startOffset":5806,"endOffset":5968,"count":0}],"isBlockCoverage":false},{"functionName":"go$readdir","ranges":[{"startOffset":5977,"endOffset":6148,"count":2999}],"isBlockCoverage":true},{"functionName":"fs$readdirCallback","ranges":[{"startOffset":6196,"endOffset":6707,"count":2999}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6270,"endOffset":6701,"count":2999},{"startOffset":6310,"endOffset":6361,"count":0},{"startOffset":6373,"endOffset":6529,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7295,"endOffset":7338,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7349,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7500,"endOffset":7544,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7555,"endOffset":7601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7763,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7821,"endOffset":7870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8016,"endOffset":8064,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8075,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":8180,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream$open","ranges":[{"startOffset":8404,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8729,"endOffset":8954,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream$open","ranges":[{"startOffset":8958,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9233,"endOffset":9324,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9328,"endOffset":9421,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":9466,"endOffset":10020,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10037,"endOffset":10147,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":10396,"endOffset":10864,"count":26},{"startOffset":10497,"endOffset":10787,"count":0}],"isBlockCoverage":true},{"functionName":"retry","ranges":[{"startOffset":10866,"endOffset":12679,"count":26},{"startOffset":11061,"endOffset":12677,"count":0}],"isBlockCoverage":true}]},{"scriptId":"167","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/graceful-fs/polyfills.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10141,"count":1},{"startOffset":259,"endOffset":272,"count":0}],"isBlockCoverage":true},{"functionName":"process.cwd","ranges":[{"startOffset":163,"endOffset":234,"count":14},{"startOffset":192,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":416,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":577,"endOffset":10140,"count":1},{"startOffset":774,"endOffset":830,"count":0},{"startOffset":832,"endOffset":857,"count":0},{"startOffset":916,"endOffset":942,"count":0},{"startOffset":2119,"endOffset":2248,"count":0},{"startOffset":2875,"endOffset":3782,"count":0},{"startOffset":3881,"endOffset":3890,"count":0},{"startOffset":4689,"endOffset":4702,"count":0}],"isBlockCoverage":true},{"functionName":"fs.lchmod","ranges":[{"startOffset":1981,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchmodSync","ranges":[{"startOffset":2070,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchown","ranges":[{"startOffset":2137,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchownSync","ranges":[{"startOffset":2230,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2944,"endOffset":3766,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3896,"endOffset":4627,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":3921,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4708,"endOffset":5082,"count":1}],"isBlockCoverage":true},{"functionName":"fs.readSync","ranges":[{"startOffset":4740,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"patchLchmod","ranges":[{"startOffset":5100,"endOffset":6268,"count":0}],"isBlockCoverage":false},{"functionName":"patchLutimes","ranges":[{"startOffset":6272,"endOffset":7328,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFix","ranges":[{"startOffset":7332,"endOffset":7581,"count":3},{"startOffset":7374,"endOffset":7385,"count":1},{"startOffset":7385,"endOffset":7580,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7397,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFixSync","ranges":[{"startOffset":7585,"endOffset":7810,"count":3},{"startOffset":7631,"endOffset":7642,"count":1},{"startOffset":7642,"endOffset":7809,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7654,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"chownFix","ranges":[{"startOffset":7815,"endOffset":8072,"count":3},{"startOffset":7857,"endOffset":7868,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7880,"endOffset":8068,"count":0}],"isBlockCoverage":false},{"functionName":"chownFixSync","ranges":[{"startOffset":8076,"endOffset":8309,"count":3},{"startOffset":8122,"endOffset":8133,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8145,"endOffset":8305,"count":0}],"isBlockCoverage":false},{"functionName":"statFix","ranges":[{"startOffset":8313,"endOffset":8936,"count":3},{"startOffset":8354,"endOffset":8365,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8466,"endOffset":8932,"count":8736},{"startOffset":8842,"endOffset":8884,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":8600,"endOffset":8820,"count":8736},{"startOffset":8682,"endOffset":8706,"count":0},{"startOffset":8736,"endOffset":8760,"count":0}],"isBlockCoverage":true},{"functionName":"statFixSync","ranges":[{"startOffset":8940,"endOffset":9377,"count":3},{"startOffset":8985,"endOffset":8996,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9097,"endOffset":9373,"count":11},{"startOffset":9152,"endOffset":9184,"count":0},{"startOffset":9263,"endOffset":9287,"count":0},{"startOffset":9315,"endOffset":9339,"count":0}],"isBlockCoverage":true},{"functionName":"chownErOk","ranges":[{"startOffset":9850,"endOffset":10138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"node:constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/graceful-fs/legacy-streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2655,"count":1}],"isBlockCoverage":true},{"functionName":"legacy","ranges":[{"startOffset":64,"endOffset":2654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/graceful-fs/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":496,"count":1},{"startOffset":81,"endOffset":125,"count":0}],"isBlockCoverage":true},{"functionName":"getPrototypeOf","ranges":[{"startOffset":84,"endOffset":125,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":127,"endOffset":495,"count":1},{"startOffset":201,"endOffset":211,"count":0},{"startOffset":291,"endOffset":333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":477,"count":104}],"isBlockCoverage":true}]},{"scriptId":"171","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15271,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1082,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2078,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3171,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3414,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3538,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4545,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6477,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6536,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6629,"endOffset":6654,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6830,"endOffset":7961,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7996,"endOffset":8557,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8589,"endOffset":8675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8755,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8818,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11008,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11067,"endOffset":11124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11161,"endOffset":11186,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11337,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12132,"endOffset":12949,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12982,"endOffset":13366,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13401,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13999,"endOffset":14560,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14593,"endOffset":14975,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15157,"endOffset":15191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34493,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3287,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3441,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3553,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3888,"endOffset":4018,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4020,"endOffset":10138,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10140,"endOffset":10511,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10513,"endOffset":10796,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10798,"endOffset":11258,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11260,"endOffset":11380,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":11382,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12526,"endOffset":14927,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":15080,"endOffset":15318,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15320,"endOffset":15589,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":15591,"endOffset":15973,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16093,"endOffset":16481,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":16483,"endOffset":17924,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17926,"endOffset":18290,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18292,"endOffset":19650,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19652,"endOffset":20117,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20119,"endOffset":20495,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20497,"endOffset":20630,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20632,"endOffset":20871,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":20873,"endOffset":21075,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21077,"endOffset":21526,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21528,"endOffset":21697,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":21699,"endOffset":21860,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":21862,"endOffset":22409,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":22411,"endOffset":24433,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24435,"endOffset":25055,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":25057,"endOffset":25371,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":25373,"endOffset":26673,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":26675,"endOffset":26927,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":26929,"endOffset":27254,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27256,"endOffset":27578,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":27580,"endOffset":27909,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":27911,"endOffset":28304,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":28306,"endOffset":28524,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":28526,"endOffset":28739,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":28741,"endOffset":29007,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":29009,"endOffset":29237,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":29239,"endOffset":29571,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":29573,"endOffset":29850,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":29852,"endOffset":30182,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":30184,"endOffset":30521,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":30523,"endOffset":30802,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":30804,"endOffset":31146,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":31148,"endOffset":31430,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":31432,"endOffset":31740,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":31742,"endOffset":32616,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":32618,"endOffset":32732,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":32734,"endOffset":32975,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":32977,"endOffset":33321,"count":0}],"isBlockCoverage":false},{"functionName":"_watch","ranges":[{"startOffset":33323,"endOffset":33982,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8077,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1177,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1997,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2044,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3845,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4103,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4686,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5666,"endOffset":6355,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6359,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":6740,"endOffset":7003,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7183,"endOffset":7763,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7765,"endOffset":8020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11262,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3624,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3878,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4248,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4706,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5021,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5275,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6784,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7915,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8046,"endOffset":8383,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8412,"endOffset":8481,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8512,"endOffset":8583,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8586,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8862,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8902,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8979,"endOffset":11130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7216,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":716,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":833,"endOffset":7162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39087,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3851,"endOffset":9343,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9584,"endOffset":9684,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9687,"endOffset":9799,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9908,"endOffset":9959,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10053,"endOffset":10096,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10100,"endOffset":10291,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10430,"endOffset":10684,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10688,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10999,"endOffset":11241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11245,"endOffset":11332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11336,"endOffset":11504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11508,"endOffset":11705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11709,"endOffset":12887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12891,"endOffset":13896,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13980,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14232,"endOffset":14363,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14455,"endOffset":14591,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14862,"endOffset":15021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15025,"endOffset":16759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16763,"endOffset":17432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17436,"endOffset":17835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17839,"endOffset":20048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20052,"endOffset":20513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20517,"endOffset":20775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20779,"endOffset":21261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21265,"endOffset":21746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21750,"endOffset":22510,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22514,"endOffset":22941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22945,"endOffset":23223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23227,"endOffset":23485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23489,"endOffset":23749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23753,"endOffset":23908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23912,"endOffset":24587,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24591,"endOffset":24740,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24744,"endOffset":24898,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24902,"endOffset":25089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25093,"endOffset":25401,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25405,"endOffset":25713,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26148,"endOffset":26782,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26786,"endOffset":27494,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27569,"endOffset":28509,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28686,"endOffset":28855,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28974,"endOffset":29531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29568,"endOffset":37818,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38126,"endOffset":38506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12396,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11870,"endOffset":12283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/pretty-format/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":40134,"count":1}],"isBlockCoverage":true},{"functionName":"./src/collections.ts","ranges":[{"startOffset":357,"endOffset":5410,"count":1}],"isBlockCoverage":true},{"functionName":"getKeysOfEnumerableProperties","ranges":[{"startOffset":900,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"printIteratorEntries","ranges":[{"startOffset":1427,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"printIteratorValues","ranges":[{"startOffset":2672,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"printListItems","ranges":[{"startOffset":3564,"endOffset":4480,"count":0}],"isBlockCoverage":false},{"functionName":"printObjectProperties","ranges":[{"startOffset":4621,"endOffset":5401,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/AsymmetricMatcher.ts","ranges":[{"startOffset":5465,"endOffset":7878,"count":1},{"startOffset":6097,"endOffset":6109,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":6148,"endOffset":7669,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":7715,"endOffset":7763,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/DOMCollection.ts","ranges":[{"startOffset":7929,"endOffset":9555,"count":1}],"isBlockCoverage":true},{"functionName":"testName","ranges":[{"startOffset":8535,"endOffset":8592,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":8607,"endOffset":8696,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedNodeMap","ranges":[{"startOffset":8742,"endOffset":8802,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8822,"endOffset":9430,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/DOMElement.ts","ranges":[{"startOffset":9603,"endOffset":12333,"count":1}],"isBlockCoverage":true},{"functionName":"testHasAttribute","ranges":[{"startOffset":10228,"endOffset":10357,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomElement","ranges":[{"startOffset":10383,"endOffset":10513,"count":0}],"isBlockCoverage":false},{"functionName":"testNode","ranges":[{"startOffset":10532,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":10931,"endOffset":11003,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsText","ranges":[{"startOffset":11026,"endOffset":11093,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsComment","ranges":[{"startOffset":11094,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsFragment","ranges":[{"startOffset":11168,"endOffset":11243,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":11262,"endOffset":12208,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/Immutable.ts","ranges":[{"startOffset":12380,"endOffset":17234,"count":1}],"isBlockCoverage":true},{"functionName":"getImmutableName","ranges":[{"startOffset":13419,"endOffset":13446,"count":0}],"isBlockCoverage":false},{"functionName":"printAsLeaf","ranges":[{"startOffset":13468,"endOffset":13487,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableEntries","ranges":[{"startOffset":13605,"endOffset":13865,"count":0}],"isBlockCoverage":false},{"functionName":"getRecordEntries","ranges":[{"startOffset":14010,"endOffset":14327,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableRecord","ranges":[{"startOffset":14357,"endOffset":14793,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableSeq","ranges":[{"startOffset":14821,"endOffset":15627,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableValues","ranges":[{"startOffset":15658,"endOffset":15916,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":15936,"endOffset":16838,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":17033,"endOffset":17119,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/ReactElement.ts","ranges":[{"startOffset":17284,"endOffset":20701,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":17605,"endOffset":18219,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":17756,"endOffset":18209,"count":1},{"startOffset":17803,"endOffset":17812,"count":0},{"startOffset":17899,"endOffset":17924,"count":0},{"startOffset":17926,"endOffset":17935,"count":0},{"startOffset":17946,"endOffset":17949,"count":0},{"startOffset":17971,"endOffset":17987,"count":0},{"startOffset":18022,"endOffset":18197,"count":28},{"startOffset":18169,"endOffset":18181,"count":0}],"isBlockCoverage":true},{"functionName":"getChildren","ranges":[{"startOffset":18543,"endOffset":18775,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":18793,"endOffset":19854,"count":0}],"isBlockCoverage":false},{"functionName":"getPropKeys","ranges":[{"startOffset":19876,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":20043,"endOffset":20496,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":20542,"endOffset":20586,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/ReactTestComponent.ts","ranges":[{"startOffset":20757,"endOffset":22305,"count":1},{"startOffset":21448,"endOffset":21462,"count":0}],"isBlockCoverage":true},{"functionName":"getPropKeys","ranges":[{"startOffset":21484,"endOffset":21620,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":21640,"endOffset":22103,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":22149,"endOffset":22190,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/lib/escapeHTML.ts","ranges":[{"startOffset":22357,"endOffset":22791,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHTML","ranges":[{"startOffset":22692,"endOffset":22782,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins/lib/markup.ts","ranges":[{"startOffset":22839,"endOffset":26002,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":23216,"endOffset":23301,"count":1},{"startOffset":23282,"endOffset":23298,"count":0}],"isBlockCoverage":true},{"functionName":"printProps","ranges":[{"startOffset":23554,"endOffset":24218,"count":0}],"isBlockCoverage":false},{"functionName":"printChildren","ranges":[{"startOffset":24321,"endOffset":24551,"count":0}],"isBlockCoverage":false},{"functionName":"printText","ranges":[{"startOffset":24610,"endOffset":24759,"count":0}],"isBlockCoverage":false},{"functionName":"printComment","ranges":[{"startOffset":24813,"endOffset":24980,"count":0}],"isBlockCoverage":false},{"functionName":"printElement","ranges":[{"startOffset":25301,"endOffset":25726,"count":0}],"isBlockCoverage":false},{"functionName":"printElementAsLeaf","ranges":[{"startOffset":25792,"endOffset":25943,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":26224,"endOffset":26952,"count":14},{"startOffset":26416,"endOffset":26471,"count":5},{"startOffset":26471,"endOffset":26951,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27178,"endOffset":40080,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":28128,"endOffset":28213,"count":7},{"startOffset":28190,"endOffset":28193,"count":6},{"startOffset":28194,"endOffset":28210,"count":1}],"isBlockCoverage":true},{"functionName":"getConstructorName","ranges":[{"startOffset":28790,"endOffset":28870,"count":0}],"isBlockCoverage":false},{"functionName":"isWindow","ranges":[{"startOffset":28993,"endOffset":29102,"count":0}],"isBlockCoverage":false},{"functionName":"PrettyFormatPluginError","ranges":[{"startOffset":29229,"endOffset":29345,"count":0}],"isBlockCoverage":false},{"functionName":"isToStringedArrayType","ranges":[{"startOffset":29348,"endOffset":29887,"count":0}],"isBlockCoverage":false},{"functionName":"printNumber","ranges":[{"startOffset":29888,"endOffset":29967,"count":0}],"isBlockCoverage":false},{"functionName":"printBigInt","ranges":[{"startOffset":29968,"endOffset":30025,"count":0}],"isBlockCoverage":false},{"functionName":"printFunction","ranges":[{"startOffset":30026,"endOffset":30183,"count":0}],"isBlockCoverage":false},{"functionName":"printSymbol","ranges":[{"startOffset":30184,"endOffset":30272,"count":0}],"isBlockCoverage":false},{"functionName":"printError","ranges":[{"startOffset":30273,"endOffset":30342,"count":0}],"isBlockCoverage":false},{"functionName":"printBasicValue","ranges":[{"startOffset":30443,"endOffset":32068,"count":0}],"isBlockCoverage":false},{"functionName":"printComplexValue","ranges":[{"startOffset":32177,"endOffset":33996,"count":0}],"isBlockCoverage":false},{"functionName":"isNewPlugin","ranges":[{"startOffset":33997,"endOffset":34064,"count":0}],"isBlockCoverage":false},{"functionName":"printPlugin","ranges":[{"startOffset":34065,"endOffset":34898,"count":0}],"isBlockCoverage":false},{"functionName":"findPlugin","ranges":[{"startOffset":34899,"endOffset":35157,"count":0}],"isBlockCoverage":false},{"functionName":"printer","ranges":[{"startOffset":35158,"endOffset":35637,"count":0}],"isBlockCoverage":false},{"functionName":"toOptionsSubtype","ranges":[{"startOffset":35948,"endOffset":35966,"count":1}],"isBlockCoverage":true},{"functionName":"validateOptions","ranges":[{"startOffset":36348,"endOffset":37087,"count":0}],"isBlockCoverage":false},{"functionName":"getColorsHighlight","ranges":[{"startOffset":37115,"endOffset":37622,"count":0}],"isBlockCoverage":false},{"functionName":"getColorsEmpty","ranges":[{"startOffset":37647,"endOffset":37789,"count":0}],"isBlockCoverage":false},{"functionName":"getPrintFunctionName","ranges":[{"startOffset":37820,"endOffset":37894,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapeRegex","ranges":[{"startOffset":37919,"endOffset":37981,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapeString","ranges":[{"startOffset":38007,"endOffset":38071,"count":0}],"isBlockCoverage":false},{"functionName":"getConfig","ranges":[{"startOffset":38091,"endOffset":38979,"count":0}],"isBlockCoverage":false},{"functionName":"createIndent","ranges":[{"startOffset":38981,"endOffset":39075,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":39219,"endOffset":39748,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/pretty-format/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3899,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi256","ranges":[{"startOffset":71,"endOffset":129,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":152,"endOffset":240,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168,"endOffset":240,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":243,"endOffset":3781,"count":5},{"startOffset":1732,"endOffset":2064,"count":15},{"startOffset":1792,"endOffset":1971,"count":225}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2601,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3149,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3680,"endOffset":3731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/react-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1},{"startOffset":125,"endOffset":195,"count":0}],"isBlockCoverage":true}]},{"scriptId":"182","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/react-is/cjs/react-is.production.min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2265,"count":1}],"isBlockCoverage":true},{"functionName":"v","ranges":[{"startOffset":739,"endOffset":1005,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAsyncMode","ranges":[{"startOffset":1265,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isConcurrentMode","ranges":[{"startOffset":1311,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isContextConsumer","ranges":[{"startOffset":1358,"endOffset":1386,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isContextProvider","ranges":[{"startOffset":1413,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isElement","ranges":[{"startOffset":1460,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isForwardRef","ranges":[{"startOffset":1546,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isFragment","ranges":[{"startOffset":1594,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isLazy","ranges":[{"startOffset":1638,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isMemo","ranges":[{"startOffset":1682,"endOffset":1710,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isPortal","ranges":[{"startOffset":1729,"endOffset":1757,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isProfiler","ranges":[{"startOffset":1777,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isStrictMode","ranges":[{"startOffset":1827,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isSuspense","ranges":[{"startOffset":1875,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isSuspenseList","ranges":[{"startOffset":1927,"endOffset":1955,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValidElementType","ranges":[{"startOffset":1984,"endOffset":2246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-validate/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1753,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1832,"endOffset":1851,"count":1}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":2},{"startOffset":1931,"endOffset":1954,"count":0},{"startOffset":1957,"endOffset":2032,"count":0},{"startOffset":2152,"endOffset":2232,"count":0},{"startOffset":2293,"endOffset":2310,"count":0},{"startOffset":2358,"endOffset":2392,"count":0},{"startOffset":2495,"endOffset":2529,"count":0},{"startOffset":2612,"endOffset":2687,"count":1},{"startOffset":2642,"endOffset":2662,"count":0},{"startOffset":2687,"endOffset":2761,"count":1},{"startOffset":2761,"endOffset":2827,"count":0},{"startOffset":2827,"endOffset":2921,"count":1},{"startOffset":2921,"endOffset":2985,"count":0},{"startOffset":2985,"endOffset":3052,"count":1},{"startOffset":3052,"endOffset":3113,"count":0},{"startOffset":3113,"endOffset":3156,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2200,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2362,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":2397,"endOffset":2447,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2499,"endOffset":2529,"count":0}],"isBlockCoverage":false},{"functionName":"toUpperCase","ranges":[{"startOffset":2534,"endOffset":2584,"count":1}],"isBlockCoverage":true}]},{"scriptId":"184","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":false}]},{"scriptId":"185","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7433,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":831,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1049,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1178,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1318,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1485,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1625,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1785,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1937,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2085,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2238,"endOffset":2421,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2425,"endOffset":2604,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2608,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2788,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2964,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3166,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3359,"endOffset":3517,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3521,"endOffset":3681,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3685,"endOffset":3821,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3825,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":3977,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4129,"endOffset":4383,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4387,"endOffset":5328,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6196,"endOffset":6793,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":6862,"endOffset":7358,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6446,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1134,"endOffset":1586,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1639,"endOffset":2370,"count":16},{"startOffset":1712,"endOffset":1761,"count":0},{"startOffset":1838,"endOffset":1884,"count":0},{"startOffset":2084,"endOffset":2139,"count":0},{"startOffset":2241,"endOffset":2272,"count":1},{"startOffset":2273,"endOffset":2285,"count":15}],"isBlockCoverage":true},{"functionName":"get detail","ranges":[{"startOffset":2374,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2483,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":2917,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3218,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3330,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3715,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3922,"endOffset":4063,"count":16}],"isBlockCoverage":true},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4065,"endOffset":5648,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5650,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6087,"endOffset":6342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3858,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":746,"endOffset":3084,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1411,"endOffset":1507,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1623,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1837,"endOffset":1934,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2052,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2265,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2486,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2864,"endOffset":3062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3088,"endOffset":3329,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3333,"endOffset":3719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1291,"endOffset":1351,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1355,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1654,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1889,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2102,"endOffset":2319,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2323,"endOffset":2451,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2455,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2789,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3050,"endOffset":3271,"count":16},{"startOffset":3186,"endOffset":3235,"count":0}],"isBlockCoverage":true},{"functionName":"measure","ranges":[{"startOffset":3275,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3564,"endOffset":3660,"count":2741}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3664,"endOffset":3980,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":3984,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4114,"endOffset":4342,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":5943,"endOffset":6112,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6000,"endOffset":6091,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6156,"endOffset":6294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":610,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":987,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8416,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":894,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1032,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1173,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1636,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1814,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2004,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2178,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2364,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2538,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2724,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2900,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3082,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3276,"endOffset":3405,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3476,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3896,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4320,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4572,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4810,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4930,"endOffset":5085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5089,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5153,"endOffset":5410,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5462,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5697,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6008,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6215,"endOffset":6488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6492,"endOffset":6657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6661,"endOffset":6721,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":6725,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":6954,"endOffset":6963,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":6966,"endOffset":7255,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7309,"endOffset":7318,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7321,"endOffset":7415,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7558,"endOffset":8243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1724,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":625,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":726,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":977,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1283,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4028,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":850,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1224,"endOffset":1836,"count":81},{"startOffset":1633,"endOffset":1835,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1752,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1840,"endOffset":2056,"count":162},{"startOffset":1954,"endOffset":2026,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2231,"endOffset":2333,"count":81}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2473,"endOffset":2602,"count":81}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2606,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2844,"endOffset":2872,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2921,"endOffset":3064,"count":83},{"startOffset":3051,"endOffset":3059,"count":40}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3067,"endOffset":3674,"count":86},{"startOffset":3298,"endOffset":3334,"count":0},{"startOffset":3336,"endOffset":3406,"count":0},{"startOffset":3490,"endOffset":3496,"count":0},{"startOffset":3568,"endOffset":3590,"count":43}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3677,"endOffset":3834,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3837,"endOffset":3973,"count":43}],"isBlockCoverage":true}]},{"scriptId":"194","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17488,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":464,"endOffset":580,"count":48},{"startOffset":510,"endOffset":528,"count":47},{"startOffset":528,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1246,"endOffset":1271,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1855,"endOffset":1983,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2284,"endOffset":2421,"count":2},{"startOffset":2344,"endOffset":2419,"count":1}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2994,"endOffset":3415,"count":48},{"startOffset":3071,"endOffset":3098,"count":23},{"startOffset":3100,"endOffset":3117,"count":0},{"startOffset":3211,"endOffset":3236,"count":0},{"startOffset":3255,"endOffset":3334,"count":0},{"startOffset":3335,"endOffset":3339,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":3639,"endOffset":3906,"count":25},{"startOffset":3698,"endOffset":3714,"count":0},{"startOffset":3843,"endOffset":3862,"count":1},{"startOffset":3863,"endOffset":3872,"count":24}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":4026,"endOffset":4171,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":4253,"endOffset":4576,"count":23}],"isBlockCoverage":true},{"functionName":"loadCJSModule","ranges":[{"startOffset":5236,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":7775,"endOffset":9217,"count":2},{"startOffset":8044,"endOffset":8077,"count":0},{"startOffset":8242,"endOffset":8264,"count":1},{"startOffset":8265,"endOffset":8294,"count":1},{"startOffset":8311,"endOffset":8367,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8427,"endOffset":9205,"count":2},{"startOffset":8718,"endOffset":8761,"count":0},{"startOffset":8804,"endOffset":9161,"count":4},{"startOffset":8907,"endOffset":8934,"count":1},{"startOffset":8934,"endOffset":9058,"count":3},{"startOffset":9058,"endOffset":9114,"count":0},{"startOffset":9114,"endOffset":9161,"count":3}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":9252,"endOffset":9521,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9373,"endOffset":9517,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9683,"endOffset":9797,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":9985,"endOffset":10729,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":10918,"endOffset":13463,"count":2},{"startOffset":11100,"endOffset":11143,"count":0},{"startOffset":11145,"endOffset":11214,"count":0},{"startOffset":11599,"endOffset":11604,"count":0},{"startOffset":11612,"endOffset":11661,"count":0},{"startOffset":11827,"endOffset":13426,"count":0}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":13587,"endOffset":13993,"count":16},{"startOffset":13866,"endOffset":13918,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":14105,"endOffset":16326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16392,"endOffset":17485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/jest.config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3514,"count":1},{"startOffset":834,"endOffset":848,"count":0},{"startOffset":976,"endOffset":1114,"count":0},{"startOffset":1274,"endOffset":1340,"count":0},{"startOffset":1458,"endOffset":1596,"count":0},{"startOffset":1628,"endOffset":1756,"count":0},{"startOffset":1788,"endOffset":2297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"196","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15200,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":449,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1203,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1361,"endOffset":1548,"count":43}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1663,"endOffset":10702,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11277,"endOffset":15080,"count":43}],"isBlockCoverage":false},{"functionName":"ModuleJobSync","ranges":[{"startOffset":11894,"endOffset":13242,"count":43},{"startOffset":12675,"endOffset":12921,"count":81}],"isBlockCoverage":true},{"functionName":"get modulePromise","ranges":[{"startOffset":13246,"endOffset":13311,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":13315,"endOffset":14250,"count":0}],"isBlockCoverage":false},{"functionName":"runSync","ranges":[{"startOffset":14254,"endOffset":15078,"count":2},{"startOffset":14815,"endOffset":14870,"count":0},{"startOffset":14872,"endOffset":14923,"count":0}],"isBlockCoverage":true}]},{"scriptId":"197","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7611,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1239,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceSync","ranges":[{"startOffset":2649,"endOffset":3388,"count":25},{"startOffset":2829,"endOffset":3255,"count":0},{"startOffset":3268,"endOffset":3278,"count":0},{"startOffset":3280,"endOffset":3335,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":3509,"endOffset":4917,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoadSync","ranges":[{"startOffset":5430,"endOffset":6070,"count":41},{"startOffset":5728,"endOffset":5752,"count":16},{"startOffset":5752,"endOffset":5881,"count":25}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":6258,"endOffset":6890,"count":41},{"startOffset":6488,"endOffset":6515,"count":16},{"startOffset":6516,"endOffset":6543,"count":16},{"startOffset":6544,"endOffset":6673,"count":0},{"startOffset":6678,"endOffset":6888,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":7269,"endOffset":7507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true}]},{"scriptId":"199","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/create-utilities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"toDescriptor","ranges":[{"startOffset":333,"endOffset":551,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":374,"endOffset":522,"count":2}],"isBlockCoverage":true},{"functionName":"createObject","ranges":[{"startOffset":574,"endOffset":621,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeSourceModule","ranges":[{"startOffset":652,"endOffset":784,"count":1},{"startOffset":703,"endOffset":725,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmUtilities","ranges":[{"startOffset":786,"endOffset":1720,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":966,"endOffset":990,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1019,"endOffset":1057,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1101,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1159,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1227,"endOffset":1262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1305,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1364,"endOffset":1393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1441,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1496,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1605,"endOffset":1629,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1663,"endOffset":1691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/url-or-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2085,"count":1}],"isBlockCoverage":true},{"functionName":"isUrlInstance","ranges":[{"startOffset":410,"endOffset":441,"count":0}],"isBlockCoverage":false},{"functionName":"isUrlString","ranges":[{"startOffset":516,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":675,"endOffset":740,"count":0}],"isBlockCoverage":false},{"functionName":"toUrl","ranges":[{"startOffset":889,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":1232,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"toAbsolutePath","ranges":[{"startOffset":1469,"endOffset":1591,"count":0}],"isBlockCoverage":false},{"functionName":"addSlash","ranges":[{"startOffset":1610,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"toDirectory","ranges":[{"startOffset":1838,"endOffset":1879,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/create-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"createImport","ranges":[{"startOffset":98,"endOffset":284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/import-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2262,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleUrl","ranges":[{"startOffset":221,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntaxErrorDetails","ranges":[{"startOffset":419,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"importModule","ranges":[{"startOffset":1431,"endOffset":2232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27267,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":1965,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3430,"endOffset":5105,"count":6},{"startOffset":3612,"endOffset":3632,"count":0},{"startOffset":3691,"endOffset":3731,"count":0},{"startOffset":4095,"endOffset":4114,"count":3},{"startOffset":4213,"endOffset":4237,"count":3},{"startOffset":4239,"endOffset":4504,"count":0},{"startOffset":4593,"endOffset":4660,"count":0},{"startOffset":4889,"endOffset":4897,"count":3},{"startOffset":4898,"endOffset":4909,"count":3},{"startOffset":4928,"endOffset":5053,"count":0}],"isBlockCoverage":true},{"functionName":"_forkChild","ranges":[{"startOffset":5107,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5598,"endOffset":6112,"count":2},{"startOffset":5780,"endOffset":5834,"count":0},{"startOffset":6005,"endOffset":6020,"count":0}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":6649,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6932,"endOffset":7296,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6953,"endOffset":7293,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7069,"endOffset":7266,"count":1},{"startOffset":7208,"endOffset":7260,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7433,"endOffset":8331,"count":1},{"startOffset":7566,"endOffset":7785,"count":0},{"startOffset":7807,"endOffset":7827,"count":0},{"startOffset":7895,"endOffset":7967,"count":0},{"startOffset":7992,"endOffset":8025,"count":0},{"startOffset":8164,"endOffset":8284,"count":0}],"isBlockCoverage":true},{"functionName":"execFile","ranges":[{"startOffset":8944,"endOffset":13708,"count":1},{"startOffset":9970,"endOffset":10002,"count":0},{"startOffset":11719,"endOffset":11839,"count":0}],"isBlockCoverage":true},{"functionName":"exithandler","ranges":[{"startOffset":10146,"endOffset":11261,"count":2},{"startOffset":10199,"endOffset":10246,"count":1},{"startOffset":10246,"endOffset":10308,"count":0},{"startOffset":10308,"endOffset":10329,"count":1},{"startOffset":10329,"endOffset":10336,"count":0},{"startOffset":10336,"endOffset":10407,"count":1},{"startOffset":10407,"endOffset":10487,"count":0},{"startOffset":10489,"endOffset":10544,"count":1},{"startOffset":10544,"endOffset":10596,"count":0},{"startOffset":10596,"endOffset":10614,"count":1},{"startOffset":10614,"endOffset":10694,"count":0},{"startOffset":10696,"endOffset":10751,"count":1},{"startOffset":10751,"endOffset":10803,"count":0},{"startOffset":10803,"endOffset":10817,"count":1},{"startOffset":10817,"endOffset":10830,"count":0},{"startOffset":10831,"endOffset":10849,"count":0},{"startOffset":10851,"endOffset":10910,"count":0},{"startOffset":10910,"endOffset":10932,"count":1},{"startOffset":10940,"endOffset":10998,"count":1},{"startOffset":10998,"endOffset":11204,"count":0},{"startOffset":11204,"endOffset":11260,"count":1}],"isBlockCoverage":true},{"functionName":"errorhandler","ranges":[{"startOffset":11265,"endOffset":11433,"count":1}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":11437,"endOffset":11690,"count":0}],"isBlockCoverage":false},{"functionName":"delayedKill","ranges":[{"startOffset":11748,"endOffset":11816,"count":0}],"isBlockCoverage":false},{"functionName":"onChildStdout","ranges":[{"startOffset":11952,"endOffset":12751,"count":0}],"isBlockCoverage":false},{"functionName":"onChildStderr","ranges":[{"startOffset":12870,"endOffset":13595,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13852,"endOffset":14052,"count":9},{"startOffset":13950,"endOffset":14007,"count":6},{"startOffset":14010,"endOffset":14050,"count":3}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14054,"endOffset":19366,"count":9},{"startOffset":14215,"endOffset":14280,"count":0},{"startOffset":14308,"endOffset":14351,"count":7},{"startOffset":14351,"endOffset":14542,"count":2},{"startOffset":14375,"endOffset":14395,"count":0},{"startOffset":14431,"endOffset":14496,"count":0},{"startOffset":14622,"endOffset":14645,"count":0},{"startOffset":14819,"endOffset":14872,"count":3},{"startOffset":14942,"endOffset":15006,"count":0},{"startOffset":15069,"endOffset":15093,"count":0},{"startOffset":15095,"endOffset":15173,"count":0},{"startOffset":15236,"endOffset":15260,"count":0},{"startOffset":15262,"endOffset":15340,"count":0},{"startOffset":15451,"endOffset":15493,"count":0},{"startOffset":15495,"endOffset":15626,"count":0},{"startOffset":15690,"endOffset":15810,"count":0},{"startOffset":15886,"endOffset":15956,"count":1},{"startOffset":16096,"endOffset":16204,"count":1},{"startOffset":16227,"endOffset":17089,"count":2},{"startOffset":16438,"endOffset":16850,"count":0},{"startOffset":16911,"endOffset":16932,"count":0},{"startOffset":16988,"endOffset":17012,"count":0},{"startOffset":17132,"endOffset":17185,"count":0},{"startOffset":17263,"endOffset":17277,"count":3},{"startOffset":17530,"endOffset":18134,"count":0},{"startOffset":18231,"endOffset":18274,"count":1230},{"startOffset":18312,"endOffset":18777,"count":0},{"startOffset":18808,"endOffset":19061,"count":1230}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18556,"endOffset":18765,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19368,"endOffset":19624,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20179,"endOffset":21403,"count":7},{"startOffset":20545,"endOffset":20919,"count":0},{"startOffset":20943,"endOffset":21384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20578,"endOffset":20766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20810,"endOffset":20913,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21279,"endOffset":21380,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22163,"endOffset":23671,"count":2},{"startOffset":22679,"endOffset":22688,"count":0},{"startOffset":22725,"endOffset":22825,"count":0},{"startOffset":22954,"endOffset":23625,"count":6},{"startOffset":23041,"endOffset":23621,"count":0}],"isBlockCoverage":true},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23674,"endOffset":24060,"count":2},{"startOffset":23748,"endOffset":23802,"count":0},{"startOffset":23830,"endOffset":24044,"count":0}],"isBlockCoverage":true},{"functionName":"execFileSync","ranges":[{"startOffset":24573,"endOffset":25037,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25535,"endOffset":25911,"count":2},{"startOffset":25748,"endOffset":25761,"count":0},{"startOffset":25767,"endOffset":25800,"count":0},{"startOffset":25877,"endOffset":25887,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25914,"endOffset":26137,"count":2486},{"startOffset":25996,"endOffset":26037,"count":2484},{"startOffset":26039,"endOffset":26135,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26140,"endOffset":26302,"count":15},{"startOffset":26234,"endOffset":26300,"count":7}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":26305,"endOffset":26493,"count":10},{"startOffset":26363,"endOffset":26409,"count":1},{"startOffset":26411,"endOffset":26491,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26496,"endOffset":26769,"count":3},{"startOffset":26615,"endOffset":26767,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26772,"endOffset":27135,"count":10},{"startOffset":26851,"endOffset":26884,"count":9},{"startOffset":26886,"endOffset":26936,"count":1},{"startOffset":26936,"endOffset":27133,"count":9},{"startOffset":26966,"endOffset":27133,"count":0}],"isBlockCoverage":true}]},{"scriptId":"204","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31799,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2498,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2564,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2680,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2754,"endOffset":2895,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2925,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4486,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5239,"endOffset":5696,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5761,"endOffset":5820,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5827,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5946,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6073,"endOffset":6232,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6243,"endOffset":6658,"count":7},{"startOffset":6335,"endOffset":6349,"count":0},{"startOffset":6354,"endOffset":6372,"count":0},{"startOffset":6377,"endOffset":6446,"count":4},{"startOffset":6451,"endOffset":6511,"count":3},{"startOffset":6516,"endOffset":6579,"count":0},{"startOffset":6600,"endOffset":6637,"count":6}],"isBlockCoverage":true},{"functionName":"ChildProcess","ranges":[{"startOffset":6660,"endOffset":8153,"count":7},{"startOffset":8083,"endOffset":8151,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":7001,"endOffset":8039,"count":7},{"startOffset":7049,"endOffset":7092,"count":0},{"startOffset":7159,"endOffset":7194,"count":4},{"startOffset":7270,"endOffset":7566,"count":1},{"startOffset":7337,"endOffset":7346,"count":0},{"startOffset":7566,"endOffset":7636,"count":6}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8276,"endOffset":8754,"count":7},{"startOffset":8366,"endOffset":8373,"count":0},{"startOffset":8416,"endOffset":8752,"count":27},{"startOffset":8657,"endOffset":8676,"count":12},{"startOffset":8677,"endOffset":8702,"count":0},{"startOffset":8727,"endOffset":8752,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8757,"endOffset":8847,"count":12}],"isBlockCoverage":true},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8850,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9081,"endOffset":9194,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9228,"endOffset":12799,"count":7},{"startOffset":9379,"endOffset":9388,"count":1},{"startOffset":9686,"endOffset":9695,"count":4},{"startOffset":9723,"endOffset":10108,"count":6},{"startOffset":9826,"endOffset":9848,"count":0},{"startOffset":10226,"endOffset":10256,"count":0},{"startOffset":10597,"endOffset":10854,"count":1},{"startOffset":10839,"endOffset":10850,"count":0},{"startOffset":10854,"endOffset":11210,"count":6},{"startOffset":10869,"endOffset":11160,"count":0},{"startOffset":11281,"endOffset":12195,"count":27},{"startOffset":11346,"endOffset":11355,"count":0},{"startOffset":11377,"endOffset":11428,"count":6},{"startOffset":11428,"endOffset":11649,"count":21},{"startOffset":11649,"endOffset":11911,"count":0},{"startOffset":11911,"endOffset":11936,"count":21},{"startOffset":11936,"endOffset":12191,"count":12},{"startOffset":12012,"endOffset":12018,"count":0},{"startOffset":12045,"endOffset":12062,"count":8},{"startOffset":12064,"endOffset":12185,"count":8},{"startOffset":12263,"endOffset":12284,"count":4},{"startOffset":12285,"endOffset":12291,"count":3},{"startOffset":12360,"endOffset":12381,"count":4},{"startOffset":12382,"endOffset":12388,"count":3},{"startOffset":12457,"endOffset":12478,"count":4},{"startOffset":12479,"endOffset":12485,"count":3},{"startOffset":12549,"endOffset":12659,"count":27},{"startOffset":12633,"endOffset":12639,"count":15},{"startOffset":12640,"endOffset":12657,"count":12},{"startOffset":12743,"endOffset":12782,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12130,"endOffset":12175,"count":8}],"isBlockCoverage":true},{"functionName":"onErrorNT","ranges":[{"startOffset":12803,"endOffset":12864,"count":1}],"isBlockCoverage":true},{"functionName":"onSpawnNT","ranges":[{"startOffset":12867,"endOffset":12917,"count":6}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12950,"endOffset":13623,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":13666,"endOffset":13723,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13756,"endOffset":13810,"count":3},{"startOffset":13789,"endOffset":13808,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13845,"endOffset":13901,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13904,"endOffset":14901,"count":6}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":14005,"endOffset":14106,"count":6}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14420,"endOffset":14528,"count":0}],"isBlockCoverage":false},{"functionName":"unrefCounted","ranges":[{"startOffset":14532,"endOffset":14670,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14674,"endOffset":14745,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14749,"endOffset":14824,"count":3}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14828,"endOffset":14899,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15049,"endOffset":27173,"count":6},{"startOffset":15635,"endOffset":15699,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15299,"endOffset":15341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15397,"endOffset":15441,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15936,"endOffset":17115,"count":7912},{"startOffset":16061,"endOffset":16935,"count":7909},{"startOffset":16270,"endOffset":16297,"count":0},{"startOffset":16364,"endOffset":16929,"count":7887},{"startOffset":16619,"endOffset":16852,"count":0},{"startOffset":16935,"endOffset":17111,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17269,"endOffset":19610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19641,"endOffset":20046,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19676,"endOffset":20040,"count":27},{"startOffset":19710,"endOffset":19745,"count":21},{"startOffset":19755,"endOffset":19762,"count":6},{"startOffset":19762,"endOffset":19882,"count":21},{"startOffset":19882,"endOffset":20039,"count":0}],"isBlockCoverage":true},{"functionName":"target.send","ranges":[{"startOffset":20066,"endOffset":20786,"count":7893},{"startOffset":20151,"endOffset":20236,"count":6514},{"startOffset":20236,"endOffset":20419,"count":1379},{"startOffset":20277,"endOffset":20337,"count":0},{"startOffset":20370,"endOffset":20419,"count":0},{"startOffset":20566,"endOffset":20785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20728,"endOffset":20756,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20806,"endOffset":24977,"count":7893},{"startOffset":20879,"endOffset":20894,"count":0},{"startOffset":20935,"endOffset":20973,"count":0},{"startOffset":21297,"endOffset":21335,"count":0},{"startOffset":21336,"endOffset":21375,"count":0},{"startOffset":21377,"endOffset":21494,"count":0},{"startOffset":21575,"endOffset":21626,"count":0},{"startOffset":21703,"endOffset":23307,"count":0},{"startOffset":23335,"endOffset":23469,"count":0},{"startOffset":23471,"endOffset":23743,"count":0},{"startOffset":23950,"endOffset":24126,"count":0},{"startOffset":24153,"endOffset":24344,"count":0},{"startOffset":24386,"endOffset":24437,"count":6514},{"startOffset":24443,"endOffset":24849,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":24180,"endOffset":24305,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24795,"endOffset":24823,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":25551,"endOffset":25975,"count":6},{"startOffset":25589,"endOffset":25664,"count":0}],"isBlockCoverage":true},{"functionName":"target._disconnect","ranges":[{"startOffset":26001,"endOffset":26618,"count":6},{"startOffset":26206,"endOffset":26231,"count":0},{"startOffset":26481,"endOffset":26583,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":26260,"endOffset":26387,"count":6},{"startOffset":26297,"endOffset":26304,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":26623,"endOffset":26907,"count":7887},{"startOffset":26799,"endOffset":26906,"count":0}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26911,"endOffset":27129,"count":7887},{"startOffset":26994,"endOffset":27001,"count":0},{"startOffset":27035,"endOffset":27054,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":27208,"endOffset":27518,"count":7887},{"startOffset":27307,"endOffset":27351,"count":7884},{"startOffset":27352,"endOffset":27408,"count":0},{"startOffset":27409,"endOffset":27514,"count":0}],"isBlockCoverage":true},{"functionName":"getValidStdio","ranges":[{"startOffset":27552,"endOffset":30477,"count":9},{"startOffset":27684,"endOffset":27728,"count":1},{"startOffset":27728,"endOffset":27818,"count":8},{"startOffset":27760,"endOffset":27818,"count":0},{"startOffset":28062,"endOffset":28099,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28212,"endOffset":30436,"count":33},{"startOffset":28470,"endOffset":28518,"count":6},{"startOffset":28501,"endOffset":28511,"count":0},{"startOffset":28548,"endOffset":28606,"count":0},{"startOffset":28633,"endOffset":28658,"count":15},{"startOffset":28659,"endOffset":28717,"count":15},{"startOffset":28704,"endOffset":28716,"count":9},{"startOffset":28719,"endOffset":28973,"count":18},{"startOffset":28776,"endOffset":28790,"count":0},{"startOffset":28890,"endOffset":28932,"count":12},{"startOffset":28973,"endOffset":30415,"count":15},{"startOffset":29000,"endOffset":29394,"count":6},{"startOffset":29039,"endOffset":29224,"count":0},{"startOffset":29394,"endOffset":30415,"count":9},{"startOffset":29425,"endOffset":29514,"count":0},{"startOffset":29550,"endOffset":29581,"count":0},{"startOffset":29683,"endOffset":29693,"count":0},{"startOffset":29710,"endOffset":30415,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":28237,"endOffset":28429,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30480,"endOffset":30796,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30799,"endOffset":31000,"count":18},{"startOffset":30919,"endOffset":30998,"count":4}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":31002,"endOffset":31673,"count":2},{"startOffset":31204,"endOffset":31328,"count":6},{"startOffset":31243,"endOffset":31252,"count":2},{"startOffset":31252,"endOffset":31328,"count":4},{"startOffset":31461,"endOffset":31653,"count":0}],"isBlockCoverage":true}]},{"scriptId":"205","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28668,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2910,"endOffset":3007,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3073,"endOffset":4712,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4823,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4904,"endOffset":5347,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5349,"endOffset":5914,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5916,"endOffset":6208,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6276,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6798,"endOffset":10253,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10283,"endOffset":11079,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":11083,"endOffset":11429,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11432,"endOffset":12078,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":12111,"endOffset":12422,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12527,"endOffset":12968,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12972,"endOffset":13732,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13735,"endOffset":14119,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":14122,"endOffset":14549,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14552,"endOffset":14690,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14693,"endOffset":14817,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14820,"endOffset":15017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15588,"endOffset":18481,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18484,"endOffset":19627,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19629,"endOffset":19810,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19837,"endOffset":20405,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20447,"endOffset":20580,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20584,"endOffset":20638,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20668,"endOffset":20862,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20898,"endOffset":21212,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21248,"endOffset":21400,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21430,"endOffset":21608,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21647,"endOffset":21843,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21887,"endOffset":22091,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22136,"endOffset":22402,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22438,"endOffset":22816,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22854,"endOffset":23235,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23285,"endOffset":23896,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23948,"endOffset":24565,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24569,"endOffset":24732,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24735,"endOffset":24899,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24902,"endOffset":25160,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25163,"endOffset":25278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25304,"endOffset":25411,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25440,"endOffset":25549,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25590,"endOffset":25647,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25688,"endOffset":25745,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25786,"endOffset":25843,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25884,"endOffset":25941,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25980,"endOffset":26049,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":26089,"endOffset":26159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26278,"endOffset":26332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26405,"endOffset":26461,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26614,"endOffset":26671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26747,"endOffset":26806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26962,"endOffset":27019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27095,"endOffset":27154,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27306,"endOffset":27359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27431,"endOffset":27486,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27638,"endOffset":27695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27771,"endOffset":27830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27937,"endOffset":27972,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28081,"endOffset":28118,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28403,"endOffset":28439,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28443,"endOffset":28484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1851,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":478,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":582,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":679,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1326,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2709,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1194,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1544,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2408,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":false}]},{"scriptId":"209","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":352,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":775,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":944,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":999,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1091,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1144,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1236,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1287,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"get excludeNetwork","ranges":[{"startOffset":1368,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"set excludeNetwork","ranges":[{"startOffset":1433,"endOffset":1531,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1535,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1584,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1725,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1801,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1923,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1991,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2156,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2246,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2384,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2557,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2683,"endOffset":2757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/is-relative-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true},{"functionName":"isRelativePath","ranges":[{"startOffset":0,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/create-read-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"toAbsolute","ranges":[{"startOffset":125,"endOffset":192,"count":0}],"isBlockCoverage":false},{"functionName":"createReadJson","ranges":[{"startOffset":194,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"createReadJsonSync","ranges":[{"startOffset":281,"endOffset":374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/read-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"readJson","ranges":[{"startOffset":103,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonSync","ranges":[{"startOffset":448,"endOffset":783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/esm-utils/lib/create-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1}],"isBlockCoverage":true},{"functionName":"createResolve","ranges":[{"startOffset":45,"endOffset":120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":713,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/lib/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34689,"count":1}],"isBlockCoverage":true},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":2032,"endOffset":2873,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":3000,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":4323,"endOffset":4697,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":4999,"endOffset":5200,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5320,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":6837,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":8436,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":8762,"endOffset":8963,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":9128,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":9649,"endOffset":10019,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":10311,"endOffset":13263,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":13318,"endOffset":13476,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":13785,"endOffset":16488,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":16600,"endOffset":17581,"count":0}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":17662,"endOffset":18342,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":18553,"endOffset":21132,"count":0}],"isBlockCoverage":false},{"functionName":"patternKeyCompare","ranges":[{"startOffset":21184,"endOffset":21690,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":21800,"endOffset":24115,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":24175,"endOffset":25148,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":25273,"endOffset":27276,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":27337,"endOffset":27624,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27685,"endOffset":27865,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":28411,"endOffset":29855,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":29973,"endOffset":31324,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":31942,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":32375,"endOffset":32677,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":32844,"endOffset":34688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/lib/get-format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3513,"count":1}],"isBlockCoverage":true},{"functionName":"mimeToFormat","ranges":[{"startOffset":635,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1328,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1399,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1822,"endOffset":2195,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2232,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":3106,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3280,"endOffset":3512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/lib/package-json-reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":1124,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3163,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":4308,"endOffset":4449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13601,"count":1}],"isBlockCoverage":true},{"functionName":"formatList","ranges":[{"startOffset":1439,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1974,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4259,"endOffset":4405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4601,"endOffset":4760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5021,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6038,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6530,"endOffset":6733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6940,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7855,"endOffset":7944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8142,"endOffset":8445,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":8807,"endOffset":9077,"count":12}],"isBlockCoverage":true},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":9175,"endOffset":10294,"count":12}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":9333,"endOffset":10292,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":10326,"endOffset":10837,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11018,"endOffset":11314,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11455,"endOffset":11853,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":11970,"endOffset":12882,"count":0}],"isBlockCoverage":false},{"functionName":"determineSpecificType","ranges":[{"startOffset":13007,"endOffset":13600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"node:v8","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13337,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":2300,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":2811,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":4440,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":4992,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":6167,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":6964,"endOffset":7374,"count":0}],"isBlockCoverage":false},{"functionName":"setHeapSnapshotNearHeapLimit","ranges":[{"startOffset":7428,"endOffset":7734,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":8005,"endOffset":8321,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewTypeToIndex","ranges":[{"startOffset":8324,"endOffset":9056,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewIndexToType","ranges":[{"startOffset":9058,"endOffset":9638,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":9687,"endOffset":9775,"count":1}],"isBlockCoverage":true},{"functionName":"_writeHostObject","ranges":[{"startOffset":9945,"endOffset":10979,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":11170,"endOffset":11989,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":12113,"endOffset":12257,"count":1}],"isBlockCoverage":true},{"functionName":"deserialize","ranges":[{"startOffset":12433,"endOffset":12558,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12560,"endOffset":12878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"node:internal/heap_utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2427,"count":1}],"isBlockCoverage":false},{"functionName":"getHeapSnapshotOptions","ranges":[{"startOffset":708,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":1141,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":1299,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1372,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1556,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"queryObjects","ranges":[{"startOffset":1661,"endOffset":2339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"node:internal/promise_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3074,"count":1}],"isBlockCoverage":false},{"functionName":"initAll","ranges":[{"startOffset":476,"endOffset":974,"count":0}],"isBlockCoverage":false},{"functionName":"makeRunHook","ranges":[{"startOffset":976,"endOffset":1512,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1014,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFastPath","ranges":[{"startOffset":1650,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1737,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2031,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"makeUseHook","ranges":[{"startOffset":2193,"endOffset":2433,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2259,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":2592,"endOffset":2990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13843,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1874,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2658,"endOffset":3900,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":4234,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":5698,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":6142,"endOffset":10122,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":10142,"endOffset":13805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5797,"endOffset":5967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11171,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":867,"endOffset":2486,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2603,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3021,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3250,"endOffset":3489,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3492,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9657,"endOffset":10967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/import-meta-resolve/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1184,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultConditions","ranges":[{"startOffset":542,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":682,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":834,"endOffset":1183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/tests/config/install-prettier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4261,"count":1},{"startOffset":477,"endOffset":537,"count":0},{"startOffset":707,"endOffset":899,"count":0}],"isBlockCoverage":true},{"functionName":"escapeFile","ranges":[{"startOffset":479,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFile","ranges":[{"startOffset":542,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":709,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":904,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":942,"endOffset":1145,"count":0}],"isBlockCoverage":false},{"functionName":"createTemporaryDirectory","ranges":[{"startOffset":1180,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUp","ranges":[{"startOffset":1945,"endOffset":2509,"count":1},{"startOffset":2020,"endOffset":2508,"count":0}],"isBlockCoverage":true},{"functionName":"installPrettier","ranges":[{"startOffset":2511,"endOffset":4227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8841,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3092,"endOffset":3194,"count":2}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3218,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3490,"endOffset":3572,"count":6}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3574,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3676,"endOffset":3778,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3780,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3886,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3994,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4152,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4236,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4294,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4378,"endOffset":4460,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4462,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5599,"endOffset":5684,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5686,"endOffset":5970,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5972,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6141,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6399,"endOffset":6588,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6637,"endOffset":7470,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6735,"endOffset":7225,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7231,"endOffset":7462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8214,"endOffset":8254,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8366,"endOffset":8413,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8539,"endOffset":8560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"228","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16246,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1260,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1628,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2091,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2636,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3306,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4902,"endOffset":7142,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7144,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8023,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8417,"endOffset":9033,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9398,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9699,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10427,"endOffset":10730,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10732,"endOffset":10970,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":10972,"endOffset":11292,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11294,"endOffset":12527,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12529,"endOffset":12985,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":12987,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13519,"endOffset":13563,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13638,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14067,"endOffset":14364,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14366,"endOffset":15259,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15261,"endOffset":16059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3018,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":472,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1138,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1545,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2059,"endOffset":2950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16364,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1942,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2139,"endOffset":2408,"count":12},{"startOffset":2197,"endOffset":2385,"count":1},{"startOffset":2266,"endOffset":2381,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2340,"endOffset":2373,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2410,"endOffset":2538,"count":6},{"startOffset":2522,"endOffset":2526,"count":1},{"startOffset":2527,"endOffset":2535,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2572,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2649,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2725,"endOffset":2767,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2771,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6696,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7613,"endOffset":7826,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":8052,"endOffset":10487,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10489,"endOffset":10628,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":10630,"endOffset":10781,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10783,"endOffset":10934,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10936,"endOffset":11075,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":11077,"endOffset":11419,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11421,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11662,"endOffset":11952,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11956,"endOffset":12188,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12190,"endOffset":12460,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12996,"endOffset":13276,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13278,"endOffset":13514,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":13516,"endOffset":13681,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13683,"endOffset":13895,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13897,"endOffset":14109,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":14111,"endOffset":14294,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14433,"endOffset":15399,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15401,"endOffset":15784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2520,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1890,"endOffset":2133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3331,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":626,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1294,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1702,"endOffset":3283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3401,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1371,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1801,"endOffset":2267,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2269,"endOffset":2607,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2646,"endOffset":3339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22339,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2318,"endOffset":6439,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2428,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2976,"endOffset":3023,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3036,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3183,"endOffset":3467,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3685,"endOffset":3743,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3749,"endOffset":3829,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3835,"endOffset":4183,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4316,"endOffset":4585,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4694,"endOffset":4754,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4760,"endOffset":4912,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4918,"endOffset":5295,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5359,"endOffset":5417,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5423,"endOffset":5714,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5779,"endOffset":5838,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5844,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6443,"endOffset":6828,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6830,"endOffset":7682,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7684,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7807,"endOffset":8507,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8509,"endOffset":8646,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8648,"endOffset":10006,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10205,"endOffset":10341,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10541,"endOffset":10657,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10659,"endOffset":11237,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11239,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11746,"endOffset":14295,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14297,"endOffset":15840,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15842,"endOffset":15930,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15932,"endOffset":16027,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16029,"endOffset":16727,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16729,"endOffset":16933,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16935,"endOffset":17272,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17274,"endOffset":17615,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17617,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18122,"endOffset":18182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18186,"endOffset":18535,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18539,"endOffset":18674,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18678,"endOffset":18817,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18821,"endOffset":18956,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18960,"endOffset":19092,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":19545,"endOffset":20448,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":20744,"endOffset":21159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21163,"endOffset":21524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21528,"endOffset":21675,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":21804,"endOffset":21888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10712,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1183,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1255,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1411,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2193,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2312,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2692,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3944,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9263,"endOffset":9800,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9802,"endOffset":10004,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10006,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10478,"endOffset":10612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9910,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1232,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3039,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3476,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3705,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4062,"endOffset":4171,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4282,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4518,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4745,"endOffset":4860,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4902,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5088,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5236,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5701,"endOffset":5823,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5856,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6028,"endOffset":6294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6297,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6434,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6831,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8018,"endOffset":9804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10199,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1233,"endOffset":1981,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1301,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2482,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2850,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3086,"endOffset":3505,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3507,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3744,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4326,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4670,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4815,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4982,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5527,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5809,"endOffset":5956,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5989,"endOffset":6149,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6153,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6393,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6983,"endOffset":7193,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7195,"endOffset":7786,"count":3},{"startOffset":7591,"endOffset":7664,"count":1},{"startOffset":7664,"endOffset":7726,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8187,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8800,"endOffset":9017,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9179,"endOffset":10040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1535,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":401,"endOffset":463,"count":6}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":595,"endOffset":918,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":632,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":920,"endOffset":1139,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":957,"endOffset":1136,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6942,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":870,"endOffset":1129,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1252,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1371,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1687,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1764,"endOffset":1845,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1847,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2201,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2470,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3089,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4309,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4804,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5390,"endOffset":6868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5947,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1100,"endOffset":1826,"count":6},{"startOffset":1159,"endOffset":1195,"count":0},{"startOffset":1345,"endOffset":1364,"count":0},{"startOffset":1365,"endOffset":1391,"count":0},{"startOffset":1437,"endOffset":1484,"count":0},{"startOffset":1616,"endOffset":1620,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1957,"endOffset":2125,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2156,"endOffset":2261,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2288,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2395,"endOffset":2859,"count":10},{"startOffset":2488,"endOffset":2526,"count":0},{"startOffset":2603,"endOffset":2749,"count":0},{"startOffset":2800,"endOffset":2842,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2887,"endOffset":3208,"count":6},{"startOffset":2980,"endOffset":3018,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3211,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3792,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4379,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":4852,"endOffset":5884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1155,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1240,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2487,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2651,"endOffset":9663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30947,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1190,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1801,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1913,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4410,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":5979,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6601,"endOffset":8781,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":8783,"endOffset":9761,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":9763,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":10752,"endOffset":11685,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":11687,"endOffset":13217,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13219,"endOffset":14079,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14081,"endOffset":15431,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":15433,"endOffset":18175,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18268,"endOffset":19803,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":19898,"endOffset":21861,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":21863,"endOffset":22966,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":22968,"endOffset":23594,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":23596,"endOffset":24353,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":24355,"endOffset":25766,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":25768,"endOffset":26494,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":26496,"endOffset":27222,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":27378,"endOffset":27438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27473,"endOffset":27486,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":27525,"endOffset":27585,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":27589,"endOffset":27689,"count":1},{"startOffset":27629,"endOffset":27666,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27724,"endOffset":27737,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":27753,"endOffset":28086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"node:internal/deps/cjs-module-lexer/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53714,"count":1}],"isBlockCoverage":false},{"functionName":"resetState","ranges":[{"startOffset":287,"endOffset":729,"count":4}],"isBlockCoverage":true},{"functionName":"parseCJS","ranges":[{"startOffset":811,"endOffset":1282,"count":2},{"startOffset":907,"endOffset":1073,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1123,"endOffset":1177,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1213,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1284,"endOffset":2033,"count":5},{"startOffset":1329,"endOffset":1347,"count":4},{"startOffset":1349,"endOffset":2002,"count":1},{"startOffset":1511,"endOffset":1957,"count":10},{"startOffset":1675,"endOffset":1949,"count":0},{"startOffset":1990,"endOffset":1998,"count":0},{"startOffset":2002,"endOffset":2031,"count":4}],"isBlockCoverage":true},{"functionName":"parseSource","ranges":[{"startOffset":2035,"endOffset":7781,"count":2},{"startOffset":2200,"endOffset":2230,"count":0},{"startOffset":2237,"endOffset":2432,"count":0},{"startOffset":2456,"endOffset":7635,"count":6390},{"startOffset":2510,"endOffset":2530,"count":4921},{"startOffset":2521,"endOffset":2530,"count":327},{"startOffset":2538,"endOffset":2547,"count":1796},{"startOffset":2547,"endOffset":2579,"count":4594},{"startOffset":2579,"endOffset":4076,"count":636},{"startOffset":2609,"endOffset":2783,"count":27},{"startOffset":2674,"endOffset":2694,"count":0},{"startOffset":2708,"endOffset":2733,"count":0},{"startOffset":2792,"endOffset":3013,"count":43},{"startOffset":2877,"endOffset":2902,"count":0},{"startOffset":2916,"endOffset":2963,"count":0},{"startOffset":3022,"endOffset":4062,"count":1},{"startOffset":3103,"endOffset":3167,"count":0},{"startOffset":3169,"endOffset":3545,"count":0},{"startOffset":3603,"endOffset":3667,"count":0},{"startOffset":3669,"endOffset":4012,"count":0},{"startOffset":4070,"endOffset":4076,"count":565},{"startOffset":4076,"endOffset":4102,"count":4523},{"startOffset":4102,"endOffset":4392,"count":452},{"startOffset":4165,"endOffset":4185,"count":4},{"startOffset":4187,"endOffset":4377,"count":4},{"startOffset":4288,"endOffset":4367,"count":0},{"startOffset":4399,"endOffset":4571,"count":94},{"startOffset":4443,"endOffset":4480,"count":30},{"startOffset":4481,"endOffset":4520,"count":0},{"startOffset":4532,"endOffset":4556,"count":0},{"startOffset":4578,"endOffset":4721,"count":33},{"startOffset":4641,"endOffset":4661,"count":4},{"startOffset":4673,"endOffset":4706,"count":4},{"startOffset":4728,"endOffset":4886,"count":40},{"startOffset":4790,"endOffset":4810,"count":3},{"startOffset":4822,"endOffset":4871,"count":3},{"startOffset":4893,"endOffset":4981,"count":122},{"startOffset":4988,"endOffset":5134,"count":122},{"startOffset":5046,"endOffset":5093,"count":0},{"startOffset":5141,"endOffset":5326,"count":49},{"startOffset":5333,"endOffset":5756,"count":49},{"startOffset":5392,"endOffset":5437,"count":0},{"startOffset":5486,"endOffset":5588,"count":0},{"startOffset":5639,"endOffset":5672,"count":0},{"startOffset":5686,"endOffset":5731,"count":0},{"startOffset":5763,"endOffset":5833,"count":4},{"startOffset":5840,"endOffset":5853,"count":0},{"startOffset":5860,"endOffset":5915,"count":105},{"startOffset":5922,"endOffset":7540,"count":30},{"startOffset":6023,"endOffset":6114,"count":17},{"startOffset":6114,"endOffset":7517,"count":13},{"startOffset":6153,"endOffset":6245,"count":7},{"startOffset":6245,"endOffset":7517,"count":6},{"startOffset":6699,"endOffset":6800,"count":0},{"startOffset":6843,"endOffset":6888,"count":0},{"startOffset":6922,"endOffset":6967,"count":0},{"startOffset":6974,"endOffset":7065,"count":0},{"startOffset":7066,"endOffset":7205,"count":0},{"startOffset":7206,"endOffset":7268,"count":0},{"startOffset":7269,"endOffset":7319,"count":0},{"startOffset":7320,"endOffset":7347,"count":0},{"startOffset":7437,"endOffset":7507,"count":0},{"startOffset":7517,"endOffset":7540,"count":6},{"startOffset":7547,"endOffset":7601,"count":0},{"startOffset":7607,"endOffset":7635,"count":4499},{"startOffset":7669,"endOffset":7711,"count":0},{"startOffset":7739,"endOffset":7779,"count":0}],"isBlockCoverage":true},{"functionName":"tryBacktrackAddStarExportBinding","ranges":[{"startOffset":7783,"endOffset":9006,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectHasOwnProperty","ranges":[{"startOffset":9091,"endOffset":10257,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectDefineOrKeys","ranges":[{"startOffset":10259,"endOffset":27670,"count":3},{"startOffset":10464,"endOffset":10510,"count":2},{"startOffset":10512,"endOffset":14149,"count":2},{"startOffset":10661,"endOffset":10667,"count":0},{"startOffset":10765,"endOffset":10834,"count":1},{"startOffset":10834,"endOffset":10840,"count":0},{"startOffset":10840,"endOffset":10929,"count":1},{"startOffset":10936,"endOffset":10942,"count":0},{"startOffset":10942,"endOffset":11110,"count":1},{"startOffset":11110,"endOffset":11116,"count":0},{"startOffset":11116,"endOffset":11195,"count":1},{"startOffset":11195,"endOffset":11201,"count":0},{"startOffset":11201,"endOffset":11280,"count":1},{"startOffset":11280,"endOffset":11718,"count":0},{"startOffset":11718,"endOffset":11993,"count":1},{"startOffset":11801,"endOffset":11807,"count":0},{"startOffset":11894,"endOffset":11900,"count":0},{"startOffset":11993,"endOffset":14076,"count":0},{"startOffset":14076,"endOffset":14093,"count":1},{"startOffset":14093,"endOffset":14143,"count":0},{"startOffset":14149,"endOffset":27645,"count":1},{"startOffset":14187,"endOffset":14223,"count":0},{"startOffset":14225,"endOffset":27645,"count":0},{"startOffset":27649,"endOffset":27669,"count":2}],"isBlockCoverage":true},{"functionName":"readExportsOrModuleDotExports","ranges":[{"startOffset":27672,"endOffset":28124,"count":2},{"startOffset":27765,"endOffset":27803,"count":0},{"startOffset":27805,"endOffset":27970,"count":0},{"startOffset":27993,"endOffset":28032,"count":1},{"startOffset":28034,"endOffset":28122,"count":1}],"isBlockCoverage":true},{"functionName":"tryParseModuleExportsDotAssign","ranges":[{"startOffset":28126,"endOffset":28458,"count":4},{"startOffset":28266,"endOffset":28437,"count":3},{"startOffset":28437,"endOffset":28457,"count":1}],"isBlockCoverage":true},{"functionName":"tryParseExportsDotAssign","ranges":[{"startOffset":28460,"endOffset":29830,"count":7},{"startOffset":28618,"endOffset":28943,"count":4},{"startOffset":28924,"endOffset":28943,"count":0},{"startOffset":28971,"endOffset":29406,"count":0},{"startOffset":29435,"endOffset":29805,"count":2},{"startOffset":29509,"endOffset":29531,"count":0},{"startOffset":29629,"endOffset":29694,"count":0},{"startOffset":29761,"endOffset":29791,"count":0},{"startOffset":29809,"endOffset":29829,"count":3}],"isBlockCoverage":true},{"functionName":"tryParseRequire","ranges":[{"startOffset":29832,"endOffset":30809,"count":43},{"startOffset":29962,"endOffset":30791,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseLiteralExports","ranges":[{"startOffset":30811,"endOffset":32363,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":43691,"endOffset":43902,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":43966,"endOffset":44336,"count":4},{"startOffset":44026,"endOffset":44044,"count":0},{"startOffset":44062,"endOffset":44073,"count":0},{"startOffset":44091,"endOffset":44109,"count":0},{"startOffset":44139,"endOffset":44335,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":44399,"endOffset":44868,"count":33},{"startOffset":44458,"endOffset":44476,"count":4},{"startOffset":44476,"endOffset":44494,"count":29},{"startOffset":44494,"endOffset":44505,"count":0},{"startOffset":44505,"endOffset":44523,"count":29},{"startOffset":44523,"endOffset":44535,"count":0},{"startOffset":44535,"endOffset":44553,"count":29},{"startOffset":44553,"endOffset":44564,"count":1},{"startOffset":44564,"endOffset":44582,"count":28},{"startOffset":44582,"endOffset":44600,"count":0},{"startOffset":44600,"endOffset":44630,"count":28},{"startOffset":44630,"endOffset":44866,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":44870,"endOffset":45294,"count":4},{"startOffset":44986,"endOffset":44999,"count":0},{"startOffset":45066,"endOffset":45277,"count":33},{"startOffset":45104,"endOffset":45142,"count":29},{"startOffset":45142,"endOffset":45273,"count":4},{"startOffset":45169,"endOffset":45243,"count":0}],"isBlockCoverage":true},{"functionName":"codePointLen","ranges":[{"startOffset":45296,"endOffset":45368,"count":33},{"startOffset":45354,"endOffset":45367,"count":0}],"isBlockCoverage":true},{"functionName":"codePointAtLast","ranges":[{"startOffset":45370,"endOffset":45625,"count":0}],"isBlockCoverage":false},{"functionName":"esmSyntaxErr","ranges":[{"startOffset":45627,"endOffset":45732,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfImportStatement","ranges":[{"startOffset":45734,"endOffset":46524,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfExportStatement","ranges":[{"startOffset":46526,"endOffset":46755,"count":0}],"isBlockCoverage":false},{"functionName":"commentWhitespace","ranges":[{"startOffset":46757,"endOffset":47157,"count":40},{"startOffset":46804,"endOffset":47121,"count":52},{"startOffset":46863,"endOffset":47064,"count":0},{"startOffset":47093,"endOffset":47117,"count":40},{"startOffset":47121,"endOffset":47156,"count":0}],"isBlockCoverage":true},{"functionName":"templateString","ranges":[{"startOffset":47159,"endOffset":47549,"count":0}],"isBlockCoverage":false},{"functionName":"blockComment","ranges":[{"startOffset":47551,"endOffset":47756,"count":7},{"startOffset":47609,"endOffset":47754,"count":647},{"startOffset":47673,"endOffset":47709,"count":20},{"startOffset":47716,"endOffset":47750,"count":7}],"isBlockCoverage":true},{"functionName":"lineComment","ranges":[{"startOffset":47758,"endOffset":47910,"count":17},{"startOffset":47806,"endOffset":47908,"count":878},{"startOffset":47871,"endOffset":47883,"count":862},{"startOffset":47897,"endOffset":47904,"count":16}],"isBlockCoverage":true},{"functionName":"stringLiteral","ranges":[{"startOffset":47912,"endOffset":48280,"count":106},{"startOffset":47967,"endOffset":48235,"count":824},{"startOffset":48034,"endOffset":48041,"count":106},{"startOffset":48041,"endOffset":48066,"count":718},{"startOffset":48066,"endOffset":48195,"count":90},{"startOffset":48131,"endOffset":48167,"count":0},{"startOffset":48183,"endOffset":48189,"count":0},{"startOffset":48195,"endOffset":48231,"count":628},{"startOffset":48225,"endOffset":48231,"count":0},{"startOffset":48235,"endOffset":48279,"count":0}],"isBlockCoverage":true},{"functionName":"regexCharacterClass","ranges":[{"startOffset":48282,"endOffset":48591,"count":8},{"startOffset":48338,"endOffset":48520,"count":29},{"startOffset":48407,"endOffset":48417,"count":8},{"startOffset":48417,"endOffset":48448,"count":21},{"startOffset":48448,"endOffset":48454,"count":14},{"startOffset":48454,"endOffset":48516,"count":7},{"startOffset":48510,"endOffset":48516,"count":0},{"startOffset":48520,"endOffset":48590,"count":0}],"isBlockCoverage":true},{"functionName":"regularExpression","ranges":[{"startOffset":48593,"endOffset":48954,"count":6},{"startOffset":48647,"endOffset":48889,"count":74},{"startOffset":48716,"endOffset":48723,"count":6},{"startOffset":48723,"endOffset":48754,"count":68},{"startOffset":48754,"endOffset":48781,"count":8},{"startOffset":48781,"endOffset":48885,"count":60},{"startOffset":48817,"endOffset":48823,"count":16},{"startOffset":48823,"endOffset":48885,"count":44},{"startOffset":48879,"endOffset":48885,"count":0},{"startOffset":48889,"endOffset":48953,"count":0}],"isBlockCoverage":true},{"functionName":"isBr","ranges":[{"startOffset":49092,"endOffset":49156,"count":628}],"isBlockCoverage":true},{"functionName":"isBrOrWs","ranges":[{"startOffset":49158,"endOffset":49234,"count":52},{"startOffset":49219,"endOffset":49231,"count":40}],"isBlockCoverage":true},{"functionName":"isBrOrWsOrPunctuatorNotDot","ranges":[{"startOffset":49236,"endOffset":49366,"count":105},{"startOffset":49303,"endOffset":49314,"count":96},{"startOffset":49315,"endOffset":49327,"count":69},{"startOffset":49328,"endOffset":49358,"count":69},{"startOffset":49347,"endOffset":49358,"count":6}],"isBlockCoverage":true},{"functionName":"keywordStart","ranges":[{"startOffset":49368,"endOffset":49477,"count":105}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword","ranges":[{"startOffset":49479,"endOffset":49716,"count":0}],"isBlockCoverage":false},{"functionName":"readPrecedingKeyword1","ranges":[{"startOffset":49718,"endOffset":49875,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKeyword","ranges":[{"startOffset":49997,"endOffset":52097,"count":0}],"isBlockCoverage":false},{"functionName":"isParenKeyword","ranges":[{"startOffset":52099,"endOffset":52406,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuator","ranges":[{"startOffset":52408,"endOffset":52695,"count":69},{"startOffset":52585,"endOffset":52606,"count":63},{"startOffset":52607,"endOffset":52623,"count":63},{"startOffset":52629,"endOffset":52641,"count":63},{"startOffset":52647,"endOffset":52659,"count":63},{"startOffset":52665,"endOffset":52692,"count":63},{"startOffset":52681,"endOffset":52692,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionPunctuator","ranges":[{"startOffset":52697,"endOffset":53000,"count":6},{"startOffset":52880,"endOffset":52892,"count":1},{"startOffset":52893,"endOffset":52914,"count":5},{"startOffset":52915,"endOffset":52931,"count":0},{"startOffset":52937,"endOffset":52949,"count":0},{"startOffset":52955,"endOffset":52992,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionTerminator","ranges":[{"startOffset":53002,"endOffset":53562,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.init","ranges":[{"startOffset":53626,"endOffset":53643,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.initSync","ranges":[{"startOffset":53671,"endOffset":53679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/outdent/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6460,"count":1},{"startOffset":6411,"endOffset":6424,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":198,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"createWeakMap","ranges":[{"startOffset":329,"endOffset":483,"count":2},{"startOffset":433,"endOffset":481,"count":0}],"isBlockCoverage":true},{"functionName":"fakeSetOrMap","ranges":[{"startOffset":589,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":857,"endOffset":913,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":975,"endOffset":1150,"count":1}],"isBlockCoverage":true},{"functionName":"_outdentArray","ranges":[{"startOffset":1440,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"concatStringsAndValues","ranges":[{"startOffset":2945,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateStringsArray","ranges":[{"startOffset":3184,"endOffset":3268,"count":0}],"isBlockCoverage":false},{"functionName":"createInstance","ranges":[{"startOffset":3447,"endOffset":5783,"count":1}],"isBlockCoverage":true},{"functionName":"outdent","ranges":[{"startOffset":3834,"endOffset":5605,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":5662,"endOffset":5748,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picocolors/picocolors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1},{"startOffset":16,"endOffset":21,"count":0},{"startOffset":37,"endOffset":42,"count":0},{"startOffset":56,"endOffset":61,"count":0},{"startOffset":226,"endOffset":231,"count":0},{"startOffset":239,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"formatter","ranges":[{"startOffset":293,"endOffset":511,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":327,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"replaceClose","ranges":[{"startOffset":532,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"createColors","ranges":[{"startOffset":812,"endOffset":2586,"count":3},{"startOffset":863,"endOffset":874,"count":2},{"startOffset":875,"endOffset":889,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":877,"endOffset":889,"count":41}],"isBlockCoverage":true}]},{"scriptId":"250","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2412,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":756,"endOffset":1507,"count":4}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1019,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1809,"endOffset":2364,"count":4}],"isBlockCoverage":true}]},{"scriptId":"251","url":"node:internal/require_module_default_facade","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93,"count":2}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-resolve/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49660,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":49655,"count":1}],"isBlockCoverage":true},{"functionName":"./src/ModuleNotFoundError.ts","ranges":[{"startOffset":365,"endOffset":2608,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":504,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":641,"endOffset":781,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":782,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":868,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1675,"endOffset":2557,"count":0}],"isBlockCoverage":true},{"functionName":"./src/defaultResolver.ts","ranges":[{"startOffset":2653,"endOffset":5396,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":2813,"endOffset":2926,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":2874,"endOffset":2908,"count":29}],"isBlockCoverage":true},{"functionName":"_url","ranges":[{"startOffset":2927,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"_jestPnpResolver","ranges":[{"startOffset":3038,"endOffset":3210,"count":0}],"isBlockCoverage":false},{"functionName":"_unrsResolver","ranges":[{"startOffset":3211,"endOffset":3349,"count":1}],"isBlockCoverage":true},{"functionName":"_unrsResolver","ranges":[{"startOffset":3297,"endOffset":3331,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3414,"endOffset":3499,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolver","ranges":[{"startOffset":3716,"endOffset":5333,"count":30},{"startOffset":3764,"endOffset":3793,"count":0},{"startOffset":3795,"endOffset":3859,"count":0},{"startOffset":3894,"endOffset":3943,"count":0},{"startOffset":4458,"endOffset":4469,"count":0},{"startOffset":4575,"endOffset":4646,"count":29},{"startOffset":4646,"endOffset":4731,"count":1},{"startOffset":4847,"endOffset":4863,"count":10},{"startOffset":4855,"endOffset":4863,"count":0},{"startOffset":4865,"endOffset":5248,"count":0},{"startOffset":5269,"endOffset":5309,"count":10},{"startOffset":5309,"endOffset":5332,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5012,"endOffset":5040,"count":0}],"isBlockCoverage":false},{"functionName":"./src/fileWalkers.ts","ranges":[{"startOffset":5437,"endOffset":9860,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":5855,"endOffset":5968,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":5969,"endOffset":6108,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":6109,"endOffset":6235,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":6236,"endOffset":6850,"count":0}],"isBlockCoverage":false},{"functionName":"getResolver","ranges":[{"startOffset":7061,"endOffset":7110,"count":30}],"isBlockCoverage":true},{"functionName":"setResolver","ranges":[{"startOffset":7111,"endOffset":7180,"count":30}],"isBlockCoverage":true},{"functionName":"clearFsCache","ranges":[{"startOffset":7181,"endOffset":7321,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7351,"endOffset":7542,"count":1}],"isBlockCoverage":true},{"functionName":"statSyncCached","ranges":[{"startOffset":7593,"endOffset":8261,"count":0}],"isBlockCoverage":false},{"functionName":"realpathCached","ranges":[{"startOffset":8302,"endOffset":8716,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageCached","ranges":[{"startOffset":8752,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"findClosestPackageJson","ranges":[{"startOffset":9129,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":9629,"endOffset":9704,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":9705,"endOffset":9788,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":9789,"endOffset":9851,"count":0}],"isBlockCoverage":false},{"functionName":"./src/index.ts","ranges":[{"startOffset":9895,"endOffset":10914,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10240,"endOffset":10571,"count":4},{"startOffset":10306,"endOffset":10313,"count":0},{"startOffset":10377,"endOffset":10384,"count":0},{"startOffset":10406,"endOffset":10437,"count":0},{"startOffset":10439,"endOffset":10446,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10518,"endOffset":10563,"count":10}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":10574,"endOffset":10659,"count":1},{"startOffset":10640,"endOffset":10656,"count":0}],"isBlockCoverage":true},{"functionName":"./src/isBuiltinModule.ts","ranges":[{"startOffset":10959,"endOffset":11682,"count":1}],"isBlockCoverage":true},{"functionName":"_module2","ranges":[{"startOffset":11107,"endOffset":11252,"count":1}],"isBlockCoverage":true},{"functionName":"_module2","ranges":[{"startOffset":11200,"endOffset":11234,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":11253,"endOffset":11338,"count":1},{"startOffset":11315,"endOffset":11318,"count":0}],"isBlockCoverage":true},{"functionName":"isBuiltinModule","ranges":[{"startOffset":11599,"endOffset":11673,"count":0}],"isBlockCoverage":false},{"functionName":"./src/nodeModulesPaths.ts","ranges":[{"startOffset":11728,"endOffset":14934,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":11907,"endOffset":12043,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":11991,"endOffset":12025,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":12044,"endOffset":12170,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":12171,"endOffset":12785,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":12322,"endOffset":12775,"count":1},{"startOffset":12369,"endOffset":12378,"count":0},{"startOffset":12465,"endOffset":12490,"count":0},{"startOffset":12492,"endOffset":12501,"count":0},{"startOffset":12512,"endOffset":12515,"count":0},{"startOffset":12537,"endOffset":12553,"count":0},{"startOffset":12588,"endOffset":12763,"count":17},{"startOffset":12735,"endOffset":12747,"count":0}],"isBlockCoverage":true},{"functionName":"nodeModulesPaths","ranges":[{"startOffset":13039,"endOffset":14445,"count":0}],"isBlockCoverage":false},{"functionName":"findGlobalPaths","ranges":[{"startOffset":14446,"endOffset":14864,"count":1},{"startOffset":14804,"endOffset":14808,"count":0},{"startOffset":14849,"endOffset":14863,"count":0}],"isBlockCoverage":true},{"functionName":"./src/resolver.ts","ranges":[{"startOffset":14972,"endOffset":40132,"count":1},{"startOffset":17325,"endOffset":17458,"count":0}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":15132,"endOffset":15268,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":15269,"endOffset":15409,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":15410,"endOffset":15550,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":15551,"endOffset":15677,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":15625,"endOffset":15659,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16234,"endOffset":16319,"count":3},{"startOffset":16300,"endOffset":16316,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":16320,"endOffset":16934,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":16471,"endOffset":16924,"count":2},{"startOffset":16527,"endOffset":16639,"count":0},{"startOffset":16641,"endOffset":16664,"count":0},{"startOffset":16665,"endOffset":16668,"count":0},{"startOffset":16670,"endOffset":16923,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17422,"endOffset":17457,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":17472,"endOffset":38543,"count":1}],"isBlockCoverage":true},{"functionName":"Resolver","ranges":[{"startOffset":17602,"endOffset":18365,"count":1},{"startOffset":17803,"endOffset":17809,"count":0},{"startOffset":17887,"endOffset":17906,"count":0},{"startOffset":18159,"endOffset":18204,"count":0}],"isBlockCoverage":true},{"functionName":"tryCastModuleNotFoundError","ranges":[{"startOffset":18436,"endOffset":18713,"count":0}],"isBlockCoverage":false},{"functionName":"clearDefaultResolverCache","ranges":[{"startOffset":18723,"endOffset":18842,"count":1}],"isBlockCoverage":true},{"functionName":"findNodeModule","ranges":[{"startOffset":18852,"endOffset":19769,"count":30},{"startOffset":19074,"endOffset":19172,"count":0},{"startOffset":19482,"endOffset":19516,"count":0},{"startOffset":19579,"endOffset":19748,"count":10},{"startOffset":19712,"endOffset":19742,"count":0},{"startOffset":19748,"endOffset":19768,"count":10}],"isBlockCoverage":true},{"functionName":"findNodeModuleAsync","ranges":[{"startOffset":19779,"endOffset":20967,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":21094,"endOffset":21152,"count":1}],"isBlockCoverage":true},{"functionName":"resolveModuleFromDirIfExists","ranges":[{"startOffset":21156,"endOffset":23510,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleFromDirIfExistsAsync","ranges":[{"startOffset":23513,"endOffset":25954,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModule","ranges":[{"startOffset":25957,"endOffset":26455,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleAsync","ranges":[{"startOffset":26458,"endOffset":26988,"count":0}],"isBlockCoverage":false},{"functionName":"_prepareForResolution","ranges":[{"startOffset":27140,"endOffset":28060,"count":0}],"isBlockCoverage":false},{"functionName":"_getHasteModulePath","ranges":[{"startOffset":28148,"endOffset":28396,"count":0}],"isBlockCoverage":false},{"functionName":"_throwModNotFoundError","ranges":[{"startOffset":28399,"endOffset":28663,"count":0}],"isBlockCoverage":false},{"functionName":"_getMapModuleName","ranges":[{"startOffset":28666,"endOffset":28852,"count":0}],"isBlockCoverage":false},{"functionName":"_isAliasModule","ranges":[{"startOffset":28855,"endOffset":29086,"count":0}],"isBlockCoverage":false},{"functionName":"isCoreModule","ranges":[{"startOffset":29089,"endOffset":29277,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeCoreModuleSpecifier","ranges":[{"startOffset":29280,"endOffset":29413,"count":0}],"isBlockCoverage":false},{"functionName":"getModule","ranges":[{"startOffset":29416,"endOffset":29542,"count":0}],"isBlockCoverage":false},{"functionName":"getModulePath","ranges":[{"startOffset":29545,"endOffset":29749,"count":0}],"isBlockCoverage":false},{"functionName":"getPackage","ranges":[{"startOffset":29752,"endOffset":29880,"count":0}],"isBlockCoverage":false},{"functionName":"getMockModule","ranges":[{"startOffset":29883,"endOffset":30226,"count":0}],"isBlockCoverage":false},{"functionName":"getMockModuleAsync","ranges":[{"startOffset":30229,"endOffset":30594,"count":0}],"isBlockCoverage":false},{"functionName":"getModulePaths","ranges":[{"startOffset":30597,"endOffset":31084,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalPaths","ranges":[{"startOffset":31087,"endOffset":31265,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleID","ranges":[{"startOffset":31268,"endOffset":32060,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleIDAsync","ranges":[{"startOffset":32063,"endOffset":32961,"count":0}],"isBlockCoverage":false},{"functionName":"_getModuleType","ranges":[{"startOffset":32964,"endOffset":33056,"count":0}],"isBlockCoverage":false},{"functionName":"_getAbsolutePath","ranges":[{"startOffset":33059,"endOffset":33461,"count":0}],"isBlockCoverage":false},{"functionName":"_getAbsolutePathAsync","ranges":[{"startOffset":33464,"endOffset":33905,"count":0}],"isBlockCoverage":false},{"functionName":"_getMockPath","ranges":[{"startOffset":33908,"endOffset":34050,"count":0}],"isBlockCoverage":false},{"functionName":"_getMockPathAsync","ranges":[{"startOffset":34053,"endOffset":34211,"count":0}],"isBlockCoverage":false},{"functionName":"_getVirtualMockPath","ranges":[{"startOffset":34214,"endOffset":34478,"count":0}],"isBlockCoverage":false},{"functionName":"_getVirtualMockPathAsync","ranges":[{"startOffset":34481,"endOffset":34761,"count":0}],"isBlockCoverage":false},{"functionName":"_isModuleResolved","ranges":[{"startOffset":34764,"endOffset":34906,"count":0}],"isBlockCoverage":false},{"functionName":"_isModuleResolvedAsync","ranges":[{"startOffset":34909,"endOffset":35075,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStubModuleName","ranges":[{"startOffset":35078,"endOffset":36710,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStubModuleNameAsync","ranges":[{"startOffset":36713,"endOffset":38541,"count":0}],"isBlockCoverage":false},{"functionName":"createNoMappedModuleFoundError","ranges":[{"startOffset":38614,"endOffset":39517,"count":0}],"isBlockCoverage":false},{"functionName":"loadResolver","ranges":[{"startOffset":39519,"endOffset":40123,"count":30},{"startOffset":39619,"endOffset":39963,"count":0},{"startOffset":39965,"endOffset":40122,"count":0}],"isBlockCoverage":true},{"functionName":"./src/shouldLoadAsEsm.ts","ranges":[{"startOffset":40177,"endOffset":42701,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":40401,"endOffset":40514,"count":0}],"isBlockCoverage":false},{"functionName":"_vm","ranges":[{"startOffset":40515,"endOffset":40622,"count":1}],"isBlockCoverage":true},{"functionName":"_vm","ranges":[{"startOffset":40570,"endOffset":40604,"count":0}],"isBlockCoverage":false},{"functionName":"clearCachedLookups","ranges":[{"startOffset":41121,"endOffset":41235,"count":1}],"isBlockCoverage":true},{"functionName":"cachedShouldLoadAsEsm","ranges":[{"startOffset":41236,"endOffset":41583,"count":0}],"isBlockCoverage":false},{"functionName":"shouldLoadAsEsm","ranges":[{"startOffset":41677,"endOffset":42213,"count":0}],"isBlockCoverage":false},{"functionName":"cachedPkgCheck","ranges":[{"startOffset":42214,"endOffset":42692,"count":0}],"isBlockCoverage":false},{"functionName":"./src/utils.ts","ranges":[{"startOffset":42736,"endOffset":48307,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":42988,"endOffset":43124,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":43125,"endOffset":43265,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":43213,"endOffset":43247,"count":1}],"isBlockCoverage":true},{"functionName":"_jestValidate","ranges":[{"startOffset":43266,"endOffset":43404,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":43487,"endOffset":43572,"count":2},{"startOffset":43549,"endOffset":43552,"count":1},{"startOffset":43553,"endOffset":43569,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":43573,"endOffset":44187,"count":0}],"isBlockCoverage":false},{"functionName":"createValidationError","ranges":[{"startOffset":44588,"endOffset":44694,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRootDirInPath","ranges":[{"startOffset":44725,"endOffset":44914,"count":10},{"startOffset":44817,"endOffset":44913,"count":0}],"isBlockCoverage":true},{"functionName":"resolveWithPrefix","ranges":[{"startOffset":44942,"endOffset":45811,"count":10},{"startOffset":45266,"endOffset":45290,"count":0},{"startOffset":45529,"endOffset":45810,"count":0}],"isBlockCoverage":true},{"functionName":"resolveTestEnvironment","ranges":[{"startOffset":46098,"endOffset":46842,"count":2},{"startOffset":46327,"endOffset":46373,"count":0},{"startOffset":46611,"endOffset":46840,"count":0}],"isBlockCoverage":true},{"functionName":"resolveWatchPlugin","ranges":[{"startOffset":47167,"endOffset":47404,"count":4}],"isBlockCoverage":true},{"functionName":"resolveRunner","ranges":[{"startOffset":47711,"endOffset":47942,"count":2}],"isBlockCoverage":true},{"functionName":"resolveSequencer","ranges":[{"startOffset":48008,"endOffset":48252,"count":2}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":48529,"endOffset":49257,"count":12},{"startOffset":48721,"endOffset":48776,"count":3},{"startOffset":48776,"endOffset":49256,"count":9}],"isBlockCoverage":true}]},{"scriptId":"253","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12970,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2411,"endOffset":2534,"count":0}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":2578,"endOffset":4032,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4036,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4335,"endOffset":4720,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4724,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":4899,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5120,"endOffset":5799,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5801,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":6904,"endOffset":8303,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":8305,"endOffset":8381,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8535,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8998,"endOffset":9396,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9398,"endOffset":9750,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9752,"endOffset":9938,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9940,"endOffset":11566,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11843,"endOffset":12415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/unrs-resolver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9660,"count":1},{"startOffset":8642,"endOffset":9014,"count":0},{"startOffset":9036,"endOffset":9458,"count":0}],"isBlockCoverage":true},{"functionName":"isMusl","ranges":[{"startOffset":281,"endOffset":531,"count":1},{"startOffset":403,"endOffset":442,"count":0},{"startOffset":466,"endOffset":511,"count":0}],"isBlockCoverage":true},{"functionName":"isFileMusl","ranges":[{"startOffset":552,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"isMuslFromFilesystem","ranges":[{"startOffset":640,"endOffset":755,"count":1},{"startOffset":726,"endOffset":753,"count":0}],"isBlockCoverage":true},{"functionName":"isMuslFromReport","ranges":[{"startOffset":782,"endOffset":1208,"count":0}],"isBlockCoverage":false},{"functionName":"isMuslFromChildProcess","ranges":[{"startOffset":1241,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"requireNative","ranges":[{"startOffset":1511,"endOffset":8553,"count":1},{"startOffset":1585,"endOffset":1725,"count":0},{"startOffset":1767,"endOffset":2470,"count":0},{"startOffset":2510,"endOffset":3516,"count":0},{"startOffset":3557,"endOffset":4503,"count":0},{"startOffset":4545,"endOffset":5239,"count":0},{"startOffset":5335,"endOffset":5602,"count":0},{"startOffset":5818,"endOffset":5864,"count":0},{"startOffset":5879,"endOffset":8435,"count":0},{"startOffset":8439,"endOffset":8551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/pattern/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5965,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":5960,"count":1}],"isBlockCoverage":true},{"functionName":"./src/TestPathPatterns.ts","ranges":[{"startOffset":362,"endOffset":4225,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":542,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":679,"endOffset":821,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":822,"endOffset":1436,"count":0}],"isBlockCoverage":false},{"functionName":"TestPathPatterns","ranges":[{"startOffset":1656,"endOffset":1713,"count":2}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":1773,"endOffset":1823,"count":4}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":1883,"endOffset":2069,"count":2}],"isBlockCoverage":true},{"functionName":"toPretty","ranges":[{"startOffset":2144,"endOffset":2196,"count":0}],"isBlockCoverage":false},{"functionName":"toExecutor","ranges":[{"startOffset":2282,"endOffset":2363,"count":3}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":2397,"endOffset":2493,"count":3}],"isBlockCoverage":true},{"functionName":"TestPathPatternsExecutor","ranges":[{"startOffset":2576,"endOffset":2670,"count":3}],"isBlockCoverage":true},{"functionName":"toRegex","ranges":[{"startOffset":2673,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":2780,"endOffset":2827,"count":1}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":2887,"endOffset":3052,"count":2},{"startOffset":2955,"endOffset":2989,"count":0},{"startOffset":3015,"endOffset":3048,"count":0}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":3216,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"toPretty","ranges":[{"startOffset":4100,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":4447,"endOffset":5175,"count":1},{"startOffset":4639,"endOffset":4694,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5401,"endOffset":5906,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5594,"endOffset":5658,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5753,"endOffset":5825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-runtime/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":77707,"count":1}],"isBlockCoverage":true},{"functionName":"./src/helpers.ts","ranges":[{"startOffset":353,"endOffset":3877,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":587,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"_glob","ranges":[{"startOffset":724,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":838,"endOffset":978,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":979,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1065,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"createOutsideJestVmPath","ranges":[{"startOffset":2096,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"decodePossibleOutsideJestVmPath","ranges":[{"startOffset":2263,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"findSiblingsWithFileExtension","ranges":[{"startOffset":2598,"endOffset":3796,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":4099,"endOffset":4827,"count":1},{"startOffset":4291,"endOffset":4346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5053,"endOffset":77653,"count":1}],"isBlockCoverage":true},{"functionName":"_module","ranges":[{"startOffset":5194,"endOffset":5337,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":5338,"endOffset":5474,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":5422,"endOffset":5456,"count":4}],"isBlockCoverage":true},{"functionName":"_url","ranges":[{"startOffset":5475,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"_vm","ranges":[{"startOffset":5586,"endOffset":5693,"count":1}],"isBlockCoverage":true},{"functionName":"_vm","ranges":[{"startOffset":5641,"endOffset":5675,"count":1}],"isBlockCoverage":true},{"functionName":"_cjsModuleLexer","ranges":[{"startOffset":5694,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"_collectV8Coverage","ranges":[{"startOffset":5840,"endOffset":5994,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":5995,"endOffset":6134,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":6135,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"_stripBom","ranges":[{"startOffset":6276,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":6427,"endOffset":6561,"count":1}],"isBlockCoverage":true},{"functionName":"_transform","ranges":[{"startOffset":6509,"endOffset":6543,"count":0}],"isBlockCoverage":false},{"functionName":"_jestHasteMap","ranges":[{"startOffset":6562,"endOffset":6725,"count":1}],"isBlockCoverage":true},{"functionName":"_jestHasteMap","ranges":[{"startOffset":6673,"endOffset":6707,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":6726,"endOffset":6874,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":6875,"endOffset":7017,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":6965,"endOffset":6999,"count":0}],"isBlockCoverage":false},{"functionName":"_jestResolve","ranges":[{"startOffset":7018,"endOffset":7177,"count":1}],"isBlockCoverage":true},{"functionName":"_jestResolve","ranges":[{"startOffset":7125,"endOffset":7159,"count":0}],"isBlockCoverage":false},{"functionName":"_jestSnapshot","ranges":[{"startOffset":7178,"endOffset":7316,"count":1}],"isBlockCoverage":true},{"functionName":"_jestSnapshot","ranges":[{"startOffset":7264,"endOffset":7298,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":7317,"endOffset":7443,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7500,"endOffset":8114,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7651,"endOffset":8104,"count":1},{"startOffset":7698,"endOffset":7707,"count":0},{"startOffset":7794,"endOffset":7819,"count":0},{"startOffset":7821,"endOffset":7830,"count":0},{"startOffset":7841,"endOffset":7844,"count":0},{"startOffset":7866,"endOffset":7882,"count":0},{"startOffset":7917,"endOffset":8092,"count":17},{"startOffset":8064,"endOffset":8076,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":8115,"endOffset":8200,"count":2},{"startOffset":8181,"endOffset":8197,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleNameMapper","ranges":[{"startOffset":10189,"endOffset":10432,"count":1},{"startOffset":10415,"endOffset":10431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10326,"endOffset":10409,"count":2}],"isBlockCoverage":true},{"functionName":"isWasm","ranges":[{"startOffset":10449,"endOffset":10491,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10660,"endOffset":10752,"count":1},{"startOffset":10721,"endOffset":10750,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10757,"endOffset":77443,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":14806,"endOffset":14861,"count":1}],"isBlockCoverage":true},{"functionName":"createHasteMap","ranges":[{"startOffset":15433,"endOffset":16956,"count":1},{"startOffset":15564,"endOffset":15596,"count":0},{"startOffset":15666,"endOffset":15690,"count":0},{"startOffset":15808,"endOffset":15819,"count":0},{"startOffset":16440,"endOffset":16444,"count":0}],"isBlockCoverage":true},{"functionName":"createResolver","ranges":[{"startOffset":16966,"endOffset":17475,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17158,"endOffset":17186,"count":10}],"isBlockCoverage":true},{"functionName":"evaluateSyntheticModule","ranges":[{"startOffset":77474,"endOffset":77651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/transform/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42317,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":42312,"count":1}],"isBlockCoverage":true},{"functionName":"./package.json","ranges":[{"startOffset":351,"endOffset":1577,"count":1}],"isBlockCoverage":true},{"functionName":"./src/ScriptTransformer.ts","ranges":[{"startOffset":1624,"endOffset":30425,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":1875,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":1995,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"_core","ranges":[{"startOffset":2132,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"_babelPluginIstanbul","ranges":[{"startOffset":2253,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"_convertSourceMap","ranges":[{"startOffset":2438,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"_fastJsonStableStringify","ranges":[{"startOffset":2590,"endOffset":2787,"count":1}],"isBlockCoverage":true},{"functionName":"_fastJsonStableStringify","ranges":[{"startOffset":2735,"endOffset":2769,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":2788,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"_pirates","ranges":[{"startOffset":2928,"endOffset":3050,"count":1}],"isBlockCoverage":true},{"functionName":"_pirates","ranges":[{"startOffset":2998,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"_slash","ranges":[{"startOffset":3051,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"_writeFileAtomic","ranges":[{"startOffset":3192,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"_jestHasteMap","ranges":[{"startOffset":3341,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":3505,"endOffset":3631,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":3579,"endOffset":3613,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":3944,"endOffset":4029,"count":3},{"startOffset":4006,"endOffset":4009,"count":2},{"startOffset":4010,"endOffset":4026,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":4030,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPromiseWithCleanup","ranges":[{"startOffset":5397,"endOffset":5519,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformerFactory","ranges":[{"startOffset":5539,"endOffset":5627,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5628,"endOffset":24930,"count":2}],"isBlockCoverage":true},{"functionName":"ScriptTransformer","ranges":[{"startOffset":5729,"endOffset":6294,"count":2},{"startOffset":5979,"endOffset":6258,"count":1}],"isBlockCoverage":true},{"functionName":"_buildCacheKeyFromFileInfo","ranges":[{"startOffset":6297,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"_buildTransformCacheKey","ranges":[{"startOffset":6784,"endOffset":6863,"count":0}],"isBlockCoverage":false},{"functionName":"_getCacheKey","ranges":[{"startOffset":6866,"endOffset":7527,"count":0}],"isBlockCoverage":false},{"functionName":"_getCacheKeyAsync","ranges":[{"startOffset":7530,"endOffset":8301,"count":0}],"isBlockCoverage":false},{"functionName":"_createCachedFilename","ranges":[{"startOffset":8304,"endOffset":8945,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileCachePath","ranges":[{"startOffset":8948,"endOffset":9126,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileCachePathAsync","ranges":[{"startOffset":9129,"endOffset":9329,"count":0}],"isBlockCoverage":false},{"functionName":"_getTransformPatternAndPath","ranges":[{"startOffset":9332,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"_getTransformPath","ranges":[{"startOffset":9728,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"loadTransformers","ranges":[{"startOffset":9934,"endOffset":10999,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10010,"endOffset":10954,"count":0}],"isBlockCoverage":false},{"functionName":"_getTransformer","ranges":[{"startOffset":11002,"endOffset":11914,"count":0}],"isBlockCoverage":false},{"functionName":"_instrumentFile","ranges":[{"startOffset":11917,"endOffset":13030,"count":0}],"isBlockCoverage":false},{"functionName":"_buildTransformResult","ranges":[{"startOffset":13033,"endOffset":15932,"count":0}],"isBlockCoverage":false},{"functionName":"transformSource","ranges":[{"startOffset":15935,"endOffset":17517,"count":0}],"isBlockCoverage":false},{"functionName":"transformSourceAsync","ranges":[{"startOffset":17520,"endOffset":19338,"count":0}],"isBlockCoverage":false},{"functionName":"_transformAndBuildScriptAsync","ranges":[{"startOffset":19341,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"_transformAndBuildScript","ranges":[{"startOffset":20410,"endOffset":21454,"count":0}],"isBlockCoverage":false},{"functionName":"transformAsync","ranges":[{"startOffset":21457,"endOffset":22067,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":22070,"endOffset":22658,"count":0}],"isBlockCoverage":false},{"functionName":"transformJson","ranges":[{"startOffset":22661,"endOffset":23101,"count":0}],"isBlockCoverage":false},{"functionName":"requireAndTranspileModule","ranges":[{"startOffset":23104,"endOffset":24701,"count":1},{"startOffset":24446,"endOffset":24662,"count":0}],"isBlockCoverage":true},{"functionName":"revertHook.exts","ranges":[{"startOffset":23586,"endOffset":23794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23944,"endOffset":23964,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23970,"endOffset":23986,"count":9}],"isBlockCoverage":true},{"functionName":"matcher","ranges":[{"startOffset":24036,"endOffset":24245,"count":1},{"startOffset":24076,"endOffset":24190,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24612,"endOffset":24624,"count":0}],"isBlockCoverage":false},{"functionName":"shouldTransform","ranges":[{"startOffset":24704,"endOffset":24928,"count":1},{"startOffset":24856,"endOffset":24863,"count":0},{"startOffset":24910,"endOffset":24923,"count":0}],"isBlockCoverage":true},{"functionName":"createTranspilingRequire","ranges":[{"startOffset":24982,"endOffset":25670,"count":1}],"isBlockCoverage":true},{"functionName":"requireAndTranspileModule","ranges":[{"startOffset":25102,"endOffset":25667,"count":0}],"isBlockCoverage":false},{"functionName":"removeFile","ranges":[{"startOffset":25690,"endOffset":25749,"count":0}],"isBlockCoverage":false},{"functionName":"stripShebang","ranges":[{"startOffset":25772,"endOffset":26020,"count":0}],"isBlockCoverage":false},{"functionName":"writeCodeCacheFile","ranges":[{"startOffset":26381,"endOffset":26576,"count":0}],"isBlockCoverage":false},{"functionName":"readCodeCacheFile","ranges":[{"startOffset":26853,"endOffset":27191,"count":0}],"isBlockCoverage":false},{"functionName":"writeCacheFile","ranges":[{"startOffset":27528,"endOffset":27982,"count":0}],"isBlockCoverage":false},{"functionName":"cacheWriteErrorSafeToIgnore","ranges":[{"startOffset":28470,"endOffset":28525,"count":0}],"isBlockCoverage":false},{"functionName":"readCacheFile","ranges":[{"startOffset":28549,"endOffset":29296,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptCacheKey","ranges":[{"startOffset":29324,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"calcIgnorePatternRegExp","ranges":[{"startOffset":29513,"endOffset":29710,"count":1},{"startOffset":29618,"endOffset":29645,"count":0}],"isBlockCoverage":true},{"functionName":"calcTransformRegExp","ranges":[{"startOffset":29740,"endOffset":29986,"count":1},{"startOffset":29816,"endOffset":29985,"count":0}],"isBlockCoverage":true},{"functionName":"assertSyncTransformer","ranges":[{"startOffset":29988,"endOffset":30220,"count":0}],"isBlockCoverage":false},{"functionName":"createScriptTransformer","ranges":[{"startOffset":30221,"endOffset":30416,"count":2}],"isBlockCoverage":true},{"functionName":"./src/enhanceUnexpectedTokenMessage.ts","ranges":[{"startOffset":30484,"endOffset":33064,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":30714,"endOffset":30854,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":30855,"endOffset":30940,"count":0}],"isBlockCoverage":false},{"functionName":"handlePotentialSyntaxError","ranges":[{"startOffset":31157,"endOffset":31463,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceUnexpectedTokenMessage","ranges":[{"startOffset":31464,"endOffset":33055,"count":0}],"isBlockCoverage":false},{"functionName":"./src/runtimeErrorsAndWarnings.ts","ranges":[{"startOffset":33118,"endOffset":36094,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":33392,"endOffset":33532,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":33480,"endOffset":33514,"count":1}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":33533,"endOffset":33673,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":33674,"endOffset":33759,"count":1},{"startOffset":33736,"endOffset":33739,"count":0}],"isBlockCoverage":true},{"functionName":"makeInvalidReturnValueError","ranges":[{"startOffset":34357,"endOffset":34772,"count":0}],"isBlockCoverage":false},{"functionName":"makeInvalidSourceMapWarning","ranges":[{"startOffset":34877,"endOffset":35178,"count":0}],"isBlockCoverage":false},{"functionName":"makeInvalidSyncTransformerError","ranges":[{"startOffset":35287,"endOffset":35581,"count":0}],"isBlockCoverage":false},{"functionName":"makeInvalidTransformerError","ranges":[{"startOffset":35694,"endOffset":36017,"count":0}],"isBlockCoverage":false},{"functionName":"./src/shouldInstrument.ts","ranges":[{"startOffset":36140,"endOffset":39944,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":36289,"endOffset":36425,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":36373,"endOffset":36407,"count":1}],"isBlockCoverage":true},{"functionName":"_micromatch","ranges":[{"startOffset":36426,"endOffset":36581,"count":0}],"isBlockCoverage":false},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":36582,"endOffset":36724,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":36672,"endOffset":36706,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":36725,"endOffset":36851,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":36852,"endOffset":36937,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":36938,"endOffset":37552,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":37089,"endOffset":37542,"count":1},{"startOffset":37136,"endOffset":37145,"count":0},{"startOffset":37232,"endOffset":37257,"count":0},{"startOffset":37259,"endOffset":37268,"count":0},{"startOffset":37279,"endOffset":37282,"count":0},{"startOffset":37304,"endOffset":37320,"count":0},{"startOffset":37355,"endOffset":37530,"count":17},{"startOffset":37502,"endOffset":37514,"count":0}],"isBlockCoverage":true},{"functionName":"getRegex","ranges":[{"startOffset":37910,"endOffset":38165,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInstrument","ranges":[{"startOffset":38167,"endOffset":39935,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":40166,"endOffset":40894,"count":7},{"startOffset":40358,"endOffset":40413,"count":2},{"startOffset":40413,"endOffset":40893,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41120,"endOffset":42258,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41320,"endOffset":41392,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41487,"endOffset":41560,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41657,"endOffset":41725,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41812,"endOffset":41867,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":42171,"endOffset":42256,"count":2},{"startOffset":42237,"endOffset":42253,"count":0}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/console/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14844,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":14839,"count":1}],"isBlockCoverage":true},{"functionName":"./src/BufferedConsole.ts","ranges":[{"startOffset":361,"endOffset":5004,"count":1}],"isBlockCoverage":true},{"functionName":"_assert","ranges":[{"startOffset":500,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"_console","ranges":[{"startOffset":620,"endOffset":742,"count":1}],"isBlockCoverage":true},{"functionName":"_console","ranges":[{"startOffset":690,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"_util","ranges":[{"startOffset":743,"endOffset":856,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":857,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":998,"endOffset":1124,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1403,"endOffset":4957,"count":0}],"isBlockCoverage":true},{"functionName":"./src/CustomConsole.ts","ranges":[{"startOffset":5047,"endOffset":9510,"count":1}],"isBlockCoverage":true},{"functionName":"_assert","ranges":[{"startOffset":5186,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"_console","ranges":[{"startOffset":5306,"endOffset":5428,"count":1}],"isBlockCoverage":true},{"functionName":"_console","ranges":[{"startOffset":5376,"endOffset":5410,"count":1}],"isBlockCoverage":true},{"functionName":"_util","ranges":[{"startOffset":5429,"endOffset":5542,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":5543,"endOffset":5683,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":5684,"endOffset":5810,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":5811,"endOffset":5896,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6089,"endOffset":9465,"count":1}],"isBlockCoverage":true},{"functionName":"CustomConsole","ranges":[{"startOffset":6264,"endOffset":6461,"count":1}],"isBlockCoverage":true},{"functionName":"formatBuffer","ranges":[{"startOffset":6307,"endOffset":6334,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":6464,"endOffset":6617,"count":0}],"isBlockCoverage":false},{"functionName":"_logError","ranges":[{"startOffset":6620,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":6783,"endOffset":7134,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":7137,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":7328,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":7397,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":7494,"endOffset":7674,"count":0}],"isBlockCoverage":false},{"functionName":"dirxml","ranges":[{"startOffset":7677,"endOffset":7773,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":7776,"endOffset":7875,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":7878,"endOffset":8065,"count":0}],"isBlockCoverage":false},{"functionName":"groupCollapsed","ranges":[{"startOffset":8068,"endOffset":8273,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":8276,"endOffset":8356,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":8359,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":8454,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":8547,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":8676,"endOffset":9000,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":9003,"endOffset":9321,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":9324,"endOffset":9421,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":9424,"endOffset":9463,"count":0}],"isBlockCoverage":false},{"functionName":"./src/NullConsole.ts","ranges":[{"startOffset":9551,"endOffset":10426,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":9803,"endOffset":9888,"count":1},{"startOffset":9869,"endOffset":9885,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":10192,"endOffset":10203,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":10206,"endOffset":10216,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":10219,"endOffset":10227,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":10230,"endOffset":10240,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":10243,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":10255,"endOffset":10263,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":10266,"endOffset":10275,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":10278,"endOffset":10290,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":10293,"endOffset":10305,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":10308,"endOffset":10318,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":10321,"endOffset":10330,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":10333,"endOffset":10343,"count":0}],"isBlockCoverage":false},{"functionName":"groupCollapsed","ranges":[{"startOffset":10346,"endOffset":10365,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":10368,"endOffset":10381,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getConsoleOutput.ts","ranges":[{"startOffset":10472,"endOffset":12486,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":10621,"endOffset":10761,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":10762,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":10911,"endOffset":10996,"count":0}],"isBlockCoverage":false},{"functionName":"getConsoleOutput","ranges":[{"startOffset":11189,"endOffset":12477,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":12708,"endOffset":13436,"count":5},{"startOffset":12900,"endOffset":12955,"count":1},{"startOffset":12955,"endOffset":13435,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13662,"endOffset":14785,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13854,"endOffset":13908,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13992,"endOffset":14044,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14126,"endOffset":14176,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14263,"endOffset":14318,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":14698,"endOffset":14783,"count":4},{"startOffset":14764,"endOffset":14780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"259","url":"node:console","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1202,"count":1}],"isBlockCoverage":false}]},{"scriptId":"260","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-haste-map/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99725,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":99720,"count":1}],"isBlockCoverage":true},{"functionName":"./package.json","ranges":[{"startOffset":351,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"./src/HasteFS.ts","ranges":[{"startOffset":1381,"endOffset":4783,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":1541,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1839,"endOffset":2453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1990,"endOffset":2443,"count":1},{"startOffset":2046,"endOffset":2158,"count":0},{"startOffset":2160,"endOffset":2183,"count":0},{"startOffset":2184,"endOffset":2187,"count":0},{"startOffset":2189,"endOffset":2442,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2454,"endOffset":2539,"count":1},{"startOffset":2520,"endOffset":2536,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2732,"endOffset":4744,"count":1}],"isBlockCoverage":true},{"functionName":"HasteFS","ranges":[{"startOffset":2772,"endOffset":2873,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleName","ranges":[{"startOffset":2876,"endOffset":3023,"count":0}],"isBlockCoverage":false},{"functionName":"getSize","ranges":[{"startOffset":3026,"endOffset":3169,"count":1370},{"startOffset":3157,"endOffset":3164,"count":0}],"isBlockCoverage":true},{"functionName":"getDependencies","ranges":[{"startOffset":3172,"endOffset":3467,"count":0}],"isBlockCoverage":false},{"functionName":"getSha1","ranges":[{"startOffset":3470,"endOffset":3613,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":3616,"endOffset":3678,"count":1336}],"isBlockCoverage":true},{"functionName":"getAllFiles","ranges":[{"startOffset":3681,"endOffset":3748,"count":1}],"isBlockCoverage":true},{"functionName":"getFileIterator","ranges":[{"startOffset":3751,"endOffset":3805,"count":2}],"isBlockCoverage":true},{"functionName":"getAbsoluteFileIterator","ranges":[{"startOffset":3808,"endOffset":3946,"count":2},{"startOffset":3884,"endOffset":3942,"count":13022}],"isBlockCoverage":true},{"functionName":"matchFiles","ranges":[{"startOffset":3949,"endOffset":4226,"count":1},{"startOffset":4131,"endOffset":4204,"count":6511},{"startOffset":4163,"endOffset":4198,"count":1338}],"isBlockCoverage":true},{"functionName":"matchFilesWithGlob","ranges":[{"startOffset":4229,"endOffset":4608,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileData","ranges":[{"startOffset":4611,"endOffset":4742,"count":2706}],"isBlockCoverage":true},{"functionName":"./src/ModuleMap.ts","ranges":[{"startOffset":4822,"endOffset":11599,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":5153,"endOffset":5767,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":5304,"endOffset":5757,"count":1},{"startOffset":5360,"endOffset":5472,"count":0},{"startOffset":5474,"endOffset":5497,"count":0},{"startOffset":5498,"endOffset":5501,"count":0},{"startOffset":5503,"endOffset":5756,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":5768,"endOffset":5853,"count":1},{"startOffset":5834,"endOffset":5850,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6097,"endOffset":10200,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":6117,"endOffset":6153,"count":1}],"isBlockCoverage":true},{"functionName":"mapToArrayRecursive","ranges":[{"startOffset":6180,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"mapFromArrayRecursive","ranges":[{"startOffset":6381,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleMap","ranges":[{"startOffset":6561,"endOffset":6604,"count":1}],"isBlockCoverage":true},{"functionName":"getModule","ranges":[{"startOffset":6607,"endOffset":7043,"count":0}],"isBlockCoverage":false},{"functionName":"getPackage","ranges":[{"startOffset":7046,"endOffset":7180,"count":0}],"isBlockCoverage":false},{"functionName":"getMockModule","ranges":[{"startOffset":7183,"endOffset":7366,"count":0}],"isBlockCoverage":false},{"functionName":"getRawModuleMap","ranges":[{"startOffset":7369,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":7544,"endOffset":7815,"count":0}],"isBlockCoverage":false},{"functionName":"fromJSON","ranges":[{"startOffset":7825,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"_getModuleMetadata","ranges":[{"startOffset":8558,"endOffset":9520,"count":0}],"isBlockCoverage":false},{"functionName":"_assertNoDuplicates","ranges":[{"startOffset":9523,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":10053,"endOffset":10198,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10233,"endOffset":11108,"count":0}],"isBlockCoverage":true},{"functionName":"getPlatformMessage","ranges":[{"startOffset":11109,"endOffset":11321,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeMessage","ranges":[{"startOffset":11322,"endOffset":11517,"count":0}],"isBlockCoverage":false},{"functionName":"./src/constants.ts","ranges":[{"startOffset":11638,"endOffset":12788,"count":1}],"isBlockCoverage":true},{"functionName":"./src/crawlers/node.ts","ranges":[{"startOffset":12831,"endOffset":19380,"count":1}],"isBlockCoverage":true},{"functionName":"_child_process","ranges":[{"startOffset":12993,"endOffset":13133,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":13134,"endOffset":13270,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":13218,"endOffset":13252,"count":21059}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":13271,"endOffset":13410,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":13358,"endOffset":13392,"count":11734}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13582,"endOffset":13667,"count":1},{"startOffset":13648,"endOffset":13664,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":13668,"endOffset":14282,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":13819,"endOffset":14272,"count":3},{"startOffset":13866,"endOffset":13875,"count":1},{"startOffset":13875,"endOffset":13987,"count":2},{"startOffset":13962,"endOffset":13987,"count":0},{"startOffset":13989,"endOffset":13998,"count":0},{"startOffset":13998,"endOffset":14009,"count":2},{"startOffset":14009,"endOffset":14012,"count":0},{"startOffset":14013,"endOffset":14016,"count":2},{"startOffset":14018,"endOffset":14065,"count":2},{"startOffset":14034,"endOffset":14050,"count":0},{"startOffset":14065,"endOffset":14085,"count":2},{"startOffset":14085,"endOffset":14260,"count":122},{"startOffset":14222,"endOffset":14230,"count":114},{"startOffset":14232,"endOffset":14244,"count":8},{"startOffset":14245,"endOffset":14258,"count":114},{"startOffset":14260,"endOffset":14271,"count":2}],"isBlockCoverage":true},{"functionName":"hasNativeFindSupport","ranges":[{"startOffset":14475,"endOffset":15101,"count":1},{"startOffset":14590,"endOffset":15099,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14628,"endOffset":15063,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":15102,"endOffset":16718,"count":1},{"startOffset":16683,"endOffset":16716,"count":0}],"isBlockCoverage":true},{"functionName":"search","ranges":[{"startOffset":15217,"endOffset":16609,"count":2999}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15328,"endOffset":16603,"count":2999},{"startOffset":15384,"endOffset":15480,"count":0},{"startOffset":15516,"endOffset":16532,"count":12324},{"startOffset":15601,"endOffset":15632,"count":590},{"startOffset":15632,"endOffset":15669,"count":11734},{"startOffset":15669,"endOffset":15700,"count":0},{"startOffset":15700,"endOffset":15734,"count":11734},{"startOffset":15734,"endOffset":15789,"count":2998},{"startOffset":15789,"endOffset":15849,"count":8736},{"startOffset":15849,"endOffset":15860,"count":0},{"startOffset":15861,"endOffset":15873,"count":8736},{"startOffset":16562,"endOffset":16597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15894,"endOffset":16522,"count":8736},{"startOffset":16170,"endOffset":16213,"count":0},{"startOffset":16322,"endOffset":16409,"count":6511},{"startOffset":16469,"endOffset":16512,"count":1}],"isBlockCoverage":true},{"functionName":"findNative","ranges":[{"startOffset":16719,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCrawl","ranges":[{"startOffset":18102,"endOffset":19371,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18369,"endOffset":19367,"count":1},{"startOffset":19207,"endOffset":19285,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":18403,"endOffset":19182,"count":1},{"startOffset":18527,"endOffset":19079,"count":6511},{"startOffset":18738,"endOffset":18789,"count":0},{"startOffset":18791,"endOffset":18855,"count":0}],"isBlockCoverage":true},{"functionName":"./src/crawlers/watchman.ts","ranges":[{"startOffset":19427,"endOffset":29635,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":19597,"endOffset":19733,"count":0}],"isBlockCoverage":false},{"functionName":"watchman","ranges":[{"startOffset":19734,"endOffset":19885,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":20159,"endOffset":20244,"count":2},{"startOffset":20225,"endOffset":20241,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":20245,"endOffset":20859,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":20396,"endOffset":20849,"count":1},{"startOffset":20452,"endOffset":20564,"count":0},{"startOffset":20566,"endOffset":20589,"count":0},{"startOffset":20590,"endOffset":20593,"count":0},{"startOffset":20595,"endOffset":20848,"count":0}],"isBlockCoverage":true},{"functionName":"watchmanError","ranges":[{"startOffset":21132,"endOffset":21316,"count":0}],"isBlockCoverage":false},{"functionName":"capabilityCheck","ranges":[{"startOffset":21521,"endOffset":21823,"count":0}],"isBlockCoverage":false},{"functionName":"watchmanCrawl","ranges":[{"startOffset":21824,"endOffset":29626,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getMockName.ts","ranges":[{"startOffset":29676,"endOffset":31065,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":29815,"endOffset":29951,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":29899,"endOffset":29933,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":29952,"endOffset":30566,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":30103,"endOffset":30556,"count":1},{"startOffset":30150,"endOffset":30159,"count":0},{"startOffset":30246,"endOffset":30271,"count":0},{"startOffset":30273,"endOffset":30282,"count":0},{"startOffset":30293,"endOffset":30296,"count":0},{"startOffset":30318,"endOffset":30334,"count":0},{"startOffset":30369,"endOffset":30544,"count":17},{"startOffset":30516,"endOffset":30528,"count":0}],"isBlockCoverage":true},{"functionName":"getMockName","ranges":[{"startOffset":30840,"endOffset":31006,"count":0}],"isBlockCoverage":false},{"functionName":"./src/lib/fast_path.ts","ranges":[{"startOffset":31108,"endOffset":32836,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":31274,"endOffset":31410,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":31358,"endOffset":31392,"count":35263}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":31411,"endOffset":32025,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":31562,"endOffset":32015,"count":1},{"startOffset":31609,"endOffset":31618,"count":0},{"startOffset":31705,"endOffset":31730,"count":0},{"startOffset":31732,"endOffset":31741,"count":0},{"startOffset":31752,"endOffset":31755,"count":0},{"startOffset":31777,"endOffset":31793,"count":0},{"startOffset":31828,"endOffset":32003,"count":17},{"startOffset":31975,"endOffset":31987,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":32276,"endOffset":32445,"count":15729},{"startOffset":32369,"endOffset":32405,"count":15728},{"startOffset":32406,"endOffset":32442,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":32631,"endOffset":32827,"count":19533},{"startOffset":32739,"endOffset":32782,"count":0}],"isBlockCoverage":true},{"functionName":"./src/lib/getPlatformExtension.ts","ranges":[{"startOffset":32890,"endOffset":33831,"count":1}],"isBlockCoverage":true},{"functionName":"getPlatformExtension","ranges":[{"startOffset":33365,"endOffset":33822,"count":32},{"startOffset":33557,"endOffset":33726,"count":0},{"startOffset":33728,"endOffset":33812,"count":0},{"startOffset":33813,"endOffset":33819,"count":0}],"isBlockCoverage":true},{"functionName":"./src/lib/isWatchmanInstalled.ts","ranges":[{"startOffset":33884,"endOffset":34679,"count":1}],"isBlockCoverage":true},{"functionName":"_child_process","ranges":[{"startOffset":34036,"endOffset":34176,"count":1}],"isBlockCoverage":true},{"functionName":"_child_process","ranges":[{"startOffset":34124,"endOffset":34158,"count":0}],"isBlockCoverage":false},{"functionName":"_util","ranges":[{"startOffset":34177,"endOffset":34290,"count":1}],"isBlockCoverage":true},{"functionName":"_util","ranges":[{"startOffset":34238,"endOffset":34272,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchmanInstalled","ranges":[{"startOffset":34483,"endOffset":34670,"count":1},{"startOffset":34617,"endOffset":34639,"count":0}],"isBlockCoverage":true},{"functionName":"./src/lib/normalizePathSep.ts","ranges":[{"startOffset":34729,"endOffset":36047,"count":1},{"startOffset":35904,"endOffset":35984,"count":0}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":34868,"endOffset":35004,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":34952,"endOffset":34986,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":35005,"endOffset":35619,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":35156,"endOffset":35609,"count":1},{"startOffset":35203,"endOffset":35212,"count":0},{"startOffset":35299,"endOffset":35324,"count":0},{"startOffset":35326,"endOffset":35335,"count":0},{"startOffset":35346,"endOffset":35349,"count":0},{"startOffset":35371,"endOffset":35387,"count":0},{"startOffset":35422,"endOffset":35597,"count":17},{"startOffset":35569,"endOffset":35581,"count":0}],"isBlockCoverage":true},{"functionName":"normalizePathSep","ranges":[{"startOffset":35881,"endOffset":35901,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathSep","ranges":[{"startOffset":35933,"endOffset":35981,"count":0}],"isBlockCoverage":false},{"functionName":"./src/watchers/FSEventsWatcher.ts","ranges":[{"startOffset":36101,"endOffset":41610,"count":1}],"isBlockCoverage":true},{"functionName":"_events","ranges":[{"startOffset":36245,"endOffset":36364,"count":1}],"isBlockCoverage":true},{"functionName":"_events","ranges":[{"startOffset":36312,"endOffset":36346,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":36365,"endOffset":36501,"count":0}],"isBlockCoverage":false},{"functionName":"_anymatch","ranges":[{"startOffset":36502,"endOffset":36651,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":36652,"endOffset":36791,"count":0}],"isBlockCoverage":false},{"functionName":"_micromatch","ranges":[{"startOffset":36792,"endOffset":36947,"count":0}],"isBlockCoverage":false},{"functionName":"_walker","ranges":[{"startOffset":36948,"endOffset":37091,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":37092,"endOffset":37177,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":37178,"endOffset":37792,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38495,"endOffset":41558,"count":0}],"isBlockCoverage":true},{"functionName":"./src/watchers/NodeWatcher.js","ranges":[{"startOffset":41660,"endOffset":50703,"count":1}],"isBlockCoverage":true},{"functionName":"NodeWatcher","ranges":[{"startOffset":42508,"endOffset":43113,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":43495,"endOffset":43944,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":44049,"endOffset":44248,"count":0}],"isBlockCoverage":false},{"functionName":"unregisterDir","ranges":[{"startOffset":44351,"endOffset":44462,"count":0}],"isBlockCoverage":false},{"functionName":"registered","ranges":[{"startOffset":44610,"endOffset":44812,"count":0}],"isBlockCoverage":false},{"functionName":"checkedEmitError","ranges":[{"startOffset":44920,"endOffset":45028,"count":0}],"isBlockCoverage":false},{"functionName":"watchdir","ranges":[{"startOffset":45113,"endOffset":45444,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatching","ranges":[{"startOffset":45537,"endOffset":45660,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":45714,"endOffset":45862,"count":0}],"isBlockCoverage":false},{"functionName":"detectChangedFile","ranges":[{"startOffset":46214,"endOffset":47046,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeChange","ranges":[{"startOffset":47216,"endOffset":47507,"count":0}],"isBlockCoverage":false},{"functionName":"processChange","ranges":[{"startOffset":47642,"endOffset":48933,"count":0}],"isBlockCoverage":false},{"functionName":"emitEvent","ranges":[{"startOffset":49067,"endOffset":50253,"count":0}],"isBlockCoverage":false},{"functionName":"rawEmitEvent","ranges":[{"startOffset":50299,"endOffset":50434,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnorableFileError","ranges":[{"startOffset":50509,"endOffset":50693,"count":0}],"isBlockCoverage":false},{"functionName":"./src/watchers/RecrawlWarning.js","ranges":[{"startOffset":50756,"endOffset":52177,"count":1}],"isBlockCoverage":true},{"functionName":"RecrawlWarning","ranges":[{"startOffset":50929,"endOffset":51005,"count":0}],"isBlockCoverage":false},{"functionName":"findByRoot","ranges":[{"startOffset":51016,"endOffset":51243,"count":0}],"isBlockCoverage":false},{"functionName":"isRecrawlWarningDupe","ranges":[{"startOffset":51254,"endOffset":51997,"count":0}],"isBlockCoverage":false},{"functionName":"./src/watchers/WatchmanWatcher.js","ranges":[{"startOffset":52231,"endOffset":60733,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":52438,"endOffset":52475,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher","ranges":[{"startOffset":53990,"endOffset":54138,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher.init","ranges":[{"startOffset":54363,"endOffset":57568,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher.handleChangeEvent","ranges":[{"startOffset":57721,"endOffset":58089,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher.handleFileChange","ranges":[{"startOffset":58238,"endOffset":59585,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher.emitEvent","ranges":[{"startOffset":59781,"endOffset":59941,"count":0}],"isBlockCoverage":false},{"functionName":"WatchmanWatcher.close","ranges":[{"startOffset":60013,"endOffset":60113,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":60245,"endOffset":60386,"count":0}],"isBlockCoverage":false},{"functionName":"handleWarning","ranges":[{"startOffset":60486,"endOffset":60723,"count":0}],"isBlockCoverage":false},{"functionName":"./src/watchers/common.js","ranges":[{"startOffset":60778,"endOffset":63527,"count":1}],"isBlockCoverage":true},{"functionName":"exports.assignOptions","ranges":[{"startOffset":61513,"endOffset":62035,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isFileIncluded","ranges":[{"startOffset":62219,"endOffset":62522,"count":0}],"isBlockCoverage":false},{"functionName":"exports.recReaddir","ranges":[{"startOffset":62789,"endOffset":63233,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeProxy","ranges":[{"startOffset":63407,"endOffset":63517,"count":0}],"isBlockCoverage":false},{"functionName":"events","ranges":[{"startOffset":63554,"endOffset":63613,"count":1}],"isBlockCoverage":true},{"functionName":"os","ranges":[{"startOffset":63636,"endOffset":63691,"count":1}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":63913,"endOffset":64641,"count":30},{"startOffset":64105,"endOffset":64160,"count":12},{"startOffset":64160,"endOffset":64640,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64797,"endOffset":65172,"count":1}],"isBlockCoverage":true},{"functionName":"__webpack_require__.n","ranges":[{"startOffset":64923,"endOffset":65159,"count":3},{"startOffset":64990,"endOffset":65030,"count":0}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":65005,"endOffset":65030,"count":0}],"isBlockCoverage":false},{"functionName":"getter","ranges":[{"startOffset":65046,"endOffset":65060,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65255,"endOffset":65671,"count":1}],"isBlockCoverage":true},{"functionName":"__webpack_require__.d","ranges":[{"startOffset":65356,"endOffset":65658,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65755,"endOffset":65874,"count":1}],"isBlockCoverage":true},{"functionName":"__webpack_require__.o","ranges":[{"startOffset":65798,"endOffset":65862,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65955,"endOffset":66326,"count":1}],"isBlockCoverage":true},{"functionName":"__webpack_require__.r","ranges":[{"startOffset":66041,"endOffset":66313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66556,"endOffset":99666,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":66742,"endOffset":66861,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":66809,"endOffset":66843,"count":3}],"isBlockCoverage":true},{"functionName":"_events","ranges":[{"startOffset":66862,"endOffset":66981,"count":1}],"isBlockCoverage":true},{"functionName":"_events","ranges":[{"startOffset":66929,"endOffset":66963,"count":0}],"isBlockCoverage":false},{"functionName":"_os","ranges":[{"startOffset":66982,"endOffset":67089,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":67090,"endOffset":67226,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":67174,"endOffset":67208,"count":11}],"isBlockCoverage":true},{"functionName":"_v","ranges":[{"startOffset":67227,"endOffset":67332,"count":1}],"isBlockCoverage":true},{"functionName":"_v","ranges":[{"startOffset":67280,"endOffset":67314,"count":1}],"isBlockCoverage":true},{"functionName":"_gracefulFs","ranges":[{"startOffset":67333,"endOffset":67465,"count":1}],"isBlockCoverage":true},{"functionName":"_gracefulFs","ranges":[{"startOffset":67413,"endOffset":67447,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":67466,"endOffset":67608,"count":1}],"isBlockCoverage":true},{"functionName":"_jestRegexUtil","ranges":[{"startOffset":67556,"endOffset":67590,"count":2}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":67609,"endOffset":67735,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWorker","ranges":[{"startOffset":67736,"endOffset":67868,"count":1}],"isBlockCoverage":true},{"functionName":"_jestWorker","ranges":[{"startOffset":67816,"endOffset":67850,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":69056,"endOffset":69141,"count":9},{"startOffset":69118,"endOffset":69121,"count":8},{"startOffset":69122,"endOffset":69138,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":69142,"endOffset":69756,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":69293,"endOffset":69746,"count":2},{"startOffset":69340,"endOffset":69461,"count":1},{"startOffset":69436,"endOffset":69461,"count":0},{"startOffset":69463,"endOffset":69472,"count":0},{"startOffset":69472,"endOffset":69483,"count":1},{"startOffset":69483,"endOffset":69486,"count":0},{"startOffset":69487,"endOffset":69490,"count":1},{"startOffset":69492,"endOffset":69539,"count":1},{"startOffset":69508,"endOffset":69524,"count":0},{"startOffset":69539,"endOffset":69559,"count":1},{"startOffset":69559,"endOffset":69734,"count":17},{"startOffset":69706,"endOffset":69718,"count":0},{"startOffset":69734,"endOffset":69745,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":70649,"endOffset":70727,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":74374,"endOffset":99105,"count":1}],"isBlockCoverage":true},{"functionName":"getStatic","ranges":[{"startOffset":74553,"endOffset":74701,"count":2},{"startOffset":74614,"endOffset":74676,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":74711,"endOffset":74999,"count":1},{"startOffset":74771,"endOffset":74886,"count":0}],"isBlockCoverage":true},{"functionName":"HasteMap","ranges":[{"startOffset":75002,"endOffset":76844,"count":1},{"startOffset":75105,"endOffset":75127,"count":0},{"startOffset":75655,"endOffset":75661,"count":0},{"startOffset":76010,"endOffset":76017,"count":0},{"startOffset":76135,"endOffset":76156,"count":0},{"startOffset":76384,"endOffset":76491,"count":0},{"startOffset":76497,"endOffset":76575,"count":0},{"startOffset":76613,"endOffset":76641,"count":0},{"startOffset":76643,"endOffset":76840,"count":0}],"isBlockCoverage":true},{"functionName":"setupCachePath","ranges":[{"startOffset":76847,"endOffset":78060,"count":1},{"startOffset":77092,"endOffset":77261,"count":0},{"startOffset":77299,"endOffset":77552,"count":0},{"startOffset":77921,"endOffset":77926,"count":0},{"startOffset":77951,"endOffset":77956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":77730,"endOffset":77778,"count":1}],"isBlockCoverage":true},{"functionName":"getCacheFilePath","ranges":[{"startOffset":78070,"endOffset":78288,"count":3}],"isBlockCoverage":true},{"functionName":"getModuleMapFromJSON","ranges":[{"startOffset":78298,"endOffset":78376,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheFilePath","ranges":[{"startOffset":78379,"endOffset":78431,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":78434,"endOffset":79564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78503,"endOffset":79519,"count":1},{"startOffset":78771,"endOffset":78800,"count":0},{"startOffset":78801,"endOffset":78830,"count":0},{"startOffset":78932,"endOffset":78985,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79643,"endOffset":79855,"count":1}],"isBlockCoverage":true},{"functionName":"readModuleMap","ranges":[{"startOffset":79858,"endOffset":80071,"count":0}],"isBlockCoverage":false},{"functionName":"_buildFileMap","ranges":[{"startOffset":80118,"endOffset":80382,"count":1},{"startOffset":80214,"endOffset":80236,"count":0},{"startOffset":80290,"endOffset":80344,"count":0}],"isBlockCoverage":true},{"functionName":"_processFile","ranges":[{"startOffset":80453,"endOffset":86909,"count":6511},{"startOffset":82755,"endOffset":82852,"count":0},{"startOffset":82985,"endOffset":83026,"count":0},{"startOffset":84462,"endOffset":84496,"count":0},{"startOffset":84498,"endOffset":84915,"count":0},{"startOffset":84997,"endOffset":85829,"count":0},{"startOffset":85880,"endOffset":86580,"count":0}],"isBlockCoverage":true},{"functionName":"setModule","ranges":[{"startOffset":80580,"endOffset":82600,"count":32},{"startOffset":80969,"endOffset":81047,"count":0},{"startOffset":81049,"endOffset":82265,"count":0},{"startOffset":82358,"endOffset":82558,"count":0}],"isBlockCoverage":true},{"functionName":"workerReply","ranges":[{"startOffset":83125,"endOffset":83749,"count":6511},{"startOffset":83366,"endOffset":83383,"count":32},{"startOffset":83385,"endOffset":83499,"count":32},{"startOffset":83576,"endOffset":83641,"count":6415},{"startOffset":83642,"endOffset":83646,"count":96},{"startOffset":83671,"endOffset":83743,"count":0}],"isBlockCoverage":true},{"functionName":"workerError","ranges":[{"startOffset":83846,"endOffset":84283,"count":0}],"isBlockCoverage":false},{"functionName":"_buildHasteMap","ranges":[{"startOffset":86912,"endOffset":88376,"count":1},{"startOffset":87263,"endOffset":87287,"count":0},{"startOffset":87383,"endOffset":87489,"count":0},{"startOffset":87555,"endOffset":87658,"count":0},{"startOffset":87742,"endOffset":88156,"count":6511},{"startOffset":87784,"endOffset":87826,"count":0},{"startOffset":87828,"endOffset":87855,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88195,"endOffset":88310,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88312,"endOffset":88370,"count":0}],"isBlockCoverage":false},{"functionName":"_cleanup","ranges":[{"startOffset":88379,"endOffset":88516,"count":1}],"isBlockCoverage":true},{"functionName":"_persist","ranges":[{"startOffset":88586,"endOffset":88696,"count":1}],"isBlockCoverage":true},{"functionName":"_getWorker","ranges":[{"startOffset":88783,"endOffset":89405,"count":6511},{"startOffset":88828,"endOffset":89376,"count":1},{"startOffset":88847,"endOffset":88860,"count":0},{"startOffset":88895,"endOffset":89009,"count":0}],"isBlockCoverage":true},{"functionName":"_crawl","ranges":[{"startOffset":89408,"endOffset":90696,"count":1},{"startOffset":89564,"endOffset":89589,"count":0},{"startOffset":90644,"endOffset":90692,"count":0}],"isBlockCoverage":true},{"functionName":"retry","ranges":[{"startOffset":89944,"endOffset":90584,"count":0}],"isBlockCoverage":false},{"functionName":"_watch","ranges":[{"startOffset":90728,"endOffset":96513,"count":1},{"startOffset":90804,"endOffset":91165,"count":0},{"startOffset":91166,"endOffset":91272,"count":0}],"isBlockCoverage":true},{"functionName":"createWatcher","ranges":[{"startOffset":91611,"endOffset":92119,"count":0}],"isBlockCoverage":false},{"functionName":"emitChange","ranges":[{"startOffset":92144,"endOffset":92659,"count":0}],"isBlockCoverage":false},{"functionName":"onChange","ranges":[{"startOffset":92682,"endOffset":96316,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96455,"endOffset":96507,"count":0}],"isBlockCoverage":false},{"functionName":"_recoverDuplicates","ranges":[{"startOffset":96973,"endOffset":98056,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":98059,"endOffset":98312,"count":0}],"isBlockCoverage":false},{"functionName":"_ignore","ranges":[{"startOffset":98341,"endOffset":98646,"count":12324},{"startOffset":98505,"endOffset":98547,"count":0},{"startOffset":98574,"endOffset":98641,"count":12308}],"isBlockCoverage":true},{"functionName":"_shouldUseWatchman","ranges":[{"startOffset":98649,"endOffset":98901,"count":1},{"startOffset":98714,"endOffset":98741,"count":0}],"isBlockCoverage":true},{"functionName":"_createEmptyMap","ranges":[{"startOffset":98904,"endOffset":99070,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":99073,"endOffset":99102,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":99106,"endOffset":99356,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":99398,"endOffset":99476,"count":0}],"isBlockCoverage":false},{"functionName":"copyMap","ranges":[{"startOffset":99477,"endOffset":99529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/anymatch/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13898,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":188,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"hasBraces","ranges":[{"startOffset":235,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":890,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2887,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3546,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4309,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5473,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6812,"endOffset":7086,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7871,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8996,"endOffset":9252,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":10053,"endOffset":10261,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10975,"endOffset":11271,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11723,"endOffset":11761,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":12110,"endOffset":12146,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12538,"endOffset":12758,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13325,"endOffset":13558,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13612,"endOffset":13781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4380,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1363,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1799,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2411,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3145,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4122,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1099,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1349,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1769,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1971,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2179,"endOffset":2516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6406,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2311,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2583,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2864,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2982,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3115,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3283,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4797,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5593,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2797,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":832,"endOffset":2769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6899,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"280","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/micromatch/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/walker/lib/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2901,"count":1}],"isBlockCoverage":true},{"functionName":"Walker","ranges":[{"startOffset":332,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"Walker.filterDir","ranges":[{"startOffset":1038,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"Walker.go","ranges":[{"startOffset":1155,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"Walker.doneOne","ranges":[{"startOffset":2826,"endOffset":2900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/makeerror/lib/makeerror.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2450,"count":1}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":56,"endOffset":79,"count":1}],"isBlockCoverage":true},{"functionName":"BaseError.toString","ranges":[{"startOffset":145,"endOffset":181,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":862,"endOffset":2449,"count":1},{"startOffset":957,"endOffset":962,"count":0},{"startOffset":1022,"endOffset":1066,"count":0},{"startOffset":1072,"endOffset":1148,"count":0}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":1170,"endOffset":2334,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/tmpl/lib/tmpl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":50,"endOffset":563,"count":1},{"startOffset":542,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":273,"endOffset":361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/fb-watchman/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9073,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":762,"endOffset":1006,"count":0}],"isBlockCoverage":false},{"functionName":"Client.sendNextCommand","ranges":[{"startOffset":1150,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"Client.cancelCommands","ranges":[{"startOffset":1514,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"Client.connect","ranges":[{"startOffset":1991,"endOffset":6462,"count":0}],"isBlockCoverage":false},{"functionName":"Client.command","ranges":[{"startOffset":6491,"endOffset":6920,"count":0}],"isBlockCoverage":false},{"functionName":"vers_compare","ranges":[{"startOffset":7187,"endOffset":7414,"count":0}],"isBlockCoverage":false},{"functionName":"have_cap","ranges":[{"startOffset":7416,"endOffset":7555,"count":0}],"isBlockCoverage":false},{"functionName":"Client._synthesizeCapabilityCheck","ranges":[{"startOffset":7659,"endOffset":8127,"count":0}],"isBlockCoverage":false},{"functionName":"Client.capabilityCheck","ranges":[{"startOffset":8164,"endOffset":8853,"count":0}],"isBlockCoverage":false},{"functionName":"Client.end","ranges":[{"startOffset":8917,"endOffset":9072,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/bser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15614,"count":1}],"isBlockCoverage":true},{"functionName":"nextPow2","ranges":[{"startOffset":541,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator","ranges":[{"startOffset":687,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.writeAvail","ranges":[{"startOffset":970,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.readAvail","ranges":[{"startOffset":1089,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.reserve","ranges":[{"startOffset":1233,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.append","ranges":[{"startOffset":1870,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.assertReadableSize","ranges":[{"startOffset":2236,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.peekString","ranges":[{"startOffset":2428,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.readString","ranges":[{"startOffset":2594,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.peekInt","ranges":[{"startOffset":2722,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.readInt","ranges":[{"startOffset":3569,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.peekDouble","ranges":[{"startOffset":3792,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.readDouble","ranges":[{"startOffset":3985,"endOffset":4070,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.readAdvance","ranges":[{"startOffset":4108,"endOffset":4378,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.writeByte","ranges":[{"startOffset":4414,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.writeInt","ranges":[{"startOffset":4556,"endOffset":5171,"count":0}],"isBlockCoverage":false},{"functionName":"Accumulator.writeDouble","ranges":[{"startOffset":5209,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf","ranges":[{"startOffset":5968,"endOffset":6069,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.append","ranges":[{"startOffset":6161,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.processLater","ranges":[{"startOffset":6639,"endOffset":6804,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.process","ranges":[{"startOffset":7208,"endOffset":8107,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.raise","ranges":[{"startOffset":8137,"endOffset":8447,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.expectCode","ranges":[{"startOffset":8482,"endOffset":8641,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeAny","ranges":[{"startOffset":8675,"endOffset":9448,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeArray","ranges":[{"startOffset":9484,"endOffset":9665,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeObject","ranges":[{"startOffset":9702,"endOffset":9939,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeTemplate","ranges":[{"startOffset":9978,"endOffset":10435,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeString","ranges":[{"startOffset":10472,"endOffset":10583,"count":0}],"isBlockCoverage":false},{"functionName":"BunserBuf.decodeInt","ranges":[{"startOffset":10897,"endOffset":11537,"count":0}],"isBlockCoverage":false},{"functionName":"loadFromBuffer","ranges":[{"startOffset":11598,"endOffset":11958,"count":0}],"isBlockCoverage":false},{"functionName":"byteswap64","ranges":[{"startOffset":12122,"endOffset":12287,"count":0}],"isBlockCoverage":false},{"functionName":"dump_int64","ranges":[{"startOffset":12289,"endOffset":12715,"count":0}],"isBlockCoverage":false},{"functionName":"dump_int","ranges":[{"startOffset":12717,"endOffset":13088,"count":0}],"isBlockCoverage":false},{"functionName":"dump_any","ranges":[{"startOffset":13090,"endOffset":14936,"count":0}],"isBlockCoverage":false},{"functionName":"dumpToBuffer","ranges":[{"startOffset":14995,"endOffset":15577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/node-int64/Int64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8052,"count":1},{"startOffset":1279,"endOffset":1333,"count":256},{"startOffset":1302,"endOffset":1306,"count":240},{"startOffset":1307,"endOffset":1312,"count":16}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1824,"endOffset":2468,"count":0}],"isBlockCoverage":false},{"functionName":"_2scomp","ranges":[{"startOffset":2805,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"setValue","ranges":[{"startOffset":3258,"endOffset":4399,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":4833,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":5581,"endOffset":5630,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5741,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"toOctetString","ranges":[{"startOffset":5981,"endOffset":6171,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer","ranges":[{"startOffset":6476,"endOffset":6667,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":6887,"endOffset":7014,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":7212,"endOffset":7683,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":7833,"endOffset":7892,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7952,"endOffset":8048,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-haste-map/build/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10153,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":10148,"count":1}],"isBlockCoverage":true},{"functionName":"./src/blacklist.ts","ranges":[{"startOffset":355,"endOffset":1696,"count":1}],"isBlockCoverage":true},{"functionName":"./src/constants.ts","ranges":[{"startOffset":1735,"endOffset":2885,"count":1}],"isBlockCoverage":true},{"functionName":"./src/lib/dependencyExtractor.ts","ranges":[{"startOffset":2938,"endOffset":4899,"count":1}],"isBlockCoverage":true},{"functionName":"CAPTURE_STRING_LITERAL","ranges":[{"startOffset":3333,"endOffset":3373,"count":3}],"isBlockCoverage":true},{"functionName":"createRegExp","ranges":[{"startOffset":3534,"endOffset":3617,"count":3}],"isBlockCoverage":true},{"functionName":"alternatives","ranges":[{"startOffset":3618,"endOffset":3688,"count":2}],"isBlockCoverage":true},{"functionName":"functionCallStart","ranges":[{"startOffset":3689,"endOffset":3833,"count":2}],"isBlockCoverage":true},{"functionName":"extract","ranges":[{"startOffset":4489,"endOffset":4887,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":5121,"endOffset":5849,"count":3},{"startOffset":5313,"endOffset":5368,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6075,"endOffset":10094,"count":1}],"isBlockCoverage":true},{"functionName":"_crypto","ranges":[{"startOffset":6239,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":6359,"endOffset":6495,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":6443,"endOffset":6477,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":6496,"endOffset":6635,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":6636,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":7015,"endOffset":7100,"count":2},{"startOffset":7081,"endOffset":7097,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7101,"endOffset":7715,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7252,"endOffset":7705,"count":1},{"startOffset":7299,"endOffset":7308,"count":0},{"startOffset":7395,"endOffset":7420,"count":0},{"startOffset":7422,"endOffset":7431,"count":0},{"startOffset":7442,"endOffset":7445,"count":0},{"startOffset":7467,"endOffset":7483,"count":0},{"startOffset":7518,"endOffset":7693,"count":17},{"startOffset":7665,"endOffset":7677,"count":0}],"isBlockCoverage":true},{"functionName":"sha1hex","ranges":[{"startOffset":7958,"endOffset":8061,"count":0}],"isBlockCoverage":false},{"functionName":"worker","ranges":[{"startOffset":8062,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"getSha1","ranges":[{"startOffset":9880,"endOffset":10092,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-snapshot/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":66371,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":66366,"count":1}],"isBlockCoverage":true},{"functionName":"./src/InlineSnapshots.ts","ranges":[{"startOffset":361,"endOffset":5648,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":827,"endOffset":1441,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":978,"endOffset":1431,"count":3},{"startOffset":1025,"endOffset":1034,"count":0},{"startOffset":1121,"endOffset":1146,"count":0},{"startOffset":1148,"endOffset":1157,"count":0},{"startOffset":1168,"endOffset":1171,"count":0},{"startOffset":1193,"endOffset":1209,"count":0},{"startOffset":1244,"endOffset":1419,"count":167},{"startOffset":1381,"endOffset":1389,"count":159},{"startOffset":1391,"endOffset":1403,"count":8},{"startOffset":1404,"endOffset":1417,"count":159}],"isBlockCoverage":true},{"functionName":"saveInlineSnapshots","ranges":[{"startOffset":1905,"endOffset":3588,"count":0}],"isBlockCoverage":false},{"functionName":"runPrettier","ranges":[{"startOffset":3609,"endOffset":5062,"count":0}],"isBlockCoverage":false},{"functionName":"createFormattingParser","ranges":[{"startOffset":5157,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"simpleDetectParser","ranges":[{"startOffset":5501,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"./src/SnapshotResolver.ts","ranges":[{"startOffset":5694,"endOffset":9886,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":6104,"endOffset":6189,"count":1},{"startOffset":6166,"endOffset":6169,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":6190,"endOffset":6804,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":6341,"endOffset":6794,"count":1},{"startOffset":6388,"endOffset":6397,"count":0},{"startOffset":6484,"endOffset":6509,"count":0},{"startOffset":6511,"endOffset":6520,"count":0},{"startOffset":6531,"endOffset":6534,"count":0},{"startOffset":6556,"endOffset":6572,"count":0},{"startOffset":6607,"endOffset":6782,"count":17},{"startOffset":6754,"endOffset":6766,"count":0}],"isBlockCoverage":true},{"functionName":"isSnapshotPath","ranges":[{"startOffset":7129,"endOffset":7165,"count":0}],"isBlockCoverage":false},{"functionName":"buildSnapshotResolver","ranges":[{"startOffset":7263,"endOffset":7540,"count":1}],"isBlockCoverage":true},{"functionName":"createSnapshotResolver","ranges":[{"startOffset":7597,"endOffset":7826,"count":1},{"startOffset":7723,"endOffset":7789,"count":0}],"isBlockCoverage":true},{"functionName":"createDefaultSnapshotResolver","ranges":[{"startOffset":7827,"endOffset":8259,"count":1}],"isBlockCoverage":true},{"functionName":"resolveSnapshotPath","ranges":[{"startOffset":7906,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTestPath","ranges":[{"startOffset":8043,"endOffset":8149,"count":1338}],"isBlockCoverage":true},{"functionName":"createCustomSnapshotResolver","ranges":[{"startOffset":8260,"endOffset":9111,"count":0}],"isBlockCoverage":false},{"functionName":"mustImplement","ranges":[{"startOffset":9112,"endOffset":9357,"count":0}],"isBlockCoverage":false},{"functionName":"verifyConsistentTransformations","ranges":[{"startOffset":9358,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"./src/State.ts","ranges":[{"startOffset":9921,"endOffset":19045,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":10370,"endOffset":10984,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":10521,"endOffset":10974,"count":1},{"startOffset":10568,"endOffset":10577,"count":0},{"startOffset":10664,"endOffset":10689,"count":0},{"startOffset":10691,"endOffset":10700,"count":0},{"startOffset":10711,"endOffset":10714,"count":0},{"startOffset":10736,"endOffset":10752,"count":0},{"startOffset":10787,"endOffset":10962,"count":105},{"startOffset":10924,"endOffset":10932,"count":97},{"startOffset":10934,"endOffset":10946,"count":8},{"startOffset":10947,"endOffset":10960,"count":97}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11413,"endOffset":19000,"count":0}],"isBlockCoverage":true},{"functionName":"./src/colors.ts","ranges":[{"startOffset":19081,"endOffset":20068,"count":1}],"isBlockCoverage":true},{"functionName":"./src/dedentLines.ts","ranges":[{"startOffset":20109,"endOffset":23813,"count":1}],"isBlockCoverage":true},{"functionName":"getIndentationLength","ranges":[{"startOffset":20470,"endOffset":20570,"count":0}],"isBlockCoverage":false},{"functionName":"dedentLine","ranges":[{"startOffset":20591,"endOffset":20637,"count":0}],"isBlockCoverage":false},{"functionName":"hasUnmatchedDoubleQuoteMarks","ranges":[{"startOffset":20765,"endOffset":20973,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstLineOfTag","ranges":[{"startOffset":21000,"endOffset":21030,"count":0}],"isBlockCoverage":false},{"functionName":"dedentStartTag","ranges":[{"startOffset":21333,"endOffset":21952,"count":0}],"isBlockCoverage":false},{"functionName":"dedentMarkup","ranges":[{"startOffset":22180,"endOffset":23196,"count":0}],"isBlockCoverage":false},{"functionName":"dedentLines","ranges":[{"startOffset":23401,"endOffset":23768,"count":0}],"isBlockCoverage":false},{"functionName":"./src/mockSerializer.ts","ranges":[{"startOffset":23857,"endOffset":25180,"count":1}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":24241,"endOffset":24984,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":25030,"endOffset":25065,"count":0}],"isBlockCoverage":false},{"functionName":"./src/plugins.ts","ranges":[{"startOffset":25217,"endOffset":26348,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":25545,"endOffset":25630,"count":1},{"startOffset":25611,"endOffset":25627,"count":0}],"isBlockCoverage":true},{"functionName":"addSerializer","ranges":[{"startOffset":26173,"endOffset":26220,"count":0}],"isBlockCoverage":false},{"functionName":"getSerializers","ranges":[{"startOffset":26284,"endOffset":26297,"count":0}],"isBlockCoverage":false},{"functionName":"./src/printSnapshot.ts","ranges":[{"startOffset":26391,"endOffset":36294,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":27359,"endOffset":27444,"count":1},{"startOffset":27421,"endOffset":27424,"count":0}],"isBlockCoverage":true},{"functionName":"getSnapshotColorForChalkInstance","ranges":[{"startOffset":27678,"endOffset":28106,"count":1},{"startOffset":27753,"endOffset":27944,"count":0},{"startOffset":27964,"endOffset":28057,"count":0}],"isBlockCoverage":true},{"functionName":"getReceivedColorForChalkInstance","ranges":[{"startOffset":28226,"endOffset":28672,"count":1},{"startOffset":28301,"endOffset":28492,"count":0},{"startOffset":28512,"endOffset":28605,"count":0}],"isBlockCoverage":true},{"functionName":"noColor","ranges":[{"startOffset":28963,"endOffset":28979,"count":0}],"isBlockCoverage":false},{"functionName":"matcherHintFromConfig","ranges":[{"startOffset":29200,"endOffset":30470,"count":0}],"isBlockCoverage":false},{"functionName":"joinDiffs","ranges":[{"startOffset":30784,"endOffset":30994,"count":0}],"isBlockCoverage":false},{"functionName":"isLineDiffable","ranges":[{"startOffset":31019,"endOffset":31474,"count":0}],"isBlockCoverage":false},{"functionName":"printExpected","ranges":[{"startOffset":31498,"endOffset":31567,"count":0}],"isBlockCoverage":false},{"functionName":"printReceived","ranges":[{"startOffset":31630,"endOffset":31699,"count":0}],"isBlockCoverage":false},{"functionName":"printPropertiesAndReceived","ranges":[{"startOffset":31775,"endOffset":32964,"count":0}],"isBlockCoverage":false},{"functionName":"printSnapshotAndReceived","ranges":[{"startOffset":33103,"endOffset":36223,"count":0}],"isBlockCoverage":false},{"functionName":"./src/utils.ts","ranges":[{"startOffset":36329,"endOffset":48958,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":36977,"endOffset":37591,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":37128,"endOffset":37581,"count":1},{"startOffset":37175,"endOffset":37184,"count":0},{"startOffset":37271,"endOffset":37296,"count":0},{"startOffset":37298,"endOffset":37307,"count":0},{"startOffset":37318,"endOffset":37321,"count":0},{"startOffset":37343,"endOffset":37359,"count":0},{"startOffset":37394,"endOffset":37569,"count":105},{"startOffset":37531,"endOffset":37539,"count":97},{"startOffset":37541,"endOffset":37553,"count":8},{"startOffset":37554,"endOffset":37567,"count":97}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":38018,"endOffset":38120,"count":0}],"isBlockCoverage":false},{"functionName":"addExtraLineBreaks","ranges":[{"startOffset":38256,"endOffset":38314,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtraLineBreaks","ranges":[{"startOffset":38599,"endOffset":38709,"count":0}],"isBlockCoverage":false},{"functionName":"removeLinesBeforeExternalMatcherTrap","ranges":[{"startOffset":38811,"endOffset":39141,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":39305,"endOffset":39532,"count":0}],"isBlockCoverage":false},{"functionName":"minify","ranges":[{"startOffset":39580,"endOffset":39713,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeString","ranges":[{"startOffset":39840,"endOffset":39909,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyOrAnything","ranges":[{"startOffset":39982,"endOffset":40125,"count":0}],"isBlockCoverage":false},{"functionName":"deepMergeArray","ranges":[{"startOffset":40150,"endOffset":40786,"count":0}],"isBlockCoverage":false},{"functionName":"deepMerge","ranges":[{"startOffset":40885,"endOffset":41694,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":41742,"endOffset":42551,"count":0}],"isBlockCoverage":false},{"functionName":"processInlineSnapshotsWithBabel","ranges":[{"startOffset":42963,"endOffset":45383,"count":0}],"isBlockCoverage":false},{"functionName":"processPrettierAst","ranges":[{"startOffset":45487,"endOffset":46815,"count":0}],"isBlockCoverage":false},{"functionName":"groupSnapshotsBy","ranges":[{"startOffset":46891,"endOffset":47094,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46904,"endOffset":47094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47143,"endOffset":47273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47353,"endOffset":47390,"count":0}],"isBlockCoverage":false},{"functionName":"traverseAst","ranges":[{"startOffset":47413,"endOffset":48948,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":49180,"endOffset":49908,"count":13},{"startOffset":49372,"endOffset":49427,"count":4},{"startOffset":49427,"endOffset":49907,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50134,"endOffset":66312,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":50320,"endOffset":50377,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":50461,"endOffset":50505,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":50589,"endOffset":50641,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":50733,"endOffset":50802,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":50913,"endOffset":50966,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":51051,"endOffset":51113,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":51791,"endOffset":51876,"count":1},{"startOffset":51857,"endOffset":51873,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":51877,"endOffset":52491,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":52028,"endOffset":52481,"count":1},{"startOffset":52075,"endOffset":52084,"count":0},{"startOffset":52171,"endOffset":52196,"count":0},{"startOffset":52198,"endOffset":52207,"count":0},{"startOffset":52218,"endOffset":52221,"count":0},{"startOffset":52243,"endOffset":52259,"count":0},{"startOffset":52294,"endOffset":52469,"count":105},{"startOffset":52431,"endOffset":52439,"count":97},{"startOffset":52441,"endOffset":52453,"count":8},{"startOffset":52454,"endOffset":52467,"count":97}],"isBlockCoverage":true},{"functionName":"printSnapshotName","ranges":[{"startOffset":53317,"endOffset":53718,"count":0}],"isBlockCoverage":false},{"functionName":"stripAddedIndentation","ranges":[{"startOffset":53720,"endOffset":54967,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":54987,"endOffset":55068,"count":1336},{"startOffset":55041,"endOffset":55068,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":55086,"endOffset":55949,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55473,"endOffset":55871,"count":1338},{"startOffset":55677,"endOffset":55704,"count":2},{"startOffset":55704,"endOffset":55748,"count":1336},{"startOffset":55748,"endOffset":55849,"count":0},{"startOffset":55849,"endOffset":55870,"count":1336}],"isBlockCoverage":true},{"functionName":"toMatchSnapshot","ranges":[{"startOffset":56002,"endOffset":57432,"count":0}],"isBlockCoverage":false},{"functionName":"toMatchInlineSnapshot","ranges":[{"startOffset":57507,"endOffset":59119,"count":0}],"isBlockCoverage":false},{"functionName":"_toMatchSnapshot","ranges":[{"startOffset":59201,"endOffset":63180,"count":0}],"isBlockCoverage":false},{"functionName":"toThrowErrorMatchingSnapshot","ranges":[{"startOffset":63219,"endOffset":63575,"count":0}],"isBlockCoverage":false},{"functionName":"toThrowErrorMatchingInlineSnapshot","ranges":[{"startOffset":63689,"endOffset":64529,"count":0}],"isBlockCoverage":false},{"functionName":"_toThrowErrorMatchingSnapshot","ranges":[{"startOffset":64650,"endOffset":66309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/snapshot-utils/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8985,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":8980,"count":1}],"isBlockCoverage":true},{"functionName":"./src/index.ts","ranges":[{"startOffset":351,"endOffset":1176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":562,"endOffset":822,"count":10},{"startOffset":628,"endOffset":635,"count":0},{"startOffset":657,"endOffset":688,"count":0},{"startOffset":690,"endOffset":697,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":769,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":905,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"./src/types.ts","ranges":[{"startOffset":1211,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"./src/utils.ts","ranges":[{"startOffset":1264,"endOffset":7632,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1906,"endOffset":1991,"count":2},{"startOffset":1968,"endOffset":1971,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1992,"endOffset":2606,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":2143,"endOffset":2596,"count":2},{"startOffset":2190,"endOffset":2199,"count":0},{"startOffset":2286,"endOffset":2311,"count":0},{"startOffset":2313,"endOffset":2322,"count":0},{"startOffset":2333,"endOffset":2336,"count":0},{"startOffset":2358,"endOffset":2374,"count":0},{"startOffset":2409,"endOffset":2584,"count":122},{"startOffset":2546,"endOffset":2554,"count":114},{"startOffset":2556,"endOffset":2568,"count":8},{"startOffset":2569,"endOffset":2582,"count":114}],"isBlockCoverage":true},{"functionName":"writeSnapshotVersion","ranges":[{"startOffset":3896,"endOffset":3965,"count":0}],"isBlockCoverage":false},{"functionName":"validateSnapshotVersion","ranges":[{"startOffset":3999,"endOffset":5607,"count":0}],"isBlockCoverage":false},{"functionName":"testNameToKey","ranges":[{"startOffset":5631,"endOffset":5674,"count":0}],"isBlockCoverage":false},{"functionName":"keyToTestName","ranges":[{"startOffset":5737,"endOffset":5876,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotData","ranges":[{"startOffset":5941,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBacktickString","ranges":[{"startOffset":6711,"endOffset":6753,"count":0}],"isBlockCoverage":false},{"functionName":"printBacktickString","ranges":[{"startOffset":6836,"endOffset":6877,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirectoryExists","ranges":[{"startOffset":6909,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNewlines","ranges":[{"startOffset":7101,"endOffset":7146,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotFile","ranges":[{"startOffset":7220,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":7854,"endOffset":8582,"count":3},{"startOffset":8046,"endOffset":8101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/natural-compare/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1303,"count":1},{"startOffset":1248,"endOffset":1302,"count":0}],"isBlockCoverage":true},{"functionName":"naturalCompare","ranges":[{"startOffset":210,"endOffset":1204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-matcher-utils/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24628,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":24623,"count":1}],"isBlockCoverage":true},{"functionName":"./src/Replaceable.ts","ranges":[{"startOffset":357,"endOffset":2233,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":859,"endOffset":2170,"count":0}],"isBlockCoverage":true},{"functionName":"./src/deepCyclicCopyReplaceable.ts","ranges":[{"startOffset":2288,"endOffset":6462,"count":1},{"startOffset":3078,"endOffset":3111,"count":0}],"isBlockCoverage":true},{"functionName":"isBuiltInObject","ranges":[{"startOffset":3246,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":3314,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyReplaceable","ranges":[{"startOffset":3350,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyObject","ranges":[{"startOffset":3928,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyArray","ranges":[{"startOffset":5586,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"deepCyclicCopyMap","ranges":[{"startOffset":5900,"endOffset":6118,"count":0}],"isBlockCoverage":false},{"functionName":"getSerializableProperties","ranges":[{"startOffset":6119,"endOffset":6453,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":6684,"endOffset":7412,"count":2},{"startOffset":6876,"endOffset":6931,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7638,"endOffset":24569,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7963,"endOffset":8043,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":9014,"endOffset":9628,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":9165,"endOffset":9618,"count":1},{"startOffset":9221,"endOffset":9333,"count":0},{"startOffset":9335,"endOffset":9358,"count":0},{"startOffset":9359,"endOffset":9362,"count":0},{"startOffset":9364,"endOffset":9617,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":9629,"endOffset":9714,"count":2},{"startOffset":9691,"endOffset":9694,"count":1},{"startOffset":9695,"endOffset":9711,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":10981,"endOffset":11655,"count":0}],"isBlockCoverage":false},{"functionName":"highlightTrailingWhitespace","ranges":[{"startOffset":11724,"endOffset":11787,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTrailingSpaces","ranges":[{"startOffset":12012,"endOffset":12091,"count":0}],"isBlockCoverage":false},{"functionName":"printReceived","ranges":[{"startOffset":12115,"endOffset":12181,"count":0}],"isBlockCoverage":false},{"functionName":"printExpected","ranges":[{"startOffset":12244,"endOffset":12308,"count":0}],"isBlockCoverage":false},{"functionName":"printWithType","ranges":[{"startOffset":12349,"endOffset":12623,"count":0}],"isBlockCoverage":false},{"functionName":"ensureNoExpected","ranges":[{"startOffset":12649,"endOffset":13160,"count":0}],"isBlockCoverage":false},{"functionName":"ensureActualIsNumber","ranges":[{"startOffset":13299,"endOffset":13748,"count":0}],"isBlockCoverage":false},{"functionName":"ensureExpectedIsNumber","ranges":[{"startOffset":13899,"endOffset":14356,"count":0}],"isBlockCoverage":false},{"functionName":"ensureNumbers","ranges":[{"startOffset":14514,"endOffset":14673,"count":0}],"isBlockCoverage":false},{"functionName":"ensureExpectedIsNonNegativeInteger","ranges":[{"startOffset":14757,"endOffset":15237,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonAndChangedSubstrings","ranges":[{"startOffset":15615,"endOffset":15810,"count":0}],"isBlockCoverage":false},{"functionName":"isLineDiffable","ranges":[{"startOffset":15835,"endOffset":16732,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffOrStringify","ranges":[{"startOffset":16802,"endOffset":19074,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPrintDiff","ranges":[{"startOffset":19402,"endOffset":19714,"count":0}],"isBlockCoverage":false},{"functionName":"replaceMatchedToAsymmetricMatcher","ranges":[{"startOffset":19716,"endOffset":20025,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceMatchedToAsymmetricMatcher","ranges":[{"startOffset":20026,"endOffset":21653,"count":0}],"isBlockCoverage":false},{"functionName":"isAsymmetricMatcher","ranges":[{"startOffset":21654,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":21824,"endOffset":21908,"count":0}],"isBlockCoverage":false},{"functionName":"pluralize","ranges":[{"startOffset":21949,"endOffset":22027,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelPrinter","ranges":[{"startOffset":22351,"endOffset":22530,"count":0}],"isBlockCoverage":false},{"functionName":"matcherErrorMessage","ranges":[{"startOffset":22603,"endOffset":22808,"count":0}],"isBlockCoverage":false},{"functionName":"matcherHint","ranges":[{"startOffset":23051,"endOffset":24531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/get-type/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1979,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":1974,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":1920,"count":1}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":874,"endOffset":1829,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":1850,"endOffset":1882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-matcher-utils/node_modules/jest-diff/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54978,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":54973,"count":1}],"isBlockCoverage":true},{"functionName":"./src/cleanupSemantic.ts","ranges":[{"startOffset":361,"endOffset":19785,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2436,"endOffset":2528,"count":0}],"isBlockCoverage":true},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":2797,"endOffset":3515,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":3755,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonOverlap_","ranges":[{"startOffset":4876,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemantic","ranges":[{"startOffset":6209,"endOffset":10340,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemanticLossless","ranges":[{"startOffset":10702,"endOffset":14896,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15373,"endOffset":19775,"count":0}],"isBlockCoverage":false},{"functionName":"./src/constants.ts","ranges":[{"startOffset":19824,"endOffset":20467,"count":1}],"isBlockCoverage":true},{"functionName":"./src/diffLines.ts","ranges":[{"startOffset":20506,"endOffset":26257,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":21054,"endOffset":21139,"count":1},{"startOffset":21120,"endOffset":21136,"count":0}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":21354,"endOffset":21406,"count":0}],"isBlockCoverage":false},{"functionName":"countChanges","ranges":[{"startOffset":21429,"endOffset":21703,"count":0}],"isBlockCoverage":false},{"functionName":"printAnnotation","ranges":[{"startOffset":21729,"endOffset":22933,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLines","ranges":[{"startOffset":22958,"endOffset":23172,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified","ranges":[{"startOffset":23316,"endOffset":23505,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified2","ranges":[{"startOffset":23744,"endOffset":24921,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesRaw","ranges":[{"startOffset":25039,"endOffset":26210,"count":0}],"isBlockCoverage":false},{"functionName":"./src/diffStrings.ts","ranges":[{"startOffset":26298,"endOffset":28086,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":26608,"endOffset":26693,"count":1},{"startOffset":26674,"endOffset":26690,"count":0}],"isBlockCoverage":true},{"functionName":"diffStrings","ranges":[{"startOffset":26906,"endOffset":28027,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getAlignedDiffs.ts","ranges":[{"startOffset":28131,"endOffset":34955,"count":1}],"isBlockCoverage":true},{"functionName":"concatenateRelevantDiffs","ranges":[{"startOffset":28802,"endOffset":29025,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29098,"endOffset":31268,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":31310,"endOffset":33845,"count":0}],"isBlockCoverage":true},{"functionName":"getAlignedDiffs","ranges":[{"startOffset":34302,"endOffset":34892,"count":0}],"isBlockCoverage":false},{"functionName":"./src/joinAlignedDiffs.ts","ranges":[{"startOffset":35001,"endOffset":42520,"count":1}],"isBlockCoverage":true},{"functionName":"formatTrailingSpaces","ranges":[{"startOffset":35501,"endOffset":35595,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLine","ranges":[{"startOffset":35619,"endOffset":35979,"count":0}],"isBlockCoverage":false},{"functionName":"printDeleteLine","ranges":[{"startOffset":36005,"endOffset":36242,"count":0}],"isBlockCoverage":false},{"functionName":"printInsertLine","ranges":[{"startOffset":36268,"endOffset":36505,"count":0}],"isBlockCoverage":false},{"functionName":"printCommonLine","ranges":[{"startOffset":36531,"endOffset":36788,"count":0}],"isBlockCoverage":false},{"functionName":"createPatchMark","ranges":[{"startOffset":36883,"endOffset":37016,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsNoExpand","ranges":[{"startOffset":37218,"endOffset":41780,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsExpand","ranges":[{"startOffset":42009,"endOffset":42453,"count":0}],"isBlockCoverage":false},{"functionName":"./src/normalizeDiffOptions.ts","ranges":[{"startOffset":42570,"endOffset":44356,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":42792,"endOffset":42877,"count":1},{"startOffset":42854,"endOffset":42857,"count":0}],"isBlockCoverage":true},{"functionName":"noColor","ranges":[{"startOffset":43086,"endOffset":43102,"count":0}],"isBlockCoverage":false},{"functionName":"getCompareKeys","ranges":[{"startOffset":43764,"endOffset":43871,"count":0}],"isBlockCoverage":false},{"functionName":"getContextLines","ranges":[{"startOffset":43897,"endOffset":44042,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDiffOptions","ranges":[{"startOffset":44128,"endOffset":44293,"count":0}],"isBlockCoverage":false},{"functionName":"./src/printDiffs.ts","ranges":[{"startOffset":44396,"endOffset":46968,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":44987,"endOffset":45072,"count":2},{"startOffset":45053,"endOffset":45069,"count":0}],"isBlockCoverage":true},{"functionName":"hasCommonDiff","ranges":[{"startOffset":45287,"endOffset":45639,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsUnified","ranges":[{"startOffset":45795,"endOffset":46549,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsRaw","ranges":[{"startOffset":46740,"endOffset":46917,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":47190,"endOffset":47918,"count":16},{"startOffset":47382,"endOffset":47917,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48144,"endOffset":54919,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":48332,"endOffset":48390,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48471,"endOffset":48528,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48610,"endOffset":48668,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48743,"endOffset":48794,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48898,"endOffset":48951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49038,"endOffset":49095,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49183,"endOffset":49241,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49326,"endOffset":49382,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49471,"endOffset":49531,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":50016,"endOffset":50101,"count":1},{"startOffset":50078,"endOffset":50081,"count":0}],"isBlockCoverage":true},{"functionName":"getCommonMessage","ranges":[{"startOffset":50396,"endOffset":50542,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":51149,"endOffset":52688,"count":0}],"isBlockCoverage":false},{"functionName":"comparePrimitive","ranges":[{"startOffset":52689,"endOffset":53033,"count":0}],"isBlockCoverage":false},{"functionName":"sortMap","ranges":[{"startOffset":53034,"endOffset":53094,"count":0}],"isBlockCoverage":false},{"functionName":"sortSet","ranges":[{"startOffset":53095,"endOffset":53155,"count":0}],"isBlockCoverage":false},{"functionName":"compareObjects","ranges":[{"startOffset":53156,"endOffset":54043,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOptions","ranges":[{"startOffset":54044,"endOffset":54241,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectsDifference","ranges":[{"startOffset":54242,"endOffset":54917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/diff-sequences/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26818,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":26813,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":26759,"count":1}],"isBlockCoverage":true},{"functionName":"countCommonItemsF","ranges":[{"startOffset":3524,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"countCommonItemsR","ranges":[{"startOffset":3903,"endOffset":4122,"count":0}],"isBlockCoverage":false},{"functionName":"extendPathsF","ranges":[{"startOffset":4271,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"extendPathsR","ranges":[{"startOffset":5853,"endOffset":7298,"count":0}],"isBlockCoverage":false},{"functionName":"extendOverlappablePathsF","ranges":[{"startOffset":7491,"endOffset":12009,"count":0}],"isBlockCoverage":false},{"functionName":"extendOverlappablePathsR","ranges":[{"startOffset":12196,"endOffset":16914,"count":0}],"isBlockCoverage":false},{"functionName":"divide","ranges":[{"startOffset":17182,"endOffset":20164,"count":0}],"isBlockCoverage":false},{"functionName":"findSubsequences","ranges":[{"startOffset":20640,"endOffset":23092,"count":0}],"isBlockCoverage":false},{"functionName":"validateLength","ranges":[{"startOffset":23117,"endOffset":23474,"count":0}],"isBlockCoverage":false},{"functionName":"validateCallback","ranges":[{"startOffset":23501,"endOffset":23656,"count":0}],"isBlockCoverage":false},{"functionName":"diffSequence","ranges":[{"startOffset":23919,"endOffset":26757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/expect-utils/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":25887,"count":1}],"isBlockCoverage":true},{"functionName":"./src/immutableUtils.ts","ranges":[{"startOffset":360,"endOffset":2349,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLiteral","ranges":[{"startOffset":1355,"endOffset":1472,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableUnorderedKeyed","ranges":[{"startOffset":1473,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableUnorderedSet","ranges":[{"startOffset":1634,"endOffset":1790,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableList","ranges":[{"startOffset":1791,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableOrderedKeyed","ranges":[{"startOffset":1909,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableOrderedSet","ranges":[{"startOffset":2067,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutableRecord","ranges":[{"startOffset":2221,"endOffset":2340,"count":0}],"isBlockCoverage":false},{"functionName":"./src/index.ts","ranges":[{"startOffset":2384,"endOffset":3303,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2638,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2762,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2961,"endOffset":3292,"count":13},{"startOffset":3027,"endOffset":3034,"count":0},{"startOffset":3098,"endOffset":3105,"count":0},{"startOffset":3127,"endOffset":3158,"count":0},{"startOffset":3160,"endOffset":3167,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3239,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"./src/jasmineUtils.ts","ranges":[{"startOffset":3345,"endOffset":10051,"count":1}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":4617,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"isAsymmetric","ranges":[{"startOffset":4779,"endOffset":4865,"count":0}],"isBlockCoverage":false},{"functionName":"asymmetricMatch","ranges":[{"startOffset":4866,"endOffset":5156,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":5255,"endOffset":9385,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":9386,"endOffset":9654,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":9655,"endOffset":9741,"count":0}],"isBlockCoverage":false},{"functionName":"isA","ranges":[{"startOffset":9742,"endOffset":9851,"count":0}],"isBlockCoverage":false},{"functionName":"isDomNode","ranges":[{"startOffset":9852,"endOffset":10042,"count":0}],"isBlockCoverage":false},{"functionName":"./src/utils.ts","ranges":[{"startOffset":10086,"endOffset":24539,"count":1}],"isBlockCoverage":true},{"functionName":"hasPropertyInObject","ranges":[{"startOffset":11132,"endOffset":11414,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectKeys","ranges":[{"startOffset":11703,"endOffset":11860,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":11917,"endOffset":13374,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectSubset","ranges":[{"startOffset":13651,"endOffset":14795,"count":0}],"isBlockCoverage":false},{"functionName":"hasIterator","ranges":[{"startOffset":14900,"endOffset":14954,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEquality","ranges":[{"startOffset":15053,"endOffset":18686,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":18749,"endOffset":18977,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":18996,"endOffset":19036,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectWithKeys","ranges":[{"startOffset":19063,"endOffset":19195,"count":0}],"isBlockCoverage":false},{"functionName":"subsetEquality","ranges":[{"startOffset":19220,"endOffset":20823,"count":0}],"isBlockCoverage":false},{"functionName":"typeEquality","ranges":[{"startOffset":20966,"endOffset":21414,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferEquality","ranges":[{"startOffset":21481,"endOffset":22310,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBuffer","ranges":[{"startOffset":22363,"endOffset":22467,"count":0}],"isBlockCoverage":false},{"functionName":"sparseArrayEquality","ranges":[{"startOffset":22496,"endOffset":22927,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":22998,"endOffset":23139,"count":0}],"isBlockCoverage":false},{"functionName":"pathAsArray","ranges":[{"startOffset":23192,"endOffset":23739,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":23919,"endOffset":24147,"count":0}],"isBlockCoverage":false},{"functionName":"emptyObject","ranges":[{"startOffset":24176,"endOffset":24286,"count":0}],"isBlockCoverage":false},{"functionName":"isOneline","ranges":[{"startOffset":24340,"endOffset":24498,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":24761,"endOffset":25489,"count":5},{"startOffset":24953,"endOffset":25008,"count":1},{"startOffset":25008,"endOffset":25488,"count":4}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-snapshot/node_modules/jest-diff/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54978,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":54973,"count":1}],"isBlockCoverage":true},{"functionName":"./src/cleanupSemantic.ts","ranges":[{"startOffset":361,"endOffset":19785,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2436,"endOffset":2528,"count":0}],"isBlockCoverage":true},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":2797,"endOffset":3515,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":3755,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonOverlap_","ranges":[{"startOffset":4876,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemantic","ranges":[{"startOffset":6209,"endOffset":10340,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemanticLossless","ranges":[{"startOffset":10702,"endOffset":14896,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15373,"endOffset":19775,"count":0}],"isBlockCoverage":false},{"functionName":"./src/constants.ts","ranges":[{"startOffset":19824,"endOffset":20467,"count":1}],"isBlockCoverage":true},{"functionName":"./src/diffLines.ts","ranges":[{"startOffset":20506,"endOffset":26257,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":21054,"endOffset":21139,"count":1},{"startOffset":21120,"endOffset":21136,"count":0}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":21354,"endOffset":21406,"count":0}],"isBlockCoverage":false},{"functionName":"countChanges","ranges":[{"startOffset":21429,"endOffset":21703,"count":0}],"isBlockCoverage":false},{"functionName":"printAnnotation","ranges":[{"startOffset":21729,"endOffset":22933,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLines","ranges":[{"startOffset":22958,"endOffset":23172,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified","ranges":[{"startOffset":23316,"endOffset":23505,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified2","ranges":[{"startOffset":23744,"endOffset":24921,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesRaw","ranges":[{"startOffset":25039,"endOffset":26210,"count":0}],"isBlockCoverage":false},{"functionName":"./src/diffStrings.ts","ranges":[{"startOffset":26298,"endOffset":28086,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":26608,"endOffset":26693,"count":1},{"startOffset":26674,"endOffset":26690,"count":0}],"isBlockCoverage":true},{"functionName":"diffStrings","ranges":[{"startOffset":26906,"endOffset":28027,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getAlignedDiffs.ts","ranges":[{"startOffset":28131,"endOffset":34955,"count":1}],"isBlockCoverage":true},{"functionName":"concatenateRelevantDiffs","ranges":[{"startOffset":28802,"endOffset":29025,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29098,"endOffset":31268,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":31310,"endOffset":33845,"count":0}],"isBlockCoverage":true},{"functionName":"getAlignedDiffs","ranges":[{"startOffset":34302,"endOffset":34892,"count":0}],"isBlockCoverage":false},{"functionName":"./src/joinAlignedDiffs.ts","ranges":[{"startOffset":35001,"endOffset":42520,"count":1}],"isBlockCoverage":true},{"functionName":"formatTrailingSpaces","ranges":[{"startOffset":35501,"endOffset":35595,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLine","ranges":[{"startOffset":35619,"endOffset":35979,"count":0}],"isBlockCoverage":false},{"functionName":"printDeleteLine","ranges":[{"startOffset":36005,"endOffset":36242,"count":0}],"isBlockCoverage":false},{"functionName":"printInsertLine","ranges":[{"startOffset":36268,"endOffset":36505,"count":0}],"isBlockCoverage":false},{"functionName":"printCommonLine","ranges":[{"startOffset":36531,"endOffset":36788,"count":0}],"isBlockCoverage":false},{"functionName":"createPatchMark","ranges":[{"startOffset":36883,"endOffset":37016,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsNoExpand","ranges":[{"startOffset":37218,"endOffset":41780,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsExpand","ranges":[{"startOffset":42009,"endOffset":42453,"count":0}],"isBlockCoverage":false},{"functionName":"./src/normalizeDiffOptions.ts","ranges":[{"startOffset":42570,"endOffset":44356,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":42792,"endOffset":42877,"count":1},{"startOffset":42854,"endOffset":42857,"count":0}],"isBlockCoverage":true},{"functionName":"noColor","ranges":[{"startOffset":43086,"endOffset":43102,"count":0}],"isBlockCoverage":false},{"functionName":"getCompareKeys","ranges":[{"startOffset":43764,"endOffset":43871,"count":0}],"isBlockCoverage":false},{"functionName":"getContextLines","ranges":[{"startOffset":43897,"endOffset":44042,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDiffOptions","ranges":[{"startOffset":44128,"endOffset":44293,"count":0}],"isBlockCoverage":false},{"functionName":"./src/printDiffs.ts","ranges":[{"startOffset":44396,"endOffset":46968,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":44987,"endOffset":45072,"count":2},{"startOffset":45053,"endOffset":45069,"count":0}],"isBlockCoverage":true},{"functionName":"hasCommonDiff","ranges":[{"startOffset":45287,"endOffset":45639,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsUnified","ranges":[{"startOffset":45795,"endOffset":46549,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsRaw","ranges":[{"startOffset":46740,"endOffset":46917,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":47190,"endOffset":47918,"count":16},{"startOffset":47382,"endOffset":47917,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48144,"endOffset":54919,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":48332,"endOffset":48390,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48471,"endOffset":48528,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48610,"endOffset":48668,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48743,"endOffset":48794,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48898,"endOffset":48951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49038,"endOffset":49095,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49183,"endOffset":49241,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49326,"endOffset":49382,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":49471,"endOffset":49531,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":50016,"endOffset":50101,"count":1},{"startOffset":50078,"endOffset":50081,"count":0}],"isBlockCoverage":true},{"functionName":"getCommonMessage","ranges":[{"startOffset":50396,"endOffset":50542,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":51149,"endOffset":52688,"count":0}],"isBlockCoverage":false},{"functionName":"comparePrimitive","ranges":[{"startOffset":52689,"endOffset":53033,"count":0}],"isBlockCoverage":false},{"functionName":"sortMap","ranges":[{"startOffset":53034,"endOffset":53094,"count":0}],"isBlockCoverage":false},{"functionName":"sortSet","ranges":[{"startOffset":53095,"endOffset":53155,"count":0}],"isBlockCoverage":false},{"functionName":"compareObjects","ranges":[{"startOffset":53156,"endOffset":54043,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOptions","ranges":[{"startOffset":54044,"endOffset":54241,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectsDifference","ranges":[{"startOffset":54242,"endOffset":54917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4247,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":220,"endOffset":3384,"count":0}],"isBlockCoverage":false},{"functionName":"CodeGenerator","ranges":[{"startOffset":3439,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":3724,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":3861,"endOffset":4168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3055,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":238,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1621,"endOffset":1685,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoded","ranges":[{"startOffset":1688,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"getRawMappings","ranges":[{"startOffset":1762,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":1882,"endOffset":2983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":568,"count":1},{"startOffset":226,"endOffset":565,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":577,"endOffset":10922,"count":1}],"isBlockCoverage":true},{"functionName":"GenMapping","ranges":[{"startOffset":910,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":1432,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"addSegment","ranges":[{"startOffset":1483,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"addMapping","ranges":[{"startOffset":1705,"endOffset":1802,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddSegment","ranges":[{"startOffset":2138,"endOffset":2338,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddMapping","ranges":[{"startOffset":2675,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceContent","ranges":[{"startOffset":2847,"endOffset":3078,"count":0}],"isBlockCoverage":false},{"functionName":"setIgnore","ranges":[{"startOffset":3083,"endOffset":3510,"count":0}],"isBlockCoverage":false},{"functionName":"toDecodedMap","ranges":[{"startOffset":3678,"endOffset":4203,"count":0}],"isBlockCoverage":false},{"functionName":"toEncodedMap","ranges":[{"startOffset":4371,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"fromMap","ranges":[{"startOffset":4667,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"allMappings","ranges":[{"startOffset":5355,"endOffset":6294,"count":0}],"isBlockCoverage":false},{"functionName":"addSegmentInternal","ranges":[{"startOffset":6399,"endOffset":7510,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":7515,"endOffset":7685,"count":0}],"isBlockCoverage":false},{"functionName":"getColumnIndex","ranges":[{"startOffset":7690,"endOffset":7964,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7969,"endOffset":8143,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmptyFinalLines","ranges":[{"startOffset":8148,"endOffset":8447,"count":0}],"isBlockCoverage":false},{"functionName":"putAll","ranges":[{"startOffset":8452,"endOffset":8581,"count":0}],"isBlockCoverage":false},{"functionName":"skipSourceless","ranges":[{"startOffset":8586,"endOffset":9165,"count":0}],"isBlockCoverage":false},{"functionName":"skipSource","ranges":[{"startOffset":9170,"endOffset":9971,"count":0}],"isBlockCoverage":false},{"functionName":"addMappingInternal","ranges":[{"startOffset":9976,"endOffset":10409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/set-array/dist/set-array.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":308,"count":1},{"startOffset":114,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":317,"endOffset":2763,"count":1}],"isBlockCoverage":true},{"functionName":"SetArray","ranges":[{"startOffset":797,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":1068,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1227,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"put","ranges":[{"startOffset":1456,"endOffset":1810,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":1884,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2162,"endOffset":2560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17024,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":314,"count":1},{"startOffset":114,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":323,"endOffset":16972,"count":1},{"startOffset":694,"endOffset":792,"count":64},{"startOffset":2006,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"decodeInteger","ranges":[{"startOffset":797,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":1284,"endOffset":1677,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":1682,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2070,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2281,"endOffset":2519,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":2569,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2709,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":2944,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"StringReader","ranges":[{"startOffset":3127,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3227,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":3309,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3389,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":3594,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":4843,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeOriginalScopes","ranges":[{"startOffset":5086,"endOffset":6229,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":6234,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":10194,"endOffset":10508,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeGeneratedRanges","ranges":[{"startOffset":10513,"endOffset":13438,"count":0}],"isBlockCoverage":false},{"functionName":"catchupLine","ranges":[{"startOffset":13443,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":13588,"endOffset":15287,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":15292,"endOffset":15354,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":15359,"endOffset":15424,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":15429,"endOffset":16610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25530,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":488,"count":1},{"startOffset":190,"endOffset":485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":497,"endOffset":25480,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":565,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":1086,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":1461,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":2090,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":2316,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":2532,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":2674,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":3394,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":3889,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":4117,"endOffset":4327,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":4332,"endOffset":4472,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":4682,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":5621,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7043,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7675,"endOffset":7744,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":7765,"endOffset":8439,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8445,"endOffset":8536,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":8541,"endOffset":9492,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":9497,"endOffset":12396,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":12401,"endOffset":12515,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":12520,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":12945,"endOffset":14203,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":14371,"endOffset":14417,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMappings","ranges":[{"startOffset":14518,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":14846,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegment","ranges":[{"startOffset":15208,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":15987,"endOffset":17127,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":17248,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"allGeneratedPositionsFor","ranges":[{"startOffset":17573,"endOffset":17864,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":17943,"endOffset":19041,"count":0}],"isBlockCoverage":false},{"functionName":"sourceIndex","ranges":[{"startOffset":19046,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":19400,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":19747,"endOffset":19994,"count":0}],"isBlockCoverage":false},{"functionName":"presortedDecodedMap","ranges":[{"startOffset":20132,"endOffset":20311,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":20479,"endOffset":20560,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":20728,"endOffset":20809,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":20814,"endOffset":21182,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":21187,"endOffset":21287,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":21292,"endOffset":21364,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":21369,"endOffset":21812,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":21817,"endOffset":23478,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":23483,"endOffset":24742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9866,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":9818,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1351,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1433,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1601,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1681,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1757,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1971,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2219,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2486,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3495,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3843,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4482,"endOffset":7090,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7175,"endOffset":9794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27817,"count":1}],"isBlockCoverage":true},{"functionName":"commentIsNewline","ranges":[{"startOffset":690,"endOffset":786,"count":0}],"isBlockCoverage":false},{"functionName":"Printer","ranges":[{"startOffset":834,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"enterForStatementInit","ranges":[{"startOffset":1931,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"enterForXStatementInit","ranges":[{"startOffset":2134,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"enterDelimited","ranges":[{"startOffset":2462,"endOffset":2988,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":2991,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":3223,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"dedent","ranges":[{"startOffset":3388,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":3553,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"rightBrace","ranges":[{"startOffset":4209,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"rightParens","ranges":[{"startOffset":4384,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"space","ranges":[{"startOffset":4482,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"word","ranges":[{"startOffset":4808,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":5292,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"token","ranges":[{"startOffset":5787,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"tokenChar","ranges":[{"startOffset":6464,"endOffset":6992,"count":0}],"isBlockCoverage":false},{"functionName":"newline","ranges":[{"startOffset":6995,"endOffset":7350,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":7353,"endOffset":7413,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChar","ranges":[{"startOffset":7416,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithCharAndNewline","ranges":[{"startOffset":7474,"endOffset":7551,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":7554,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"exactSource","ranges":[{"startOffset":7625,"endOffset":7768,"count":0}],"isBlockCoverage":false},{"functionName":"source","ranges":[{"startOffset":7771,"endOffset":7879,"count":0}],"isBlockCoverage":false},{"functionName":"sourceWithOffset","ranges":[{"startOffset":7882,"endOffset":8068,"count":0}],"isBlockCoverage":false},{"functionName":"sourceIdentifierName","ranges":[{"startOffset":8071,"endOffset":8311,"count":0}],"isBlockCoverage":false},{"functionName":"_space","ranges":[{"startOffset":8314,"endOffset":8349,"count":0}],"isBlockCoverage":false},{"functionName":"_newline","ranges":[{"startOffset":8352,"endOffset":8389,"count":0}],"isBlockCoverage":false},{"functionName":"_catchUpToCurrentToken","ranges":[{"startOffset":8392,"endOffset":8939,"count":0}],"isBlockCoverage":false},{"functionName":"_append","ranges":[{"startOffset":8942,"endOffset":9155,"count":0}],"isBlockCoverage":false},{"functionName":"_appendChar","ranges":[{"startOffset":9158,"endOffset":9340,"count":0}],"isBlockCoverage":false},{"functionName":"_queue","ranges":[{"startOffset":9343,"endOffset":9484,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeIndent","ranges":[{"startOffset":9487,"endOffset":9640,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldIndent","ranges":[{"startOffset":9643,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"catchUp","ranges":[{"startOffset":9766,"endOffset":9947,"count":0}],"isBlockCoverage":false},{"functionName":"_catchUp","ranges":[{"startOffset":9950,"endOffset":10267,"count":0}],"isBlockCoverage":false},{"functionName":"_catchUpTo","ranges":[{"startOffset":10270,"endOffset":10864,"count":0}],"isBlockCoverage":false},{"functionName":"_getIndent","ranges":[{"startOffset":10867,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"printTerminatorless","ranges":[{"startOffset":10934,"endOffset":11022,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":11025,"endOffset":15448,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeAddAuxComment","ranges":[{"startOffset":15451,"endOffset":15621,"count":0}],"isBlockCoverage":false},{"functionName":"_printAuxBeforeComment","ranges":[{"startOffset":15624,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"_printAuxAfterComment","ranges":[{"startOffset":15928,"endOffset":16229,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleRaw","ranges":[{"startOffset":16232,"endOffset":16433,"count":0}],"isBlockCoverage":false},{"functionName":"printJoin","ranges":[{"startOffset":16436,"endOffset":18137,"count":0}],"isBlockCoverage":false},{"functionName":"printAndIndentOnComments","ranges":[{"startOffset":18140,"endOffset":18336,"count":0}],"isBlockCoverage":false},{"functionName":"printBlock","ranges":[{"startOffset":18339,"endOffset":18483,"count":0}],"isBlockCoverage":false},{"functionName":"_printTrailingComments","ranges":[{"startOffset":18486,"endOffset":18887,"count":0}],"isBlockCoverage":false},{"functionName":"_printLeadingComments","ranges":[{"startOffset":18890,"endOffset":19082,"count":0}],"isBlockCoverage":false},{"functionName":"_maybePrintInnerComments","ranges":[{"startOffset":19085,"endOffset":19465,"count":0}],"isBlockCoverage":false},{"functionName":"printInnerComments","ranges":[{"startOffset":19468,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"noIndentInnerCommentsHere","ranges":[{"startOffset":20026,"endOffset":20098,"count":0}],"isBlockCoverage":false},{"functionName":"printSequence","ranges":[{"startOffset":20101,"endOffset":20316,"count":0}],"isBlockCoverage":false},{"functionName":"printList","ranges":[{"startOffset":20319,"endOffset":20544,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPrintTrailingComma","ranges":[{"startOffset":20547,"endOffset":20871,"count":0}],"isBlockCoverage":false},{"functionName":"_printNewline","ranges":[{"startOffset":20874,"endOffset":21448,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldPrintComment","ranges":[{"startOffset":21451,"endOffset":22066,"count":0}],"isBlockCoverage":false},{"functionName":"_printComment","ranges":[{"startOffset":22069,"endOffset":24264,"count":0}],"isBlockCoverage":false},{"functionName":"_printComments","ranges":[{"startOffset":24267,"endOffset":27503,"count":0}],"isBlockCoverage":false},{"functionName":"commaSeparator","ranges":[{"startOffset":27659,"endOffset":27779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8745,"count":1}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":123,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"_allocQueue","ranges":[{"startOffset":828,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"_pushQueue","ranges":[{"startOffset":1133,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"_popQueue","ranges":[{"startOffset":1490,"endOffset":1647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1650,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2510,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"appendChar","ranges":[{"startOffset":2622,"endOffset":2716,"count":0}],"isBlockCoverage":false},{"functionName":"queue","ranges":[{"startOffset":2719,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"queueIndentation","ranges":[{"startOffset":3123,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":3252,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"_appendChar","ranges":[{"startOffset":3503,"endOffset":4362,"count":0}],"isBlockCoverage":false},{"functionName":"_append","ranges":[{"startOffset":4365,"endOffset":5535,"count":0}],"isBlockCoverage":false},{"functionName":"_mark","ranges":[{"startOffset":5538,"endOffset":5760,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":5763,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"removeLastSemicolon","ranges":[{"startOffset":5944,"endOffset":6120,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChar","ranges":[{"startOffset":6123,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"getNewlineCount","ranges":[{"startOffset":6267,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithCharAndNewline","ranges":[{"startOffset":6624,"endOffset":6969,"count":0}],"isBlockCoverage":false},{"functionName":"hasContent","ranges":[{"startOffset":6972,"endOffset":7042,"count":0}],"isBlockCoverage":false},{"functionName":"exactSource","ranges":[{"startOffset":7045,"endOffset":7559,"count":0}],"isBlockCoverage":false},{"functionName":"source","ranges":[{"startOffset":7562,"endOffset":7656,"count":0}],"isBlockCoverage":false},{"functionName":"sourceWithOffset","ranges":[{"startOffset":7659,"endOffset":7788,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizePosition","ranges":[{"startOffset":7791,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentColumn","ranges":[{"startOffset":8062,"endOffset":8450,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentLine","ranges":[{"startOffset":8453,"endOffset":8680,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3724,"count":1}],"isBlockCoverage":true},{"functionName":"expandAliases","ranges":[{"startOffset":921,"endOffset":1515,"count":2},{"startOffset":1306,"endOffset":1499,"count":66},{"startOffset":1371,"endOffset":1454,"count":6},{"startOffset":1408,"endOffset":1448,"count":25},{"startOffset":1454,"endOffset":1495,"count":60}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":978,"endOffset":1266,"count":85},{"startOffset":1056,"endOffset":1253,"count":15},{"startOffset":1254,"endOffset":1260,"count":70}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1058,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"isOrHasCallExpression","ranges":[{"startOffset":1627,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespace","ranges":[{"startOffset":1794,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespaceBefore","ranges":[{"startOffset":2190,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespaceAfter","ranges":[{"startOffset":2282,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"needsParens","ranges":[{"startOffset":2373,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorMemberExpression","ranges":[{"startOffset":2951,"endOffset":3240,"count":0}],"isBlockCoverage":false},{"functionName":"isLastChild","ranges":[{"startOffset":3241,"endOffset":3688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/whitespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4844,"count":1}],"isBlockCoverage":true},{"functionName":"crawlInternal","ranges":[{"startOffset":438,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"crawl","ranges":[{"startOffset":1147,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"isHelper","ranges":[{"startOffset":1274,"endOffset":1780,"count":0}],"isBlockCoverage":false},{"functionName":"isType","ranges":[{"startOffset":1781,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":1972,"endOffset":2156,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":2160,"endOffset":2351,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":2355,"endOffset":2465,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":2469,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":2578,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":2687,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":2786,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":3209,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectProperty.nodes.ObjectTypeProperty.nodes.ObjectMethod","ranges":[{"startOffset":3378,"endOffset":3462,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeCallProperty","ranges":[{"startOffset":3495,"endOffset":3693,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeIndexer","ranges":[{"startOffset":3721,"endOffset":4033,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeInternalSlot","ranges":[{"startOffset":4066,"endOffset":4482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4625,"endOffset":4801,"count":6},{"startOffset":4695,"endOffset":4700,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4710,"endOffset":4797,"count":19},{"startOffset":4760,"endOffset":4763,"count":0}],"isBlockCoverage":true},{"functionName":"nodes.<computed>","ranges":[{"startOffset":4783,"endOffset":4792,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17312,"count":1},{"startOffset":17157,"endOffset":17276,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1653,"endOffset":1710,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1789,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1918,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2061,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2203,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2347,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2486,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2608,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2744,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2880,"endOffset":2928,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3012,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3154,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3298,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3456,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3622,"endOffset":3680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3760,"endOffset":3810,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3903,"endOffset":3966,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4056,"endOffset":4116,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4200,"endOffset":4254,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4349,"endOffset":4414,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4503,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4653,"endOffset":4714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4806,"endOffset":4868,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4945,"endOffset":4992,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5077,"endOffset":5132,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5203,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5322,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5452,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5584,"endOffset":5634,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5708,"endOffset":5752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5827,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5958,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6100,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6237,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6364,"endOffset":6410,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6497,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6629,"endOffset":6674,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6763,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6908,"endOffset":6964,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7038,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7165,"endOffset":7218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7312,"endOffset":7376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7483,"endOffset":7536,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7621,"endOffset":7676,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7765,"endOffset":7824,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7913,"endOffset":7972,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8053,"endOffset":8104,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8196,"endOffset":8258,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8334,"endOffset":8380,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8462,"endOffset":8514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8595,"endOffset":8646,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8727,"endOffset":8778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8857,"endOffset":8906,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8986,"endOffset":9036,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9113,"endOffset":9160,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9241,"endOffset":9292,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9369,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9496,"endOffset":9546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9894,"endOffset":10225,"count":306},{"startOffset":9960,"endOffset":9967,"count":0},{"startOffset":10031,"endOffset":10038,"count":0},{"startOffset":10060,"endOffset":10091,"count":0},{"startOffset":10093,"endOffset":10100,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10172,"endOffset":10217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10583,"endOffset":10926,"count":1},{"startOffset":10649,"endOffset":10656,"count":0},{"startOffset":10720,"endOffset":10727,"count":0},{"startOffset":10749,"endOffset":10786,"count":0},{"startOffset":10788,"endOffset":10795,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10867,"endOffset":10918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11014,"endOffset":11347,"count":594},{"startOffset":11080,"endOffset":11087,"count":0},{"startOffset":11151,"endOffset":11158,"count":0},{"startOffset":11180,"endOffset":11212,"count":0},{"startOffset":11214,"endOffset":11221,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11293,"endOffset":11339,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12187,"endOffset":12520,"count":50},{"startOffset":12253,"endOffset":12260,"count":0},{"startOffset":12324,"endOffset":12331,"count":0},{"startOffset":12353,"endOffset":12385,"count":0},{"startOffset":12387,"endOffset":12394,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12466,"endOffset":12512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12599,"endOffset":12932,"count":20},{"startOffset":12665,"endOffset":12672,"count":0},{"startOffset":12736,"endOffset":12743,"count":0},{"startOffset":12765,"endOffset":12797,"count":0},{"startOffset":12799,"endOffset":12806,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12878,"endOffset":12924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13566,"endOffset":13899,"count":12},{"startOffset":13632,"endOffset":13639,"count":0},{"startOffset":13703,"endOffset":13710,"count":0},{"startOffset":13732,"endOffset":13764,"count":0},{"startOffset":13766,"endOffset":13773,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13845,"endOffset":13891,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14775,"endOffset":15112,"count":1},{"startOffset":14816,"endOffset":14839,"count":0},{"startOffset":14848,"endOffset":14975,"count":0},{"startOffset":14977,"endOffset":15111,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15056,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16409,"endOffset":16742,"count":306},{"startOffset":16475,"endOffset":16482,"count":0},{"startOffset":16546,"endOffset":16553,"count":1},{"startOffset":16553,"endOffset":16575,"count":305},{"startOffset":16575,"endOffset":16607,"count":0},{"startOffset":16609,"endOffset":16616,"count":0},{"startOffset":16616,"endOffset":16741,"count":305}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16688,"endOffset":16734,"count":58}],"isBlockCoverage":true}]},{"scriptId":"315","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":368,"count":1}],"isBlockCoverage":true}]},{"scriptId":"316","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":180,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":282,"endOffset":349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1103,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":160,"endOffset":1058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":95538,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":14940,"endOffset":15127,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":15128,"endOffset":15325,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":15326,"endOffset":15515,"count":0}],"isBlockCoverage":false},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":15516,"endOffset":15713,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15714,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15890,"endOffset":16079,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":16080,"endOffset":16265,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":16266,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16452,"endOffset":16637,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":16638,"endOffset":16817,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":16818,"endOffset":17017,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":17018,"endOffset":17209,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17210,"endOffset":17401,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":17402,"endOffset":17591,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":17592,"endOffset":17777,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":17778,"endOffset":17973,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":17974,"endOffset":18139,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":18140,"endOffset":18325,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":18326,"endOffset":18507,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":18508,"endOffset":18703,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":18704,"endOffset":18897,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":18898,"endOffset":19075,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":19076,"endOffset":19255,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":19256,"endOffset":19445,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":19446,"endOffset":19629,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":19630,"endOffset":19815,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteral","ranges":[{"startOffset":19816,"endOffset":19995,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":19996,"endOffset":20181,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":20182,"endOffset":20365,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":20366,"endOffset":20557,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpression","ranges":[{"startOffset":20558,"endOffset":20747,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":20748,"endOffset":20931,"count":0}],"isBlockCoverage":false},{"functionName":"isProgram","ranges":[{"startOffset":20932,"endOffset":21103,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectExpression","ranges":[{"startOffset":21104,"endOffset":21293,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":21294,"endOffset":21475,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":21476,"endOffset":21661,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":21662,"endOffset":21841,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":21842,"endOffset":22029,"count":0}],"isBlockCoverage":false},{"functionName":"isSequenceExpression","ranges":[{"startOffset":22030,"endOffset":22223,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":22224,"endOffset":22427,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchCase","ranges":[{"startOffset":22428,"endOffset":22605,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":22606,"endOffset":22793,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":22794,"endOffset":22979,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":22980,"endOffset":23165,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":23166,"endOffset":23347,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":23348,"endOffset":23535,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":23536,"endOffset":23725,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":23726,"endOffset":23921,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":23922,"endOffset":24115,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":24116,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":24302,"endOffset":24485,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":24486,"endOffset":24677,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayPattern","ranges":[{"startOffset":24678,"endOffset":24859,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":24860,"endOffset":25063,"count":0}],"isBlockCoverage":false},{"functionName":"isClassBody","ranges":[{"startOffset":25064,"endOffset":25239,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":25240,"endOffset":25427,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":25428,"endOffset":25617,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":25618,"endOffset":25815,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":25816,"endOffset":26021,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":26022,"endOffset":26223,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":26224,"endOffset":26411,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":26412,"endOffset":26597,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":26598,"endOffset":26789,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":26790,"endOffset":26991,"count":0}],"isBlockCoverage":false},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":26992,"endOffset":27197,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":27198,"endOffset":27385,"count":0}],"isBlockCoverage":false},{"functionName":"isImportExpression","ranges":[{"startOffset":27386,"endOffset":27575,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":27576,"endOffset":27757,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":27758,"endOffset":27937,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":27938,"endOffset":28121,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":28122,"endOffset":28305,"count":0}],"isBlockCoverage":false},{"functionName":"isSuper","ranges":[{"startOffset":28306,"endOffset":28473,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":28474,"endOffset":28679,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateElement","ranges":[{"startOffset":28680,"endOffset":28867,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":28868,"endOffset":29055,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":29056,"endOffset":29243,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":29244,"endOffset":29431,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":29432,"endOffset":29601,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":29602,"endOffset":29785,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":29786,"endOffset":29991,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":29992,"endOffset":30197,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":30198,"endOffset":30399,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":30400,"endOffset":30583,"count":0}],"isBlockCoverage":false},{"functionName":"isClassAccessorProperty","ranges":[{"startOffset":30584,"endOffset":30783,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":30784,"endOffset":30981,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":30982,"endOffset":31175,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":31176,"endOffset":31355,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticBlock","ranges":[{"startOffset":31356,"endOffset":31535,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":31536,"endOffset":31723,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":31724,"endOffset":31915,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":31916,"endOffset":32111,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":32112,"endOffset":32311,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":32312,"endOffset":32525,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":32526,"endOffset":32733,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":32734,"endOffset":32921,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":32922,"endOffset":33103,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":33104,"endOffset":33291,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":33292,"endOffset":33481,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":33482,"endOffset":33665,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":33666,"endOffset":33863,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":33864,"endOffset":34053,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":34054,"endOffset":34245,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":34246,"endOffset":34433,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":34434,"endOffset":34639,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":34640,"endOffset":34851,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":34852,"endOffset":35043,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":35044,"endOffset":35241,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":35242,"endOffset":35443,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":35444,"endOffset":35635,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":35636,"endOffset":35835,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":35836,"endOffset":36027,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":36028,"endOffset":36217,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":36218,"endOffset":36415,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":36416,"endOffset":36619,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":36620,"endOffset":36829,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":36830,"endOffset":37025,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":37026,"endOffset":37221,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":37222,"endOffset":37423,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":37424,"endOffset":37635,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":37636,"endOffset":37833,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":37834,"endOffset":38031,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":38032,"endOffset":38233,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":38234,"endOffset":38435,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":38436,"endOffset":38627,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":38628,"endOffset":38821,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":38822,"endOffset":39027,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":39028,"endOffset":39205,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":39206,"endOffset":39409,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":39410,"endOffset":39621,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":39622,"endOffset":39819,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":39820,"endOffset":40017,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":40018,"endOffset":40211,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":40212,"endOffset":40407,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":40408,"endOffset":40605,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":40606,"endOffset":40781,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":40782,"endOffset":40967,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":40968,"endOffset":41161,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":41162,"endOffset":41345,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":41346,"endOffset":41551,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":41552,"endOffset":41761,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":41762,"endOffset":41957,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":41958,"endOffset":42131,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":42132,"endOffset":42325,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":42326,"endOffset":42513,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":42514,"endOffset":42701,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":42702,"endOffset":42887,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":42888,"endOffset":43073,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":43074,"endOffset":43259,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":43260,"endOffset":43451,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":43452,"endOffset":43641,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":43642,"endOffset":43831,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":43832,"endOffset":44027,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessType","ranges":[{"startOffset":44028,"endOffset":44219,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalIndexedAccessType","ranges":[{"startOffset":44220,"endOffset":44427,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":44428,"endOffset":44609,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":44610,"endOffset":44801,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":44802,"endOffset":44979,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":44980,"endOffset":45173,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":45174,"endOffset":45375,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":45376,"endOffset":45561,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":45562,"endOffset":45745,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":45746,"endOffset":45941,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":45942,"endOffset":46133,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":46134,"endOffset":46325,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":46326,"endOffset":46519,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":46520,"endOffset":46691,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":46692,"endOffset":46871,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":46872,"endOffset":47065,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":47066,"endOffset":47259,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":47260,"endOffset":47425,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":47426,"endOffset":47605,"count":0}],"isBlockCoverage":false},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":47606,"endOffset":47805,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":47806,"endOffset":48001,"count":0}],"isBlockCoverage":false},{"functionName":"isBindExpression","ranges":[{"startOffset":48002,"endOffset":48187,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":48188,"endOffset":48363,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":48364,"endOffset":48545,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":48546,"endOffset":48747,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":48748,"endOffset":48937,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":48938,"endOffset":49125,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalLiteral","ranges":[{"startOffset":49126,"endOffset":49311,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExpression","ranges":[{"startOffset":49312,"endOffset":49501,"count":0}],"isBlockCoverage":false},{"functionName":"isTopicReference","ranges":[{"startOffset":49502,"endOffset":49687,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":49688,"endOffset":49891,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":49892,"endOffset":50089,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":50090,"endOffset":50305,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":50306,"endOffset":50501,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":50502,"endOffset":50693,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":50694,"endOffset":50881,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":50882,"endOffset":51069,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":51070,"endOffset":51279,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":51280,"endOffset":51499,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":51500,"endOffset":51695,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":51696,"endOffset":51887,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":51888,"endOffset":52077,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":52078,"endOffset":52259,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":52260,"endOffset":52449,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":52450,"endOffset":52637,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntrinsicKeyword","ranges":[{"startOffset":52638,"endOffset":52831,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":52832,"endOffset":53017,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":53018,"endOffset":53201,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":53202,"endOffset":53389,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":53390,"endOffset":53577,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":53578,"endOffset":53765,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":53766,"endOffset":53953,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":53954,"endOffset":54147,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":54148,"endOffset":54337,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":54338,"endOffset":54521,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":54522,"endOffset":54699,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":54700,"endOffset":54885,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":54886,"endOffset":55077,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":55078,"endOffset":55265,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":55266,"endOffset":55453,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":55454,"endOffset":55633,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":55634,"endOffset":55817,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":55818,"endOffset":55997,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":55998,"endOffset":56177,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":56178,"endOffset":56363,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":56364,"endOffset":56541,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamedTupleMember","ranges":[{"startOffset":56542,"endOffset":56735,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":56736,"endOffset":56915,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":56916,"endOffset":57109,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":57110,"endOffset":57301,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":57302,"endOffset":57481,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":57482,"endOffset":57677,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":57678,"endOffset":57863,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":57864,"endOffset":58059,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":58060,"endOffset":58241,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTemplateLiteralType","ranges":[{"startOffset":58242,"endOffset":58441,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":58442,"endOffset":58625,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":58626,"endOffset":58841,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":58842,"endOffset":59043,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":59044,"endOffset":59231,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":59232,"endOffset":59433,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInstantiationExpression","ranges":[{"startOffset":59434,"endOffset":59641,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":59642,"endOffset":59827,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSatisfiesExpression","ranges":[{"startOffset":59828,"endOffset":60027,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":60028,"endOffset":60215,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumBody","ranges":[{"startOffset":60216,"endOffset":60393,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":60394,"endOffset":60585,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":60586,"endOffset":60767,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":60768,"endOffset":60963,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":60964,"endOffset":61147,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":61148,"endOffset":61329,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":61330,"endOffset":61537,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":61538,"endOffset":61745,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":61746,"endOffset":61941,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":61942,"endOffset":62135,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":62136,"endOffset":62349,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":62350,"endOffset":62539,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":62540,"endOffset":62753,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":62754,"endOffset":62963,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":62964,"endOffset":63151,"count":0}],"isBlockCoverage":false},{"functionName":"isStandardized","ranges":[{"startOffset":63152,"endOffset":66126,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":66127,"endOffset":68065,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":68066,"endOffset":68323,"count":0}],"isBlockCoverage":false},{"functionName":"isScopable","ranges":[{"startOffset":68324,"endOffset":69125,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockParent","ranges":[{"startOffset":69126,"endOffset":69873,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":69874,"endOffset":70225,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":70226,"endOffset":72056,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminatorless","ranges":[{"startOffset":72057,"endOffset":72431,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":72432,"endOffset":72755,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":72756,"endOffset":73017,"count":0}],"isBlockCoverage":false},{"functionName":"isLoop","ranges":[{"startOffset":73018,"endOffset":73349,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":73350,"endOffset":73603,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":73604,"endOffset":73912,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":73913,"endOffset":74187,"count":0}],"isBlockCoverage":false},{"functionName":"isForXStatement","ranges":[{"startOffset":74188,"endOffset":74447,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":74448,"endOffset":74827,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionParent","ranges":[{"startOffset":74828,"endOffset":75263,"count":0}],"isBlockCoverage":false},{"functionName":"isPureish","ranges":[{"startOffset":75264,"endOffset":75825,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":75826,"endOffset":76946,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternLike","ranges":[{"startOffset":76947,"endOffset":77588,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":77589,"endOffset":78284,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":78285,"endOffset":78617,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":78618,"endOffset":79108,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutable","ranges":[{"startOffset":79109,"endOffset":79823,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":79824,"endOffset":80253,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":80254,"endOffset":80532,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMember","ranges":[{"startOffset":80533,"endOffset":80789,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":80790,"endOffset":81110,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":81111,"endOffset":81366,"count":0}],"isBlockCoverage":false},{"functionName":"isPattern","ranges":[{"startOffset":81367,"endOffset":81721,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":81722,"endOffset":81976,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportDeclaration","ranges":[{"startOffset":81977,"endOffset":82329,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":82330,"endOffset":82644,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":82645,"endOffset":83052,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":83053,"endOffset":83287,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":83288,"endOffset":83575,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":83576,"endOffset":85834,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":85835,"endOffset":86925,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":86926,"endOffset":87463,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":87464,"endOffset":88054,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":88055,"endOffset":88320,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":88321,"endOffset":88630,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":88631,"endOffset":88953,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":88954,"endOffset":89575,"count":0}],"isBlockCoverage":false},{"functionName":"isMiscellaneous","ranges":[{"startOffset":89576,"endOffset":89856,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeScript","ranges":[{"startOffset":89857,"endOffset":92060,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":92061,"endOffset":92440,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":92441,"endOffset":93639,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBaseType","ranges":[{"startOffset":93640,"endOffset":94289,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":94290,"endOffset":94548,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":94549,"endOffset":94803,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":94804,"endOffset":95056,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":95057,"endOffset":95317,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":95318,"endOffset":95502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":112,"endOffset":307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/deprecationWarning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1223,"count":1}],"isBlockCoverage":true},{"functionName":"deprecationWarning","ranges":[{"startOffset":146,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"captureShortStackTrace","ranges":[{"startOffset":504,"endOffset":1174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":111,"endOffset":190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":270,"endOffset":725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1175,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":227,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":809,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":156,"endOffset":424,"count":338},{"startOffset":222,"endOffset":229,"count":0},{"startOffset":251,"endOffset":286,"count":0},{"startOffset":288,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":367,"endOffset":416,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":503,"endOffset":771,"count":256},{"startOffset":569,"endOffset":576,"count":0},{"startOffset":598,"endOffset":633,"count":0},{"startOffset":635,"endOffset":642,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":714,"endOffset":763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/lowercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":85196,"count":1}],"isBlockCoverage":true},{"functionName":"arrayExpression","ranges":[{"startOffset":14436,"endOffset":14660,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentExpression","ranges":[{"startOffset":14661,"endOffset":15021,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpression","ranges":[{"startOffset":15022,"endOffset":15370,"count":0}],"isBlockCoverage":false},{"functionName":"interpreterDirective","ranges":[{"startOffset":15371,"endOffset":15587,"count":0}],"isBlockCoverage":false},{"functionName":"directive","ranges":[{"startOffset":15588,"endOffset":15774,"count":0}],"isBlockCoverage":false},{"functionName":"directiveLiteral","ranges":[{"startOffset":15775,"endOffset":15979,"count":0}],"isBlockCoverage":false},{"functionName":"blockStatement","ranges":[{"startOffset":15980,"endOffset":16273,"count":0}],"isBlockCoverage":false},{"functionName":"breakStatement","ranges":[{"startOffset":16274,"endOffset":16482,"count":0}],"isBlockCoverage":false},{"functionName":"callExpression","ranges":[{"startOffset":16483,"endOffset":16790,"count":0}],"isBlockCoverage":false},{"functionName":"catchClause","ranges":[{"startOffset":16791,"endOffset":17052,"count":0}],"isBlockCoverage":false},{"functionName":"conditionalExpression","ranges":[{"startOffset":17053,"endOffset":17449,"count":0}],"isBlockCoverage":false},{"functionName":"continueStatement","ranges":[{"startOffset":17450,"endOffset":17667,"count":0}],"isBlockCoverage":false},{"functionName":"debuggerStatement","ranges":[{"startOffset":17668,"endOffset":17746,"count":0}],"isBlockCoverage":false},{"functionName":"doWhileStatement","ranges":[{"startOffset":17747,"endOffset":18011,"count":0}],"isBlockCoverage":false},{"functionName":"emptyStatement","ranges":[{"startOffset":18012,"endOffset":18084,"count":0}],"isBlockCoverage":false},{"functionName":"expressionStatement","ranges":[{"startOffset":18085,"endOffset":18326,"count":0}],"isBlockCoverage":false},{"functionName":"file","ranges":[{"startOffset":18327,"endOffset":18673,"count":0}],"isBlockCoverage":false},{"functionName":"forInStatement","ranges":[{"startOffset":18674,"endOffset":18999,"count":0}],"isBlockCoverage":false},{"functionName":"forStatement","ranges":[{"startOffset":19000,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"functionDeclaration","ranges":[{"startOffset":19408,"endOffset":19914,"count":0}],"isBlockCoverage":false},{"functionName":"functionExpression","ranges":[{"startOffset":19915,"endOffset":20418,"count":0}],"isBlockCoverage":false},{"functionName":"identifier","ranges":[{"startOffset":20419,"endOffset":20600,"count":0}],"isBlockCoverage":false},{"functionName":"ifStatement","ranges":[{"startOffset":20601,"endOffset":20974,"count":0}],"isBlockCoverage":false},{"functionName":"labeledStatement","ranges":[{"startOffset":20975,"endOffset":21244,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteral","ranges":[{"startOffset":21245,"endOffset":21440,"count":0}],"isBlockCoverage":false},{"functionName":"numericLiteral","ranges":[{"startOffset":21441,"endOffset":21639,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteral","ranges":[{"startOffset":21640,"endOffset":21706,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteral","ranges":[{"startOffset":21707,"endOffset":21905,"count":0}],"isBlockCoverage":false},{"functionName":"regExpLiteral","ranges":[{"startOffset":21906,"endOffset":22180,"count":0}],"isBlockCoverage":false},{"functionName":"logicalExpression","ranges":[{"startOffset":22181,"endOffset":22532,"count":0}],"isBlockCoverage":false},{"functionName":"memberExpression","ranges":[{"startOffset":22533,"endOffset":23000,"count":0}],"isBlockCoverage":false},{"functionName":"newExpression","ranges":[{"startOffset":23001,"endOffset":23305,"count":0}],"isBlockCoverage":false},{"functionName":"program","ranges":[{"startOffset":23306,"endOffset":23782,"count":0}],"isBlockCoverage":false},{"functionName":"objectExpression","ranges":[{"startOffset":23783,"endOffset":24015,"count":0}],"isBlockCoverage":false},{"functionName":"objectMethod","ranges":[{"startOffset":24016,"endOffset":24656,"count":0}],"isBlockCoverage":false},{"functionName":"objectProperty","ranges":[{"startOffset":24657,"endOffset":25193,"count":0}],"isBlockCoverage":false},{"functionName":"restElement","ranges":[{"startOffset":25194,"endOffset":25401,"count":0}],"isBlockCoverage":false},{"functionName":"returnStatement","ranges":[{"startOffset":25402,"endOffset":25628,"count":0}],"isBlockCoverage":false},{"functionName":"sequenceExpression","ranges":[{"startOffset":25629,"endOffset":25872,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizedExpression","ranges":[{"startOffset":25873,"endOffset":26126,"count":0}],"isBlockCoverage":false},{"functionName":"switchCase","ranges":[{"startOffset":26127,"endOffset":26410,"count":0}],"isBlockCoverage":false},{"functionName":"switchStatement","ranges":[{"startOffset":26411,"endOffset":26717,"count":0}],"isBlockCoverage":false},{"functionName":"thisExpression","ranges":[{"startOffset":26718,"endOffset":26790,"count":0}],"isBlockCoverage":false},{"functionName":"throwStatement","ranges":[{"startOffset":26791,"endOffset":27007,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatement","ranges":[{"startOffset":27008,"endOffset":27381,"count":0}],"isBlockCoverage":false},{"functionName":"unaryExpression","ranges":[{"startOffset":27382,"endOffset":27756,"count":0}],"isBlockCoverage":false},{"functionName":"updateExpression","ranges":[{"startOffset":27757,"endOffset":28135,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclaration","ranges":[{"startOffset":28136,"endOffset":28446,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarator","ranges":[{"startOffset":28447,"endOffset":28714,"count":0}],"isBlockCoverage":false},{"functionName":"whileStatement","ranges":[{"startOffset":28715,"endOffset":28973,"count":0}],"isBlockCoverage":false},{"functionName":"withStatement","ranges":[{"startOffset":28974,"endOffset":29239,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentPattern","ranges":[{"startOffset":29240,"endOffset":29512,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPattern","ranges":[{"startOffset":29513,"endOffset":29723,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionExpression","ranges":[{"startOffset":29724,"endOffset":30113,"count":0}],"isBlockCoverage":false},{"functionName":"classBody","ranges":[{"startOffset":30114,"endOffset":30295,"count":0}],"isBlockCoverage":false},{"functionName":"classExpression","ranges":[{"startOffset":30296,"endOffset":30752,"count":0}],"isBlockCoverage":false},{"functionName":"classDeclaration","ranges":[{"startOffset":30753,"endOffset":31212,"count":0}],"isBlockCoverage":false},{"functionName":"exportAllDeclaration","ranges":[{"startOffset":31213,"endOffset":31437,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultDeclaration","ranges":[{"startOffset":31438,"endOffset":31699,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamedDeclaration","ranges":[{"startOffset":31700,"endOffset":32138,"count":0}],"isBlockCoverage":false},{"functionName":"exportSpecifier","ranges":[{"startOffset":32139,"endOffset":32425,"count":0}],"isBlockCoverage":false},{"functionName":"forOfStatement","ranges":[{"startOffset":32426,"endOffset":32833,"count":0}],"isBlockCoverage":false},{"functionName":"importDeclaration","ranges":[{"startOffset":32834,"endOffset":33141,"count":0}],"isBlockCoverage":false},{"functionName":"importDefaultSpecifier","ranges":[{"startOffset":33142,"endOffset":33367,"count":0}],"isBlockCoverage":false},{"functionName":"importNamespaceSpecifier","ranges":[{"startOffset":33368,"endOffset":33599,"count":0}],"isBlockCoverage":false},{"functionName":"importSpecifier","ranges":[{"startOffset":33600,"endOffset":33886,"count":0}],"isBlockCoverage":false},{"functionName":"importExpression","ranges":[{"startOffset":33887,"endOffset":34183,"count":0}],"isBlockCoverage":false},{"functionName":"metaProperty","ranges":[{"startOffset":34184,"endOffset":34456,"count":0}],"isBlockCoverage":false},{"functionName":"classMethod","ranges":[{"startOffset":34457,"endOffset":35182,"count":0}],"isBlockCoverage":false},{"functionName":"objectPattern","ranges":[{"startOffset":35183,"endOffset":35406,"count":0}],"isBlockCoverage":false},{"functionName":"spreadElement","ranges":[{"startOffset":35407,"endOffset":35620,"count":0}],"isBlockCoverage":false},{"functionName":"_super","ranges":[{"startOffset":35621,"endOffset":35676,"count":0}],"isBlockCoverage":false},{"functionName":"taggedTemplateExpression","ranges":[{"startOffset":35677,"endOffset":35965,"count":0}],"isBlockCoverage":false},{"functionName":"templateElement","ranges":[{"startOffset":35966,"endOffset":36234,"count":0}],"isBlockCoverage":false},{"functionName":"templateLiteral","ranges":[{"startOffset":36235,"endOffset":36541,"count":0}],"isBlockCoverage":false},{"functionName":"yieldExpression","ranges":[{"startOffset":36542,"endOffset":36855,"count":0}],"isBlockCoverage":false},{"functionName":"awaitExpression","ranges":[{"startOffset":36856,"endOffset":37075,"count":0}],"isBlockCoverage":false},{"functionName":"_import","ranges":[{"startOffset":37076,"endOffset":37133,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntLiteral","ranges":[{"startOffset":37134,"endOffset":37329,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamespaceSpecifier","ranges":[{"startOffset":37330,"endOffset":37576,"count":0}],"isBlockCoverage":false},{"functionName":"optionalMemberExpression","ranges":[{"startOffset":37577,"endOffset":38061,"count":0}],"isBlockCoverage":false},{"functionName":"optionalCallExpression","ranges":[{"startOffset":38062,"endOffset":38472,"count":0}],"isBlockCoverage":false},{"functionName":"classProperty","ranges":[{"startOffset":38473,"endOffset":39128,"count":0}],"isBlockCoverage":false},{"functionName":"classAccessorProperty","ranges":[{"startOffset":39129,"endOffset":39808,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateProperty","ranges":[{"startOffset":39809,"endOffset":40279,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateMethod","ranges":[{"startOffset":40280,"endOffset":40775,"count":0}],"isBlockCoverage":false},{"functionName":"privateName","ranges":[{"startOffset":40776,"endOffset":40953,"count":0}],"isBlockCoverage":false},{"functionName":"staticBlock","ranges":[{"startOffset":40954,"endOffset":41141,"count":0}],"isBlockCoverage":false},{"functionName":"importAttribute","ranges":[{"startOffset":41142,"endOffset":41403,"count":0}],"isBlockCoverage":false},{"functionName":"anyTypeAnnotation","ranges":[{"startOffset":41404,"endOffset":41482,"count":0}],"isBlockCoverage":false},{"functionName":"arrayTypeAnnotation","ranges":[{"startOffset":41483,"endOffset":41729,"count":0}],"isBlockCoverage":false},{"functionName":"booleanTypeAnnotation","ranges":[{"startOffset":41730,"endOffset":41816,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteralTypeAnnotation","ranges":[{"startOffset":41817,"endOffset":42057,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteralTypeAnnotation","ranges":[{"startOffset":42058,"endOffset":42152,"count":0}],"isBlockCoverage":false},{"functionName":"classImplements","ranges":[{"startOffset":42153,"endOffset":42461,"count":0}],"isBlockCoverage":false},{"functionName":"declareClass","ranges":[{"startOffset":42462,"endOffset":42919,"count":0}],"isBlockCoverage":false},{"functionName":"declareFunction","ranges":[{"startOffset":42920,"endOffset":43109,"count":0}],"isBlockCoverage":false},{"functionName":"declareInterface","ranges":[{"startOffset":43110,"endOffset":43579,"count":0}],"isBlockCoverage":false},{"functionName":"declareModule","ranges":[{"startOffset":43580,"endOffset":43891,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleExports","ranges":[{"startOffset":43892,"endOffset":44156,"count":0}],"isBlockCoverage":false},{"functionName":"declareTypeAlias","ranges":[{"startOffset":44157,"endOffset":44535,"count":0}],"isBlockCoverage":false},{"functionName":"declareOpaqueType","ranges":[{"startOffset":44536,"endOffset":44944,"count":0}],"isBlockCoverage":false},{"functionName":"declareVariable","ranges":[{"startOffset":44945,"endOffset":45134,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportDeclaration","ranges":[{"startOffset":45135,"endOffset":45680,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportAllDeclaration","ranges":[{"startOffset":45681,"endOffset":46025,"count":0}],"isBlockCoverage":false},{"functionName":"declaredPredicate","ranges":[{"startOffset":46026,"endOffset":46236,"count":0}],"isBlockCoverage":false},{"functionName":"existsTypeAnnotation","ranges":[{"startOffset":46237,"endOffset":46321,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeAnnotation","ranges":[{"startOffset":46322,"endOffset":46832,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeParam","ranges":[{"startOffset":46833,"endOffset":47157,"count":0}],"isBlockCoverage":false},{"functionName":"genericTypeAnnotation","ranges":[{"startOffset":47158,"endOffset":47484,"count":0}],"isBlockCoverage":false},{"functionName":"inferredPredicate","ranges":[{"startOffset":47485,"endOffset":47563,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceExtends","ranges":[{"startOffset":47564,"endOffset":47875,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceDeclaration","ranges":[{"startOffset":47876,"endOffset":48357,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceTypeAnnotation","ranges":[{"startOffset":48358,"endOffset":48677,"count":0}],"isBlockCoverage":false},{"functionName":"intersectionTypeAnnotation","ranges":[{"startOffset":48678,"endOffset":48915,"count":0}],"isBlockCoverage":false},{"functionName":"mixedTypeAnnotation","ranges":[{"startOffset":48916,"endOffset":48998,"count":0}],"isBlockCoverage":false},{"functionName":"emptyTypeAnnotation","ranges":[{"startOffset":48999,"endOffset":49081,"count":0}],"isBlockCoverage":false},{"functionName":"nullableTypeAnnotation","ranges":[{"startOffset":49082,"endOffset":49352,"count":0}],"isBlockCoverage":false},{"functionName":"numberLiteralTypeAnnotation","ranges":[{"startOffset":49353,"endOffset":49590,"count":0}],"isBlockCoverage":false},{"functionName":"numberTypeAnnotation","ranges":[{"startOffset":49591,"endOffset":49675,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeAnnotation","ranges":[{"startOffset":49676,"endOffset":50308,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeInternalSlot","ranges":[{"startOffset":50309,"endOffset":50814,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeCallProperty","ranges":[{"startOffset":50815,"endOffset":51058,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeIndexer","ranges":[{"startOffset":51059,"endOffset":51492,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeProperty","ranges":[{"startOffset":51493,"endOffset":51941,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeSpreadProperty","ranges":[{"startOffset":51942,"endOffset":52188,"count":0}],"isBlockCoverage":false},{"functionName":"opaqueType","ranges":[{"startOffset":52189,"endOffset":52658,"count":0}],"isBlockCoverage":false},{"functionName":"qualifiedTypeIdentifier","ranges":[{"startOffset":52659,"endOffset":52979,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralTypeAnnotation","ranges":[{"startOffset":52980,"endOffset":53217,"count":0}],"isBlockCoverage":false},{"functionName":"stringTypeAnnotation","ranges":[{"startOffset":53218,"endOffset":53302,"count":0}],"isBlockCoverage":false},{"functionName":"symbolTypeAnnotation","ranges":[{"startOffset":53303,"endOffset":53387,"count":0}],"isBlockCoverage":false},{"functionName":"thisTypeAnnotation","ranges":[{"startOffset":53388,"endOffset":53468,"count":0}],"isBlockCoverage":false},{"functionName":"tupleTypeAnnotation","ranges":[{"startOffset":53469,"endOffset":53685,"count":0}],"isBlockCoverage":false},{"functionName":"typeofTypeAnnotation","ranges":[{"startOffset":53686,"endOffset":53920,"count":0}],"isBlockCoverage":false},{"functionName":"typeAlias","ranges":[{"startOffset":53921,"endOffset":54278,"count":0}],"isBlockCoverage":false},{"functionName":"typeAnnotation","ranges":[{"startOffset":54279,"endOffset":54525,"count":0}],"isBlockCoverage":false},{"functionName":"typeCastExpression","ranges":[{"startOffset":54526,"endOffset":54876,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameter","ranges":[{"startOffset":54877,"endOffset":55283,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterDeclaration","ranges":[{"startOffset":55284,"endOffset":55520,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterInstantiation","ranges":[{"startOffset":55521,"endOffset":55763,"count":0}],"isBlockCoverage":false},{"functionName":"unionTypeAnnotation","ranges":[{"startOffset":55764,"endOffset":55980,"count":0}],"isBlockCoverage":false},{"functionName":"variance","ranges":[{"startOffset":55981,"endOffset":56156,"count":0}],"isBlockCoverage":false},{"functionName":"voidTypeAnnotation","ranges":[{"startOffset":56157,"endOffset":56237,"count":0}],"isBlockCoverage":false},{"functionName":"enumDeclaration","ranges":[{"startOffset":56238,"endOffset":56489,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanBody","ranges":[{"startOffset":56490,"endOffset":56757,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberBody","ranges":[{"startOffset":56758,"endOffset":57022,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringBody","ranges":[{"startOffset":57023,"endOffset":57287,"count":0}],"isBlockCoverage":false},{"functionName":"enumSymbolBody","ranges":[{"startOffset":57288,"endOffset":57528,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanMember","ranges":[{"startOffset":57529,"endOffset":57740,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberMember","ranges":[{"startOffset":57741,"endOffset":57995,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringMember","ranges":[{"startOffset":57996,"endOffset":58250,"count":0}],"isBlockCoverage":false},{"functionName":"enumDefaultedMember","ranges":[{"startOffset":58251,"endOffset":58452,"count":0}],"isBlockCoverage":false},{"functionName":"indexedAccessType","ranges":[{"startOffset":58453,"endOffset":58775,"count":0}],"isBlockCoverage":false},{"functionName":"optionalIndexedAccessType","ranges":[{"startOffset":58776,"endOffset":59142,"count":0}],"isBlockCoverage":false},{"functionName":"jsxAttribute","ranges":[{"startOffset":59143,"endOffset":59407,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingElement","ranges":[{"startOffset":59408,"endOffset":59613,"count":0}],"isBlockCoverage":false},{"functionName":"jsxElement","ranges":[{"startOffset":59614,"endOffset":60150,"count":0}],"isBlockCoverage":false},{"functionName":"jsxEmptyExpression","ranges":[{"startOffset":60151,"endOffset":60231,"count":0}],"isBlockCoverage":false},{"functionName":"jsxExpressionContainer","ranges":[{"startOffset":60232,"endOffset":60482,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadChild","ranges":[{"startOffset":60483,"endOffset":60709,"count":0}],"isBlockCoverage":false},{"functionName":"jsxIdentifier","ranges":[{"startOffset":60710,"endOffset":60900,"count":0}],"isBlockCoverage":false},{"functionName":"jsxMemberExpression","ranges":[{"startOffset":60901,"endOffset":61204,"count":0}],"isBlockCoverage":false},{"functionName":"jsxNamespacedName","ranges":[{"startOffset":61205,"endOffset":61497,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningElement","ranges":[{"startOffset":61498,"endOffset":61897,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadAttribute","ranges":[{"startOffset":61898,"endOffset":62126,"count":0}],"isBlockCoverage":false},{"functionName":"jsxText","ranges":[{"startOffset":62127,"endOffset":62304,"count":0}],"isBlockCoverage":false},{"functionName":"jsxFragment","ranges":[{"startOffset":62305,"endOffset":62746,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningFragment","ranges":[{"startOffset":62747,"endOffset":62827,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingFragment","ranges":[{"startOffset":62828,"endOffset":62908,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":62909,"endOffset":62961,"count":0}],"isBlockCoverage":false},{"functionName":"placeholder","ranges":[{"startOffset":62962,"endOffset":63248,"count":0}],"isBlockCoverage":false},{"functionName":"v8IntrinsicIdentifier","ranges":[{"startOffset":63249,"endOffset":63463,"count":0}],"isBlockCoverage":false},{"functionName":"argumentPlaceholder","ranges":[{"startOffset":63464,"endOffset":63546,"count":0}],"isBlockCoverage":false},{"functionName":"bindExpression","ranges":[{"startOffset":63547,"endOffset":63825,"count":0}],"isBlockCoverage":false},{"functionName":"decorator","ranges":[{"startOffset":63826,"endOffset":64037,"count":0}],"isBlockCoverage":false},{"functionName":"doExpression","ranges":[{"startOffset":64038,"endOffset":64300,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultSpecifier","ranges":[{"startOffset":64301,"endOffset":64541,"count":0}],"isBlockCoverage":false},{"functionName":"recordExpression","ranges":[{"startOffset":64542,"endOffset":64774,"count":0}],"isBlockCoverage":false},{"functionName":"tupleExpression","ranges":[{"startOffset":64775,"endOffset":64999,"count":0}],"isBlockCoverage":false},{"functionName":"decimalLiteral","ranges":[{"startOffset":65000,"endOffset":65198,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExpression","ranges":[{"startOffset":65199,"endOffset":65401,"count":0}],"isBlockCoverage":false},{"functionName":"topicReference","ranges":[{"startOffset":65402,"endOffset":65474,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineTopicExpression","ranges":[{"startOffset":65475,"endOffset":65728,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineBareFunction","ranges":[{"startOffset":65729,"endOffset":65953,"count":0}],"isBlockCoverage":false},{"functionName":"pipelinePrimaryTopicReference","ranges":[{"startOffset":65954,"endOffset":66056,"count":0}],"isBlockCoverage":false},{"functionName":"tsParameterProperty","ranges":[{"startOffset":66057,"endOffset":66293,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareFunction","ranges":[{"startOffset":66294,"endOffset":66786,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareMethod","ranges":[{"startOffset":66787,"endOffset":67370,"count":0}],"isBlockCoverage":false},{"functionName":"tsQualifiedName","ranges":[{"startOffset":67371,"endOffset":67637,"count":0}],"isBlockCoverage":false},{"functionName":"tsCallSignatureDeclaration","ranges":[{"startOffset":67638,"endOffset":68138,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructSignatureDeclaration","ranges":[{"startOffset":68139,"endOffset":68654,"count":0}],"isBlockCoverage":false},{"functionName":"tsPropertySignature","ranges":[{"startOffset":68655,"endOffset":68980,"count":0}],"isBlockCoverage":false},{"functionName":"tsMethodSignature","ranges":[{"startOffset":68981,"endOffset":69527,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexSignature","ranges":[{"startOffset":69528,"endOffset":69879,"count":0}],"isBlockCoverage":false},{"functionName":"tsAnyKeyword","ranges":[{"startOffset":69880,"endOffset":69948,"count":0}],"isBlockCoverage":false},{"functionName":"tsBooleanKeyword","ranges":[{"startOffset":69949,"endOffset":70025,"count":0}],"isBlockCoverage":false},{"functionName":"tsBigIntKeyword","ranges":[{"startOffset":70026,"endOffset":70100,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntrinsicKeyword","ranges":[{"startOffset":70101,"endOffset":70181,"count":0}],"isBlockCoverage":false},{"functionName":"tsNeverKeyword","ranges":[{"startOffset":70182,"endOffset":70254,"count":0}],"isBlockCoverage":false},{"functionName":"tsNullKeyword","ranges":[{"startOffset":70255,"endOffset":70325,"count":0}],"isBlockCoverage":false},{"functionName":"tsNumberKeyword","ranges":[{"startOffset":70326,"endOffset":70400,"count":0}],"isBlockCoverage":false},{"functionName":"tsObjectKeyword","ranges":[{"startOffset":70401,"endOffset":70475,"count":0}],"isBlockCoverage":false},{"functionName":"tsStringKeyword","ranges":[{"startOffset":70476,"endOffset":70550,"count":0}],"isBlockCoverage":false},{"functionName":"tsSymbolKeyword","ranges":[{"startOffset":70551,"endOffset":70625,"count":0}],"isBlockCoverage":false},{"functionName":"tsUndefinedKeyword","ranges":[{"startOffset":70626,"endOffset":70706,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnknownKeyword","ranges":[{"startOffset":70707,"endOffset":70783,"count":0}],"isBlockCoverage":false},{"functionName":"tsVoidKeyword","ranges":[{"startOffset":70784,"endOffset":70854,"count":0}],"isBlockCoverage":false},{"functionName":"tsThisType","ranges":[{"startOffset":70855,"endOffset":70919,"count":0}],"isBlockCoverage":false},{"functionName":"tsFunctionType","ranges":[{"startOffset":70920,"endOffset":71384,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructorType","ranges":[{"startOffset":71385,"endOffset":71858,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeReference","ranges":[{"startOffset":71859,"endOffset":72197,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypePredicate","ranges":[{"startOffset":72198,"endOffset":72642,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeQuery","ranges":[{"startOffset":72643,"endOffset":72969,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeLiteral","ranges":[{"startOffset":72970,"endOffset":73178,"count":0}],"isBlockCoverage":false},{"functionName":"tsArrayType","ranges":[{"startOffset":73179,"endOffset":73401,"count":0}],"isBlockCoverage":false},{"functionName":"tsTupleType","ranges":[{"startOffset":73402,"endOffset":73629,"count":0}],"isBlockCoverage":false},{"functionName":"tsOptionalType","ranges":[{"startOffset":73630,"endOffset":73876,"count":0}],"isBlockCoverage":false},{"functionName":"tsRestType","ranges":[{"startOffset":73877,"endOffset":74111,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamedTupleMember","ranges":[{"startOffset":74112,"endOffset":74509,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnionType","ranges":[{"startOffset":74510,"endOffset":74702,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntersectionType","ranges":[{"startOffset":74703,"endOffset":74916,"count":0}],"isBlockCoverage":false},{"functionName":"tsConditionalType","ranges":[{"startOffset":74917,"endOffset":75413,"count":0}],"isBlockCoverage":false},{"functionName":"tsInferType","ranges":[{"startOffset":75414,"endOffset":75646,"count":0}],"isBlockCoverage":false},{"functionName":"tsParenthesizedType","ranges":[{"startOffset":75647,"endOffset":75908,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeOperator","ranges":[{"startOffset":75909,"endOffset":76175,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexedAccessType","ranges":[{"startOffset":76176,"endOffset":76504,"count":0}],"isBlockCoverage":false},{"functionName":"tsMappedType","ranges":[{"startOffset":76505,"endOffset":76948,"count":0}],"isBlockCoverage":false},{"functionName":"tsTemplateLiteralType","ranges":[{"startOffset":76949,"endOffset":77243,"count":0}],"isBlockCoverage":false},{"functionName":"tsLiteralType","ranges":[{"startOffset":77244,"endOffset":77452,"count":0}],"isBlockCoverage":false},{"functionName":"tsExpressionWithTypeArguments","ranges":[{"startOffset":77453,"endOffset":77843,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceDeclaration","ranges":[{"startOffset":77844,"endOffset":78331,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceBody","ranges":[{"startOffset":78332,"endOffset":78531,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAliasDeclaration","ranges":[{"startOffset":78532,"endOffset":78973,"count":0}],"isBlockCoverage":false},{"functionName":"tsInstantiationExpression","ranges":[{"startOffset":78974,"endOffset":79352,"count":0}],"isBlockCoverage":false},{"functionName":"tsAsExpression","ranges":[{"startOffset":79353,"endOffset":79691,"count":0}],"isBlockCoverage":false},{"functionName":"tsSatisfiesExpression","ranges":[{"startOffset":79692,"endOffset":80051,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAssertion","ranges":[{"startOffset":80052,"endOffset":80393,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumBody","ranges":[{"startOffset":80394,"endOffset":80593,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumDeclaration","ranges":[{"startOffset":80594,"endOffset":80866,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumMember","ranges":[{"startOffset":80867,"endOffset":81151,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleDeclaration","ranges":[{"startOffset":81152,"endOffset":81431,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleBlock","ranges":[{"startOffset":81432,"endOffset":81625,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportType","ranges":[{"startOffset":81626,"endOffset":82049,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportEqualsDeclaration","ranges":[{"startOffset":82050,"endOffset":82406,"count":0}],"isBlockCoverage":false},{"functionName":"tsExternalModuleReference","ranges":[{"startOffset":82407,"endOffset":82666,"count":0}],"isBlockCoverage":false},{"functionName":"tsNonNullExpression","ranges":[{"startOffset":82667,"endOffset":82908,"count":0}],"isBlockCoverage":false},{"functionName":"tsExportAssignment","ranges":[{"startOffset":82909,"endOffset":83147,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamespaceExportDeclaration","ranges":[{"startOffset":83148,"endOffset":83376,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAnnotation","ranges":[{"startOffset":83377,"endOffset":83629,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterInstantiation","ranges":[{"startOffset":83630,"endOffset":83878,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterDeclaration","ranges":[{"startOffset":83879,"endOffset":84121,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameter","ranges":[{"startOffset":84122,"endOffset":84513,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":84514,"endOffset":84668,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":84669,"endOffset":84842,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":84843,"endOffset":84995,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":84996,"endOffset":85156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1490,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":280,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"validateInternal","ranges":[{"startOffset":512,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"validateField","ranges":[{"startOffset":970,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"validateChild","ranges":[{"startOffset":1149,"endOffset":1451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2591,"count":1},{"startOffset":2217,"endOffset":2403,"count":445},{"startOffset":2247,"endOffset":2401,"count":682},{"startOffset":2319,"endOffset":2363,"count":177},{"startOffset":2363,"endOffset":2397,"count":505}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":154,"endOffset":201,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":282,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":569,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":708,"endOffset":763,"count":51}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":843,"endOffset":891,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":983,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1124,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1267,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1424,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1599,"endOffset":1648,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2004,"endOffset":2156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"328","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53453,"count":1},{"startOffset":960,"endOffset":971,"count":0},{"startOffset":1195,"endOffset":1589,"count":0},{"startOffset":1726,"endOffset":1934,"count":0},{"startOffset":4766,"endOffset":4770,"count":0},{"startOffset":6872,"endOffset":6955,"count":0},{"startOffset":7420,"endOffset":7623,"count":0},{"startOffset":9954,"endOffset":10205,"count":0},{"startOffset":11444,"endOffset":11732,"count":0},{"startOffset":11832,"endOffset":12999,"count":0},{"startOffset":15042,"endOffset":15343,"count":0},{"startOffset":15958,"endOffset":15962,"count":0},{"startOffset":16821,"endOffset":16825,"count":0},{"startOffset":18130,"endOffset":18134,"count":0},{"startOffset":19177,"endOffset":19181,"count":0},{"startOffset":20035,"endOffset":20545,"count":0},{"startOffset":20885,"endOffset":21312,"count":0},{"startOffset":21640,"endOffset":21820,"count":0},{"startOffset":21880,"endOffset":22208,"count":0},{"startOffset":23844,"endOffset":24157,"count":0},{"startOffset":25047,"endOffset":25109,"count":0},{"startOffset":25751,"endOffset":26799,"count":0},{"startOffset":26989,"endOffset":27064,"count":0},{"startOffset":32304,"endOffset":32555,"count":0},{"startOffset":33807,"endOffset":33876,"count":0},{"startOffset":34087,"endOffset":34529,"count":0},{"startOffset":39344,"endOffset":39963,"count":0},{"startOffset":45433,"endOffset":45736,"count":0},{"startOffset":47473,"endOffset":47572,"count":0},{"startOffset":48087,"endOffset":48186,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1211,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2331,"endOffset":2783,"count":1}],"isBlockCoverage":true},{"functionName":"Object.assign.oneOfNodeTypes","ranges":[{"startOffset":2532,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.comments.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.each.oneOfNodeTypes","ranges":[{"startOffset":6767,"endOffset":6775,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.tokens.validate.Object.assign.type","ranges":[{"startOffset":7052,"endOffset":7060,"count":0}],"isBlockCoverage":false},{"functionName":"functionCommon","ranges":[{"startOffset":8370,"endOffset":8537,"count":8}],"isBlockCoverage":true},{"functionName":"functionTypeAnnotationCommon","ranges":[{"startOffset":8617,"endOffset":8907,"count":6}],"isBlockCoverage":true},{"functionName":"functionDeclarationCommon","ranges":[{"startOffset":9012,"endOffset":9236,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9956,"endOffset":10203,"count":0}],"isBlockCoverage":false},{"functionName":"patternLikeCommon","ranges":[{"startOffset":10796,"endOffset":11122,"count":6}],"isBlockCoverage":true},{"functionName":"defineType.fields.Object.assign.name.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.type","ranges":[{"startOffset":11517,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.validate","ranges":[{"startOffset":11834,"endOffset":12999,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.value.validate.Object.assign.type","ranges":[{"startOffset":14079,"endOffset":14328,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.flags.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.type","ranges":[{"startOffset":15115,"endOffset":15307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16181,"endOffset":16620,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":16368,"endOffset":16505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18208,"endOffset":18721,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":18432,"endOffset":18569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19268,"endOffset":19865,"count":1}],"isBlockCoverage":true},{"functionName":"Object.assign.oneOfNodeTypes","ranges":[{"startOffset":19539,"endOffset":19676,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.shorthand.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.type","ranges":[{"startOffset":20109,"endOffset":20508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20887,"endOffset":21310,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.validate","ranges":[{"startOffset":21882,"endOffset":22208,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.block.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":23924,"endOffset":24101,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25754,"endOffset":26796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32306,"endOffset":32553,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.Object.assign.declaration.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":34164,"endOffset":34476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34678,"endOffset":35246,"count":1},{"startOffset":34955,"endOffset":35245,"count":0}],"isBlockCoverage":true},{"functionName":"Object.assign.oneOfNodeTypes","ranges":[{"startOffset":34985,"endOffset":35123,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36092,"endOffset":36982,"count":1},{"startOffset":36242,"endOffset":36981,"count":0}],"isBlockCoverage":true},{"functionName":"Object.assign.oneOfNodeTypes","ranges":[{"startOffset":36552,"endOffset":36757,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.meta.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":39420,"endOffset":39911,"count":0}],"isBlockCoverage":false},{"functionName":"classMethodOrPropertyCommon","ranges":[{"startOffset":40137,"endOffset":41062,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40599,"endOffset":40944,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40806,"endOffset":40937,"count":0}],"isBlockCoverage":false},{"functionName":"classMethodOrDeclareMethodCommon","ranges":[{"startOffset":41172,"endOffset":41728,"count":3}],"isBlockCoverage":true},{"functionName":"templateElementCookedValidator","ranges":[{"startOffset":43681,"endOffset":44506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44913,"endOffset":45199,"count":0}],"isBlockCoverage":false},{"functionName":"defineType.fields.delegate.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.type","ranges":[{"startOffset":45507,"endOffset":45699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46883,"endOffset":47310,"count":1}],"isBlockCoverage":true},{"functionName":"Object.assign.oneOfNodeTypes","ranges":[{"startOffset":47069,"endOffset":47206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49800,"endOffset":50174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50028,"endOffset":50165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":306,"endOffset":736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":155,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":166,"endOffset":422,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":584,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":197,"endOffset":536,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":584,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":715,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":865,"endOffset":932,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1025,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1177,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12445,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10817,"endOffset":11066,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":11067,"endOffset":11410,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":11411,"endOffset":11855,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":11856,"endOffset":12404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1577,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1019,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1121,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1248,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1343,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1482,"endOffset":1539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-string-parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7860,"count":1}],"isBlockCoverage":true},{"functionName":"isDigit","ranges":[{"startOffset":210,"endOffset":271,"count":0}],"isBlockCoverage":false},{"functionName":"bin","ranges":[{"startOffset":462,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"oct","ranges":[{"startOffset":499,"endOffset":525,"count":0}],"isBlockCoverage":false},{"functionName":"dec","ranges":[{"startOffset":534,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"hex","ranges":[{"startOffset":569,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"readStringContents","ranges":[{"startOffset":648,"endOffset":2331,"count":0}],"isBlockCoverage":false},{"functionName":"isStringEnd","ranges":[{"startOffset":2332,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":2531,"endOffset":4621,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":4622,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":5074,"endOffset":7118,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":7119,"endOffset":7824,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2747,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1950,"endOffset":1964,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1992,"endOffset":2006,"count":3}],"isBlockCoverage":true}]},{"scriptId":"338","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9473,"count":1}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1439,"endOffset":1598,"count":42},{"startOffset":1489,"endOffset":1514,"count":0},{"startOffset":1538,"endOffset":1562,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1599,"endOffset":1659,"count":179}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1660,"endOffset":1748,"count":99}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":1749,"endOffset":1837,"count":31}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":1838,"endOffset":1964,"count":50}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":1965,"endOffset":2065,"count":93}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2066,"endOffset":2152,"count":91}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2153,"endOffset":2245,"count":49}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2246,"endOffset":2743,"count":97},{"startOffset":2338,"endOffset":2363,"count":0}],"isBlockCoverage":true},{"functionName":"childValidator","ranges":[{"startOffset":2366,"endOffset":2374,"count":0}],"isBlockCoverage":false},{"functionName":"validator","ranges":[{"startOffset":2378,"endOffset":2692,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2744,"endOffset":3037,"count":40}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2780,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3094,"endOffset":3918,"count":445}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3233,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3919,"endOffset":4471,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3964,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4472,"endOffset":4737,"count":233}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4507,"endOffset":4692,"count":0}],"isBlockCoverage":false},{"functionName":"assertShape","ranges":[{"startOffset":4738,"endOffset":5365,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4805,"endOffset":5316,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5366,"endOffset":6082,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":6083,"endOffset":6457,"count":107},{"startOffset":6264,"endOffset":6290,"count":100},{"startOffset":6291,"endOffset":6313,"count":96},{"startOffset":6315,"endOffset":6436,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":6110,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"defineAliasedType","ranges":[{"startOffset":6678,"endOffset":7196,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6728,"endOffset":7193,"count":239},{"startOffset":6801,"endOffset":7059,"count":37},{"startOffset":6861,"endOffset":6975,"count":1},{"startOffset":6934,"endOffset":6942,"count":0},{"startOffset":6998,"endOffset":7007,"count":1},{"startOffset":7008,"endOffset":7022,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7098,"endOffset":7123,"count":239}],"isBlockCoverage":true},{"functionName":"defineType","ranges":[{"startOffset":7197,"endOffset":9437,"count":252},{"startOffset":7269,"endOffset":7292,"count":3},{"startOffset":7293,"endOffset":7298,"count":249},{"startOffset":7343,"endOffset":7965,"count":26},{"startOffset":7387,"endOffset":7961,"count":1},{"startOffset":7483,"endOffset":7955,"count":5},{"startOffset":7595,"endOffset":7611,"count":0},{"startOffset":7618,"endOffset":7644,"count":0},{"startOffset":7646,"endOffset":7751,"count":0},{"startOffset":7814,"endOffset":7818,"count":0},{"startOffset":7997,"endOffset":8016,"count":43},{"startOffset":8017,"endOffset":8022,"count":40},{"startOffset":8055,"endOffset":8074,"count":2},{"startOffset":8075,"endOffset":8080,"count":2},{"startOffset":8113,"endOffset":8132,"count":173},{"startOffset":8133,"endOffset":8148,"count":170},{"startOffset":8149,"endOffset":8154,"count":24},{"startOffset":8193,"endOffset":8301,"count":777},{"startOffset":8226,"endOffset":8297,"count":0},{"startOffset":8330,"endOffset":8385,"count":4},{"startOffset":8431,"endOffset":8473,"count":872},{"startOffset":8463,"endOffset":8468,"count":0},{"startOffset":8515,"endOffset":9010,"count":629},{"startOffset":8584,"endOffset":8609,"count":84},{"startOffset":8611,"endOffset":8647,"count":29},{"startOffset":8685,"endOffset":8720,"count":545},{"startOffset":8720,"endOffset":8843,"count":84},{"startOffset":8746,"endOffset":8770,"count":42},{"startOffset":8772,"endOffset":8843,"count":42},{"startOffset":8884,"endOffset":9006,"count":1540},{"startOffset":8920,"endOffset":9000,"count":0},{"startOffset":9357,"endOffset":9413,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9212,"endOffset":9333,"count":659},{"startOffset":9281,"endOffset":9286,"count":49}],"isBlockCoverage":true}]},{"scriptId":"339","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16513,"count":1}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":174,"endOffset":1032,"count":3},{"startOffset":381,"endOffset":407,"count":1},{"startOffset":408,"endOffset":412,"count":2},{"startOffset":759,"endOffset":948,"count":1},{"startOffset":949,"endOffset":953,"count":2}],"isBlockCoverage":true}]},{"scriptId":"340","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4231,"count":1}],"isBlockCoverage":true}]},{"scriptId":"341","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true}]},{"scriptId":"342","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1042,"count":1},{"startOffset":533,"endOffset":648,"count":8},{"startOffset":596,"endOffset":611,"count":4},{"startOffset":613,"endOffset":646,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":765,"endOffset":997,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":810,"endOffset":993,"count":19},{"startOffset":886,"endOffset":939,"count":12}],"isBlockCoverage":true}]},{"scriptId":"343","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1},{"startOffset":474,"endOffset":636,"count":0}],"isBlockCoverage":true},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.object.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":293,"endOffset":301,"count":0}],"isBlockCoverage":false},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.callee.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":404,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16714,"count":1},{"startOffset":4032,"endOffset":4133,"count":13}],"isBlockCoverage":true},{"functionName":"tSFunctionTypeAnnotationCommon","ranges":[{"startOffset":283,"endOffset":527,"count":2}],"isBlockCoverage":true},{"functionName":"signatureDeclarationCommon","ranges":[{"startOffset":1868,"endOffset":2149,"count":4}],"isBlockCoverage":true},{"functionName":"namedTypeElementCommon","ranges":[{"startOffset":2520,"endOffset":2663,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8961,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9391,"endOffset":10189,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":9709,"endOffset":10010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/deprecated-aliases.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":275,"count":1}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/uppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27017,"count":1}],"isBlockCoverage":true},{"functionName":"alias","ranges":[{"startOffset":7276,"endOffset":7338,"count":252}],"isBlockCoverage":true}]},{"scriptId":"347","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":465,"count":1}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":160,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":270,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":155,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45315,"count":1}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":17373,"endOffset":17581,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":17582,"endOffset":17669,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":17670,"endOffset":17767,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":17768,"endOffset":17857,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":17858,"endOffset":17955,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":17956,"endOffset":18031,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":18032,"endOffset":18121,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":18122,"endOffset":18207,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":18208,"endOffset":18293,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":18294,"endOffset":18379,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":18380,"endOffset":18459,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":18460,"endOffset":18559,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":18560,"endOffset":18651,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":18652,"endOffset":18743,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":18744,"endOffset":18833,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":18834,"endOffset":18919,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":18920,"endOffset":19015,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":19016,"endOffset":19081,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":19082,"endOffset":19167,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":19168,"endOffset":19249,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":19250,"endOffset":19345,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":19346,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":19440,"endOffset":19517,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":19518,"endOffset":19597,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":19598,"endOffset":19687,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":19688,"endOffset":19771,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":19772,"endOffset":19857,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":19858,"endOffset":19937,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":19938,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":20024,"endOffset":20107,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":20108,"endOffset":20199,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":20200,"endOffset":20289,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":20290,"endOffset":20373,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":20374,"endOffset":20445,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":20446,"endOffset":20535,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":20536,"endOffset":20617,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":20618,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":20704,"endOffset":20783,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":20784,"endOffset":20871,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":20872,"endOffset":20965,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20966,"endOffset":21069,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":21070,"endOffset":21147,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":21148,"endOffset":21235,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":21236,"endOffset":21321,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":21322,"endOffset":21407,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":21408,"endOffset":21489,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":21490,"endOffset":21577,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":21578,"endOffset":21667,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":21668,"endOffset":21763,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":21764,"endOffset":21857,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":21858,"endOffset":21943,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21944,"endOffset":22027,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":22028,"endOffset":22119,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":22120,"endOffset":22201,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":22202,"endOffset":22305,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":22306,"endOffset":22381,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":22382,"endOffset":22469,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":22470,"endOffset":22559,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":22560,"endOffset":22657,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":22658,"endOffset":22763,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":22764,"endOffset":22865,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22866,"endOffset":22953,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22954,"endOffset":23039,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":23040,"endOffset":23131,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":23132,"endOffset":23233,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":23234,"endOffset":23339,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":23340,"endOffset":23427,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportExpression","ranges":[{"startOffset":23428,"endOffset":23517,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":23518,"endOffset":23599,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":23600,"endOffset":23679,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":23680,"endOffset":23763,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":23764,"endOffset":23847,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":23848,"endOffset":23915,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23916,"endOffset":24021,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":24022,"endOffset":24109,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":24110,"endOffset":24197,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":24198,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":24286,"endOffset":24373,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":24374,"endOffset":24443,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":24444,"endOffset":24527,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":24528,"endOffset":24633,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":24634,"endOffset":24739,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":24740,"endOffset":24841,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":24842,"endOffset":24925,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassAccessorProperty","ranges":[{"startOffset":24926,"endOffset":25025,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":25026,"endOffset":25123,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":25124,"endOffset":25217,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":25218,"endOffset":25297,"count":0}],"isBlockCoverage":false},{"functionName":"assertStaticBlock","ranges":[{"startOffset":25298,"endOffset":25377,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportAttribute","ranges":[{"startOffset":25378,"endOffset":25465,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":25466,"endOffset":25557,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":25558,"endOffset":25653,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":25654,"endOffset":25753,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":25754,"endOffset":25867,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":25868,"endOffset":25975,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":25976,"endOffset":26063,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":26064,"endOffset":26145,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":26146,"endOffset":26233,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":26234,"endOffset":26323,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":26324,"endOffset":26407,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":26408,"endOffset":26505,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":26506,"endOffset":26595,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":26596,"endOffset":26687,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":26688,"endOffset":26775,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":26776,"endOffset":26881,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":26882,"endOffset":26993,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":26994,"endOffset":27085,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":27086,"endOffset":27183,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":27184,"endOffset":27285,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":27286,"endOffset":27377,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":27378,"endOffset":27477,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":27478,"endOffset":27569,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":27570,"endOffset":27659,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":27660,"endOffset":27757,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":27758,"endOffset":27861,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":27862,"endOffset":27971,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":27972,"endOffset":28067,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":28068,"endOffset":28163,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":28164,"endOffset":28265,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":28266,"endOffset":28377,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":28378,"endOffset":28475,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":28476,"endOffset":28573,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":28574,"endOffset":28675,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":28676,"endOffset":28777,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":28778,"endOffset":28869,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":28870,"endOffset":28963,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":28964,"endOffset":29069,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":29070,"endOffset":29147,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":29148,"endOffset":29251,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":29252,"endOffset":29363,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":29364,"endOffset":29461,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":29462,"endOffset":29559,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":29560,"endOffset":29653,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":29654,"endOffset":29749,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":29750,"endOffset":29847,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":29848,"endOffset":29923,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":29924,"endOffset":30009,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":30010,"endOffset":30103,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":30104,"endOffset":30187,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":30188,"endOffset":30293,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":30294,"endOffset":30403,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":30404,"endOffset":30499,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":30500,"endOffset":30573,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":30574,"endOffset":30667,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":30668,"endOffset":30755,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":30756,"endOffset":30843,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":30844,"endOffset":30929,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":30930,"endOffset":31015,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":31016,"endOffset":31101,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":31102,"endOffset":31193,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":31194,"endOffset":31283,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":31284,"endOffset":31373,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":31374,"endOffset":31469,"count":0}],"isBlockCoverage":false},{"functionName":"assertIndexedAccessType","ranges":[{"startOffset":31470,"endOffset":31561,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalIndexedAccessType","ranges":[{"startOffset":31562,"endOffset":31669,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":31670,"endOffset":31751,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":31752,"endOffset":31843,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":31844,"endOffset":31921,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":31922,"endOffset":32015,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":32016,"endOffset":32117,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":32118,"endOffset":32203,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":32204,"endOffset":32287,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":32288,"endOffset":32383,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":32384,"endOffset":32475,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":32476,"endOffset":32567,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":32568,"endOffset":32661,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":32662,"endOffset":32733,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":32734,"endOffset":32813,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":32814,"endOffset":32907,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":32908,"endOffset":33001,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":33002,"endOffset":33067,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":33068,"endOffset":33147,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":33148,"endOffset":33247,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":33248,"endOffset":33343,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":33344,"endOffset":33429,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":33430,"endOffset":33505,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":33506,"endOffset":33587,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":33588,"endOffset":33689,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":33690,"endOffset":33779,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":33780,"endOffset":33867,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecimalLiteral","ranges":[{"startOffset":33868,"endOffset":33953,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleExpression","ranges":[{"startOffset":33954,"endOffset":34043,"count":0}],"isBlockCoverage":false},{"functionName":"assertTopicReference","ranges":[{"startOffset":34044,"endOffset":34129,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":34130,"endOffset":34233,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":34234,"endOffset":34331,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":34332,"endOffset":34447,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":34448,"endOffset":34543,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":34544,"endOffset":34635,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":34636,"endOffset":34723,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":34724,"endOffset":34811,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":34812,"endOffset":34921,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":34922,"endOffset":35041,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":35042,"endOffset":35137,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":35138,"endOffset":35229,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":35230,"endOffset":35319,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":35320,"endOffset":35401,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":35402,"endOffset":35491,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":35492,"endOffset":35579,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntrinsicKeyword","ranges":[{"startOffset":35580,"endOffset":35673,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":35674,"endOffset":35759,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":35760,"endOffset":35843,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":35844,"endOffset":35931,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":35932,"endOffset":36019,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":36020,"endOffset":36107,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":36108,"endOffset":36195,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":36196,"endOffset":36289,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":36290,"endOffset":36379,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":36380,"endOffset":36463,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":36464,"endOffset":36541,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":36542,"endOffset":36627,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":36628,"endOffset":36719,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":36720,"endOffset":36807,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":36808,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":36896,"endOffset":36975,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":36976,"endOffset":37059,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":37060,"endOffset":37139,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":37140,"endOffset":37219,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":37220,"endOffset":37305,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":37306,"endOffset":37383,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamedTupleMember","ranges":[{"startOffset":37384,"endOffset":37477,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":37478,"endOffset":37557,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":37558,"endOffset":37651,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":37652,"endOffset":37743,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":37744,"endOffset":37823,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":37824,"endOffset":37919,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":37920,"endOffset":38005,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":38006,"endOffset":38101,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":38102,"endOffset":38183,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTemplateLiteralType","ranges":[{"startOffset":38184,"endOffset":38283,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":38284,"endOffset":38367,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":38368,"endOffset":38483,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":38484,"endOffset":38585,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":38586,"endOffset":38673,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":38674,"endOffset":38775,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInstantiationExpression","ranges":[{"startOffset":38776,"endOffset":38883,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":38884,"endOffset":38969,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSatisfiesExpression","ranges":[{"startOffset":38970,"endOffset":39069,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":39070,"endOffset":39157,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumBody","ranges":[{"startOffset":39158,"endOffset":39235,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":39236,"endOffset":39327,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":39328,"endOffset":39409,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":39410,"endOffset":39505,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":39506,"endOffset":39589,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":39590,"endOffset":39671,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":39672,"endOffset":39779,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":39780,"endOffset":39887,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":39888,"endOffset":39983,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":39984,"endOffset":40077,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":40078,"endOffset":40191,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":40192,"endOffset":40281,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":40282,"endOffset":40395,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":40396,"endOffset":40505,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":40506,"endOffset":40593,"count":0}],"isBlockCoverage":false},{"functionName":"assertStandardized","ranges":[{"startOffset":40594,"endOffset":40675,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":40676,"endOffset":40753,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":40754,"endOffset":40823,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":40824,"endOffset":40897,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":40898,"endOffset":40977,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":40978,"endOffset":41045,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":41046,"endOffset":41121,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":41122,"endOffset":41207,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":41208,"endOffset":41303,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":41304,"endOffset":41383,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":41384,"endOffset":41449,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":41450,"endOffset":41517,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":41518,"endOffset":41609,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":41610,"endOffset":41673,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":41674,"endOffset":41757,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":41758,"endOffset":41831,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":41832,"endOffset":41917,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":41918,"endOffset":41989,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":41990,"endOffset":42069,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":42070,"endOffset":42149,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":42150,"endOffset":42215,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":42216,"endOffset":42297,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":42298,"endOffset":42369,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":42370,"endOffset":42445,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":42446,"endOffset":42537,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":42538,"endOffset":42607,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":42608,"endOffset":42689,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":42690,"endOffset":42763,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":42764,"endOffset":42839,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":42840,"endOffset":42911,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":42912,"endOffset":42979,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportOrExportDeclaration","ranges":[{"startOffset":42980,"endOffset":43087,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":43088,"endOffset":43179,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":43180,"endOffset":43267,"count":0}],"isBlockCoverage":false},{"functionName":"assertAccessor","ranges":[{"startOffset":43268,"endOffset":43341,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":43342,"endOffset":43413,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":43414,"endOffset":43479,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":43480,"endOffset":43553,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":43554,"endOffset":43647,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":43648,"endOffset":43735,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":43736,"endOffset":43819,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":43820,"endOffset":43893,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":43894,"endOffset":43971,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":43972,"endOffset":44035,"count":0}],"isBlockCoverage":false},{"functionName":"assertMiscellaneous","ranges":[{"startOffset":44036,"endOffset":44119,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeScript","ranges":[{"startOffset":44120,"endOffset":44197,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":44198,"endOffset":44281,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":44282,"endOffset":44351,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBaseType","ranges":[{"startOffset":44352,"endOffset":44429,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":44430,"endOffset":44596,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":44597,"endOffset":44759,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":44760,"endOffset":44920,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":44921,"endOffset":45089,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":45090,"endOffset":45279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":221,"endOffset":994,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":534,"count":1}],"isBlockCoverage":true},{"functionName":"createFlowUnionType","ranges":[{"startOffset":255,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1869,"count":1}],"isBlockCoverage":true},{"functionName":"getQualifiedName","ranges":[{"startOffset":181,"endOffset":329,"count":0}],"isBlockCoverage":false},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":330,"endOffset":1818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"createTSUnionType","ranges":[{"startOffset":321,"endOffset":681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2006,"count":1}],"isBlockCoverage":true},{"functionName":"getQualifiedName","ranges":[{"startOffset":181,"endOffset":369,"count":0}],"isBlockCoverage":false},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":370,"endOffset":1955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/productions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"buildUndefinedNode","ranges":[{"startOffset":175,"endOffset":291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3314,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":305,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":499,"endOffset":740,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":741,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNodeInternal","ranges":[{"startOffset":866,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2804,"endOffset":3274,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":256,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":149,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":261,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":153,"endOffset":221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":163,"endOffset":253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":159,"endOffset":246,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":374,"count":1}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":158,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":111,"endOffset":434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":167,"endOffset":272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":304,"count":1}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":107,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":169,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":335,"count":1}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":170,"endOffset":281,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":321,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":161,"endOffset":276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6216,"count":1}],"isBlockCoverage":true}]},{"scriptId":"370","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":151,"endOffset":291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":222,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":173,"endOffset":339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":264,"endOffset":694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":228,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":211,"endOffset":694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1047,"count":1}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":300,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":864,"endOffset":1005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":418,"count":1}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":238,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":209,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":797,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":322,"endOffset":750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":997,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":267,"endOffset":955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2719,"count":1}],"isBlockCoverage":true},{"functionName":"isRegExp","ranges":[{"startOffset":350,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":433,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"valueToNode","ranges":[{"startOffset":717,"endOffset":2677,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":180,"endOffset":425,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":741,"count":1}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":223,"endOffset":702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":552,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":219,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getAssignmentIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1156,"count":1}],"isBlockCoverage":true},{"functionName":"getAssignmentIdentifiers","ranges":[{"startOffset":124,"endOffset":1101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2949,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":179,"endOffset":1586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":419,"count":1}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":235,"endOffset":362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getFunctionName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1721,"count":1}],"isBlockCoverage":true},{"functionName":"getNameFromLiteralId","ranges":[{"startOffset":173,"endOffset":546,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectMemberKey","ranges":[{"startOffset":547,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionName","ranges":[{"startOffset":669,"endOffset":1675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1227,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":157,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":390,"endOffset":1188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":189,"endOffset":736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":195,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":226,"endOffset":364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":195,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1481,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":166,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2598,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":112,"endOffset":2555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":534,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":153,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":164,"endOffset":361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":649,"count":1}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":473,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":226,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":542,"count":1}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":198,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2439,"count":1}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":431,"endOffset":2383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/parentheses.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12361,"count":1}],"isBlockCoverage":true},{"functionName":"getBinaryPrecedence","ranges":[{"startOffset":2157,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeExpression","ranges":[{"startOffset":2445,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExtendsClause","ranges":[{"startOffset":2630,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"hasPostfixPart","ranges":[{"startOffset":2822,"endOffset":3242,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":3244,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":3334,"endOffset":3637,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":3638,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"needsParenBeforeExpressionBrace","ranges":[{"startOffset":3759,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":3926,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":4040,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"Binary","ranges":[{"startOffset":4183,"endOffset":4963,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":4964,"endOffset":5221,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalIndexedAccessType","ranges":[{"startOffset":5222,"endOffset":5342,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":5343,"endOffset":5694,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":5695,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":6280,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":6571,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":6830,"endOffset":7259,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":7260,"endOffset":7479,"count":0}],"isBlockCoverage":false},{"functionName":"TSInstantiationExpression","ranges":[{"startOffset":7480,"endOffset":7760,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":7761,"endOffset":8186,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":8187,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":8351,"endOffset":8961,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":8962,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":9424,"endOffset":9592,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryLike","ranges":[{"startOffset":9593,"endOffset":9788,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":9789,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":9961,"endOffset":10385,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":10386,"endOffset":10554,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":10555,"endOffset":10781,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":10782,"endOffset":11188,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":11189,"endOffset":12319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/token-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5489,"count":1}],"isBlockCoverage":true},{"functionName":"TokenMap","ranges":[{"startOffset":207,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":688,"endOffset":751,"count":0}],"isBlockCoverage":false},{"functionName":"getIndexes","ranges":[{"startOffset":754,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":827,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":1135,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"findMatching","ranges":[{"startOffset":1457,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"matchesOriginal","ranges":[{"startOffset":2349,"endOffset":2559,"count":0}],"isBlockCoverage":false},{"functionName":"startMatches","ranges":[{"startOffset":2562,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"endMatches","ranges":[{"startOffset":2818,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"_getTokensIndexesOfNode","ranges":[{"startOffset":3085,"endOffset":3965,"count":0}],"isBlockCoverage":false},{"functionName":"_findTokensOfNode","ranges":[{"startOffset":3968,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"_findFirstTokenOfNode","ranges":[{"startOffset":4336,"endOffset":4651,"count":0}],"isBlockCoverage":false},{"functionName":"_findLastTokenOfNode","ranges":[{"startOffset":4654,"endOffset":4959,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIterator","ranges":[{"startOffset":4991,"endOffset":5449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3858,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":178,"endOffset":460,"count":4},{"startOffset":244,"endOffset":251,"count":0},{"startOffset":273,"endOffset":315,"count":0},{"startOffset":317,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":396,"endOffset":452,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":545,"endOffset":817,"count":29},{"startOffset":611,"endOffset":618,"count":0},{"startOffset":640,"endOffset":677,"count":0},{"startOffset":679,"endOffset":686,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":758,"endOffset":809,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":899,"endOffset":1169,"count":19},{"startOffset":965,"endOffset":972,"count":0},{"startOffset":994,"endOffset":1030,"count":0},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1111,"endOffset":1161,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1242,"endOffset":1506,"count":10},{"startOffset":1308,"endOffset":1315,"count":0},{"startOffset":1337,"endOffset":1370,"count":0},{"startOffset":1372,"endOffset":1379,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1451,"endOffset":1498,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1579,"endOffset":1843,"count":10},{"startOffset":1645,"endOffset":1652,"count":0},{"startOffset":1674,"endOffset":1707,"count":0},{"startOffset":1709,"endOffset":1716,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1788,"endOffset":1835,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1916,"endOffset":2180,"count":13},{"startOffset":1982,"endOffset":1989,"count":0},{"startOffset":2011,"endOffset":2044,"count":0},{"startOffset":2046,"endOffset":2053,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2125,"endOffset":2172,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2247,"endOffset":2507,"count":23},{"startOffset":2313,"endOffset":2320,"count":0},{"startOffset":2342,"endOffset":2373,"count":0},{"startOffset":2375,"endOffset":2382,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2454,"endOffset":2499,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2571,"endOffset":2829,"count":67},{"startOffset":2637,"endOffset":2644,"count":0},{"startOffset":2666,"endOffset":2696,"count":0},{"startOffset":2698,"endOffset":2705,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2777,"endOffset":2821,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2893,"endOffset":3151,"count":7},{"startOffset":2959,"endOffset":2966,"count":0},{"startOffset":2988,"endOffset":3018,"count":0},{"startOffset":3020,"endOffset":3027,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3099,"endOffset":3143,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3212,"endOffset":3468,"count":15},{"startOffset":3278,"endOffset":3285,"count":0},{"startOffset":3307,"endOffset":3336,"count":0},{"startOffset":3338,"endOffset":3345,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3417,"endOffset":3460,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3550,"endOffset":3820,"count":72},{"startOffset":3616,"endOffset":3623,"count":0},{"startOffset":3645,"endOffset":3681,"count":0},{"startOffset":3683,"endOffset":3690,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3762,"endOffset":3812,"count":72}],"isBlockCoverage":true}]},{"scriptId":"405","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1152,"count":1}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":268,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":407,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"_printTemplate","ranges":[{"startOffset":515,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":1023,"endOffset":1104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7656,"count":1}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":1536,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":1822,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":1986,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":2156,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":2358,"endOffset":2592,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":2593,"endOffset":3307,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":3308,"endOffset":3381,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":3382,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":3433,"endOffset":3475,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldPrintDecoratorsBeforeExport","ranges":[{"startOffset":3476,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":3728,"endOffset":3827,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":3828,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":4439,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":4766,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"Import","ranges":[{"startOffset":5072,"endOffset":5116,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":5117,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":5219,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":5563,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":5617,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":5771,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6072,"endOffset":6383,"count":0}],"isBlockCoverage":false},{"functionName":"BindExpression","ranges":[{"startOffset":6384,"endOffset":6491,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":6492,"endOffset":7053,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":7054,"endOffset":7161,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":7162,"endOffset":7237,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":7238,"endOffset":7324,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleExpression","ranges":[{"startOffset":7325,"endOffset":7614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/statements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6622,"count":1}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":955,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":1121,"endOffset":1748,"count":0}],"isBlockCoverage":false},{"functionName":"getLastStatement","ranges":[{"startOffset":1749,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":1922,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":2344,"endOffset":2509,"count":0}],"isBlockCoverage":false},{"functionName":"ForXStatement","ranges":[{"startOffset":2510,"endOffset":3022,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":3149,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"printStatementAfterKeyword","ranges":[{"startOffset":3388,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement","ranges":[{"startOffset":3544,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":3648,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":3758,"endOffset":3866,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowStatement","ranges":[{"startOffset":3867,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":3974,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":4099,"endOffset":4432,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":4433,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":4688,"endOffset":5069,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":5070,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":5379,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":5457,"endOffset":6331,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":6332,"endOffset":6581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5677,"count":1}],"isBlockCoverage":true},{"functionName":"ClassDeclaration","ranges":[{"startOffset":600,"endOffset":1447,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":1448,"endOffset":1881,"count":0}],"isBlockCoverage":false},{"functionName":"classBodyEmptySemicolonsPrinter","ranges":[{"startOffset":1882,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":2782,"endOffset":3581,"count":0}],"isBlockCoverage":false},{"functionName":"ClassAccessorProperty","ranges":[{"startOffset":3582,"endOffset":4378,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":4379,"endOffset":4788,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":4789,"endOffset":4891,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":4892,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"_classMethodHead","ranges":[{"startOffset":5002,"endOffset":5386,"count":0}],"isBlockCoverage":false},{"functionName":"StaticBlock","ranges":[{"startOffset":5387,"endOffset":5639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5876,"count":1}],"isBlockCoverage":true},{"functionName":"_params","ranges":[{"startOffset":590,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"_parameters","ranges":[{"startOffset":1042,"endOffset":1450,"count":0}],"isBlockCoverage":false},{"functionName":"_param","ranges":[{"startOffset":1451,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"_methodHead","ranges":[{"startOffset":1643,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"_predicate","ranges":[{"startOffset":2276,"endOffset":2489,"count":0}],"isBlockCoverage":false},{"functionName":"_functionHead","ranges":[{"startOffset":2490,"endOffset":3014,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":3015,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":3138,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldPrintArrowParamsParens","ranges":[{"startOffset":3598,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"_getFuncIdName","ranges":[{"startOffset":4566,"endOffset":5838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8599,"count":1}],"isBlockCoverage":true},{"functionName":"ImportSpecifier","ranges":[{"startOffset":997,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":1334,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":1402,"endOffset":1472,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":1473,"endOffset":1771,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":1772,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"_printAttributes","ranges":[{"startOffset":1944,"endOffset":3375,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":3376,"endOffset":3965,"count":0}],"isBlockCoverage":false},{"functionName":"maybePrintDecoratorsBeforeExport","ranges":[{"startOffset":3966,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":4181,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":5788,"endOffset":6155,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":6156,"endOffset":7847,"count":0}],"isBlockCoverage":false},{"functionName":"ImportAttribute","ranges":[{"startOffset":7848,"endOffset":7970,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":7971,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"ImportExpression","ranges":[{"startOffset":8114,"endOffset":8561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6886,"count":1}],"isBlockCoverage":true},{"functionName":"_getRawIdentifier","ranges":[{"startOffset":1206,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":1596,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":1826,"endOffset":1882,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":1883,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":1964,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":2314,"endOffset":2447,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":2448,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":3017,"endOffset":3505,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":3506,"endOffset":4260,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":4261,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5055,"endOffset":5134,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5135,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5213,"endOffset":5260,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5261,"endOffset":5695,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5696,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntLiteral","ranges":[{"startOffset":5937,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"TopicReference","ranges":[{"startOffset":6195,"endOffset":6642,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":6643,"endOffset":6716,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":6717,"endOffset":6783,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":6784,"endOffset":6850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jsesc/jsesc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8902,"count":1}],"isBlockCoverage":true},{"functionName":"forOwn","ranges":[{"startOffset":95,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":247,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":423,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"fourHexEscape","ranges":[{"startOffset":576,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":652,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":870,"endOffset":948,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":967,"endOffset":1104,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":1123,"endOffset":1218,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":1237,"endOffset":1332,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt","ranges":[{"startOffset":1351,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1421,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":1487,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":1565,"endOffset":1627,"count":0}],"isBlockCoverage":false},{"functionName":"jsesc","ranges":[{"startOffset":2347,"endOffset":8849,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16709,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2070,"endOffset":2122,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2750,"endOffset":2801,"count":1}],"isBlockCoverage":true},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":3737,"endOffset":3789,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":3790,"endOffset":3910,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":3911,"endOffset":3971,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":3972,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":4064,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":4126,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":4325,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":4676,"endOffset":4753,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":4754,"endOffset":4905,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":4906,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":5017,"endOffset":5192,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":5193,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":5377,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":5477,"endOffset":5639,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":5640,"endOffset":5892,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":5893,"endOffset":6127,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":6128,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":6265,"endOffset":6413,"count":0}],"isBlockCoverage":false},{"functionName":"enumExplicitType","ranges":[{"startOffset":6414,"endOffset":6613,"count":0}],"isBlockCoverage":false},{"functionName":"enumBody","ranges":[{"startOffset":6614,"endOffset":6962,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":6963,"endOffset":7111,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":7259,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":7406,"endOffset":7505,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":7506,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"enumInitializedMember","ranges":[{"startOffset":7614,"endOffset":7799,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":7800,"endOffset":7873,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":7874,"endOffset":7946,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":7947,"endOffset":8019,"count":0}],"isBlockCoverage":false},{"functionName":"FlowExportDeclaration","ranges":[{"startOffset":8020,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":8527,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":8585,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":9483,"endOffset":9685,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":9686,"endOffset":9785,"count":0}],"isBlockCoverage":false},{"functionName":"_interfaceish","ranges":[{"startOffset":9786,"endOffset":10570,"count":0}],"isBlockCoverage":false},{"functionName":"_variance","ranges":[{"startOffset":10571,"endOffset":10855,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":10856,"endOffset":10965,"count":0}],"isBlockCoverage":false},{"functionName":"andSeparator","ranges":[{"startOffset":10966,"endOffset":11083,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":11084,"endOffset":11389,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":11390,"endOffset":11501,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":11502,"endOffset":11558,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":11559,"endOffset":11615,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":11616,"endOffset":11714,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":11715,"endOffset":11773,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":11774,"endOffset":11832,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":11833,"endOffset":11887,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":11888,"endOffset":12000,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":12001,"endOffset":12108,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":12109,"endOffset":12332,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":12333,"endOffset":12622,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":12623,"endOffset":12743,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":12744,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":12993,"endOffset":13396,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":13397,"endOffset":14211,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":14212,"endOffset":14567,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":14568,"endOffset":14703,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":14704,"endOffset":15052,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":15053,"endOffset":15507,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":15508,"endOffset":15601,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":15602,"endOffset":15723,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":15724,"endOffset":15782,"count":0}],"isBlockCoverage":false},{"functionName":"orSeparator","ranges":[{"startOffset":15783,"endOffset":15899,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":15900,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":16004,"endOffset":16151,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":16152,"endOffset":16272,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":16273,"endOffset":16327,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedAccessType","ranges":[{"startOffset":16328,"endOffset":16475,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalIndexedAccessType","ranges":[{"startOffset":16476,"endOffset":16674,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2660,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":333,"endOffset":452,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":453,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"BlockStatement","ranges":[{"startOffset":1039,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":1670,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":1857,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":2363,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":2461,"endOffset":2625,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3030,"count":1}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":737,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":870,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":927,"endOffset":1040,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":1041,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":1158,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":1294,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":1415,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":1549,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":1720,"endOffset":1972,"count":0}],"isBlockCoverage":false},{"functionName":"spaceSeparator","ranges":[{"startOffset":1973,"endOffset":2018,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":2019,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":2449,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":2577,"endOffset":2639,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":2640,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":2843,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":2921,"endOffset":2996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18420,"count":1}],"isBlockCoverage":true},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":3454,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":3726,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":4274,"endOffset":4760,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":4761,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":4988,"endOffset":5158,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":5159,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":5245,"endOffset":5352,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":5353,"endOffset":5494,"count":0}],"isBlockCoverage":false},{"functionName":"maybePrintTrailingCommaOrSemicolon","ranges":[{"startOffset":5495,"endOffset":5809,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":5810,"endOffset":5992,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":5993,"endOffset":6260,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintPropertyOrMethodName","ranges":[{"startOffset":6261,"endOffset":6484,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":6485,"endOffset":6775,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":6776,"endOffset":7149,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":7150,"endOffset":7197,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":7198,"endOffset":7251,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":7252,"endOffset":7307,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":7308,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":7362,"endOffset":7415,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":7416,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":7472,"endOffset":7525,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":7526,"endOffset":7579,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":7580,"endOffset":7629,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":7630,"endOffset":7689,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":7690,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":7740,"endOffset":7791,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntrinsicKeyword","ranges":[{"startOffset":7792,"endOffset":7851,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":7852,"endOffset":7898,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":7899,"endOffset":7979,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":7980,"endOffset":8171,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintFunctionOrConstructorType","ranges":[{"startOffset":8172,"endOffset":8475,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":8476,"endOffset":8630,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":8631,"endOffset":8911,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":8912,"endOffset":9113,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":9114,"endOffset":9221,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":9222,"endOffset":9334,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":9335,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":9483,"endOffset":9573,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":9574,"endOffset":9659,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamedTupleMember","ranges":[{"startOffset":9660,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":9835,"endOffset":9916,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":9917,"endOffset":10005,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintUnionOrIntersectionType","ranges":[{"startOffset":10006,"endOffset":10434,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":10435,"endOffset":10756,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":10757,"endOffset":10843,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":10844,"endOffset":10961,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":10962,"endOffset":11074,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":11075,"endOffset":11224,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":11225,"endOffset":12059,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIfPlusMinus","ranges":[{"startOffset":12060,"endOffset":12147,"count":0}],"isBlockCoverage":false},{"functionName":"TSTemplateLiteralType","ranges":[{"startOffset":12148,"endOffset":12229,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":12230,"endOffset":12290,"count":0}],"isBlockCoverage":false},{"functionName":"TSClassImplements","ranges":[{"startOffset":12291,"endOffset":12392,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":12393,"endOffset":12857,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":12858,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":12965,"endOffset":13342,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeExpression","ranges":[{"startOffset":13343,"endOffset":13600,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":13601,"endOffset":13808,"count":0}],"isBlockCoverage":false},{"functionName":"TSInstantiationExpression","ranges":[{"startOffset":13809,"endOffset":13929,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":13930,"endOffset":14268,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumBody","ranges":[{"startOffset":14269,"endOffset":14523,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":14524,"endOffset":14733,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":14734,"endOffset":15322,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":15323,"endOffset":15425,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":15426,"endOffset":15858,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":15859,"endOffset":16185,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":16186,"endOffset":16309,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":16310,"endOffset":16401,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":16402,"endOffset":16567,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":16568,"endOffset":16774,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintSignatureDeclarationBase","ranges":[{"startOffset":16775,"endOffset":17061,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintClassMemberModifiers","ranges":[{"startOffset":17062,"endOffset":17652,"count":0}],"isBlockCoverage":false},{"functionName":"printBraced","ranges":[{"startOffset":17653,"endOffset":17805,"count":0}],"isBlockCoverage":false},{"functionName":"printModifiersList","ranges":[{"startOffset":17806,"endOffset":18379,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/deprecated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":738,"count":1}],"isBlockCoverage":true},{"functionName":"addDeprecatedGenerators","ranges":[{"startOffset":139,"endOffset":697,"count":1}],"isBlockCoverage":true},{"functionName":"Noop","ranges":[{"startOffset":239,"endOffset":248,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":256,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"DecimalLiteral","ranges":[{"startOffset":387,"endOffset":613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5875,"count":1},{"startOffset":5759,"endOffset":5838,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":185,"endOffset":228,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":317,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":461,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":605,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":753,"endOffset":811,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":886,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1015,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1149,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1287,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1426,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1572,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1722,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1855,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1976,"endOffset":2023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2101,"endOffset":2147,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2285,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2416,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2542,"endOffset":2592,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2675,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2812,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2957,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3106,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3253,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3403,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3557,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3703,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3839,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"_types","ranges":[{"startOffset":4178,"endOffset":4301,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4249,"endOffset":4283,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4376,"endOffset":4414,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4419,"endOffset":4545,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":4546,"endOffset":4678,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":4679,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePlugin","ranges":[{"startOffset":5108,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePreset","ranges":[{"startOffset":5244,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5531,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"Plugin","ranges":[{"startOffset":5623,"endOffset":5753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6074,"count":1},{"startOffset":6034,"endOffset":6038,"count":0}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":106,"endOffset":233,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":234,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"_codeFrame","ranges":[{"startOffset":367,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":504,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":567,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"_semver","ranges":[{"startOffset":620,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":874,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":1011,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"get shebang","ranges":[{"startOffset":1820,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"set shebang","ranges":[{"startOffset":1945,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2130,"endOffset":2609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2612,"endOffset":2657,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2660,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":2708,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":3242,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"_addHelper","ranges":[{"startOffset":3405,"endOffset":4446,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":4449,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":5424,"endOffset":5714,"count":0}],"isBlockCoverage":false},{"functionName":"addTemplateObject","ranges":[{"startOffset":5753,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":5925,"endOffset":6024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/babel-7-helpers.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":148,"count":1},{"startOffset":96,"endOffset":100,"count":0}],"isBlockCoverage":true},{"functionName":"exports.getModuleName","ranges":[{"startOffset":28,"endOffset":90,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/tools/build-external-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4558,"count":1},{"startOffset":4500,"endOffset":4504,"count":0}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":108,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":236,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":372,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":505,"endOffset":620,"count":1}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":568,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmdWrapper","ranges":[{"startOffset":1035,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"buildGlobal","ranges":[{"startOffset":1447,"endOffset":2117,"count":0}],"isBlockCoverage":false},{"functionName":"buildModule","ranges":[{"startOffset":2118,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmd","ranges":[{"startOffset":2416,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"buildVar","ranges":[{"startOffset":3033,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"buildHelpers","ranges":[{"startOffset":3363,"endOffset":4139,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4140,"endOffset":4497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1},{"startOffset":1768,"endOffset":1772,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":317,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":463,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":604,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":750,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":888,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1022,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1150,"endOffset":1199,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1281,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1415,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1557,"endOffset":1623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/package.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1624,"count":1},{"startOffset":1581,"endOffset":1585,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":123,"endOffset":236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":432,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageData","ranges":[{"startOffset":1037,"endOffset":1578,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1},{"startOffset":854,"endOffset":858,"count":0}],"isBlockCoverage":true},{"functionName":"_fs2","ranges":[{"startOffset":219,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"makeStaticFileCache","ranges":[{"startOffset":329,"endOffset":619,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"fileMtime","ranges":[{"startOffset":620,"endOffset":851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/caching.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7290,"count":1},{"startOffset":7247,"endOffset":7251,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":305,"endOffset":427,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":375,"endOffset":409,"count":14}],"isBlockCoverage":true},{"functionName":"synchronize","ranges":[{"startOffset":533,"endOffset":574,"count":15}],"isBlockCoverage":true},{"functionName":"genTrue","ranges":[{"startOffset":576,"endOffset":614,"count":0}],"isBlockCoverage":false},{"functionName":"makeWeakCache","ranges":[{"startOffset":615,"endOffset":697,"count":19}],"isBlockCoverage":true},{"functionName":"makeWeakCacheSync","ranges":[{"startOffset":698,"endOffset":783,"count":15}],"isBlockCoverage":true},{"functionName":"makeStrongCache","ranges":[{"startOffset":784,"endOffset":864,"count":3}],"isBlockCoverage":true},{"functionName":"makeStrongCacheSync","ranges":[{"startOffset":865,"endOffset":954,"count":0}],"isBlockCoverage":false},{"functionName":"makeCachedFunction","ranges":[{"startOffset":955,"endOffset":1984,"count":22}],"isBlockCoverage":true},{"functionName":"cachedFunction","ranges":[{"startOffset":1136,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedValue","ranges":[{"startOffset":1985,"endOffset":2299,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedValueOrWait","ranges":[{"startOffset":2300,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"setupAsyncLocks","ranges":[{"startOffset":2792,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionCache","ranges":[{"startOffset":2962,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"CacheConfigurator","ranges":[{"startOffset":3763,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"simple","ranges":[{"startOffset":3996,"endOffset":4051,"count":0}],"isBlockCoverage":false},{"functionName":"mode","ranges":[{"startOffset":4054,"endOffset":4211,"count":0}],"isBlockCoverage":false},{"functionName":"forever","ranges":[{"startOffset":4214,"endOffset":4500,"count":0}],"isBlockCoverage":false},{"functionName":"never","ranges":[{"startOffset":4503,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"using","ranges":[{"startOffset":4792,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"invalidate","ranges":[{"startOffset":5456,"endOffset":5542,"count":0}],"isBlockCoverage":false},{"functionName":"validator","ranges":[{"startOffset":5545,"endOffset":5749,"count":0}],"isBlockCoverage":false},{"functionName":"deactivate","ranges":[{"startOffset":5752,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"configured","ranges":[{"startOffset":5799,"endOffset":5846,"count":0}],"isBlockCoverage":false},{"functionName":"makeSimpleConfigurator","ranges":[{"startOffset":5849,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"assertSimpleType","ranges":[{"startOffset":6328,"endOffset":6967,"count":0}],"isBlockCoverage":false},{"functionName":"Lock","ranges":[{"startOffset":6983,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7170,"endOffset":7242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2594,"count":1},{"startOffset":2553,"endOffset":2557,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":258,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":328,"endOffset":362,"count":4}],"isBlockCoverage":true},{"functionName":"asyncGeneratorStep","ranges":[{"startOffset":381,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"_asyncToGenerator","ranges":[{"startOffset":551,"endOffset":872,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":905,"endOffset":947,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1005,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"errback","ranges":[{"startOffset":1029,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsync","ranges":[{"startOffset":1054,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1383,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1592,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1457,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1519,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"forwardAsync","ranges":[{"startOffset":1599,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1857,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"errback","ranges":[{"startOffset":1927,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2202,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2219,"endOffset":2393,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2267,"endOffset":2304,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":2318,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"isThenable","ranges":[{"startOffset":2400,"endOffset":2550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/gensync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9627,"count":1}],"isBlockCoverage":true},{"functionName":"gensync","ranges":[{"startOffset":589,"endOffset":843,"count":30},{"startOffset":684,"endOffset":729,"count":6},{"startOffset":729,"endOffset":781,"count":24}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":922,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1058,"endOffset":1615,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1700,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1945,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionAPI","ranges":[{"startOffset":2391,"endOffset":3159,"count":30}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":2451,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":2541,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"errback","ranges":[{"startOffset":2704,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeof","ranges":[{"startOffset":3161,"endOffset":3556,"count":30},{"startOffset":3253,"endOffset":3308,"count":16},{"startOffset":3330,"endOffset":3555,"count":0}],"isBlockCoverage":true},{"functionName":"makeError","ranges":[{"startOffset":3557,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"newGenerator","ranges":[{"startOffset":3774,"endOffset":5308,"count":6},{"startOffset":4173,"endOffset":4183,"count":2},{"startOffset":4185,"endOffset":4322,"count":0},{"startOffset":4356,"endOffset":4761,"count":5},{"startOffset":4390,"endOffset":4405,"count":3},{"startOffset":4406,"endOffset":4435,"count":3},{"startOffset":4437,"endOffset":4473,"count":2},{"startOffset":4488,"endOffset":4501,"count":2},{"startOffset":4502,"endOffset":4527,"count":2},{"startOffset":4529,"endOffset":4585,"count":0},{"startOffset":4637,"endOffset":4691,"count":2},{"startOffset":4729,"endOffset":4757,"count":2},{"startOffset":4796,"endOffset":4826,"count":5}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":4885,"endOffset":4944,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":4957,"endOffset":5299,"count":0}],"isBlockCoverage":false},{"functionName":"wrapGenerator","ranges":[{"startOffset":5310,"endOffset":5460,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5397,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"buildOperation","ranges":[{"startOffset":5462,"endOffset":6390,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5560,"endOffset":6386,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateSync","ranges":[{"startOffset":6392,"endOffset":6527,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateAsync","ranges":[{"startOffset":6529,"endOffset":7460,"count":0}],"isBlockCoverage":false},{"functionName":"assertStart","ranges":[{"startOffset":7462,"endOffset":7775,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuspend","ranges":[{"startOffset":7776,"endOffset":8198,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":8200,"endOffset":8548,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":8550,"endOffset":8705,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionMetadata","ranges":[{"startOffset":8707,"endOffset":9626,"count":32},{"startOffset":8787,"endOffset":9269,"count":29},{"startOffset":9178,"endOffset":9183,"count":0},{"startOffset":9518,"endOffset":9523,"count":0}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":927,"count":1},{"startOffset":887,"endOffset":891,"count":0}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":166,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDefaultFields","ranges":[{"startOffset":580,"endOffset":743,"count":0}],"isBlockCoverage":false},{"functionName":"isIterableIterator","ranges":[{"startOffset":744,"endOffset":884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":591,"count":1},{"startOffset":553,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":122,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":177,"endOffset":211,"count":3}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":230,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":300,"endOffset":334,"count":1}],"isBlockCoverage":true}]},{"scriptId":"430","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/errors/config-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1},{"startOffset":428,"endOffset":432,"count":0}],"isBlockCoverage":true},{"functionName":"ConfigError","ranges":[{"startOffset":204,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3221,"count":1},{"startOffset":515,"endOffset":523,"count":0},{"startOffset":3166,"endOffset":3170,"count":0}],"isBlockCoverage":true},{"functionName":"CallSite","ranges":[{"startOffset":775,"endOffset":1168,"count":0}],"isBlockCoverage":false},{"functionName":"injectVirtualStackFrame","ranges":[{"startOffset":1169,"endOffset":1394,"count":0}],"isBlockCoverage":false},{"functionName":"expectedError","ranges":[{"startOffset":1395,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"beginHiddenCallStack","ranges":[{"startOffset":1500,"endOffset":1716,"count":0}],"isBlockCoverage":false},{"functionName":"endHiddenCallStack","ranges":[{"startOffset":1717,"endOffset":1902,"count":1},{"startOffset":1769,"endOffset":1779,"count":0}],"isBlockCoverage":true},{"functionName":"Object.defineProperty.value","ranges":[{"startOffset":1811,"endOffset":1859,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":1903,"endOffset":2991,"count":0}],"isBlockCoverage":false},{"functionName":"defaultPrepareStackTrace","ranges":[{"startOffset":2992,"endOffset":3163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10843,"count":1},{"startOffset":10794,"endOffset":10798,"count":0}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":345,"endOffset":461,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":409,"endOffset":443,"count":0}],"isBlockCoverage":false},{"functionName":"_fs","ranges":[{"startOffset":462,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":570,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"_json","ranges":[{"startOffset":684,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"_gensync","ranges":[{"startOffset":799,"endOffset":921,"count":0}],"isBlockCoverage":false},{"functionName":"runConfig","ranges":[{"startOffset":1863,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigCode","ranges":[{"startOffset":2087,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"buildConfigFileObject","ranges":[{"startOffset":3593,"endOffset":4046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4108,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4514,"endOffset":5159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5219,"endOffset":5735,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigUpwards","ranges":[{"startOffset":5738,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"findRelativeConfig","ranges":[{"startOffset":6093,"endOffset":6860,"count":0}],"isBlockCoverage":false},{"functionName":"findRootConfig","ranges":[{"startOffset":6861,"endOffset":6987,"count":0}],"isBlockCoverage":false},{"functionName":"loadOneConfig","ranges":[{"startOffset":6988,"endOffset":7669,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfig","ranges":[{"startOffset":7670,"endOffset":8407,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":8408,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShowConfigPath","ranges":[{"startOffset":8756,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"throwConfigError","ranges":[{"startOffset":9199,"endOffset":10791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/config-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1},{"startOffset":2734,"endOffset":2738,"count":0}],"isBlockCoverage":true},{"functionName":"_semver","ranges":[{"startOffset":197,"endOffset":316,"count":0}],"isBlockCoverage":false},{"functionName":"makeConfigAPI","ranges":[{"startOffset":398,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"makePresetAPI","ranges":[{"startOffset":1088,"endOffset":1408,"count":0}],"isBlockCoverage":false},{"functionName":"makePluginAPI","ranges":[{"startOffset":1409,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"assertVersion","ranges":[{"startOffset":1633,"endOffset":2731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/module-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6995,"count":1},{"startOffset":1486,"endOffset":1504,"count":0},{"startOffset":6947,"endOffset":6951,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":199,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":313,"endOffset":423,"count":0}],"isBlockCoverage":false},{"functionName":"_semver","ranges":[{"startOffset":443,"endOffset":562,"count":1}],"isBlockCoverage":true},{"functionName":"_semver","ranges":[{"startOffset":510,"endOffset":544,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":563,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":627,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorStep","ranges":[{"startOffset":870,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"_asyncToGenerator","ranges":[{"startOffset":1040,"endOffset":1361,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1079,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsDefault","ranges":[{"startOffset":1650,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2717,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2289,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"loadMjsFromPath","ranges":[{"startOffset":2603,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"loadCodeDefault","ranges":[{"startOffset":2895,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTsSupport","ranges":[{"startOffset":4619,"endOffset":6270,"count":0}],"isBlockCoverage":false},{"functionName":"getTSPreset","ranges":[{"startOffset":6271,"endOffset":6944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1},{"startOffset":1056,"endOffset":1060,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":215,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":285,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":521,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"transformFile","ranges":[{"startOffset":808,"endOffset":883,"count":0}],"isBlockCoverage":false},{"functionName":"transformFileSync","ranges":[{"startOffset":884,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"transformFileAsync","ranges":[{"startOffset":968,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3381,"count":1},{"startOffset":3340,"endOffset":3344,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":304,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"_gensync","ranges":[{"startOffset":634,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":704,"endOffset":738,"count":2}],"isBlockCoverage":true},{"functionName":"loadPartialConfigAsync","ranges":[{"startOffset":1007,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"loadPartialConfigSync","ranges":[{"startOffset":1147,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"loadPartialConfig","ranges":[{"startOffset":1285,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"loadOptionsImpl","ranges":[{"startOffset":1675,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"loadOptionsAsync","ranges":[{"startOffset":1943,"endOffset":2070,"count":0}],"isBlockCoverage":false},{"functionName":"loadOptionsSync","ranges":[{"startOffset":2071,"endOffset":2196,"count":0}],"isBlockCoverage":false},{"functionName":"loadOptions","ranges":[{"startOffset":2197,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigItemAsync","ranges":[{"startOffset":2630,"endOffset":2767,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigItemSync","ranges":[{"startOffset":2768,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigItem","ranges":[{"startOffset":2904,"endOffset":3337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/full.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11242,"count":1},{"startOffset":11202,"endOffset":11206,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":106,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":176,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":526,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"loadFullConfig","ranges":[{"startOffset":995,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceError","ranges":[{"startOffset":4832,"endOffset":5208,"count":0}],"isBlockCoverage":false},{"functionName":"makeDescriptorLoader","ranges":[{"startOffset":5238,"endOffset":7352,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5280,"endOffset":7351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7566,"endOffset":8933,"count":0}],"isBlockCoverage":false},{"functionName":"loadPluginDescriptor","ranges":[{"startOffset":8936,"endOffset":9296,"count":0}],"isBlockCoverage":false},{"functionName":"needsFilename","ranges":[{"startOffset":9319,"endOffset":9358,"count":0}],"isBlockCoverage":false},{"functionName":"validateIfOptionNeedsFilename","ranges":[{"startOffset":9398,"endOffset":9957,"count":0}],"isBlockCoverage":false},{"functionName":"validatePreset","ranges":[{"startOffset":9982,"endOffset":10338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10398,"endOffset":10581,"count":0}],"isBlockCoverage":false},{"functionName":"loadPresetDescriptor","ranges":[{"startOffset":10584,"endOffset":10915,"count":0}],"isBlockCoverage":false},{"functionName":"chainMaybeAsync","ranges":[{"startOffset":10916,"endOffset":11199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":986,"count":1},{"startOffset":944,"endOffset":948,"count":0}],"isBlockCoverage":true},{"functionName":"Plugin","ranges":[{"startOffset":176,"endOffset":913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/deep-array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1},{"startOffset":451,"endOffset":455,"count":0}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":146,"endOffset":209,"count":0}],"isBlockCoverage":false},{"functionName":"flattenToSet","ranges":[{"startOffset":210,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1836,"count":1},{"startOffset":1796,"endOffset":1800,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":233,"endOffset":346,"count":0}],"isBlockCoverage":false},{"functionName":"createItemFromDescriptor","ranges":[{"startOffset":408,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigItem","ranges":[{"startOffset":483,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"getItemDescriptor","ranges":[{"startOffset":821,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigItem","ranges":[{"startOffset":981,"endOffset":1754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/config-descriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6856,"count":1},{"startOffset":6802,"endOffset":6806,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":247,"endOffset":369,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualDescriptor","ranges":[{"startOffset":602,"endOffset":1081,"count":0}],"isBlockCoverage":false},{"functionName":"handlerOf","ranges":[{"startOffset":1082,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"optionsWithResolvedBrowserslistConfigFile","ranges":[{"startOffset":1129,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDescriptors","ranges":[{"startOffset":1414,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"createUncachedDescriptors","ranges":[{"startOffset":1865,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2372,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2856,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"loadCachedDescriptor","ranges":[{"startOffset":3184,"endOffset":3870,"count":0}],"isBlockCoverage":false},{"functionName":"createPresetDescriptors","ranges":[{"startOffset":3871,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginDescriptors","ranges":[{"startOffset":4030,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"createDescriptors","ranges":[{"startOffset":4159,"endOffset":4463,"count":0}],"isBlockCoverage":false},{"functionName":"createDescriptor","ranges":[{"startOffset":4464,"endOffset":6043,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoDuplicates","ranges":[{"startOffset":6044,"endOffset":6799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/functional.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1300,"count":1},{"startOffset":1254,"endOffset":1258,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":137,"endOffset":1251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/resolve-targets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1577,"count":1},{"startOffset":1526,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":192,"endOffset":305,"count":0}],"isBlockCoverage":false},{"functionName":"_helperCompilationTargets","ranges":[{"startOffset":306,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBrowserslistConfigFile","ranges":[{"startOffset":495,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTargets","ranges":[{"startOffset":642,"endOffset":1523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/config-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18620,"count":1},{"startOffset":18572,"endOffset":18576,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":207,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":321,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":385,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"buildPresetChain","ranges":[{"startOffset":908,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":1318,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":1366,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":1443,"endOffset":1507,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":1525,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":1628,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1709,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1875,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2101,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2331,"endOffset":2542,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootChain","ranges":[{"startOffset":2545,"endOffset":6005,"count":0}],"isBlockCoverage":false},{"functionName":"babelrcLoadEnabled","ranges":[{"startOffset":6006,"endOffset":6979,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7039,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7244,"endOffset":7387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7449,"endOffset":7592,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":7651,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":7748,"endOffset":7855,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":7870,"endOffset":7978,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":7996,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":8143,"endOffset":8226,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":8285,"endOffset":8318,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":8327,"endOffset":8383,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":8398,"endOffset":8456,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":8474,"endOffset":8553,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":8571,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"loadFileChain","ranges":[{"startOffset":8658,"endOffset":8867,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8928,"endOffset":9023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9089,"endOffset":9238,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9310,"endOffset":9460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9535,"endOffset":9743,"count":0}],"isBlockCoverage":false},{"functionName":"buildFileLogger","ranges":[{"startOffset":9746,"endOffset":9954,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootDescriptors","ranges":[{"startOffset":9955,"endOffset":10081,"count":0}],"isBlockCoverage":false},{"functionName":"buildProgrammaticLogger","ranges":[{"startOffset":10082,"endOffset":10398,"count":0}],"isBlockCoverage":false},{"functionName":"buildEnvDescriptors","ranges":[{"startOffset":10399,"endOffset":10673,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverrideDescriptors","ranges":[{"startOffset":10674,"endOffset":11031,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverrideEnvDescriptors","ranges":[{"startOffset":11032,"endOffset":11548,"count":0}],"isBlockCoverage":false},{"functionName":"makeChainWalker","ranges":[{"startOffset":11549,"endOffset":13629,"count":3}],"isBlockCoverage":true},{"functionName":"chainWalker","ranges":[{"startOffset":11649,"endOffset":13626,"count":0}],"isBlockCoverage":false},{"functionName":"mergeExtendsChain","ranges":[{"startOffset":13630,"endOffset":14302,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChain","ranges":[{"startOffset":14303,"endOffset":14554,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChainOpts","ranges":[{"startOffset":14555,"endOffset":14769,"count":0}],"isBlockCoverage":false},{"functionName":"emptyChain","ranges":[{"startOffset":14770,"endOffset":14883,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":14884,"endOffset":15392,"count":0}],"isBlockCoverage":false},{"functionName":"dedupDescriptors","ranges":[{"startOffset":15393,"endOffset":16138,"count":0}],"isBlockCoverage":false},{"functionName":"configIsApplicable","ranges":[{"startOffset":16139,"endOffset":16544,"count":0}],"isBlockCoverage":false},{"functionName":"configFieldIsApplicable","ranges":[{"startOffset":16545,"endOffset":16739,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreListReplacer","ranges":[{"startOffset":16740,"endOffset":16863,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":16864,"endOffset":17796,"count":0}],"isBlockCoverage":false},{"functionName":"matchesPatterns","ranges":[{"startOffset":17797,"endOffset":17971,"count":0}],"isBlockCoverage":false},{"functionName":"matchPattern","ranges":[{"startOffset":17972,"endOffset":18569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8033,"count":1},{"startOffset":7990,"endOffset":7994,"count":0}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":3560,"endOffset":3654,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3655,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"validateNested","ranges":[{"startOffset":3961,"endOffset":5225,"count":0}],"isBlockCoverage":false},{"functionName":"throwUnknownError","ranges":[{"startOffset":5226,"endOffset":5777,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoDuplicateSourcemap","ranges":[{"startOffset":5778,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnvSet","ranges":[{"startOffset":5999,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"assertOverridesList","ranges":[{"startOffset":6620,"endOffset":7482,"count":0}],"isBlockCoverage":false},{"functionName":"checkNoUnwrappedItemOptionPairs","ranges":[{"startOffset":7483,"endOffset":7987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/removed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2410,"count":1},{"startOffset":2367,"endOffset":2371,"count":0}],"isBlockCoverage":true}]},{"scriptId":"447","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/option-assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9973,"count":1},{"startOffset":9920,"endOffset":9924,"count":0}],"isBlockCoverage":true},{"functionName":"_helperCompilationTargets","ranges":[{"startOffset":938,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"msg","ranges":[{"startOffset":1161,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":1626,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"assertRootMode","ranges":[{"startOffset":1719,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceMaps","ranges":[{"startOffset":1976,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompact","ranges":[{"startOffset":2225,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceType","ranges":[{"startOffset":2439,"endOffset":2692,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallerMetadata","ranges":[{"startOffset":2693,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"assertInputSourceMap","ranges":[{"startOffset":3291,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":3533,"endOffset":3715,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":3716,"endOffset":3904,"count":0}],"isBlockCoverage":false},{"functionName":"assertBoolean","ranges":[{"startOffset":3905,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"assertObject","ranges":[{"startOffset":4091,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"assertArray","ranges":[{"startOffset":4311,"endOffset":4482,"count":0}],"isBlockCoverage":false},{"functionName":"assertIgnoreList","ranges":[{"startOffset":4483,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"assertIgnoreItem","ranges":[{"startOffset":4661,"endOffset":4918,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigApplicableTest","ranges":[{"startOffset":4919,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"checkValidTest","ranges":[{"startOffset":5371,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigFileSearch","ranges":[{"startOffset":5500,"endOffset":5767,"count":0}],"isBlockCoverage":false},{"functionName":"assertBabelrcSearch","ranges":[{"startOffset":5768,"endOffset":6300,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginList","ranges":[{"startOffset":6301,"endOffset":6482,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginItem","ranges":[{"startOffset":6483,"endOffset":7375,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginTarget","ranges":[{"startOffset":7376,"endOffset":7617,"count":0}],"isBlockCoverage":false},{"functionName":"assertTargets","ranges":[{"startOffset":7618,"endOffset":8656,"count":0}],"isBlockCoverage":false},{"functionName":"assertBrowsersList","ranges":[{"startOffset":8657,"endOffset":8885,"count":0}],"isBlockCoverage":false},{"functionName":"assertBrowserVersion","ranges":[{"startOffset":8886,"endOffset":9116,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssumptions","ranges":[{"startOffset":9117,"endOffset":9917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/pattern-to-regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1189,"count":1},{"startOffset":1137,"endOffset":1141,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":113,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":174,"endOffset":208,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExp","ranges":[{"startOffset":513,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"pathToPattern","ranges":[{"startOffset":603,"endOffset":1134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2894,"count":1},{"startOffset":2851,"endOffset":2855,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":137,"endOffset":259,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":366,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"loc","ranges":[{"startOffset":660,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAndDescriptors","ranges":[{"startOffset":859,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"descriptorToConfig","ranges":[{"startOffset":1409,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigPrinter","ranges":[{"startOffset":1974,"endOffset":2015,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":2018,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2313,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":2624,"endOffset":2807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"451","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":136}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":5},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":5},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6912,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":5},{"startOffset":1108,"endOffset":1213,"count":158}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":5}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4433,"count":1},{"startOffset":4196,"endOffset":4208,"count":0},{"startOffset":4311,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4626,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5739,"endOffset":5930,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6073,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6416,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6644,"endOffset":6820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2088,"count":1},{"startOffset":2045,"endOffset":2049,"count":0}],"isBlockCoverage":true},{"functionName":"assertVisitorMap","ranges":[{"startOffset":575,"endOffset":1055,"count":0}],"isBlockCoverage":false},{"functionName":"assertVisitorHandler","ranges":[{"startOffset":1056,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"validatePluginObject","ranges":[{"startOffset":1462,"endOffset":2042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5400,"count":1},{"startOffset":5357,"endOffset":5361,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":171,"endOffset":284,"count":0}],"isBlockCoverage":false},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":684,"endOffset":883,"count":0}],"isBlockCoverage":false},{"functionName":"resolveRootMode","ranges":[{"startOffset":884,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"loadPrivatePartialConfig","ranges":[{"startOffset":1780,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"loadPartialConfig","ranges":[{"startOffset":3810,"endOffset":4749,"count":0}],"isBlockCoverage":false},{"functionName":"PartialConfig","ranges":[{"startOffset":4774,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"hasFilesystemConfig","ranges":[{"startOffset":5217,"endOffset":5312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1},{"startOffset":229,"endOffset":233,"count":0}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":105,"endOffset":226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3078,"count":1},{"startOffset":3037,"endOffset":3041,"count":0}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":99,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":604,"endOffset":1828,"count":0}],"isBlockCoverage":false},{"functionName":"transformFile","ranges":[{"startOffset":1829,"endOffset":3034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/plugin-pass.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1176,"count":1},{"startOffset":1129,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"PluginPass","ranges":[{"startOffset":127,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":523,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":574,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":622,"endOffset":721,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":724,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":786,"endOffset":891,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":965,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":1070,"endOffset":1123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1928,"count":1},{"startOffset":1874,"endOffset":1878,"count":0}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":120,"endOffset":252,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":408,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":526,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"performHoisting","ranges":[{"startOffset":638,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"loadBlockHoistPlugin","ranges":[{"startOffset":968,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":1216,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"stableSort","ranges":[{"startOffset":1405,"endOffset":1871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/normalize-opts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1590,"count":1},{"startOffset":1540,"endOffset":1544,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":116,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":230,"endOffset":1537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/normalize-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3653,"count":1},{"startOffset":3603,"endOffset":3607,"count":0}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":113,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":221,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":335,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":399,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":452,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_t","ranges":[{"startOffset":515,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_convertSourceMap","ranges":[{"startOffset":568,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFile","ranges":[{"startOffset":1148,"endOffset":2852,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommentsFromList","ranges":[{"startOffset":2853,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"extractComments","ranges":[{"startOffset":3151,"endOffset":3600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2298,"count":1},{"startOffset":2257,"endOffset":2261,"count":0}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":106,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"_codeFrame","ranges":[{"startOffset":233,"endOffset":369,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":441,"endOffset":2254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13031,"count":1},{"startOffset":12974,"endOffset":12978,"count":0}],"isBlockCoverage":true},{"functionName":"getNameURLCombination","ranges":[{"startOffset":11311,"endOffset":11352,"count":0}],"isBlockCoverage":false},{"functionName":"generateMissingPluginMessage","ranges":[{"startOffset":11354,"endOffset":12971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/util/clone-deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1621,"count":1},{"startOffset":1575,"endOffset":1579,"count":0}],"isBlockCoverage":true},{"functionName":"deepClone","ranges":[{"startOffset":152,"endOffset":1369,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":1370,"endOffset":1572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/generate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2260,"count":1},{"startOffset":2216,"endOffset":2220,"count":0}],"isBlockCoverage":true},{"functionName":"_convertSourceMap","ranges":[{"startOffset":112,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":264,"endOffset":399,"count":0}],"isBlockCoverage":false},{"functionName":"generateCode","ranges":[{"startOffset":443,"endOffset":2213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/merge-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":855,"count":1},{"startOffset":810,"endOffset":814,"count":0}],"isBlockCoverage":true},{"functionName":"_remapping","ranges":[{"startOffset":114,"endOffset":254,"count":0}],"isBlockCoverage":false},{"functionName":"mergeSourceMap","ranges":[{"startOffset":255,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"rootless","ranges":[{"startOffset":720,"endOffset":807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/import.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1},{"startOffset":78,"endOffset":82,"count":0}],"isBlockCoverage":true},{"functionName":"import_","ranges":[{"startOffset":17,"endOffset":74,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44287,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":9553,"endOffset":10132,"count":38},{"startOffset":9588,"endOffset":10130,"count":34}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":82}],"isBlockCoverage":true},{"functionName":"tok","ranges":[{"startOffset":956,"endOffset":989,"count":38}],"isBlockCoverage":true},{"functionName":"makeSafeRe","ranges":[{"startOffset":1582,"endOffset":1911,"count":38},{"startOffset":1669,"endOffset":1894,"count":114}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":10156,"endOffset":10690,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":10714,"endOffset":10815,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":10839,"endOffset":10969,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":10996,"endOffset":12700,"count":10},{"startOffset":11048,"endOffset":11078,"count":7},{"startOffset":11080,"endOffset":11162,"count":3},{"startOffset":11196,"endOffset":11316,"count":6},{"startOffset":11267,"endOffset":11312,"count":0},{"startOffset":11316,"endOffset":11415,"count":4},{"startOffset":11355,"endOffset":11415,"count":0},{"startOffset":11415,"endOffset":11452,"count":4},{"startOffset":11452,"endOffset":11537,"count":0},{"startOffset":11537,"endOffset":11572,"count":4},{"startOffset":11572,"endOffset":11617,"count":0},{"startOffset":11617,"endOffset":11757,"count":4},{"startOffset":11757,"endOffset":11774,"count":0},{"startOffset":11775,"endOffset":11791,"count":4},{"startOffset":11804,"endOffset":11864,"count":0},{"startOffset":11864,"endOffset":12037,"count":4},{"startOffset":12039,"endOffset":12093,"count":0},{"startOffset":12093,"endOffset":12148,"count":4},{"startOffset":12150,"endOffset":12204,"count":0},{"startOffset":12204,"endOffset":12259,"count":4},{"startOffset":12261,"endOffset":12315,"count":0},{"startOffset":12315,"endOffset":12402,"count":4},{"startOffset":12402,"endOffset":12638,"count":0},{"startOffset":12638,"endOffset":12660,"count":4},{"startOffset":12660,"endOffset":12677,"count":0},{"startOffset":12678,"endOffset":12682,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12452,"endOffset":12633,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":12728,"endOffset":12919,"count":4},{"startOffset":12838,"endOffset":12895,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.toString","ranges":[{"startOffset":12949,"endOffset":12986,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":13015,"endOffset":13240,"count":3},{"startOffset":13129,"endOffset":13178,"count":0},{"startOffset":13213,"endOffset":13238,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":13273,"endOffset":13543,"count":3},{"startOffset":13326,"endOffset":13375,"count":0},{"startOffset":13430,"endOffset":13485,"count":0},{"startOffset":13486,"endOffset":13541,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":13575,"endOffset":14362,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareBuild","ranges":[{"startOffset":14396,"endOffset":14888,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":15058,"endOffset":18119,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":18139,"endOffset":18396,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":18418,"endOffset":18946,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":19022,"endOffset":19267,"count":3},{"startOffset":19184,"endOffset":19187,"count":0},{"startOffset":19210,"endOffset":19214,"count":0},{"startOffset":19237,"endOffset":19240,"count":0},{"startOffset":19253,"endOffset":19257,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":19319,"endOffset":19392,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":19416,"endOffset":19481,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":19505,"endOffset":19570,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":19594,"endOffset":19659,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":19687,"endOffset":19781,"count":3}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":19819,"endOffset":19880,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":19918,"endOffset":20104,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":20134,"endOffset":20199,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":20221,"endOffset":20339,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":20363,"endOffset":20482,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":20500,"endOffset":20563,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":20581,"endOffset":20644,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":20662,"endOffset":20727,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":20747,"endOffset":20813,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":20833,"endOffset":20898,"count":2}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":20918,"endOffset":20983,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":21003,"endOffset":21717,"count":3},{"startOffset":21056,"endOffset":21198,"count":0},{"startOffset":21204,"endOffset":21346,"count":0},{"startOffset":21352,"endOffset":21360,"count":0},{"startOffset":21365,"endOffset":21374,"count":0},{"startOffset":21379,"endOffset":21418,"count":0},{"startOffset":21424,"endOffset":21464,"count":0},{"startOffset":21470,"endOffset":21508,"count":0},{"startOffset":21514,"endOffset":21554,"count":2},{"startOffset":21560,"endOffset":21598,"count":1},{"startOffset":21604,"endOffset":21644,"count":0},{"startOffset":21650,"endOffset":21711,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":21751,"endOffset":22447,"count":3},{"startOffset":21836,"endOffset":21918,"count":0},{"startOffset":21954,"endOffset":22062,"count":0},{"startOffset":22101,"endOffset":22147,"count":0},{"startOffset":22333,"endOffset":22358,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.parse","ranges":[{"startOffset":22491,"endOffset":22962,"count":3},{"startOffset":22538,"endOffset":22565,"count":0},{"startOffset":22624,"endOffset":22684,"count":0},{"startOffset":22730,"endOffset":22734,"count":0},{"startOffset":22764,"endOffset":22792,"count":0},{"startOffset":22867,"endOffset":22894,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.toString","ranges":[{"startOffset":22996,"endOffset":23031,"count":3}],"isBlockCoverage":true},{"functionName":"Comparator.test","ranges":[{"startOffset":23061,"endOffset":23419,"count":3},{"startOffset":23185,"endOffset":23206,"count":0},{"startOffset":23243,"endOffset":23352,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.intersects","ranges":[{"startOffset":23455,"endOffset":25181,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":25205,"endOffset":26497,"count":1},{"startOffset":25254,"endOffset":25284,"count":0},{"startOffset":25400,"endOffset":25596,"count":0},{"startOffset":25633,"endOffset":25681,"count":0},{"startOffset":25715,"endOffset":25757,"count":0},{"startOffset":26412,"endOffset":26478,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26206,"endOffset":26269,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26284,"endOffset":26385,"count":2}],"isBlockCoverage":true},{"functionName":"Range.format","ranges":[{"startOffset":26524,"endOffset":26663,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26566,"endOffset":26622,"count":2}],"isBlockCoverage":true},{"functionName":"Range.toString","ranges":[{"startOffset":26692,"endOffset":26727,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":26758,"endOffset":28005,"count":2},{"startOffset":26869,"endOffset":26897,"count":0},{"startOffset":27537,"endOffset":27564,"count":0},{"startOffset":27746,"endOffset":27898,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27621,"endOffset":27689,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27836,"endOffset":27893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27915,"endOffset":27982,"count":3}],"isBlockCoverage":true},{"functionName":"Range.intersects","ranges":[{"startOffset":28036,"endOffset":28650,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":28750,"endOffset":29180,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":29270,"endOffset":29470,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":29616,"endOffset":29951,"count":2}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":29953,"endOffset":30029,"count":12},{"startOffset":29986,"endOffset":30013,"count":10},{"startOffset":30014,"endOffset":30027,"count":10}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":30302,"endOffset":30454,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30381,"endOffset":30441,"count":3}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":30456,"endOffset":31252,"count":3},{"startOffset":30520,"endOffset":30542,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30586,"endOffset":31249,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":31451,"endOffset":31603,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31530,"endOffset":31590,"count":2}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":31605,"endOffset":33098,"count":2},{"startOffset":31701,"endOffset":31723,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31767,"endOffset":33095,"count":1},{"startOffset":31865,"endOffset":31887,"count":0},{"startOffset":31905,"endOffset":31964,"count":0},{"startOffset":32005,"endOffset":32084,"count":0},{"startOffset":32167,"endOffset":33044,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":33100,"endOffset":33288,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33214,"endOffset":33275,"count":3}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":33290,"endOffset":35047,"count":3},{"startOffset":33376,"endOffset":33399,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33444,"endOffset":35044,"count":3},{"startOffset":33642,"endOffset":33649,"count":0},{"startOffset":33651,"endOffset":33674,"count":0},{"startOffset":33839,"endOffset":33845,"count":0},{"startOffset":33864,"endOffset":34041,"count":0},{"startOffset":34065,"endOffset":34791,"count":1},{"startOffset":34169,"endOffset":34192,"count":0},{"startOffset":34230,"endOffset":34476,"count":0},{"startOffset":34501,"endOffset":34738,"count":0},{"startOffset":34791,"endOffset":34991,"count":2},{"startOffset":34805,"endOffset":34879,"count":0},{"startOffset":34893,"endOffset":34991,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":35172,"endOffset":35370,"count":2}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":35586,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":36243,"endOffset":36595,"count":1},{"startOffset":36280,"endOffset":36302,"count":0},{"startOffset":36407,"endOffset":36444,"count":0},{"startOffset":36494,"endOffset":36578,"count":2},{"startOffset":36549,"endOffset":36574,"count":1},{"startOffset":36578,"endOffset":36594,"count":0}],"isBlockCoverage":true},{"functionName":"testSet","ranges":[{"startOffset":36597,"endOffset":37618,"count":2},{"startOffset":36679,"endOffset":36742,"count":3},{"startOffset":36712,"endOffset":36738,"count":1},{"startOffset":36742,"endOffset":36776,"count":1},{"startOffset":36776,"endOffset":36805,"count":0},{"startOffset":36807,"endOffset":37601,"count":0},{"startOffset":37601,"endOffset":37617,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":37650,"endOffset":37811,"count":1},{"startOffset":37747,"endOffset":37780,"count":0}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":37851,"endOffset":38297,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":38337,"endOffset":38782,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":38816,"endOffset":40059,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":40093,"endOffset":40332,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":40428,"endOffset":40517,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":40617,"endOffset":40706,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":40734,"endOffset":42525,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":42559,"endOffset":42713,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":42747,"endOffset":42875,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":42901,"endOffset":44286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7675,"count":1},{"startOffset":7632,"endOffset":7636,"count":0}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":202,"endOffset":318,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":266,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":319,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":536,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"_fs","ranges":[{"startOffset":739,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"loadPlugin","ranges":[{"startOffset":1627,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"loadPreset","ranges":[{"startOffset":1927,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeName","ranges":[{"startOffset":2227,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAlternativesHelper","ranges":[{"startOffset":2682,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireResolve","ranges":[{"startOffset":4086,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"tryImportMetaResolve","ranges":[{"startOffset":4870,"endOffset":5096,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStandardizedNameForRequire","ranges":[{"startOffset":5097,"endOffset":5386,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStandardizedNameForImport","ranges":[{"startOffset":5387,"endOffset":5814,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStandardizedName","ranges":[{"startOffset":5815,"endOffset":6543,"count":0}],"isBlockCoverage":false},{"functionName":"requireModule","ranges":[{"startOffset":6583,"endOffset":7629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/vendor/import-meta-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41719,"count":1},{"startOffset":41664,"endOffset":41668,"count":0}],"isBlockCoverage":true},{"functionName":"_assert","ranges":[{"startOffset":146,"endOffset":265,"count":0}],"isBlockCoverage":false},{"functionName":"_fs","ranges":[{"startOffset":266,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"_process","ranges":[{"startOffset":405,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":528,"endOffset":638,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":639,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"_module","ranges":[{"startOffset":753,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"_v","ranges":[{"startOffset":873,"endOffset":978,"count":0}],"isBlockCoverage":false},{"functionName":"_util","ranges":[{"startOffset":979,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1093,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1298,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"formatList","ranges":[{"startOffset":2092,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2428,"endOffset":4095,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4190,"endOffset":4321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4412,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4643,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5441,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5800,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6085,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6865,"endOffset":6951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7032,"endOffset":7335,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":7349,"endOffset":7476,"count":12}],"isBlockCoverage":true},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":7477,"endOffset":8294,"count":12}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":7543,"endOffset":8292,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":8295,"endOffset":8706,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":8707,"endOffset":8913,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9322,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":9325,"endOffset":10185,"count":0}],"isBlockCoverage":false},{"functionName":"determineSpecificType","ranges":[{"startOffset":10186,"endOffset":10826,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":10974,"endOffset":12536,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":12537,"endOffset":13324,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":13325,"endOffset":13399,"count":0}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":13620,"endOffset":13823,"count":0}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":14033,"endOffset":14070,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":14074,"endOffset":14260,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":14261,"endOffset":14590,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":14591,"endOffset":15269,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":15270,"endOffset":15311,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":15312,"endOffset":15545,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConditions","ranges":[{"startOffset":15711,"endOffset":15775,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":15776,"endOffset":15847,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":15848,"endOffset":16166,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":17170,"endOffset":17893,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":17894,"endOffset":19070,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":19071,"endOffset":19171,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":19172,"endOffset":19395,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":19396,"endOffset":20632,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":20633,"endOffset":22006,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":22007,"endOffset":22242,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":22243,"endOffset":22462,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":22463,"endOffset":22819,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":22820,"endOffset":23184,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":23185,"endOffset":25663,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":25664,"endOffset":25822,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":25823,"endOffset":27992,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":27993,"endOffset":28943,"count":0}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":28944,"endOffset":29567,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":29568,"endOffset":31548,"count":0}],"isBlockCoverage":false},{"functionName":"patternKeyCompare","ranges":[{"startOffset":31549,"endOffset":32066,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":32067,"endOffset":34048,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":34049,"endOffset":34928,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":34929,"endOffset":36743,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":36744,"endOffset":37015,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":37016,"endOffset":37199,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":37200,"endOffset":38396,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":38397,"endOffset":39425,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":39426,"endOffset":39642,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":39643,"endOffset":39888,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":39889,"endOffset":41181,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":41182,"endOffset":41661,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1510,"count":1},{"startOffset":1465,"endOffset":1469,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":188,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":258,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":510,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":721,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"transformSync","ranges":[{"startOffset":1217,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"transformAsync","ranges":[{"startOffset":1339,"endOffset":1462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform-ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1680,"count":1},{"startOffset":1631,"endOffset":1635,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":223,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":293,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":552,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"transformFromAst","ranges":[{"startOffset":823,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"transformFromAstSync","ranges":[{"startOffset":1355,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"transformFromAstAsync","ranges":[{"startOffset":1491,"endOffset":1628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1429,"count":1},{"startOffset":1388,"endOffset":1392,"count":0}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":168,"endOffset":290,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":238,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":546,"endOffset":770,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":803,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":1156,"endOffset":1269,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsync","ranges":[{"startOffset":1270,"endOffset":1385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-message-util/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15803,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":15798,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":15744,"count":1},{"startOffset":2687,"endOffset":2829,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1314,"endOffset":1399,"count":4},{"startOffset":1376,"endOffset":1379,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1400,"endOffset":2014,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1551,"endOffset":2004,"count":2},{"startOffset":1598,"endOffset":1607,"count":0},{"startOffset":1694,"endOffset":1719,"count":0},{"startOffset":1721,"endOffset":1730,"count":0},{"startOffset":1741,"endOffset":1744,"count":0},{"startOffset":1766,"endOffset":1782,"count":0},{"startOffset":1817,"endOffset":1992,"count":122},{"startOffset":1954,"endOffset":1962,"count":114},{"startOffset":1964,"endOffset":1976,"count":8},{"startOffset":1977,"endOffset":1990,"count":114}],"isBlockCoverage":true},{"functionName":"indentAllLines","ranges":[{"startOffset":3863,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":3983,"endOffset":4014,"count":0}],"isBlockCoverage":false},{"functionName":"trimPaths","ranges":[{"startOffset":4268,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"getRenderedCallsite","ranges":[{"startOffset":4362,"endOffset":4680,"count":0}],"isBlockCoverage":false},{"functionName":"checkForCommonEnvironmentErrors","ranges":[{"startOffset":4717,"endOffset":5150,"count":0}],"isBlockCoverage":false},{"functionName":"warnAboutWrongTestEnvironment","ranges":[{"startOffset":5151,"endOffset":5468,"count":0}],"isBlockCoverage":false},{"functionName":"formatExecError","ranges":[{"startOffset":5669,"endOffset":8427,"count":0}],"isBlockCoverage":false},{"functionName":"removeInternalStackEntries","ranges":[{"startOffset":8507,"endOffset":9346,"count":0}],"isBlockCoverage":false},{"functionName":"formatPath","ranges":[{"startOffset":9367,"endOffset":9990,"count":0}],"isBlockCoverage":false},{"functionName":"getStackTraceLines","ranges":[{"startOffset":10025,"endOffset":10220,"count":0}],"isBlockCoverage":false},{"functionName":"getTopFrame","ranges":[{"startOffset":10221,"endOffset":10689,"count":0}],"isBlockCoverage":false},{"functionName":"formatStackTrace","ranges":[{"startOffset":10690,"endOffset":11867,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorOrStackWithCause","ranges":[{"startOffset":11868,"endOffset":12120,"count":0}],"isBlockCoverage":false},{"functionName":"formatErrorStack","ranges":[{"startOffset":12121,"endOffset":13002,"count":0}],"isBlockCoverage":false},{"functionName":"failureDetailsToErrorOrStack","ranges":[{"startOffset":13003,"endOffset":13556,"count":0}],"isBlockCoverage":false},{"functionName":"formatResultsErrors","ranges":[{"startOffset":13585,"endOffset":14459,"count":0}],"isBlockCoverage":false},{"functionName":"removeBlankErrorLine","ranges":[{"startOffset":14577,"endOffset":14703,"count":0}],"isBlockCoverage":false},{"functionName":"separateMessageFromStack","ranges":[{"startOffset":14904,"endOffset":15680,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/code-frame/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6993,"count":1}],"isBlockCoverage":true},{"functionName":"isColorSupported","ranges":[{"startOffset":236,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":441,"endOffset":463,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":451,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"buildDefs","ranges":[{"startOffset":465,"endOffset":955,"count":2}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1072,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenType","ranges":[{"startOffset":1371,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":2153,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":2404,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkerLines","ranges":[{"startOffset":2839,"endOffset":4401,"count":0}],"isBlockCoverage":false},{"functionName":"codeFrameColumns","ranges":[{"startOffset":4402,"endOffset":6160,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":6161,"endOffset":6856,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/js-tokens/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"exports.matchToToken","ranges":[{"startOffset":917,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":2357},{"startOffset":231,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"478","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7961,"count":1},{"startOffset":184,"endOffset":189,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":290,"endOffset":398,"count":70}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":581,"endOffset":1041,"count":1},{"startOffset":796,"endOffset":824,"count":0}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":1052,"endOffset":1099,"count":2}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":1103,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":2203,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":2605,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3182,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":4240,"endOffset":6388,"count":0}],"isBlockCoverage":false},{"functionName":"setFile","ranges":[{"startOffset":6392,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPackagesRegExp","ranges":[{"startOffset":6631,"endOffset":6913,"count":1},{"startOffset":6737,"endOffset":6912,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6778,"endOffset":6808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/stack-utils/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2630,"count":1}],"isBlockCoverage":true}]},{"scriptId":"481","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8141,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":1001,"endOffset":1212,"count":43},{"startOffset":1066,"endOffset":1195,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1234,"endOffset":1534,"count":43},{"startOffset":1451,"endOffset":1456,"count":5},{"startOffset":1457,"endOffset":1468,"count":38},{"startOffset":1514,"endOffset":1519,"count":5},{"startOffset":1520,"endOffset":1531,"count":38}],"isBlockCoverage":true}]},{"scriptId":"482","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":873,"count":1},{"startOffset":247,"endOffset":293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"483","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":240,"count":1},{"startOffset":105,"endOffset":152,"count":0},{"startOffset":155,"endOffset":202,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":157,"endOffset":202,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":207,"endOffset":215,"count":49}],"isBlockCoverage":true}]},{"scriptId":"484","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9297,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":325,"endOffset":2250,"count":2},{"startOffset":430,"endOffset":633,"count":0},{"startOffset":672,"endOffset":773,"count":0},{"startOffset":812,"endOffset":912,"count":0},{"startOffset":1251,"endOffset":1264,"count":0},{"startOffset":1292,"endOffset":1356,"count":0},{"startOffset":1543,"endOffset":1601,"count":0},{"startOffset":1660,"endOffset":1718,"count":0},{"startOffset":1777,"endOffset":1835,"count":0},{"startOffset":1896,"endOffset":2182,"count":1},{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1982,"endOffset":2175,"count":1},{"startOffset":2149,"endOffset":2174,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2254,"endOffset":2450,"count":2},{"startOffset":2361,"endOffset":2422,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2454,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2499,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2893,"endOffset":3184,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3188,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4043,"endOffset":4580,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4733,"endOffset":9269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":167,"endOffset":307,"count":4},{"startOffset":222,"endOffset":306,"count":0}],"isBlockCoverage":true}]},{"scriptId":"486","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":68,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":322,"endOffset":356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":72,"endOffset":306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":61,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":61,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":71,"endOffset":456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":64,"endOffset":1397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":66,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":170,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":74,"endOffset":143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":68,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":72,"endOffset":101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":79,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":75,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":76,"endOffset":139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":62,"endOffset":103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":62,"endOffset":103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":62,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":63,"endOffset":106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":63,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":63,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":195,"endOffset":939,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2004,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":159,"endOffset":1979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3631,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":114,"endOffset":145,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":149,"endOffset":696,"count":2},{"startOffset":252,"endOffset":372,"count":0},{"startOffset":570,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":700,"endOffset":1196,"count":2},{"startOffset":748,"endOffset":771,"count":0},{"startOffset":832,"endOffset":896,"count":0},{"startOffset":944,"endOffset":948,"count":0},{"startOffset":980,"endOffset":1012,"count":0},{"startOffset":1091,"endOffset":1122,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1200,"endOffset":1239,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1243,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1627,"endOffset":3337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14938,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":102,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"get range","ranges":[{"startOffset":2116,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2575,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2616,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2659,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":4946,"endOffset":5576,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5644,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":6524,"endOffset":6551,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":6566,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":6707,"endOffset":7113,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":7283,"endOffset":7596,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":7610,"endOffset":7661,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":7997,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":8143,"endOffset":8817,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":9110,"endOffset":9233,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":9256,"endOffset":10558,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":10583,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":10760,"endOffset":12460,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":12606,"endOffset":12791,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":12813,"endOffset":12968,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":13225,"endOffset":13895,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13913,"endOffset":14937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/internal/lrucache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":33,"endOffset":98,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":102,"endOffset":362,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":366,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":420,"endOffset":772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":247,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":74,"endOffset":219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":282,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":129,"endOffset":249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":123,"endOffset":561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":591,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":122,"endOffset":559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1514,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":158,"endOffset":1485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":75,"endOffset":297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":404,"endOffset":2177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":231,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":143,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":139,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":75,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":343,"endOffset":1354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7524,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":2010,"endOffset":2741,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2883,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7039,"endOffset":7243,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7294,"endOffset":7498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/synckit/lib/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24470,"count":1},{"startOffset":1525,"endOffset":1561,"count":0},{"startOffset":2845,"endOffset":2880,"count":0},{"startOffset":3340,"endOffset":3504,"count":0},{"startOffset":3546,"endOffset":3564,"count":0},{"startOffset":12046,"endOffset":12149,"count":0}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":316,"endOffset":726,"count":7},{"startOffset":384,"endOffset":413,"count":1},{"startOffset":497,"endOffset":712,"count":259}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":599,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__toESM","ranges":[{"startOffset":742,"endOffset":961,"count":7},{"startOffset":823,"endOffset":827,"count":0},{"startOffset":946,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":1579,"endOffset":1715,"count":1},{"startOffset":1652,"endOffset":1683,"count":0}],"isBlockCoverage":true},{"functionName":"parseVersion","ranges":[{"startOffset":1738,"endOffset":1792,"count":8}],"isBlockCoverage":true},{"functionName":"compareVersion","ranges":[{"startOffset":1817,"endOffset":2157,"count":4},{"startOffset":2025,"endOffset":2144,"count":6},{"startOffset":2053,"endOffset":2057,"count":0},{"startOffset":2085,"endOffset":2089,"count":0},{"startOffset":2106,"endOffset":2115,"count":4},{"startOffset":2115,"endOffset":2131,"count":2},{"startOffset":2131,"endOffset":2141,"count":0},{"startOffset":2144,"endOffset":2156,"count":0}],"isBlockCoverage":true},{"functionName":"compareNodeVersion","ranges":[{"startOffset":2230,"endOffset":2280,"count":4}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":4394,"endOffset":4655,"count":0}],"isBlockCoverage":false},{"functionName":"dataUrl","ranges":[{"startOffset":4673,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"hasRequireFlag","ranges":[{"startOffset":4767,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"hasImportFlag","ranges":[{"startOffset":4859,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"hasLoaderFlag","ranges":[{"startOffset":4927,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"setupTsRunner","ranges":[{"startOffset":5018,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"md5Hash","ranges":[{"startOffset":10661,"endOffset":10732,"count":0}],"isBlockCoverage":false},{"functionName":"encodeImportModule","ranges":[{"startOffset":10761,"endOffset":11800,"count":0}],"isBlockCoverage":false},{"functionName":"_generateGlobals","ranges":[{"startOffset":11844,"endOffset":11964,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobals","ranges":[{"startOffset":12187,"endOffset":13080,"count":0}],"isBlockCoverage":false},{"functionName":"extractProperties","ranges":[{"startOffset":13370,"endOffset":13561,"count":0}],"isBlockCoverage":false},{"functionName":"startWorkerThread","ranges":[{"startOffset":15058,"endOffset":18785,"count":0}],"isBlockCoverage":false},{"functionName":"overrideStdio","ranges":[{"startOffset":18808,"endOffset":19024,"count":0}],"isBlockCoverage":false},{"functionName":"createSyncFn","ranges":[{"startOffset":19796,"endOffset":20436,"count":0}],"isBlockCoverage":false},{"functionName":"runAsWorker","ranges":[{"startOffset":21261,"endOffset":22359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":784,"count":1}],"isBlockCoverage":false}]},{"scriptId":"527","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16769,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2565,"endOffset":2590,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":3078,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3163,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3312,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3385,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3575,"endOffset":9553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9557,"endOffset":10231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10235,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10335,"endOffset":10504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10508,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11405,"endOffset":11873,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11877,"endOffset":12022,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":12026,"endOffset":12860,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12864,"endOffset":12970,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":12974,"endOffset":13086,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":13090,"endOffset":13189,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":13193,"endOffset":13251,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":13255,"endOffset":13315,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":13319,"endOffset":13379,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13383,"endOffset":13519,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13523,"endOffset":14030,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":14223,"endOffset":14302,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":14306,"endOffset":14384,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14388,"endOffset":14710,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14784,"endOffset":15398,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15400,"endOffset":15687,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15689,"endOffset":16492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15500,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3683,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3769,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3909,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4024,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4628,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4862,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5103,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5470,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5579,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5946,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6403,"endOffset":6546,"count":6}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6848,"endOffset":6887,"count":6}],"isBlockCoverage":true},{"functionName":"onclose","ranges":[{"startOffset":6960,"endOffset":7033,"count":6}],"isBlockCoverage":true},{"functionName":"MessagePort.close","ranges":[{"startOffset":7214,"endOffset":7349,"count":6},{"startOffset":7265,"endOffset":7288,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":7482,"endOffset":8110,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8117,"endOffset":9480,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8478,"endOffset":8573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8612,"endOffset":8710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8812,"endOffset":8957,"count":9},{"startOffset":8872,"endOffset":8894,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9068,"endOffset":9215,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":9221,"endOffset":9362,"count":6}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":9366,"endOffset":9478,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9530,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9883,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10240,"endOffset":10389,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10393,"endOffset":10769,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10773,"endOffset":10953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10957,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11208,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11480,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":11662,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11759,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11932,"endOffset":12446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12450,"endOffset":12863,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12899,"endOffset":13028,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13065,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13531,"endOffset":13962,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14245,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14697,"endOffset":14868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"node:internal/worker/messaging","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6866,"count":1}],"isBlockCoverage":false},{"functionName":"handleMessageFromThread","ranges":[{"startOffset":1503,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"handleMessageFromMainThread","ranges":[{"startOffset":2540,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sendMessageToWorker","ranges":[{"startOffset":2764,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageFromWorker","ranges":[{"startOffset":3649,"endOffset":4293,"count":0}],"isBlockCoverage":false},{"functionName":"createMainThreadPort","ranges":[{"startOffset":4295,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"destroyMainThreadPort","ranges":[{"startOffset":4846,"endOffset":5140,"count":0}],"isBlockCoverage":false},{"functionName":"setupMainThreadPort","ranges":[{"startOffset":5142,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"postMessageToThread","ranges":[{"startOffset":5337,"endOffset":6747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5723,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1039,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2145,"endOffset":2588,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2590,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2737,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2924,"endOffset":4219,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4221,"endOffset":4442,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4461,"endOffset":5666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@pkgr/core/lib/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2302,"count":1},{"startOffset":221,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"tryPkg","ranges":[{"startOffset":445,"endOffset":521,"count":0}],"isBlockCoverage":false},{"functionName":"isPkgAvailable","ranges":[{"startOffset":546,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":586,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtensions","ranges":[{"startOffset":1031,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"findUp","ranges":[{"startOffset":1210,"endOffset":2016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-worker/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61989,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":61984,"count":1}],"isBlockCoverage":true},{"functionName":"./src/Farm.ts","ranges":[{"startOffset":350,"endOffset":4612,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":646,"endOffset":731,"count":1},{"startOffset":712,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":924,"endOffset":4576,"count":1}],"isBlockCoverage":true},{"functionName":"Farm","ranges":[{"startOffset":1067,"endOffset":1404,"count":1}],"isBlockCoverage":true},{"functionName":"doWork","ranges":[{"startOffset":1407,"endOffset":3079,"count":6511}],"isBlockCoverage":true},{"functionName":"addCustomMessageListener","ranges":[{"startOffset":1516,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"onCustomMessage","ranges":[{"startOffset":1688,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2009,"endOffset":2970,"count":6511},{"startOffset":2241,"endOffset":2373,"count":0},{"startOffset":2808,"endOffset":2923,"count":0}],"isBlockCoverage":true},{"functionName":"onStart","ranges":[{"startOffset":2396,"endOffset":2495,"count":6511},{"startOffset":2434,"endOffset":2487,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":2517,"endOffset":2685,"count":6511},{"startOffset":2597,"endOffset":2633,"count":0}],"isBlockCoverage":true},{"functionName":"_process","ranges":[{"startOffset":3082,"endOffset":3929,"count":26038},{"startOffset":3137,"endOffset":3163,"count":19524},{"startOffset":3163,"endOffset":3231,"count":6514},{"startOffset":3231,"endOffset":3257,"count":3},{"startOffset":3257,"endOffset":3283,"count":6511},{"startOffset":3283,"endOffset":3361,"count":0},{"startOffset":3361,"endOffset":3928,"count":6511}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":3590,"endOffset":3766,"count":6511}],"isBlockCoverage":true},{"functionName":"_push","ranges":[{"startOffset":3932,"endOffset":4214,"count":6511},{"startOffset":4078,"endOffset":4193,"count":19527},{"startOffset":4163,"endOffset":4187,"count":3}],"isBlockCoverage":true},{"functionName":"_getNextWorkerOffset","ranges":[{"startOffset":4217,"endOffset":4393,"count":6511},{"startOffset":4292,"endOffset":4326,"count":0}],"isBlockCoverage":true},{"functionName":"_lock","ranges":[{"startOffset":4396,"endOffset":4451,"count":6511}],"isBlockCoverage":true},{"functionName":"_unlock","ranges":[{"startOffset":4454,"endOffset":4512,"count":6511}],"isBlockCoverage":true},{"functionName":"_isLocked","ranges":[{"startOffset":4515,"endOffset":4574,"count":26038}],"isBlockCoverage":true},{"functionName":"./src/FifoQueue.ts","ranges":[{"startOffset":4651,"endOffset":6956,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5180,"endOffset":6271,"count":1}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":5260,"endOffset":5694,"count":6511},{"startOffset":5372,"endOffset":5693,"count":0}],"isBlockCoverage":true},{"functionName":"dequeue","ranges":[{"startOffset":5697,"endOffset":6269,"count":6514},{"startOffset":5767,"endOffset":5773,"count":0},{"startOffset":5820,"endOffset":5849,"count":0},{"startOffset":6124,"endOffset":6148,"count":0},{"startOffset":6150,"endOffset":6225,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6362,"endOffset":6947,"count":1}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":6418,"endOffset":6621,"count":6511},{"startOffset":6519,"endOffset":6551,"count":4},{"startOffset":6551,"endOffset":6594,"count":6507}],"isBlockCoverage":true},{"functionName":"dequeue","ranges":[{"startOffset":6624,"endOffset":6835,"count":6514},{"startOffset":6664,"endOffset":6690,"count":3},{"startOffset":6690,"endOffset":6776,"count":6511},{"startOffset":6776,"endOffset":6808,"count":4},{"startOffset":6808,"endOffset":6834,"count":6511}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":6838,"endOffset":6888,"count":0}],"isBlockCoverage":false},{"functionName":"peekLast","ranges":[{"startOffset":6891,"endOffset":6945,"count":0}],"isBlockCoverage":false},{"functionName":"./src/PriorityQueue.ts","ranges":[{"startOffset":6999,"endOffset":10947,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7684,"endOffset":9080,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9117,"endOffset":10938,"count":0}],"isBlockCoverage":true},{"functionName":"./src/WorkerPool.ts","ranges":[{"startOffset":10987,"endOffset":12171,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":11246,"endOffset":11331,"count":1},{"startOffset":11312,"endOffset":11328,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":11577,"endOffset":11764,"count":6511}],"isBlockCoverage":true},{"functionName":"createWorker","ranges":[{"startOffset":11767,"endOffset":12112,"count":3},{"startOffset":11856,"endOffset":11959,"count":0}],"isBlockCoverage":true},{"functionName":"./src/base/BaseWorkerPool.ts","ranges":[{"startOffset":12220,"endOffset":16612,"count":1}],"isBlockCoverage":true},{"functionName":"_mergeStream","ranges":[{"startOffset":12380,"endOffset":12539,"count":1}],"isBlockCoverage":true},{"functionName":"_mergeStream","ranges":[{"startOffset":12487,"endOffset":12521,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":12592,"endOffset":12677,"count":1},{"startOffset":12654,"endOffset":12657,"count":0}],"isBlockCoverage":true},{"functionName":"emptyMethod","ranges":[{"startOffset":13125,"endOffset":13133,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13135,"endOffset":16566,"count":1}],"isBlockCoverage":true},{"functionName":"BaseWorkerPool","ranges":[{"startOffset":13221,"endOffset":14249,"count":1},{"startOffset":13647,"endOffset":14191,"count":3}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":14252,"endOffset":14294,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":14297,"endOffset":14339,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkers","ranges":[{"startOffset":14342,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkerById","ranges":[{"startOffset":14389,"endOffset":14454,"count":6511}],"isBlockCoverage":true},{"functionName":"restartWorkerIfShutDown","ranges":[{"startOffset":14457,"endOffset":15028,"count":6511},{"startOffset":14566,"endOffset":15024,"count":0}],"isBlockCoverage":true},{"functionName":"createWorker","ranges":[{"startOffset":15031,"endOffset":15131,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":15134,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":15529,"endOffset":16564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15740,"endOffset":16341,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16076,"endOffset":16147,"count":0}],"isBlockCoverage":false},{"functionName":"workerExits.reduce.forceExited","ranges":[{"startOffset":16437,"endOffset":16524,"count":3}],"isBlockCoverage":true},{"functionName":"./src/types.ts","ranges":[{"startOffset":16647,"endOffset":18910,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18436,"endOffset":18736,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18797,"endOffset":18896,"count":1}],"isBlockCoverage":true},{"functionName":"./src/workers/ChildProcessWorker.ts","ranges":[{"startOffset":18966,"endOffset":35407,"count":1}],"isBlockCoverage":true},{"functionName":"_child_process","ranges":[{"startOffset":19159,"endOffset":19299,"count":1}],"isBlockCoverage":true},{"functionName":"_child_process","ranges":[{"startOffset":19247,"endOffset":19281,"count":2}],"isBlockCoverage":true},{"functionName":"_os","ranges":[{"startOffset":19300,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"_mergeStream","ranges":[{"startOffset":19408,"endOffset":19567,"count":1}],"isBlockCoverage":true},{"functionName":"_mergeStream","ranges":[{"startOffset":19515,"endOffset":19549,"count":5}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":19568,"endOffset":19709,"count":1}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":19657,"endOffset":19691,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":19960,"endOffset":20045,"count":2},{"startOffset":20022,"endOffset":20025,"count":1},{"startOffset":20026,"endOffset":20042,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21306,"endOffset":35365,"count":3}],"isBlockCoverage":true},{"functionName":"ChildProcessWorker","ranges":[{"startOffset":21644,"endOffset":22065,"count":3}],"isBlockCoverage":true},{"functionName":"initialize","ranges":[{"startOffset":22068,"endOffset":25558,"count":3},{"startOffset":22241,"endOffset":22262,"count":0},{"startOffset":22283,"endOffset":22307,"count":0},{"startOffset":22309,"endOffset":22351,"count":0},{"startOffset":22446,"endOffset":22478,"count":0},{"startOffset":22551,"endOffset":23117,"count":0},{"startOffset":25080,"endOffset":25437,"count":0},{"startOffset":25513,"endOffset":25554,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23505,"endOffset":23539,"count":0}],"isBlockCoverage":false},{"functionName":"stderrDataHandler","ranges":[{"startOffset":25561,"endOffset":25903,"count":0}],"isBlockCoverage":false},{"functionName":"_detectOutOfMemoryCrash","ranges":[{"startOffset":25906,"endOffset":26481,"count":6},{"startOffset":26155,"endOffset":26380,"count":0},{"startOffset":26387,"endOffset":26477,"count":0}],"isBlockCoverage":true},{"functionName":"_onDisconnect","ranges":[{"startOffset":26484,"endOffset":26739,"count":3},{"startOffset":26680,"endOffset":26735,"count":0}],"isBlockCoverage":true},{"functionName":"_onMessage","ranges":[{"startOffset":26742,"endOffset":28499,"count":6511},{"startOffset":26842,"endOffset":26849,"count":0},{"startOffset":27083,"endOffset":27679,"count":0},{"startOffset":27686,"endOffset":27921,"count":0},{"startOffset":27928,"endOffset":28066,"count":0},{"startOffset":28073,"endOffset":28412,"count":0},{"startOffset":28419,"endOffset":28489,"count":0}],"isBlockCoverage":true},{"functionName":"_performRestartIfRequired","ranges":[{"startOffset":28502,"endOffset":29258,"count":0}],"isBlockCoverage":false},{"functionName":"_onExit","ranges":[{"startOffset":29261,"endOffset":32315,"count":3},{"startOffset":29432,"endOffset":29483,"count":0},{"startOffset":29485,"endOffset":29604,"count":0},{"startOffset":29629,"endOffset":29649,"count":0},{"startOffset":29650,"endOffset":29683,"count":0},{"startOffset":29684,"endOffset":29717,"count":0},{"startOffset":29718,"endOffset":29769,"count":0},{"startOffset":29820,"endOffset":29979,"count":0},{"startOffset":32032,"endOffset":32230,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":32318,"endOffset":33099,"count":6514}],"isBlockCoverage":true},{"functionName":"_onProcessEnd","ranges":[{"startOffset":32461,"endOffset":32867,"count":6514},{"startOffset":32743,"endOffset":32767,"count":0},{"startOffset":32768,"endOffset":32781,"count":0},{"startOffset":32783,"endOffset":32825,"count":0}],"isBlockCoverage":true},{"functionName":"_onCustomMessage","ranges":[{"startOffset":32897,"endOffset":32932,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33085,"endOffset":33093,"count":6514}],"isBlockCoverage":true},{"functionName":"waitForExit","ranges":[{"startOffset":33102,"endOffset":33151,"count":3}],"isBlockCoverage":true},{"functionName":"killChild","ranges":[{"startOffset":33154,"endOffset":33433,"count":0}],"isBlockCoverage":false},{"functionName":"forceExit","ranges":[{"startOffset":33436,"endOffset":33614,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkerId","ranges":[{"startOffset":33617,"endOffset":33671,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkerSystemId","ranges":[{"startOffset":33758,"endOffset":33811,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":33814,"endOffset":33856,"count":3}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":33859,"endOffset":33901,"count":3}],"isBlockCoverage":true},{"functionName":"getMemoryUsage","ranges":[{"startOffset":34001,"endOffset":34833,"count":0}],"isBlockCoverage":false},{"functionName":"checkMemoryUsage","ranges":[{"startOffset":34905,"endOffset":35280,"count":0}],"isBlockCoverage":false},{"functionName":"isWorkerRunning","ranges":[{"startOffset":35283,"endOffset":35363,"count":0}],"isBlockCoverage":false},{"functionName":"./src/workers/NodeThreadsWorker.ts","ranges":[{"startOffset":35462,"endOffset":46509,"count":0}],"isBlockCoverage":false},{"functionName":"./src/workers/WorkerAbstract.ts","ranges":[{"startOffset":46561,"endOffset":50178,"count":1}],"isBlockCoverage":true},{"functionName":"_stream","ranges":[{"startOffset":46721,"endOffset":46840,"count":1}],"isBlockCoverage":true},{"functionName":"_stream","ranges":[{"startOffset":46788,"endOffset":46822,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":47085,"endOffset":50132,"count":3}],"isBlockCoverage":true},{"functionName":"get state","ranges":[{"startOffset":47405,"endOffset":47446,"count":6526}],"isBlockCoverage":true},{"functionName":"set state","ranges":[{"startOffset":47449,"endOffset":47641,"count":15},{"startOffset":47499,"endOffset":47637,"count":6}],"isBlockCoverage":true},{"functionName":"WorkerAbstract","ranges":[{"startOffset":47644,"endOffset":48324,"count":3},{"startOffset":47720,"endOffset":48128,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48165,"endOffset":48225,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48255,"endOffset":48318,"count":3}],"isBlockCoverage":true},{"functionName":"waitForWorkerReady","ranges":[{"startOffset":48465,"endOffset":49618,"count":0}],"isBlockCoverage":false},{"functionName":"_shutdown","ranges":[{"startOffset":49731,"endOffset":49985,"count":3}],"isBlockCoverage":true},{"functionName":"_getFakeStream","ranges":[{"startOffset":49988,"endOffset":50130,"count":6},{"startOffset":50034,"endOffset":50097,"count":3}],"isBlockCoverage":true},{"functionName":"./src/workers/isDataCloneError.ts","ranges":[{"startOffset":50232,"endOffset":51153,"count":1}],"isBlockCoverage":true},{"functionName":"isDataCloneError","ranges":[{"startOffset":50883,"endOffset":51144,"count":0}],"isBlockCoverage":false},{"functionName":"./src/workers/messageParent.ts","ranges":[{"startOffset":51204,"endOffset":53431,"count":1}],"isBlockCoverage":true},{"functionName":"_nodeUtil","ranges":[{"startOffset":51371,"endOffset":51497,"count":0}],"isBlockCoverage":false},{"functionName":"_worker_threads","ranges":[{"startOffset":51498,"endOffset":51641,"count":0}],"isBlockCoverage":false},{"functionName":"messageParent","ranges":[{"startOffset":52064,"endOffset":53422,"count":0}],"isBlockCoverage":false},{"functionName":"./src/workers/safeMessageTransferring.ts","ranges":[{"startOffset":53492,"endOffset":54754,"count":1}],"isBlockCoverage":true},{"functionName":"_structuredClone","ranges":[{"startOffset":53676,"endOffset":53830,"count":0}],"isBlockCoverage":false},{"functionName":"packMessage","ranges":[{"startOffset":54023,"endOffset":54411,"count":0}],"isBlockCoverage":false},{"functionName":"isTransferringContainer","ranges":[{"startOffset":54412,"endOffset":54583,"count":6511},{"startOffset":54560,"endOffset":54580,"count":0}],"isBlockCoverage":true},{"functionName":"unpackMessage","ranges":[{"startOffset":54584,"endOffset":54745,"count":6511},{"startOffset":54658,"endOffset":54725,"count":0}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":54976,"endOffset":55704,"count":19},{"startOffset":55168,"endOffset":55223,"count":8},{"startOffset":55223,"endOffset":55703,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55930,"endOffset":61930,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":56116,"endOffset":56164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":56248,"endOffset":56300,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":56409,"endOffset":56461,"count":0}],"isBlockCoverage":false},{"functionName":"_os","ranges":[{"startOffset":56467,"endOffset":56574,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":56575,"endOffset":56688,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":56636,"endOffset":56670,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":56689,"endOffset":56799,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":57236,"endOffset":57321,"count":5},{"startOffset":57302,"endOffset":57318,"count":0}],"isBlockCoverage":true},{"functionName":"getExposedMethods","ranges":[{"startOffset":57514,"endOffset":57980,"count":1},{"startOffset":57714,"endOffset":57953,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57804,"endOffset":57846,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":59279,"endOffset":61903,"count":1}],"isBlockCoverage":true},{"functionName":"Worker","ranges":[{"startOffset":59343,"endOffset":60814,"count":1},{"startOffset":59490,"endOffset":59533,"count":0},{"startOffset":59574,"endOffset":59639,"count":0},{"startOffset":59687,"endOffset":59771,"count":0},{"startOffset":59865,"endOffset":59873,"count":0},{"startOffset":59920,"endOffset":59925,"count":0},{"startOffset":60024,"endOffset":60028,"count":0},{"startOffset":60073,"endOffset":60126,"count":0},{"startOffset":60274,"endOffset":60367,"count":0}],"isBlockCoverage":true},{"functionName":"_bindExposedWorkerMethods","ranges":[{"startOffset":60817,"endOffset":61341,"count":1},{"startOffset":60929,"endOffset":61337,"count":2},{"startOffset":60963,"endOffset":60990,"count":0},{"startOffset":61107,"endOffset":61186,"count":0}],"isBlockCoverage":true},{"functionName":"_callFunctionWithArgs","ranges":[{"startOffset":61344,"endOffset":61538,"count":6511},{"startOffset":61407,"endOffset":61487,"count":0}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":61541,"endOffset":61599,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":61602,"endOffset":61660,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":61663,"endOffset":61718,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":61721,"endOffset":61901,"count":1},{"startOffset":61757,"endOffset":61837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"533","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/merge-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":884,"count":8}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":356,"endOffset":657,"count":18},{"startOffset":411,"endOffset":462,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":661,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":722,"endOffset":882,"count":36},{"startOffset":842,"endOffset":860,"count":16},{"startOffset":862,"endOffset":878,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":778,"endOffset":816,"count":42}],"isBlockCoverage":true}]},{"scriptId":"534","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-worker/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":745,"endOffset":831,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1399,"endOffset":1429,"count":0},{"startOffset":1458,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"535","url":"node:internal/child_process/serialization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5624,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":989,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1304,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1727,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1867,"endOffset":3660,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3665,"endOffset":4496,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":4519,"endOffset":4624,"count":6}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":4629,"endOffset":5413,"count":7909},{"startOffset":4703,"endOffset":4710,"count":0},{"startOffset":4765,"endOffset":4817,"count":6},{"startOffset":5099,"endOffset":5153,"count":22},{"startOffset":5153,"endOffset":5350,"count":7887}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":5418,"endOffset":5581,"count":7893}],"isBlockCoverage":true}]},{"scriptId":"536","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/test-sequencer/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8755,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":8750,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":419,"endOffset":8696,"count":1}],"isBlockCoverage":true},{"functionName":"crypto","ranges":[{"startOffset":560,"endOffset":702,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":703,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":840,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"fs","ranges":[{"startOffset":927,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":980,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"_jestHasteMap","ranges":[{"startOffset":1121,"endOffset":1284,"count":1}],"isBlockCoverage":true},{"functionName":"_jestHasteMap","ranges":[{"startOffset":1232,"endOffset":1266,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1285,"endOffset":1370,"count":1},{"startOffset":1351,"endOffset":1367,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1371,"endOffset":1985,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1522,"endOffset":1975,"count":1},{"startOffset":1569,"endOffset":1578,"count":0},{"startOffset":1665,"endOffset":1690,"count":0},{"startOffset":1692,"endOffset":1701,"count":0},{"startOffset":1712,"endOffset":1715,"count":0},{"startOffset":1737,"endOffset":1753,"count":0},{"startOffset":1788,"endOffset":1963,"count":105},{"startOffset":1925,"endOffset":1933,"count":97},{"startOffset":1935,"endOffset":1947,"count":8},{"startOffset":1948,"endOffset":1961,"count":97}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2798,"endOffset":8658,"count":1}],"isBlockCoverage":true},{"functionName":"TestSequencer","ranges":[{"startOffset":2954,"endOffset":2978,"count":1}],"isBlockCoverage":true},{"functionName":"_getCachePath","ranges":[{"startOffset":2981,"endOffset":3221,"count":2}],"isBlockCoverage":true},{"functionName":"_getCache","ranges":[{"startOffset":3224,"endOffset":3713,"count":18678},{"startOffset":3316,"endOffset":3339,"count":1},{"startOffset":3341,"endOffset":3568,"count":1},{"startOffset":3434,"endOffset":3562,"count":0},{"startOffset":3627,"endOffset":3691,"count":1}],"isBlockCoverage":true},{"functionName":"_shardPosition","ranges":[{"startOffset":3716,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"shard","ranges":[{"startOffset":4812,"endOffset":5579,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":5933,"endOffset":7658,"count":1},{"startOffset":6952,"endOffset":6998,"count":1370}],"isBlockCoverage":true},{"functionName":"fileSize","ranges":[{"startOffset":6797,"endOffset":6920,"count":15938},{"startOffset":6875,"endOffset":6920,"count":1370},{"startOffset":6915,"endOffset":6919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7021,"endOffset":7652,"count":7969},{"startOffset":7256,"endOffset":7298,"count":0},{"startOffset":7331,"endOffset":7446,"count":0},{"startOffset":7479,"endOffset":7504,"count":0},{"startOffset":7506,"endOffset":7572,"count":0},{"startOffset":7629,"endOffset":7632,"count":3145},{"startOffset":7633,"endOffset":7637,"count":4824}],"isBlockCoverage":true},{"functionName":"allFailedTests","ranges":[{"startOffset":7661,"endOffset":7754,"count":0}],"isBlockCoverage":false},{"functionName":"cacheResults","ranges":[{"startOffset":7757,"endOffset":8456,"count":1},{"startOffset":7855,"endOffset":7877,"count":1370},{"startOffset":7928,"endOffset":8322,"count":1370},{"startOffset":8156,"endOffset":8172,"count":0},{"startOffset":8173,"endOffset":8197,"count":0},{"startOffset":8272,"endOffset":8278,"count":0},{"startOffset":8302,"endOffset":8306,"count":1}],"isBlockCoverage":true},{"functionName":"hasFailed","ranges":[{"startOffset":8459,"endOffset":8563,"count":15938},{"startOffset":8544,"endOffset":8549,"count":0}],"isBlockCoverage":true},{"functionName":"time","ranges":[{"startOffset":8566,"endOffset":8656,"count":1370},{"startOffset":8646,"endOffset":8651,"count":0}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":479,"count":1}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":95,"endOffset":417,"count":4}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9881,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":174,"endOffset":234,"count":4},{"startOffset":212,"endOffset":234,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":988,"endOffset":2794,"count":4},{"startOffset":1057,"endOffset":1335,"count":0},{"startOffset":1370,"endOffset":1384,"count":0},{"startOffset":1385,"endOffset":1398,"count":0},{"startOffset":1448,"endOffset":1459,"count":0},{"startOffset":1462,"endOffset":1537,"count":0},{"startOffset":1562,"endOffset":1567,"count":0},{"startOffset":1627,"endOffset":1663,"count":0},{"startOffset":1819,"endOffset":1973,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1084,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"arrayMatcher","ranges":[{"startOffset":1159,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1787,"endOffset":1798,"count":1389}],"isBlockCoverage":true},{"functionName":"matcher","ranges":[{"startOffset":1993,"endOffset":2719,"count":26044},{"startOffset":2250,"endOffset":2286,"count":0},{"startOffset":2315,"endOffset":2396,"count":24655},{"startOffset":2373,"endOffset":2381,"count":0},{"startOffset":2396,"endOffset":2424,"count":1389},{"startOffset":2424,"endOffset":2593,"count":0},{"startOffset":2593,"endOffset":2639,"count":1389},{"startOffset":2639,"endOffset":2674,"count":0},{"startOffset":2674,"endOffset":2699,"count":1389},{"startOffset":2699,"endOffset":2707,"count":0},{"startOffset":2708,"endOffset":2714,"count":1389}],"isBlockCoverage":true},{"functionName":"picomatch.test","ranges":[{"startOffset":3342,"endOffset":4143,"count":26044},{"startOffset":3426,"endOffset":3489,"count":0},{"startOffset":3511,"endOffset":3559,"count":0},{"startOffset":3584,"endOffset":3589,"count":0},{"startOffset":3630,"endOffset":3652,"count":0},{"startOffset":3714,"endOffset":3723,"count":0},{"startOffset":3725,"endOffset":3740,"count":0},{"startOffset":3796,"endOffset":3811,"count":0},{"startOffset":3877,"endOffset":3901,"count":0},{"startOffset":3964,"endOffset":4036,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4558,"endOffset":4712,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5348,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5819,"endOffset":5987,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6622,"endOffset":6662,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7153,"endOffset":7663,"count":4},{"startOffset":7247,"endOffset":7277,"count":0},{"startOffset":7302,"endOffset":7307,"count":0},{"startOffset":7341,"endOffset":7345,"count":0},{"startOffset":7384,"endOffset":7388,"count":0},{"startOffset":7493,"endOffset":7532,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8536,"endOffset":9042,"count":4},{"startOffset":8649,"endOffset":8710,"count":0},{"startOffset":8842,"endOffset":8900,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9504,"endOffset":9732,"count":4},{"startOffset":9560,"endOffset":9565,"count":0},{"startOffset":9624,"endOffset":9629,"count":0},{"startOffset":9642,"endOffset":9730,"count":0}],"isBlockCoverage":true}]},{"scriptId":"539","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1994,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":189,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":284,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":344,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":421,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":502,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":565,"endOffset":879,"count":4},{"startOffset":612,"endOffset":633,"count":0},{"startOffset":635,"endOffset":754,"count":0},{"startOffset":860,"endOffset":878,"count":0}],"isBlockCoverage":true},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":910,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1046,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1317,"endOffset":1474,"count":4},{"startOffset":1395,"endOffset":1455,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1498,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"exports.basename","ranges":[{"startOffset":1795,"endOffset":1992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4437,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3974,"endOffset":4313,"count":4}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4354,"endOffset":4433,"count":4},{"startOffset":4399,"endOffset":4414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27544,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25032,"count":4},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2079,"endOffset":2087,"count":0},{"startOffset":2127,"endOffset":2141,"count":0},{"startOffset":2175,"endOffset":2191,"count":0},{"startOffset":2221,"endOffset":2250,"count":0},{"startOffset":2322,"endOffset":2360,"count":0},{"startOffset":6880,"endOffset":8103,"count":0},{"startOffset":8184,"endOffset":23909,"count":86},{"startOffset":8238,"endOffset":8261,"count":0},{"startOffset":8330,"endOffset":9146,"count":0},{"startOffset":9292,"endOffset":9355,"count":0},{"startOffset":9357,"endOffset":10489,"count":0},{"startOffset":10632,"endOffset":10648,"count":0},{"startOffset":10650,"endOffset":10765,"count":0},{"startOffset":10828,"endOffset":10985,"count":0},{"startOffset":11046,"endOffset":11134,"count":0},{"startOffset":11159,"endOffset":11594,"count":0},{"startOffset":11659,"endOffset":12018,"count":0},{"startOffset":12043,"endOffset":13498,"count":0},{"startOffset":13553,"endOffset":13577,"count":0},{"startOffset":13579,"endOffset":13846,"count":0},{"startOffset":13871,"endOffset":15001,"count":0},{"startOffset":15056,"endOffset":15209,"count":0},{"startOffset":15265,"endOffset":15526,"count":0},{"startOffset":15583,"endOffset":16193,"count":34},{"startOffset":15874,"endOffset":15908,"count":0},{"startOffset":15910,"endOffset":16109,"count":0},{"startOffset":16193,"endOffset":16247,"count":52},{"startOffset":16247,"endOffset":16813,"count":5},{"startOffset":16276,"endOffset":16298,"count":0},{"startOffset":16300,"endOffset":16549,"count":0},{"startOffset":16733,"endOffset":16813,"count":0},{"startOffset":16813,"endOffset":16877,"count":47},{"startOffset":16877,"endOffset":17657,"count":0},{"startOffset":17657,"endOffset":17718,"count":47},{"startOffset":17718,"endOffset":18018,"count":0},{"startOffset":18018,"endOffset":18072,"count":47},{"startOffset":18072,"endOffset":18622,"count":0},{"startOffset":18622,"endOffset":18682,"count":47},{"startOffset":18682,"endOffset":18907,"count":0},{"startOffset":18907,"endOffset":18967,"count":47},{"startOffset":18967,"endOffset":19268,"count":36},{"startOffset":19011,"endOffset":19050,"count":0},{"startOffset":19268,"endOffset":19364,"count":11},{"startOffset":19366,"endOffset":19573,"count":0},{"startOffset":19573,"endOffset":19658,"count":11},{"startOffset":19660,"endOffset":19717,"count":0},{"startOffset":19717,"endOffset":19749,"count":11},{"startOffset":19749,"endOffset":22948,"count":4},{"startOffset":19787,"endOffset":19838,"count":0},{"startOffset":19949,"endOffset":19972,"count":0},{"startOffset":20094,"endOffset":20139,"count":0},{"startOffset":20141,"endOffset":20219,"count":0},{"startOffset":20260,"endOffset":20313,"count":0},{"startOffset":20355,"endOffset":20407,"count":0},{"startOffset":20428,"endOffset":20453,"count":0},{"startOffset":20454,"endOffset":20465,"count":0},{"startOffset":20466,"endOffset":20479,"count":0},{"startOffset":20481,"endOffset":20559,"count":0},{"startOffset":20636,"endOffset":20813,"count":0},{"startOffset":20846,"endOffset":20854,"count":0},{"startOffset":20856,"endOffset":21073,"count":0},{"startOffset":21161,"endOffset":21561,"count":0},{"startOffset":21693,"endOffset":21697,"count":0},{"startOffset":22178,"endOffset":22229,"count":0},{"startOffset":22231,"endOffset":22948,"count":0},{"startOffset":22948,"endOffset":23036,"count":7},{"startOffset":23036,"endOffset":23217,"count":0},{"startOffset":23217,"endOffset":23285,"count":7},{"startOffset":23286,"endOffset":23308,"count":0},{"startOffset":23310,"endOffset":23380,"count":0},{"startOffset":23380,"endOffset":23442,"count":7},{"startOffset":23443,"endOffset":23465,"count":0},{"startOffset":23467,"endOffset":23887,"count":7},{"startOffset":23500,"endOffset":23585,"count":0},{"startOffset":23701,"endOffset":23777,"count":0},{"startOffset":23805,"endOffset":23881,"count":3},{"startOffset":23887,"endOffset":23909,"count":7},{"startOffset":23940,"endOffset":24118,"count":0},{"startOffset":24147,"endOffset":24323,"count":0},{"startOffset":24352,"endOffset":24528,"count":0},{"startOffset":24618,"endOffset":24698,"count":0},{"startOffset":24792,"endOffset":25013,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1942,"endOffset":2046,"count":4},{"startOffset":2020,"endOffset":2033,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2854,"endOffset":2883,"count":94}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2913,"endOffset":2946,"count":7}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":2982,"endOffset":3014,"count":90},{"startOffset":3009,"endOffset":3014,"count":0}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3036,"endOffset":3070,"count":47}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3090,"endOffset":3173,"count":90}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3193,"endOffset":3304,"count":86},{"startOffset":3245,"endOffset":3259,"count":50},{"startOffset":3260,"endOffset":3273,"count":36}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3324,"endOffset":3600,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3623,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3700,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4074,"endOffset":5009,"count":86},{"startOffset":4117,"endOffset":4609,"count":4},{"startOffset":4158,"endOffset":4207,"count":0},{"startOffset":4274,"endOffset":4322,"count":0},{"startOffset":4357,"endOffset":4380,"count":0},{"startOffset":4381,"endOffset":4392,"count":0},{"startOffset":4393,"endOffset":4406,"count":0},{"startOffset":4408,"endOffset":4603,"count":0},{"startOffset":4635,"endOffset":4658,"count":0},{"startOffset":4660,"endOffset":4723,"count":0},{"startOffset":4743,"endOffset":4756,"count":0},{"startOffset":4808,"endOffset":4830,"count":37},{"startOffset":4832,"endOffset":4945,"count":7},{"startOffset":4867,"endOffset":4880,"count":1},{"startOffset":4945,"endOffset":5008,"count":79}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5034,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5491,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6972,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7814,"endOffset":7894,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25255,"endOffset":27517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/reporters/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89762,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":89757,"count":1}],"isBlockCoverage":true},{"functionName":"./src/BaseReporter.ts","ranges":[{"startOffset":358,"endOffset":1812,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":497,"endOffset":623,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":571,"endOffset":605,"count":3406}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":885,"endOffset":1768,"count":2}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":918,"endOffset":978,"count":1372}],"isBlockCoverage":true},{"functionName":"onRunStart","ranges":[{"startOffset":981,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"onTestCaseResult","ranges":[{"startOffset":1122,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"onTestResult","ranges":[{"startOffset":1168,"endOffset":1213,"count":1370}],"isBlockCoverage":true},{"functionName":"onTestStart","ranges":[{"startOffset":1216,"endOffset":1237,"count":1370}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":1240,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"_setError","ranges":[{"startOffset":1317,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"getLastError","ranges":[{"startOffset":1496,"endOffset":1540,"count":2}],"isBlockCoverage":true},{"functionName":"__beginSynchronizedUpdate","ranges":[{"startOffset":1543,"endOffset":1654,"count":1703},{"startOffset":1613,"endOffset":1650,"count":0}],"isBlockCoverage":true},{"functionName":"__endSynchronizedUpdate","ranges":[{"startOffset":1657,"endOffset":1766,"count":1703},{"startOffset":1725,"endOffset":1762,"count":0}],"isBlockCoverage":true},{"functionName":"./src/CoverageReporter.ts","ranges":[{"startOffset":1858,"endOffset":18096,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":2018,"endOffset":2154,"count":0}],"isBlockCoverage":false},{"functionName":"_v8Coverage","ranges":[{"startOffset":2155,"endOffset":2293,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":2294,"endOffset":2434,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":2382,"endOffset":2416,"count":1}],"isBlockCoverage":true},{"functionName":"_glob","ranges":[{"startOffset":2435,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"fs","ranges":[{"startOffset":2549,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"_istanbulLibCoverage","ranges":[{"startOffset":2689,"endOffset":2873,"count":0}],"isBlockCoverage":false},{"functionName":"_istanbulLibReport","ranges":[{"startOffset":2874,"endOffset":3052,"count":0}],"isBlockCoverage":false},{"functionName":"_istanbulLibSourceMaps","ranges":[{"startOffset":3053,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"_istanbulReports","ranges":[{"startOffset":3245,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"_v8ToIstanbul","ranges":[{"startOffset":3417,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":3581,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"_jestWorker","ranges":[{"startOffset":3708,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4023,"endOffset":4108,"count":3},{"startOffset":4085,"endOffset":4088,"count":2},{"startOffset":4089,"endOffset":4105,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":4109,"endOffset":4723,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5093,"endOffset":18048,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":5236,"endOffset":5264,"count":1}],"isBlockCoverage":true},{"functionName":"./src/DefaultReporter.ts","ranges":[{"startOffset":18141,"endOffset":25057,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":18301,"endOffset":18441,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":18389,"endOffset":18423,"count":0}],"isBlockCoverage":false},{"functionName":"_console","ranges":[{"startOffset":18442,"endOffset":18570,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":18571,"endOffset":18719,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":18720,"endOffset":18846,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":18794,"endOffset":18828,"count":3406}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":19211,"endOffset":19296,"count":5},{"startOffset":19273,"endOffset":19276,"count":4},{"startOffset":19277,"endOffset":19293,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":19544,"endOffset":25010,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":19724,"endOffset":19752,"count":1}],"isBlockCoverage":true},{"functionName":"DefaultReporter","ranges":[{"startOffset":19756,"endOffset":20427,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20170,"endOffset":20421,"count":332},{"startOffset":20244,"endOffset":20255,"count":0},{"startOffset":20390,"endOffset":20401,"count":0}],"isBlockCoverage":true},{"functionName":"__wrapStdio","ranges":[{"startOffset":20430,"endOffset":21678,"count":2}],"isBlockCoverage":true},{"functionName":"flushBufferedOutput","ranges":[{"startOffset":20574,"endOffset":21064,"count":1371},{"startOffset":20780,"endOffset":20791,"count":0},{"startOffset":20852,"endOffset":20884,"count":1370},{"startOffset":20977,"endOffset":20988,"count":0}],"isBlockCoverage":true},{"functionName":"debouncedFlush","ranges":[{"startOffset":21144,"endOffset":21567,"count":1370},{"startOffset":21391,"endOffset":21561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21454,"endOffset":21536,"count":0}],"isBlockCoverage":false},{"functionName":"stream.write","ranges":[{"startOffset":21588,"endOffset":21673,"count":1370}],"isBlockCoverage":true},{"functionName":"forceFlushBufferedOutput","ranges":[{"startOffset":21755,"endOffset":21884,"count":1371},{"startOffset":21844,"endOffset":21880,"count":1}],"isBlockCoverage":true},{"functionName":"__clearStatus","ranges":[{"startOffset":21887,"endOffset":22080,"count":1703},{"startOffset":21940,"endOffset":22076,"count":0}],"isBlockCoverage":true},{"functionName":"__printStatus","ranges":[{"startOffset":22083,"endOffset":22360,"count":1703},{"startOffset":22228,"endOffset":22356,"count":0}],"isBlockCoverage":true},{"functionName":"onRunStart","ranges":[{"startOffset":22363,"endOffset":22464,"count":1}],"isBlockCoverage":true},{"functionName":"onTestStart","ranges":[{"startOffset":22467,"endOffset":22552,"count":1370}],"isBlockCoverage":true},{"functionName":"onTestCaseResult","ranges":[{"startOffset":22555,"endOffset":22657,"count":0}],"isBlockCoverage":false},{"functionName":"onRunComplete","ranges":[{"startOffset":22660,"endOffset":22874,"count":1}],"isBlockCoverage":true},{"functionName":"onTestResult","ranges":[{"startOffset":22877,"endOffset":23269,"count":1370}],"isBlockCoverage":true},{"functionName":"testFinished","ranges":[{"startOffset":23272,"endOffset":23399,"count":1370}],"isBlockCoverage":true},{"functionName":"printTestFileHeader","ranges":[{"startOffset":23402,"endOffset":24648,"count":1370},{"startOffset":23536,"endOffset":24404,"count":27114},{"startOffset":23621,"endOffset":23651,"count":0},{"startOffset":23653,"endOffset":24398,"count":0},{"startOffset":24510,"endOffset":24644,"count":0}],"isBlockCoverage":true},{"functionName":"printTestFileFailureMessage","ranges":[{"startOffset":24651,"endOffset":25008,"count":1370},{"startOffset":24740,"endOffset":24786,"count":0},{"startOffset":24987,"endOffset":25004,"count":0}],"isBlockCoverage":true},{"functionName":"./src/GitHubActionsReporter.ts","ranges":[{"startOffset":25108,"endOffset":35841,"count":1}],"isBlockCoverage":true},{"functionName":"_util","ranges":[{"startOffset":25268,"endOffset":25381,"count":0}],"isBlockCoverage":false},{"functionName":"_chalk","ranges":[{"startOffset":25382,"endOffset":25522,"count":0}],"isBlockCoverage":false},{"functionName":"_jestMessageUtil","ranges":[{"startOffset":25523,"endOffset":25671,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":25672,"endOffset":25798,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":25746,"endOffset":25780,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":25889,"endOffset":25974,"count":1},{"startOffset":25955,"endOffset":25971,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26248,"endOffset":35788,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":26310,"endOffset":26338,"count":1}],"isBlockCoverage":true},{"functionName":"./src/NotifyReporter.ts","ranges":[{"startOffset":35885,"endOffset":41445,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":36045,"endOffset":36181,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":36129,"endOffset":36163,"count":0}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":36182,"endOffset":36318,"count":0}],"isBlockCoverage":false},{"functionName":"_exitX","ranges":[{"startOffset":36319,"endOffset":36460,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":36461,"endOffset":36587,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":36678,"endOffset":36763,"count":1},{"startOffset":36744,"endOffset":36760,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":36764,"endOffset":37378,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":36915,"endOffset":37368,"count":1},{"startOffset":36962,"endOffset":36971,"count":0},{"startOffset":37058,"endOffset":37083,"count":0},{"startOffset":37085,"endOffset":37094,"count":0},{"startOffset":37105,"endOffset":37108,"count":0},{"startOffset":37130,"endOffset":37146,"count":0},{"startOffset":37181,"endOffset":37356,"count":17},{"startOffset":37328,"endOffset":37340,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":37686,"endOffset":41121,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":37800,"endOffset":37828,"count":1}],"isBlockCoverage":true},{"functionName":"loadNotifier","ranges":[{"startOffset":41159,"endOffset":41436,"count":0}],"isBlockCoverage":false},{"functionName":"./src/Status.ts","ranges":[{"startOffset":41481,"endOffset":47180,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":41641,"endOffset":41781,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":41729,"endOffset":41763,"count":0}],"isBlockCoverage":false},{"functionName":"_stringLength","ranges":[{"startOffset":41782,"endOffset":41944,"count":1}],"isBlockCoverage":true},{"functionName":"_stringLength","ranges":[{"startOffset":41892,"endOffset":41926,"count":986}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":42323,"endOffset":42408,"count":6},{"startOffset":42385,"endOffset":42388,"count":4},{"startOffset":42389,"endOffset":42405,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":42891,"endOffset":43432,"count":1}],"isBlockCoverage":true},{"functionName":"CurrentTestList","ranges":[{"startOffset":42927,"endOffset":42968,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":42971,"endOffset":43210,"count":1370},{"startOffset":43119,"endOffset":43158,"count":3},{"startOffset":43158,"endOffset":43206,"count":1367}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":43213,"endOffset":43392,"count":1370},{"startOffset":43371,"endOffset":43378,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43268,"endOffset":43325,"count":2712},{"startOffset":43294,"endOffset":43325,"count":2710}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":43395,"endOffset":43430,"count":331}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":43599,"endOffset":47142,"count":1}],"isBlockCoverage":true},{"functionName":"Status","ranges":[{"startOffset":43772,"endOffset":44065,"count":1}],"isBlockCoverage":true},{"functionName":"onChange","ranges":[{"startOffset":44068,"endOffset":44123,"count":1}],"isBlockCoverage":true},{"functionName":"runStarted","ranges":[{"startOffset":44126,"endOffset":44425,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44319,"endOffset":44337,"count":83}],"isBlockCoverage":true},{"functionName":"runFinished","ranges":[{"startOffset":44428,"endOffset":44543,"count":1}],"isBlockCoverage":true},{"functionName":"addTestCaseResult","ranges":[{"startOffset":44546,"endOffset":44762,"count":0}],"isBlockCoverage":false},{"functionName":"testStarted","ranges":[{"startOffset":44765,"endOffset":44942,"count":1370},{"startOffset":44905,"endOffset":44938,"count":0}],"isBlockCoverage":true},{"functionName":"testFinished","ranges":[{"startOffset":44945,"endOffset":45383,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45204,"endOffset":45350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45386,"endOffset":46695,"count":1703},{"startOffset":45415,"endOffset":45448,"count":1371},{"startOffset":45448,"endOffset":45469,"count":332},{"startOffset":45469,"endOffset":45539,"count":1},{"startOffset":45539,"endOffset":45657,"count":331},{"startOffset":45657,"endOffset":46093,"count":993},{"startOffset":45677,"endOffset":46087,"count":987},{"startOffset":45806,"endOffset":45852,"count":0},{"startOffset":46093,"endOffset":46145,"count":331},{"startOffset":46147,"endOffset":46512,"count":331},{"startOffset":46512,"endOffset":46572,"count":72418},{"startOffset":46539,"endOffset":46566,"count":2642},{"startOffset":46572,"endOffset":46694,"count":331}],"isBlockCoverage":true},{"functionName":"_emit","ranges":[{"startOffset":46698,"endOffset":46777,"count":332}],"isBlockCoverage":true},{"functionName":"_debouncedEmit","ranges":[{"startOffset":46780,"endOffset":47097,"count":2824},{"startOffset":46829,"endOffset":47093,"count":331}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47006,"endOffset":47080,"count":331}],"isBlockCoverage":true},{"functionName":"_tick","ranges":[{"startOffset":47100,"endOffset":47140,"count":83}],"isBlockCoverage":true},{"functionName":"./src/SummaryReporter.ts","ranges":[{"startOffset":47225,"endOffset":54069,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":47385,"endOffset":47525,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":47473,"endOffset":47507,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":47900,"endOffset":47985,"count":5},{"startOffset":47962,"endOffset":47965,"count":4},{"startOffset":47966,"endOffset":47982,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":48606,"endOffset":54022,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":48718,"endOffset":48746,"count":1}],"isBlockCoverage":true},{"functionName":"SummaryReporter","ranges":[{"startOffset":48750,"endOffset":48969,"count":1}],"isBlockCoverage":true},{"functionName":"_validateOptions","ranges":[{"startOffset":48972,"endOffset":49171,"count":1},{"startOffset":49034,"endOffset":49081,"count":0},{"startOffset":49083,"endOffset":49167,"count":0}],"isBlockCoverage":true},{"functionName":"_write","ranges":[{"startOffset":49505,"endOffset":49623,"count":0}],"isBlockCoverage":false},{"functionName":"onRunStart","ranges":[{"startOffset":49626,"endOffset":49769,"count":1}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":49772,"endOffset":50881,"count":1},{"startOffset":50722,"endOffset":50778,"count":0}],"isBlockCoverage":true},{"functionName":"_printSnapshotSummary","ranges":[{"startOffset":50884,"endOffset":51967,"count":1},{"startOffset":51051,"endOffset":51963,"count":0}],"isBlockCoverage":true},{"functionName":"_printSummary","ranges":[{"startOffset":51970,"endOffset":52814,"count":1},{"startOffset":52343,"endOffset":52407,"count":0},{"startOffset":52409,"endOffset":52810,"count":0}],"isBlockCoverage":true},{"functionName":"_getTestSummary","ranges":[{"startOffset":52817,"endOffset":54020,"count":1},{"startOffset":53203,"endOffset":53266,"count":0},{"startOffset":53302,"endOffset":53377,"count":0},{"startOffset":53413,"endOffset":53461,"count":0},{"startOffset":53522,"endOffset":53608,"count":0},{"startOffset":53648,"endOffset":53757,"count":0},{"startOffset":53804,"endOffset":53890,"count":0}],"isBlockCoverage":true},{"functionName":"getMatchingTestsInfo","ranges":[{"startOffset":52956,"endOffset":53141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53574,"endOffset":53587,"count":0}],"isBlockCoverage":false},{"functionName":"./src/VerboseReporter.ts","ranges":[{"startOffset":54114,"endOffset":59224,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":54274,"endOffset":54414,"count":0}],"isBlockCoverage":false},{"functionName":"_jestUtil","ranges":[{"startOffset":54415,"endOffset":54541,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":54489,"endOffset":54523,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":54638,"endOffset":54723,"count":1},{"startOffset":54704,"endOffset":54720,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":54962,"endOffset":59177,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":55038,"endOffset":55066,"count":1}],"isBlockCoverage":true},{"functionName":"./src/formatTestPath.ts","ranges":[{"startOffset":59268,"endOffset":61090,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":59436,"endOffset":59572,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":59520,"endOffset":59554,"count":1369}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":59573,"endOffset":59713,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":59661,"endOffset":59695,"count":2739}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":59714,"endOffset":59854,"count":1}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":59802,"endOffset":59836,"count":1369}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":59945,"endOffset":60030,"count":3},{"startOffset":60007,"endOffset":60010,"count":1},{"startOffset":60011,"endOffset":60027,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":60031,"endOffset":60645,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":60182,"endOffset":60635,"count":1},{"startOffset":60229,"endOffset":60238,"count":0},{"startOffset":60325,"endOffset":60350,"count":0},{"startOffset":60352,"endOffset":60361,"count":0},{"startOffset":60372,"endOffset":60375,"count":0},{"startOffset":60397,"endOffset":60413,"count":0},{"startOffset":60448,"endOffset":60623,"count":17},{"startOffset":60595,"endOffset":60607,"count":0}],"isBlockCoverage":true},{"functionName":"formatTestPath","ranges":[{"startOffset":60838,"endOffset":61081,"count":1370}],"isBlockCoverage":true},{"functionName":"./src/getResultHeader.ts","ranges":[{"startOffset":61135,"endOffset":63348,"count":1},{"startOffset":62301,"endOffset":62360,"count":0},{"startOffset":62418,"endOffset":62479,"count":0}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":61304,"endOffset":61444,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":61392,"endOffset":61426,"count":2}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":61445,"endOffset":61571,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":61519,"endOffset":61553,"count":4}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":61764,"endOffset":61849,"count":3},{"startOffset":61826,"endOffset":61829,"count":2},{"startOffset":61830,"endOffset":61846,"count":1}],"isBlockCoverage":true},{"functionName":"getResultHeader","ranges":[{"startOffset":62493,"endOffset":63339,"count":1370},{"startOffset":62665,"endOffset":62671,"count":0},{"startOffset":62735,"endOffset":62872,"count":5},{"startOffset":62899,"endOffset":63028,"count":0},{"startOffset":63101,"endOffset":63154,"count":0},{"startOffset":63247,"endOffset":63262,"count":0},{"startOffset":63298,"endOffset":63329,"count":5},{"startOffset":63330,"endOffset":63334,"count":1365}],"isBlockCoverage":true},{"functionName":"toMB","ranges":[{"startOffset":62918,"endOffset":62958,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getSnapshotStatus.ts","ranges":[{"startOffset":63395,"endOffset":65406,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":63545,"endOffset":63685,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":63633,"endOffset":63667,"count":3}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":63686,"endOffset":63812,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":63813,"endOffset":63898,"count":1},{"startOffset":63875,"endOffset":63878,"count":0}],"isBlockCoverage":true},{"functionName":"getSnapshotStatus","ranges":[{"startOffset":64349,"endOffset":65397,"count":1370},{"startOffset":64446,"endOffset":64564,"count":0},{"startOffset":64589,"endOffset":64711,"count":0},{"startOffset":64738,"endOffset":64855,"count":0},{"startOffset":64882,"endOffset":65271,"count":0},{"startOffset":65300,"endOffset":65376,"count":0}],"isBlockCoverage":true},{"functionName":"./src/getSnapshotSummary.ts","ranges":[{"startOffset":65454,"endOffset":69460,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":65626,"endOffset":65766,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":65714,"endOffset":65748,"count":6}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":65767,"endOffset":65893,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":65988,"endOffset":66073,"count":2},{"startOffset":66050,"endOffset":66053,"count":1},{"startOffset":66054,"endOffset":66070,"count":1}],"isBlockCoverage":true},{"functionName":"getSnapshotSummary","ranges":[{"startOffset":66698,"endOffset":69451,"count":0}],"isBlockCoverage":false},{"functionName":"./src/getSummary.ts","ranges":[{"startOffset":69500,"endOffset":76275,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":69680,"endOffset":69820,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":69768,"endOffset":69802,"count":2599}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":69821,"endOffset":69947,"count":1}],"isBlockCoverage":true},{"functionName":"_jestUtil","ranges":[{"startOffset":69895,"endOffset":69929,"count":331}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":69948,"endOffset":70033,"count":1},{"startOffset":70010,"endOffset":70013,"count":0}],"isBlockCoverage":true},{"functionName":"getValuesCurrentTestCases","ranges":[{"startOffset":70286,"endOffset":71058,"count":332},{"startOffset":70519,"endOffset":70941,"count":0}],"isBlockCoverage":true},{"functionName":"renderTime","ranges":[{"startOffset":71059,"endOffset":72056,"count":332},{"startOffset":71224,"endOffset":71255,"count":0},{"startOffset":71256,"endOffset":71327,"count":0},{"startOffset":71475,"endOffset":71556,"count":0},{"startOffset":71670,"endOffset":71696,"count":0},{"startOffset":71697,"endOffset":71705,"count":0},{"startOffset":71707,"endOffset":72039,"count":0}],"isBlockCoverage":true},{"functionName":"getSummary","ranges":[{"startOffset":72057,"endOffset":76266,"count":332},{"startOffset":72210,"endOffset":72250,"count":331},{"startOffset":73565,"endOffset":73802,"count":0},{"startOffset":73878,"endOffset":73938,"count":0},{"startOffset":73962,"endOffset":74027,"count":0},{"startOffset":74050,"endOffset":74112,"count":329},{"startOffset":74113,"endOffset":74117,"count":3},{"startOffset":74148,"endOffset":74161,"count":2},{"startOffset":74162,"endOffset":74196,"count":330},{"startOffset":74712,"endOffset":74778,"count":0},{"startOffset":74812,"endOffset":74883,"count":285},{"startOffset":74884,"endOffset":74888,"count":47},{"startOffset":74914,"endOffset":74980,"count":0},{"startOffset":75013,"endOffset":75081,"count":329},{"startOffset":75082,"endOffset":75086,"count":3},{"startOffset":75198,"endOffset":75261,"count":0},{"startOffset":75289,"endOffset":75311,"count":0},{"startOffset":75312,"endOffset":75382,"count":0},{"startOffset":75410,"endOffset":75431,"count":0},{"startOffset":75432,"endOffset":75500,"count":0},{"startOffset":75532,"endOffset":75554,"count":0},{"startOffset":75555,"endOffset":75665,"count":0},{"startOffset":75697,"endOffset":75718,"count":0},{"startOffset":75719,"endOffset":75827,"count":0},{"startOffset":75854,"endOffset":75921,"count":0},{"startOffset":75946,"endOffset":76011,"count":0},{"startOffset":76037,"endOffset":76102,"count":329},{"startOffset":76103,"endOffset":76107,"count":3}],"isBlockCoverage":true},{"functionName":"./src/getWatermarks.ts","ranges":[{"startOffset":76318,"endOffset":77969,"count":1}],"isBlockCoverage":true},{"functionName":"istanbulReport","ranges":[{"startOffset":76464,"endOffset":76635,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":76636,"endOffset":77250,"count":0}],"isBlockCoverage":false},{"functionName":"getWatermarks","ranges":[{"startOffset":77443,"endOffset":77960,"count":0}],"isBlockCoverage":false},{"functionName":"./src/printDisplayName.ts","ranges":[{"startOffset":78015,"endOffset":78958,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":78164,"endOffset":78304,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":78305,"endOffset":78390,"count":0}],"isBlockCoverage":false},{"functionName":"printDisplayName","ranges":[{"startOffset":78583,"endOffset":78949,"count":0}],"isBlockCoverage":false},{"functionName":"./src/relativePath.ts","ranges":[{"startOffset":79000,"endOffset":80588,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":79145,"endOffset":79281,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":79229,"endOffset":79263,"count":7070}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":79282,"endOffset":79896,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":79433,"endOffset":79886,"count":1},{"startOffset":79480,"endOffset":79489,"count":0},{"startOffset":79576,"endOffset":79601,"count":0},{"startOffset":79603,"endOffset":79612,"count":0},{"startOffset":79623,"endOffset":79626,"count":0},{"startOffset":79648,"endOffset":79664,"count":0},{"startOffset":79699,"endOffset":79874,"count":17},{"startOffset":79846,"endOffset":79858,"count":0}],"isBlockCoverage":true},{"functionName":"relativePath","ranges":[{"startOffset":80089,"endOffset":80579,"count":2357},{"startOffset":80416,"endOffset":80433,"count":0}],"isBlockCoverage":true},{"functionName":"./src/trimAndFormatPath.ts","ranges":[{"startOffset":80635,"endOffset":83350,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":80806,"endOffset":80942,"count":1}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":80890,"endOffset":80924,"count":986}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":80943,"endOffset":81083,"count":1}],"isBlockCoverage":true},{"functionName":"_chalk","ranges":[{"startOffset":81031,"endOffset":81065,"count":986}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":81084,"endOffset":81224,"count":1}],"isBlockCoverage":true},{"functionName":"_slash","ranges":[{"startOffset":81172,"endOffset":81206,"count":986}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":81315,"endOffset":81400,"count":3},{"startOffset":81377,"endOffset":81380,"count":1},{"startOffset":81381,"endOffset":81397,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":81401,"endOffset":82015,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":81552,"endOffset":82005,"count":1},{"startOffset":81599,"endOffset":81608,"count":0},{"startOffset":81695,"endOffset":81720,"count":0},{"startOffset":81722,"endOffset":81731,"count":0},{"startOffset":81742,"endOffset":81745,"count":0},{"startOffset":81767,"endOffset":81783,"count":0},{"startOffset":81818,"endOffset":81993,"count":17},{"startOffset":81965,"endOffset":81977,"count":0}],"isBlockCoverage":true},{"functionName":"trimAndFormatPath","ranges":[{"startOffset":82208,"endOffset":83341,"count":987},{"startOffset":82524,"endOffset":82641,"count":0},{"startOffset":82773,"endOffset":83017,"count":0},{"startOffset":83058,"endOffset":83173,"count":0}],"isBlockCoverage":true},{"functionName":"./src/wrapAnsiString.ts","ranges":[{"startOffset":83394,"endOffset":85290,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsiString","ranges":[{"startOffset":83850,"endOffset":85281,"count":987},{"startOffset":83926,"endOffset":84015,"count":0},{"startOffset":84166,"endOffset":84399,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84548,"endOffset":85260,"count":987},{"startOffset":84662,"endOffset":85082,"count":0},{"startOffset":85185,"endOffset":85238,"count":0}],"isBlockCoverage":true},{"functionName":"__webpack_require__","ranges":[{"startOffset":85512,"endOffset":86240,"count":37},{"startOffset":85704,"endOffset":85759,"count":19},{"startOffset":85759,"endOffset":86239,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86466,"endOffset":89703,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":86655,"endOffset":86706,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":86793,"endOffset":86848,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":86934,"endOffset":86988,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":87080,"endOffset":87140,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":87225,"endOffset":87278,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":87364,"endOffset":87418,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":87504,"endOffset":87558,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":89032,"endOffset":89117,"count":15},{"startOffset":89098,"endOffset":89114,"count":0}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jest/test-result/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228,"endOffset":9707,"count":1}],"isBlockCoverage":true},{"functionName":"./src/formatTestResults.ts","ranges":[{"startOffset":363,"endOffset":2272,"count":1}],"isBlockCoverage":true},{"functionName":"formatTestResult","ranges":[{"startOffset":730,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"formatTestResults","ranges":[{"startOffset":2019,"endOffset":2263,"count":0}],"isBlockCoverage":false},{"functionName":"./src/helpers.ts","ranges":[{"startOffset":2309,"endOffset":7376,"count":1}],"isBlockCoverage":true},{"functionName":"makeEmptyAggregatedTestResult","ranges":[{"startOffset":2782,"endOffset":3535,"count":1}],"isBlockCoverage":true},{"functionName":"buildFailureTestResult","ranges":[{"startOffset":3639,"endOffset":4326,"count":0}],"isBlockCoverage":false},{"functionName":"addResult","ranges":[{"startOffset":4463,"endOffset":6613,"count":1370},{"startOffset":5163,"endOffset":5219,"count":0},{"startOffset":5246,"endOffset":5297,"count":0},{"startOffset":5367,"endOffset":5417,"count":0},{"startOffset":5527,"endOffset":5577,"count":0},{"startOffset":5617,"endOffset":5669,"count":0},{"startOffset":5707,"endOffset":5761,"count":0},{"startOffset":5797,"endOffset":5849,"count":0},{"startOffset":6154,"endOffset":6312,"count":0}],"isBlockCoverage":true},{"functionName":"createEmptyTestResult","ranges":[{"startOffset":6676,"endOffset":7311,"count":0}],"isBlockCoverage":false},{"functionName":"__webpack_require__","ranges":[{"startOffset":7598,"endOffset":8326,"count":2},{"startOffset":7790,"endOffset":7845,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8552,"endOffset":9653,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8738,"endOffset":8786,"count":1370}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8879,"endOffset":8940,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9032,"endOffset":9092,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9180,"endOffset":9236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9336,"endOffset":9404,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":9566,"endOffset":9651,"count":1},{"startOffset":9632,"endOffset":9648,"count":0}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/fast-json-stable-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":1843,"count":2},{"startOffset":118,"endOffset":139,"count":0},{"startOffset":192,"endOffset":205,"count":0},{"startOffset":239,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":507,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":552,"endOffset":1833,"count":216},{"startOffset":597,"endOffset":611,"count":156},{"startOffset":612,"endOffset":648,"count":0},{"startOffset":650,"endOffset":695,"count":0},{"startOffset":729,"endOffset":736,"count":26},{"startOffset":736,"endOffset":774,"count":190},{"startOffset":774,"endOffset":817,"count":4},{"startOffset":808,"endOffset":816,"count":0},{"startOffset":817,"endOffset":856,"count":186},{"startOffset":856,"endOffset":884,"count":130},{"startOffset":884,"endOffset":939,"count":56},{"startOffset":939,"endOffset":1153,"count":44},{"startOffset":1010,"endOffset":1113,"count":76},{"startOffset":1035,"endOffset":1046,"count":46},{"startOffset":1089,"endOffset":1098,"count":0},{"startOffset":1153,"endOffset":1182,"count":12},{"startOffset":1182,"endOffset":1196,"count":0},{"startOffset":1196,"endOffset":1237,"count":12},{"startOffset":1237,"endOffset":1382,"count":0},{"startOffset":1382,"endOffset":1475,"count":12},{"startOffset":1475,"endOffset":1487,"count":0},{"startOffset":1550,"endOffset":1760,"count":138},{"startOffset":1654,"endOffset":1663,"count":26},{"startOffset":1663,"endOffset":1685,"count":112},{"startOffset":1685,"endOffset":1696,"count":104},{"startOffset":1696,"endOffset":1760,"count":112},{"startOffset":1760,"endOffset":1832,"count":12}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/pirates/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5679,"count":1},{"startOffset":347,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"shouldCompile","ranges":[{"startOffset":1318,"endOffset":1778,"count":1},{"startOffset":1423,"endOffset":1446,"count":0},{"startOffset":1498,"endOffset":1521,"count":0},{"startOffset":1599,"endOffset":1641,"count":0},{"startOffset":1643,"endOffset":1666,"count":0},{"startOffset":1760,"endOffset":1777,"count":0}],"isBlockCoverage":true},{"functionName":"addHook","ranges":[{"startOffset":3202,"endOffset":5650,"count":1},{"startOffset":3623,"endOffset":3630,"count":0},{"startOffset":3732,"endOffset":3749,"count":0},{"startOffset":3750,"endOffset":3761,"count":0},{"startOffset":3762,"endOffset":3772,"count":0},{"startOffset":3802,"endOffset":3826,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3843,"endOffset":5106,"count":9},{"startOffset":3887,"endOffset":3950,"count":0},{"startOffset":3997,"endOffset":4016,"count":6}],"isBlockCoverage":true},{"functionName":"newLoader","ranges":[{"startOffset":4111,"endOffset":5101,"count":1},{"startOffset":4260,"endOffset":5054,"count":0}],"isBlockCoverage":true},{"functionName":"_compile","ranges":[{"startOffset":4321,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"revert","ranges":[{"startOffset":5118,"endOffset":5647,"count":2},{"startOffset":5156,"endOffset":5646,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5203,"endOffset":5641,"count":9},{"startOffset":5504,"endOffset":5557,"count":6},{"startOffset":5557,"endOffset":5627,"count":3}],"isBlockCoverage":true}]},{"scriptId":"547","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-light-runner/src/child-process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"548","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-light-runner/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5408,"count":1}],"isBlockCoverage":true},{"functionName":"createRunner","ranges":[{"startOffset":263,"endOffset":4799,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":324,"endOffset":4799,"count":1}],"isBlockCoverage":true},{"functionName":"LightRunner","ranges":[{"startOffset":472,"endOffset":1348,"count":1},{"startOffset":1234,"endOffset":1249,"count":0}],"isBlockCoverage":true},{"functionName":"runTests","ranges":[{"startOffset":1511,"endOffset":2932,"count":1},{"startOffset":2166,"endOffset":2853,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1742,"endOffset":1965,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1766,"endOffset":1952,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1818,"endOffset":1843,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1865,"endOffset":1897,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1920,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"process.kill","ranges":[{"startOffset":2606,"endOffset":2840,"count":3},{"startOffset":2769,"endOffset":2839,"count":0}],"isBlockCoverage":true},{"functionName":"_runTest","ranges":[{"startOffset":2938,"endOffset":4795,"count":1370},{"startOffset":3084,"endOffset":4737,"count":1},{"startOffset":3275,"endOffset":3517,"count":0},{"startOffset":3677,"endOffset":3697,"count":0}],"isBlockCoverage":true},{"functionName":"onMessage","ranges":[{"startOffset":4116,"endOffset":4190,"count":1370}],"isBlockCoverage":true},{"functionName":"postMessage","ranges":[{"startOffset":4204,"endOffset":4541,"count":3},{"startOffset":4294,"endOffset":4335,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":4674,"endOffset":4716,"count":1370}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4901,"endOffset":5350,"count":0}],"isBlockCoverage":true}]},{"scriptId":"549","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/tinypool/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31502,"count":1},{"startOffset":2953,"endOffset":3394,"count":0},{"startOffset":3397,"endOffset":3435,"count":0},{"startOffset":31223,"endOffset":31233,"count":0}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":752,"endOffset":873,"count":1}],"isBlockCoverage":true},{"functionName":"get eventEmitter","ranges":[{"startOffset":876,"endOffset":932,"count":0}],"isBlockCoverage":false},{"functionName":"_EventEmitterAsyncResource","ranges":[{"startOffset":1029,"endOffset":1360,"count":1},{"startOffset":1103,"endOffset":1156,"count":0},{"startOffset":1191,"endOffset":1209,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":1363,"endOffset":1470,"count":1370}],"isBlockCoverage":true},{"functionName":"emitDestroy","ranges":[{"startOffset":1473,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"asyncId","ranges":[{"startOffset":1533,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":1592,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":1665,"endOffset":1723,"count":2740}],"isBlockCoverage":true},{"functionName":"get EventEmitterAsyncResource","ranges":[{"startOffset":1733,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2367,"endOffset":2518,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3193,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"ThreadWorker","ranges":[{"startOffset":3576,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":3773,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":3938,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":4000,"endOffset":4107,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":4110,"endOffset":4179,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":4182,"endOffset":4255,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4258,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":4332,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":4376,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"setChannel","ranges":[{"startOffset":4424,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessWorker","ranges":[{"startOffset":4825,"endOffset":5313,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5219,"endOffset":5307,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":5316,"endOffset":5741,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5702,"endOffset":5735,"count":3}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":5744,"endOffset":6054,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5886,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"setChannel","ranges":[{"startOffset":6057,"endOffset":6186,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6134,"endOffset":6180,"count":3}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":6189,"endOffset":6279,"count":1376}],"isBlockCoverage":true},{"functionName":"postMessage","ranges":[{"startOffset":6282,"endOffset":6731,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6353,"endOffset":6445,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6499,"endOffset":6614,"count":1370}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":6734,"endOffset":7143,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6790,"endOffset":7137,"count":1376},{"startOffset":6831,"endOffset":6871,"count":0},{"startOffset":6926,"endOffset":6983,"count":3},{"startOffset":6983,"endOffset":7018,"count":1373},{"startOffset":7018,"endOffset":7051,"count":3},{"startOffset":7051,"endOffset":7131,"count":1370}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":7146,"endOffset":7220,"count":6}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":7223,"endOffset":7295,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":7298,"endOffset":7340,"count":3}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7343,"endOffset":7448,"count":3}],"isBlockCoverage":true},{"functionName":"onabort","ranges":[{"startOffset":7492,"endOffset":7703,"count":0}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":7745,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7807,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"CancelError","ranges":[{"startOffset":7894,"endOffset":7955,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7958,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTaskQueue","ranges":[{"startOffset":8035,"endOffset":8092,"count":2}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":8095,"endOffset":8141,"count":4114}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":8144,"endOffset":8188,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":8191,"endOffset":8234,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":8237,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":8373,"endOffset":8488,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":8952,"endOffset":9055,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":9058,"endOffset":9124,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":9127,"endOffset":9186,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9269,"endOffset":9368,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9371,"endOffset":9443,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9446,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFileURLToPath","ranges":[{"startOffset":9554,"endOffset":9681,"count":1371},{"startOffset":9632,"endOffset":9667,"count":1},{"startOffset":9668,"endOffset":9678,"count":1370}],"isBlockCoverage":true},{"functionName":"TaskInfo","ranges":[{"startOffset":9730,"endOffset":10981,"count":1370},{"startOffset":10603,"endOffset":10794,"count":0}],"isBlockCoverage":true},{"functionName":"TaskInfo.cancel","ranges":[{"startOffset":10504,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"releaseTask","ranges":[{"startOffset":10984,"endOffset":11068,"count":1370}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":11071,"endOffset":11478,"count":1370},{"startOffset":11200,"endOffset":11221,"count":0},{"startOffset":11223,"endOffset":11474,"count":0}],"isBlockCoverage":true},{"functionName":"TaskInfo","ranges":[{"startOffset":11481,"endOffset":11581,"count":0}],"isBlockCoverage":false},{"functionName":"AsynchronouslyCreatedResource","ranges":[{"startOffset":11631,"endOffset":11699,"count":3}],"isBlockCoverage":true},{"functionName":"markAsReady","ranges":[{"startOffset":11702,"endOffset":11896,"count":3},{"startOffset":11867,"endOffset":11892,"count":0}],"isBlockCoverage":true},{"functionName":"isReady","ranges":[{"startOffset":11899,"endOffset":11957,"count":3}],"isBlockCoverage":true},{"functionName":"onReady","ranges":[{"startOffset":11960,"endOffset":12087,"count":3},{"startOffset":12047,"endOffset":12086,"count":0}],"isBlockCoverage":true},{"functionName":"AsynchronouslyCreatedResourcePool","ranges":[{"startOffset":12141,"endOffset":12470,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":12473,"endOffset":12713,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12535,"endOffset":12707,"count":3}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":12716,"endOffset":12804,"count":3}],"isBlockCoverage":true},{"functionName":"findAvailable","ranges":[{"startOffset":12807,"endOffset":13137,"count":1370},{"startOffset":12929,"endOffset":13111,"count":2712},{"startOffset":13003,"endOffset":13015,"count":1370},{"startOffset":13015,"endOffset":13044,"count":1342},{"startOffset":13044,"endOffset":13105,"count":0},{"startOffset":13111,"endOffset":13136,"count":0}],"isBlockCoverage":true},{"functionName":"AsynchronouslyCreatedResourcePool","ranges":[{"startOffset":13140,"endOffset":13224,"count":1374},{"startOffset":13220,"endOffset":13223,"count":1371}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":13227,"endOffset":13301,"count":1381}],"isBlockCoverage":true},{"functionName":"maybeAvailable","ranges":[{"startOffset":13304,"endOffset":13477,"count":1373}],"isBlockCoverage":true},{"functionName":"onAvailable","ranges":[{"startOffset":13480,"endOffset":13541,"count":1}],"isBlockCoverage":true},{"functionName":"ThreadTermination","ranges":[{"startOffset":13581,"endOffset":13625,"count":0}],"isBlockCoverage":false},{"functionName":"FilenameNotProvided","ranges":[{"startOffset":13650,"endOffset":13724,"count":0}],"isBlockCoverage":false},{"functionName":"TaskQueueAtLimit","ranges":[{"startOffset":13746,"endOffset":13787,"count":0}],"isBlockCoverage":false},{"functionName":"NoTaskQueueAvailable","ranges":[{"startOffset":13813,"endOffset":13880,"count":0}],"isBlockCoverage":false},{"functionName":"WorkerInfo","ranges":[{"startOffset":13949,"endOffset":14847,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14612,"endOffset":14654,"count":1370}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":14850,"endOffset":15463,"count":3},{"startOffset":15027,"endOffset":15103,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14936,"endOffset":14998,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15040,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15145,"endOffset":15441,"count":3},{"startOffset":15179,"endOffset":15217,"count":0},{"startOffset":15328,"endOffset":15388,"count":0}],"isBlockCoverage":true},{"functionName":"clearIdleTimeout","ranges":[{"startOffset":15466,"endOffset":15602,"count":1373},{"startOffset":15522,"endOffset":15598,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":15605,"endOffset":15654,"count":1370}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":15657,"endOffset":15710,"count":1370}],"isBlockCoverage":true},{"functionName":"_handleResponse","ranges":[{"startOffset":15713,"endOffset":15877,"count":1370}],"isBlockCoverage":true},{"functionName":"postTask","ranges":[{"startOffset":15880,"endOffset":16587,"count":1370},{"startOffset":16275,"endOffset":16334,"count":0}],"isBlockCoverage":true},{"functionName":"processPendingMessages","ranges":[{"startOffset":16590,"endOffset":16969,"count":4110},{"startOffset":16763,"endOffset":16965,"count":0}],"isBlockCoverage":true},{"functionName":"isRunningAbortableTask","ranges":[{"startOffset":16972,"endOffset":17134,"count":6828},{"startOffset":17040,"endOffset":17053,"count":5483},{"startOffset":17053,"endOffset":17133,"count":1345}],"isBlockCoverage":true},{"functionName":"currentUsage","ranges":[{"startOffset":17137,"endOffset":17251,"count":6828},{"startOffset":17199,"endOffset":17215,"count":0}],"isBlockCoverage":true},{"functionName":"ThreadPool","ranges":[{"startOffset":17282,"endOffset":18938,"count":1},{"startOffset":18003,"endOffset":18009,"count":0},{"startOffset":18422,"endOffset":18489,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18655,"endOffset":18678,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18808,"endOffset":18841,"count":1373}],"isBlockCoverage":true},{"functionName":"_ensureEnoughWorkersForTaskQueue","ranges":[{"startOffset":18941,"endOffset":19116,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureMaximumWorkers","ranges":[{"startOffset":19119,"endOffset":19240,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureMinimumWorkers","ranges":[{"startOffset":19243,"endOffset":19364,"count":1},{"startOffset":19325,"endOffset":19360,"count":3}],"isBlockCoverage":true},{"functionName":"_addNewWorker","ranges":[{"startOffset":19367,"endOffset":22247,"count":3},{"startOffset":19776,"endOffset":19796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19486,"endOffset":19645,"count":9},{"startOffset":19543,"endOffset":19555,"count":6},{"startOffset":19557,"endOffset":19639,"count":3}],"isBlockCoverage":true},{"functionName":"onMessage","ranges":[{"startOffset":20148,"endOffset":20695,"count":1370},{"startOffset":20444,"endOffset":20589,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20811,"endOffset":20846,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21197,"endOffset":21542,"count":3},{"startOffset":21295,"endOffset":21336,"count":0},{"startOffset":21372,"endOffset":21419,"count":0},{"startOffset":21443,"endOffset":21541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21568,"endOffset":22129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22174,"endOffset":22207,"count":3}],"isBlockCoverage":true},{"functionName":"_processPendingMessages","ranges":[{"startOffset":22250,"endOffset":22589,"count":1370},{"startOffset":22345,"endOffset":22366,"count":0},{"startOffset":22464,"endOffset":22518,"count":4110}],"isBlockCoverage":true},{"functionName":"_removeWorker","ranges":[{"startOffset":22592,"endOffset":22753,"count":3}],"isBlockCoverage":true},{"functionName":"_onWorkerAvailable","ranges":[{"startOffset":22756,"endOffset":23641,"count":1373},{"startOffset":22855,"endOffset":22923,"count":0},{"startOffset":22925,"endOffset":23278,"count":0},{"startOffset":23367,"endOffset":23637,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23411,"endOffset":23595,"count":0}],"isBlockCoverage":false},{"functionName":"runTask","ranges":[{"startOffset":23644,"endOffset":26457,"count":1370},{"startOffset":23948,"endOffset":24014,"count":0},{"startOffset":24730,"endOffset":25156,"count":0},{"startOffset":25190,"endOffset":25698,"count":0},{"startOffset":25811,"endOffset":25820,"count":0},{"startOffset":25822,"endOffset":25854,"count":0},{"startOffset":25955,"endOffset":26001,"count":0},{"startOffset":26003,"endOffset":26072,"count":0},{"startOffset":26102,"endOffset":26315,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24121,"endOffset":24183,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24256,"endOffset":24639,"count":1370},{"startOffset":24323,"endOffset":24353,"count":0},{"startOffset":24400,"endOffset":24593,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24455,"endOffset":24489,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24496,"endOffset":24541,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24548,"endOffset":24569,"count":0}],"isBlockCoverage":false},{"functionName":"taskInfo.abortListener","ranges":[{"startOffset":24848,"endOffset":25102,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRecycleWorker","ranges":[{"startOffset":26460,"endOffset":26879,"count":2740},{"startOffset":26537,"endOffset":26563,"count":0},{"startOffset":26600,"endOffset":26623,"count":0},{"startOffset":26625,"endOffset":26651,"count":0},{"startOffset":26744,"endOffset":26829,"count":0},{"startOffset":26831,"endOffset":26857,"count":0}],"isBlockCoverage":true},{"functionName":"pendingCapacity","ranges":[{"startOffset":26882,"endOffset":26988,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeDrain","ranges":[{"startOffset":26991,"endOffset":27126,"count":1370}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":27129,"endOffset":27695,"count":1},{"startOffset":27185,"endOffset":27300,"count":0},{"startOffset":27337,"endOffset":27452,"count":0},{"startOffset":27514,"endOffset":27656,"count":3}],"isBlockCoverage":true},{"functionName":"recycleWorkers","ranges":[{"startOffset":27698,"endOffset":28350,"count":0}],"isBlockCoverage":false},{"functionName":"Tinypool","ranges":[{"startOffset":28432,"endOffset":29187,"count":1},{"startOffset":28551,"endOffset":28641,"count":0},{"startOffset":28733,"endOffset":28823,"count":0},{"startOffset":29023,"endOffset":29121,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":29190,"endOffset":29467,"count":1370}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":29470,"endOffset":29533,"count":1}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":29536,"endOffset":29601,"count":0}],"isBlockCoverage":false},{"functionName":"get threads","ranges":[{"startOffset":29604,"endOffset":29766,"count":1},{"startOffset":29704,"endOffset":29746,"count":3}],"isBlockCoverage":true},{"functionName":"get queueSize","ranges":[{"startOffset":29769,"endOffset":29904,"count":0}],"isBlockCoverage":false},{"functionName":"cancelPendingTasks","ranges":[{"startOffset":29907,"endOffset":30006,"count":0}],"isBlockCoverage":false},{"functionName":"recycleWorkers","ranges":[{"startOffset":30009,"endOffset":30110,"count":0}],"isBlockCoverage":false},{"functionName":"get completed","ranges":[{"startOffset":30113,"endOffset":30182,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":30185,"endOffset":30269,"count":0}],"isBlockCoverage":false},{"functionName":"get isWorkerThread","ranges":[{"startOffset":30279,"endOffset":30369,"count":0}],"isBlockCoverage":false},{"functionName":"get workerData","ranges":[{"startOffset":30379,"endOffset":30462,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":30472,"endOffset":30606,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":30616,"endOffset":30970,"count":0}],"isBlockCoverage":false},{"functionName":"get transferableSymbol","ranges":[{"startOffset":30980,"endOffset":31036,"count":0}],"isBlockCoverage":false},{"functionName":"get valueSymbol","ranges":[{"startOffset":31046,"endOffset":31088,"count":0}],"isBlockCoverage":false},{"functionName":"get queueOptionsSymbol","ranges":[{"startOffset":31098,"endOffset":31154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/tinypool/dist/esm/chunk-FJA3Y3DX.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1078,"count":1}],"isBlockCoverage":true},{"functionName":"isTransferable","ranges":[{"startOffset":220,"endOffset":352,"count":1370},{"startOffset":305,"endOffset":330,"count":0},{"startOffset":331,"endOffset":349,"count":0}],"isBlockCoverage":true},{"functionName":"isMovable","ranges":[{"startOffset":353,"endOffset":442,"count":1370},{"startOffset":412,"endOffset":439,"count":0}],"isBlockCoverage":true},{"functionName":"markMovable","ranges":[{"startOffset":443,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"isTaskQueue","ranges":[{"startOffset":607,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/tinypool/dist/esm/chunk-T6A5DJAH.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1424,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":61,"endOffset":198,"count":17892},{"startOffset":93,"endOffset":179,"count":0}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":220,"endOffset":333,"count":17892},{"startOffset":290,"endOffset":300,"count":17890},{"startOffset":301,"endOffset":306,"count":2}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":355,"endOffset":442,"count":1373},{"startOffset":407,"endOffset":440,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":463,"endOffset":602,"count":1372},{"startOffset":563,"endOffset":581,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":623,"endOffset":819,"count":1},{"startOffset":676,"endOffset":745,"count":0},{"startOffset":774,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":840,"endOffset":1008,"count":1},{"startOffset":939,"endOffset":964,"count":0}],"isBlockCoverage":true},{"functionName":"getFilename","ranges":[{"startOffset":1198,"endOffset":1234,"count":1}],"isBlockCoverage":true},{"functionName":"getDirname","ranges":[{"startOffset":1253,"endOffset":1286,"count":1}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-light-runner/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3855,"count":1},{"startOffset":738,"endOffset":762,"count":0},{"startOffset":869,"endOffset":893,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":235,"endOffset":585,"count":16},{"startOffset":281,"endOffset":303,"count":0},{"startOffset":359,"endOffset":363,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":519,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":895,"endOffset":1159,"count":2},{"startOffset":949,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1161,"endOffset":1320,"count":2},{"startOffset":1232,"endOffset":1319,"count":0}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":1322,"endOffset":3494,"count":2},{"startOffset":1479,"endOffset":1520,"count":0},{"startOffset":1570,"endOffset":1588,"count":0},{"startOffset":1614,"endOffset":1630,"count":0},{"startOffset":1740,"endOffset":1758,"count":0},{"startOffset":1788,"endOffset":1806,"count":0},{"startOffset":1918,"endOffset":1940,"count":0},{"startOffset":1942,"endOffset":1958,"count":0},{"startOffset":2037,"endOffset":2067,"count":0},{"startOffset":2096,"endOffset":3493,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2688,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"createSupportsColor","ranges":[{"startOffset":3503,"endOffset":3687,"count":2}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-light-runner/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2510,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":49,"endOffset":2087,"count":1}],"isBlockCoverage":true},{"functionName":"resumeNext","ranges":[{"startOffset":187,"endOffset":379,"count":1373},{"startOffset":246,"endOffset":376,"count":1370}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":396,"endOffset":440,"count":1370}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":456,"endOffset":631,"count":1370},{"startOffset":609,"endOffset":617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":518,"endOffset":554,"count":1370}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":651,"endOffset":1400,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":801,"endOffset":860,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":933,"endOffset":1393,"count":1370},{"startOffset":1365,"endOffset":1389,"count":3}],"isBlockCoverage":true},{"functionName":"generator","ranges":[{"startOffset":1422,"endOffset":1523,"count":1370}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1464,"endOffset":1522,"count":1370}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1589,"endOffset":1606,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1639,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":1681,"endOffset":1714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1746,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1769,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"limitFunction","ranges":[{"startOffset":2096,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"validateConcurrency","ranges":[{"startOffset":2277,"endOffset":2509,"count":1},{"startOffset":2359,"endOffset":2402,"count":0},{"startOffset":2425,"endOffset":2507,"count":0}],"isBlockCoverage":true}]},{"scriptId":"554","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/jest-light-runner/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1479,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":496,"endOffset":573,"count":1370}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":526,"endOffset":571,"count":1370}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":590,"endOffset":1478,"count":1}],"isBlockCoverage":true},{"functionName":"Queue","ranges":[{"startOffset":630,"endOffset":664,"count":1}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":667,"endOffset":864,"count":1370},{"startOffset":735,"endOffset":789,"count":1369},{"startOffset":789,"endOffset":844,"count":1}],"isBlockCoverage":true},{"functionName":"dequeue","ranges":[{"startOffset":867,"endOffset":1017,"count":1370},{"startOffset":925,"endOffset":941,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":1020,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1153,"endOffset":1235,"count":1}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":1238,"endOffset":1274,"count":1373}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1277,"endOffset":1407,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":1410,"endOffset":1476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/string-length/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"stringLength","ranges":[{"startOffset":118,"endOffset":309,"count":987},{"startOffset":150,"endOffset":166,"count":0},{"startOffset":240,"endOffset":256,"count":0}],"isBlockCoverage":true}]},{"scriptId":"556","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/string-length/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":987},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/char-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1920,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":153,"endOffset":1918,"count":987}],"isBlockCoverage":true}]}],"timestamp":358.024364,"source-map-cache":{"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/outdent/lib/index.js":{"lineLengths":[13,62,25,94,17,18,51,33,5,1,26,41,29,5,10,30,5,1,3,96,3,25,12,18,21,18,18,27,25,10,6,1,22,42,32,31,2,59,33,30,32,40,9,5,18,1,47,48,51,67,71,86,61,82,29,54,16,43,5,67,50,53,35,5,134,56,27,56,52,43,55,44,48,9,55,49,49,9,29,32,75,9,17,7,28,1,50,17,53,26,24,29,9,5,15,1,36,45,1,3,114,15,17,20,3,34,57,47,7,114,49,9,58,40,24,55,43,9,48,55,43,127,119,73,62,35,66,49,39,51,33,108,50,13,69,38,40,13,71,136,28,9,14,81,87,9,5,39,32,59,10,7,23,1,37,29,30,3,33,40,33,33,36,76,29,9,40,77,48,48,5,17,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/outdent/src/index.ts"],"names":[],"mappings":"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"},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/index.js":{"lineLengths":[13,0,46,13,3,25,28,44,39,44,41,35,129,5,28,98,5,50,99,5,24,100,5,27,103,5,37,173,5,3,18,56,54,48,53,34,52,53,26,28,26,13,35,17,6,32,23,17,20,25,32,57,4,3,30,64,57,135,3,24,26,85,10,149,3,34,70,25,146,5,3,48,49,3,9,27,26,22,13,78,46,3,76,45,3,16,1,1,47,39,25,28,25,22,55,78,5,16,68,41,5,4,1,41,51,74,104,31,1,42,0,33,0],"data":{"version":3,"names":["_sourceMap","require","_printer","normalizeOptions","code","opts","ast","experimental_preserveFormat","Error","retainLines","compact","minified","jsescOption","Array","isArray","tokens","format","auxiliaryCommentBefore","auxiliaryCommentAfter","shouldPrintComment","preserveFormat","retainFunctionParens","comments","concise","indent","adjustMultilineComment","style","Object","assign","quotes","wrap","minimal","topicToken","importAttributesKeyword","_opts$recordAndTupleS","decoratorsBeforeExport","json","jsonCompatibleStrings","recordAndTupleSyntaxType","value","includes","length","console","error","filename","undefined","exports","CodeGenerator","constructor","_ast","_format","_map","sourceMaps","SourceMap","generate","printer","Printer","map","_default","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/index.ts"],"sourcesContent":["import SourceMap from \"./source-map.ts\";\nimport Printer from \"./printer.ts\";\nimport type * as t from \"@babel/types\";\nimport type { Opts as jsescOptions } from \"jsesc\";\nimport type { Format } from \"./printer.ts\";\nimport type {\n  EncodedSourceMap,\n  DecodedSourceMap,\n  Mapping,\n} from \"@jridgewell/gen-mapping\";\n\n/**\n * Normalize generator options, setting defaults.\n *\n * - Detects code indentation.\n * - If `opts.compact = \"auto\"` and the code is over 500KB, `compact` will be set to `true`.\n */\n\nfunction normalizeOptions(\n  code: string | { [filename: string]: string },\n  opts: GeneratorOptions,\n  ast: t.Node,\n): Format {\n  if (opts.experimental_preserveFormat) {\n    if (typeof code !== \"string\") {\n      throw new Error(\n        \"`experimental_preserveFormat` requires the original `code` to be passed to @babel/generator as a string\",\n      );\n    }\n    if (!opts.retainLines) {\n      throw new Error(\n        \"`experimental_preserveFormat` requires `retainLines` to be set to `true`\",\n      );\n    }\n    if (opts.compact && opts.compact !== \"auto\") {\n      throw new Error(\n        \"`experimental_preserveFormat` is not compatible with the `compact` option\",\n      );\n    }\n    if (opts.minified) {\n      throw new Error(\n        \"`experimental_preserveFormat` is not compatible with the `minified` option\",\n      );\n    }\n    if (opts.jsescOption) {\n      throw new Error(\n        \"`experimental_preserveFormat` is not compatible with the `jsescOption` option\",\n      );\n    }\n    if (!Array.isArray((ast as any).tokens)) {\n      throw new Error(\n        \"`experimental_preserveFormat` requires the AST to have attatched the token of the input code. Make sure to enable the `tokens: true` parser option.\",\n      );\n    }\n  }\n\n  const format: Format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    preserveFormat: opts.experimental_preserveFormat,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n    },\n    jsescOption: {\n      quotes: \"double\",\n      wrap: true,\n      minimal: process.env.BABEL_8_BREAKING ? true : false,\n      ...opts.jsescOption,\n    },\n    topicToken: opts.topicToken,\n    importAttributesKeyword: opts.importAttributesKeyword,\n  };\n\n  if (!process.env.BABEL_8_BREAKING) {\n    format.decoratorsBeforeExport = opts.decoratorsBeforeExport;\n    format.jsescOption.json = opts.jsonCompatibleStrings;\n    format.recordAndTupleSyntaxType = opts.recordAndTupleSyntaxType ?? \"hash\";\n  }\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment =\n      format.shouldPrintComment || (() => format.comments);\n  } else {\n    format.shouldPrintComment =\n      format.shouldPrintComment ||\n      (value =>\n        format.comments ||\n        value.includes(\"@license\") ||\n        value.includes(\"@preserve\"));\n  }\n\n  if (format.compact === \"auto\") {\n    format.compact = typeof code === \"string\" && code.length > 500_000; // 500KB\n\n    if (format.compact) {\n      console.error(\n        \"[BABEL] Note: The code generator has deoptimised the styling of \" +\n          `${opts.filename} as it exceeds the max of ${\"500KB\"}.`,\n      );\n    }\n  }\n\n  if (format.compact || format.preserveFormat) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  const { auxiliaryCommentBefore, auxiliaryCommentAfter, shouldPrintComment } =\n    format;\n\n  if (auxiliaryCommentBefore && !shouldPrintComment(auxiliaryCommentBefore)) {\n    format.auxiliaryCommentBefore = undefined;\n  }\n  if (auxiliaryCommentAfter && !shouldPrintComment(auxiliaryCommentAfter)) {\n    format.auxiliaryCommentAfter = undefined;\n  }\n\n  return format;\n}\n\nexport interface GeneratorOptions {\n  /**\n   * Optional string to add as a block comment at the start of the output file.\n   */\n  auxiliaryCommentBefore?: string;\n\n  /**\n   * Optional string to add as a block comment at the end of the output file.\n   */\n  auxiliaryCommentAfter?: string;\n\n  /**\n   * Function that takes a comment (as a string) and returns true if the comment should be included in the output.\n   * By default, comments are included if `opts.comments` is `true` or if `opts.minified` is `false` and the comment\n   * contains `@preserve` or `@license`.\n   */\n  shouldPrintComment?(comment: string): boolean;\n\n  /**\n   * Preserve the input code format while printing the transformed code.\n   * This is experimental, and may have breaking changes in future\n   * patch releases. It will be removed in a future minor release,\n   * when it will graduate to stable.\n   */\n  experimental_preserveFormat?: boolean;\n\n  /**\n   * Attempt to use the same line numbers in the output code as in the source code (helps preserve stack traces).\n   * Defaults to `false`.\n   */\n  retainLines?: boolean;\n\n  /**\n   * Retain parens around function expressions (could be used to change engine parsing behavior)\n   * Defaults to `false`.\n   */\n  retainFunctionParens?: boolean;\n\n  /**\n   * Should comments be included in output? Defaults to `true`.\n   */\n  comments?: boolean;\n\n  /**\n   * Set to true to avoid adding whitespace for formatting. Defaults to the value of `opts.minified`.\n   */\n  compact?: boolean | \"auto\";\n\n  /**\n   * Should the output be minified. Defaults to `false`.\n   */\n  minified?: boolean;\n\n  /**\n   * Set to true to reduce whitespace (but not as much as opts.compact). Defaults to `false`.\n   */\n  concise?: boolean;\n\n  /**\n   * Used in warning messages\n   */\n  filename?: string;\n\n  /**\n   * Enable generating source maps. Defaults to `false`.\n   */\n  sourceMaps?: boolean;\n\n  inputSourceMap?: any;\n\n  /**\n   * A root for all relative URLs in the source map.\n   */\n  sourceRoot?: string;\n\n  /**\n   * The filename for the source code (i.e. the code in the `code` argument).\n   * This will only be used if `code` is a string.\n   */\n  sourceFileName?: string;\n\n  /**\n   * Set to true to run jsesc with \"json\": true to print \"\\u00A9\" vs. \"©\";\n   * @deprecated use `jsescOptions: { json: true }` instead\n   */\n  jsonCompatibleStrings?: boolean;\n\n  /**\n   * Set to true to enable support for experimental decorators syntax before\n   * module exports. If not specified, decorators will be printed in the same\n   * position as they were in the input source code.\n   * @deprecated Removed in Babel 8\n   */\n  decoratorsBeforeExport?: boolean;\n\n  /**\n   * Options for outputting jsesc representation.\n   */\n  jsescOption?: jsescOptions;\n\n  /**\n   * For use with the recordAndTuple token.\n   * @deprecated It will be removed in Babel 8.\n   */\n  recordAndTupleSyntaxType?: \"bar\" | \"hash\";\n\n  /**\n   * For use with the Hack-style pipe operator.\n   * Changes what token is used for pipe bodies’ topic references.\n   */\n  topicToken?: \"%\" | \"#\" | \"@@\" | \"^^\" | \"^\";\n\n  /**\n   * The import attributes syntax style:\n   * - \"with\"        : `import { a } from \"b\" with { type: \"json\" };`\n   * - \"assert\"      : `import { a } from \"b\" assert { type: \"json\" };`\n   * - \"with-legacy\" : `import { a } from \"b\" with type: \"json\";`\n   */\n  importAttributesKeyword?: \"with\" | \"assert\" | \"with-legacy\";\n}\n\nexport interface GeneratorResult {\n  code: string;\n  map: EncodedSourceMap | null;\n  decodedMap: DecodedSourceMap | undefined;\n  rawMappings: Mapping[] | undefined;\n}\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  /**\n   * We originally exported the Generator class above, but to make it extra clear that it is a private API,\n   * we have moved that to an internal class instance and simplified the interface to the two public methods\n   * that we wish to support.\n   */\n\n  // eslint-disable-next-line no-restricted-globals\n  exports.CodeGenerator = class CodeGenerator {\n    private _ast: t.Node;\n    private _format: Format | undefined;\n    private _map: SourceMap | null;\n    constructor(ast: t.Node, opts: GeneratorOptions = {}, code?: string) {\n      this._ast = ast;\n      this._format = normalizeOptions(code, opts, ast);\n      this._map = opts.sourceMaps ? new SourceMap(opts, code) : null;\n    }\n    generate(): GeneratorResult {\n      const printer = new Printer(this._format, this._map);\n\n      return printer.generate(this._ast);\n    }\n  };\n}\n\n/**\n * Turns an AST into code, maintaining sourcemaps, user preferences, and valid output.\n * @param ast - the abstract syntax tree from which to generate output code.\n * @param opts - used for specifying options for code generation.\n * @param code - the original source code, used for source maps.\n * @returns - an object containing the output code and source map.\n */\nexport function generate(\n  ast: t.Node,\n  opts: GeneratorOptions = {},\n  code?: string | { [filename: string]: string },\n): GeneratorResult {\n  const format = normalizeOptions(code, opts, ast);\n  const map = opts.sourceMaps ? new SourceMap(opts, code) : null;\n\n  const printer = new Printer(\n    format,\n    map,\n    (ast as any).tokens,\n    typeof code === \"string\" ? code : null,\n  );\n\n  return printer.generate(ast);\n}\n\nexport default generate;\n"],"mappings":";;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAiBA,SAASE,gBAAgBA,CACvBC,IAA6C,EAC7CC,IAAsB,EACtBC,GAAW,EACH;EACR,IAAID,IAAI,CAACE,2BAA2B,EAAE;IACpC,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAII,KAAK,CACb,yGACF,CAAC;IACH;IACA,IAAI,CAACH,IAAI,CAACI,WAAW,EAAE;MACrB,MAAM,IAAID,KAAK,CACb,0EACF,CAAC;IACH;IACA,IAAIH,IAAI,CAACK,OAAO,IAAIL,IAAI,CAACK,OAAO,KAAK,MAAM,EAAE;MAC3C,MAAM,IAAIF,KAAK,CACb,2EACF,CAAC;IACH;IACA,IAAIH,IAAI,CAACM,QAAQ,EAAE;MACjB,MAAM,IAAIH,KAAK,CACb,4EACF,CAAC;IACH;IACA,IAAIH,IAAI,CAACO,WAAW,EAAE;MACpB,MAAM,IAAIJ,KAAK,CACb,+EACF,CAAC;IACH;IACA,IAAI,CAACK,KAAK,CAACC,OAAO,CAAER,GAAG,CAASS,MAAM,CAAC,EAAE;MACvC,MAAM,IAAIP,KAAK,CACb,qJACF,CAAC;IACH;EACF;EAEA,MAAMQ,MAAc,GAAG;IACrBC,sBAAsB,EAAEZ,IAAI,CAACY,sBAAsB;IACnDC,qBAAqB,EAAEb,IAAI,CAACa,qBAAqB;IACjDC,kBAAkB,EAAEd,IAAI,CAACc,kBAAkB;IAC3CC,cAAc,EAAEf,IAAI,CAACE,2BAA2B;IAChDE,WAAW,EAAEJ,IAAI,CAACI,WAAW;IAC7BY,oBAAoB,EAAEhB,IAAI,CAACgB,oBAAoB;IAC/CC,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ,IAAI,IAAI,IAAIjB,IAAI,CAACiB,QAAQ;IAChDZ,OAAO,EAAEL,IAAI,CAACK,OAAO;IACrBC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;IACvBY,OAAO,EAAElB,IAAI,CAACkB,OAAO;IACrBC,MAAM,EAAE;MACNC,sBAAsB,EAAE,IAAI;MAC5BC,KAAK,EAAE;IACT,CAAC;IACDd,WAAW,EAAAe,MAAA,CAAAC,MAAA;MACTC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAwC;IAAK,GACjD1B,IAAI,CAACO,WAAW,CACpB;IACDoB,UAAU,EAAE3B,IAAI,CAAC2B,UAAU;IAC3BC,uBAAuB,EAAE5B,IAAI,CAAC4B;EAChC,CAAC;EAEkC;IAAA,IAAAC,qBAAA;IACjClB,MAAM,CAACmB,sBAAsB,GAAG9B,IAAI,CAAC8B,sBAAsB;IAC3DnB,MAAM,CAACJ,WAAW,CAACwB,IAAI,GAAG/B,IAAI,CAACgC,qBAAqB;IACpDrB,MAAM,CAACsB,wBAAwB,IAAAJ,qBAAA,GAAG7B,IAAI,CAACiC,wBAAwB,YAAAJ,qBAAA,GAAI,MAAM;EAC3E;EAEA,IAAIlB,MAAM,CAACL,QAAQ,EAAE;IACnBK,MAAM,CAACN,OAAO,GAAG,IAAI;IAErBM,MAAM,CAACG,kBAAkB,GACvBH,MAAM,CAACG,kBAAkB,KAAK,MAAMH,MAAM,CAACM,QAAQ,CAAC;EACxD,CAAC,MAAM;IACLN,MAAM,CAACG,kBAAkB,GACvBH,MAAM,CAACG,kBAAkB,KACxBoB,KAAK,IACJvB,MAAM,CAACM,QAAQ,IACfiB,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,IAC1BD,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC,CAAC;EAClC;EAEA,IAAIxB,MAAM,CAACN,OAAO,KAAK,MAAM,EAAE;IAC7BM,MAAM,CAACN,OAAO,GAAG,OAAON,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACqC,MAAM,GAAG,MAAO;IAElE,IAAIzB,MAAM,CAACN,OAAO,EAAE;MAClBgC,OAAO,CAACC,KAAK,CACX,kEAAkE,GAChE,GAAGtC,IAAI,CAACuC,QAAQ,6BAA6B,OAAO,GACxD,CAAC;IACH;EACF;EAEA,IAAI5B,MAAM,CAACN,OAAO,IAAIM,MAAM,CAACI,cAAc,EAAE;IAC3CJ,MAAM,CAACQ,MAAM,CAACC,sBAAsB,GAAG,KAAK;EAC9C;EAEA,MAAM;IAAER,sBAAsB;IAAEC,qBAAqB;IAAEC;EAAmB,CAAC,GACzEH,MAAM;EAER,IAAIC,sBAAsB,IAAI,CAACE,kBAAkB,CAACF,sBAAsB,CAAC,EAAE;IACzED,MAAM,CAACC,sBAAsB,GAAG4B,SAAS;EAC3C;EACA,IAAI3B,qBAAqB,IAAI,CAACC,kBAAkB,CAACD,qBAAqB,CAAC,EAAE;IACvEF,MAAM,CAACE,qBAAqB,GAAG2B,SAAS;EAC1C;EAEA,OAAO7B,MAAM;AACf;AAkI+C;EAQ7C8B,OAAO,CAACC,aAAa,GAAG,MAAMA,aAAa,CAAC;IAI1CC,WAAWA,CAAC1C,GAAW,EAAED,IAAsB,GAAG,CAAC,CAAC,EAAED,IAAa,EAAE;MAAA,KAH7D6C,IAAI;MAAA,KACJC,OAAO;MAAA,KACPC,IAAI;MAEV,IAAI,CAACF,IAAI,GAAG3C,GAAG;MACf,IAAI,CAAC4C,OAAO,GAAG/C,gBAAgB,CAACC,IAAI,EAAEC,IAAI,EAAEC,GAAG,CAAC;MAChD,IAAI,CAAC6C,IAAI,GAAG9C,IAAI,CAAC+C,UAAU,GAAG,IAAIC,kBAAS,CAAChD,IAAI,EAAED,IAAI,CAAC,GAAG,IAAI;IAChE;IACAkD,QAAQA,CAAA,EAAoB;MAC1B,MAAMC,OAAO,GAAG,IAAIC,gBAAO,CAAC,IAAI,CAACN,OAAO,EAAE,IAAI,CAACC,IAAI,CAAC;MAEpD,OAAOI,OAAO,CAACD,QAAQ,CAAC,IAAI,CAACL,IAAI,CAAC;IACpC;EACF,CAAC;AACH;AASO,SAASK,QAAQA,CACtBhD,GAAW,EACXD,IAAsB,GAAG,CAAC,CAAC,EAC3BD,IAA8C,EAC7B;EACjB,MAAMY,MAAM,GAAGb,gBAAgB,CAACC,IAAI,EAAEC,IAAI,EAAEC,GAAG,CAAC;EAChD,MAAMmD,GAAG,GAAGpD,IAAI,CAAC+C,UAAU,GAAG,IAAIC,kBAAS,CAAChD,IAAI,EAAED,IAAI,CAAC,GAAG,IAAI;EAE9D,MAAMmD,OAAO,GAAG,IAAIC,gBAAO,CACzBxC,MAAM,EACNyC,GAAG,EACFnD,GAAG,CAASS,MAAM,EACnB,OAAOX,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAG,IACpC,CAAC;EAED,OAAOmD,OAAO,CAACD,QAAQ,CAAChD,GAAG,CAAC;AAC9B;AAAC,IAAAoD,QAAA,GAAAZ,OAAA,CAAAa,OAAA,GAEcL,QAAQ","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/source-map.js":{"lineLengths":[13,0,46,13,3,25,53,57,17,27,29,23,31,34,26,29,31,28,56,33,7,132,34,30,71,61,35,58,36,170,9,7,5,59,73,42,55,105,7,5,3,9,52,3,16,52,3,20,94,3,78,25,34,24,23,27,82,15,16,11,57,118,47,60,11,9,14,27,101,21,24,10,7,5,49,27,16,94,31,7,3,1,28,0,38,0],"data":{"version":3,"names":["_genMapping","require","_traceMapping","SourceMap","constructor","opts","code","_opts$sourceFileName","_map","_rawMappings","_sourceFileName","_lastGenLine","_lastSourceLine","_lastSourceColumn","_inputMap","map","GenMapping","sourceRoot","sourceFileName","replace","undefined","inputSourceMap","TraceMap","resolvedSources","length","i","_this$_inputMap$sourc","setSourceContent","sourcesContent","Object","keys","get","toEncodedMap","getDecoded","toDecodedMap","getRawMappings","allMappings","mark","generated","line","column","identifierName","identifierNamePos","filename","_originalMapping","originalMapping","originalPositionFor","name","originalIdentifierMapping","source","maybeAddMapping","original","exports","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/source-map.ts"],"sourcesContent":["import {\n  GenMapping,\n  maybeAddMapping,\n  setSourceContent,\n  allMappings,\n  toEncodedMap,\n  toDecodedMap,\n} from \"@jridgewell/gen-mapping\";\n\nimport type {\n  EncodedSourceMap,\n  DecodedSourceMap,\n  Mapping,\n} from \"@jridgewell/gen-mapping\";\n\nimport {\n  type SourceMapInput,\n  originalPositionFor,\n  TraceMap,\n} from \"@jridgewell/trace-mapping\";\n\n/**\n * Build a sourcemap.\n */\n\nexport default class SourceMap {\n  private _map: GenMapping;\n  private _rawMappings: Mapping[] | undefined;\n  private _sourceFileName: string | undefined;\n\n  // Any real line is > 0, so init to 0 is fine.\n  private _lastGenLine = 0;\n  private _lastSourceLine = 0;\n\n  // Source columns can be 0, but we only check in unison with sourceLine, which\n  // inits to an impossible value. So init to 0 is fine.\n  private _lastSourceColumn = 0;\n\n  public _inputMap: TraceMap;\n\n  constructor(\n    opts: {\n      sourceFileName?: string;\n      sourceRoot?: string;\n      inputSourceMap?: SourceMapInput;\n    },\n    code: string | { [sourceFileName: string]: string },\n  ) {\n    const map = (this._map = new GenMapping({ sourceRoot: opts.sourceRoot }));\n    this._sourceFileName = opts.sourceFileName?.replace(/\\\\/g, \"/\");\n    this._rawMappings = undefined;\n\n    if (opts.inputSourceMap) {\n      this._inputMap = new TraceMap(opts.inputSourceMap);\n      const resolvedSources = this._inputMap.resolvedSources;\n      if (resolvedSources.length) {\n        for (let i = 0; i < resolvedSources.length; i++) {\n          setSourceContent(\n            map,\n            resolvedSources[i],\n            this._inputMap.sourcesContent?.[i],\n          );\n        }\n      }\n    }\n\n    if (typeof code === \"string\" && !opts.inputSourceMap) {\n      setSourceContent(map, this._sourceFileName, code);\n    } else if (typeof code === \"object\") {\n      for (const sourceFileName of Object.keys(code)) {\n        setSourceContent(\n          map,\n          sourceFileName.replace(/\\\\/g, \"/\"),\n          code[sourceFileName],\n        );\n      }\n    }\n  }\n\n  /**\n   * Get the sourcemap.\n   */\n  get(): EncodedSourceMap {\n    return toEncodedMap(this._map);\n  }\n\n  getDecoded(): DecodedSourceMap {\n    return toDecodedMap(this._map);\n  }\n\n  getRawMappings(): Mapping[] {\n    return (this._rawMappings ||= allMappings(this._map));\n  }\n\n  /**\n   * Mark the current generated position with a source position. May also be passed null line/column\n   * values to insert a mapping to nothing.\n   */\n\n  mark(\n    generated: { line: number; column: number },\n    line: number,\n    column: number,\n    identifierName?: string | null,\n    identifierNamePos?: { line: number; column: number },\n    filename?: string | null,\n  ) {\n    this._rawMappings = undefined;\n\n    let originalMapping: {\n      source: string | null;\n      name?: string | null;\n      line: number | null;\n      column: number | null;\n    };\n\n    if (line != null) {\n      if (this._inputMap) {\n        // This is the lookup for this mark\n        originalMapping = originalPositionFor(this._inputMap, {\n          line,\n          column,\n        });\n\n        // If the we found a name, nothing else needs to be done\n        // Maybe we're marking a `(` and the input map already had a name attached there,\n        // or we're marking a `(` and the sourcemap spanned a `foo(`,\n        // or we're marking an identifier, etc.\n        if (!originalMapping.name && identifierNamePos) {\n          // We're trying to mark a `(` (as that's the only thing that provides\n          // an identifierNamePos currently), and we the AST had an identifier attached.\n          // Lookup it's original name.\n          const originalIdentifierMapping = originalPositionFor(\n            this._inputMap,\n            identifierNamePos,\n          );\n          if (originalIdentifierMapping.name) {\n            identifierName = originalIdentifierMapping.name;\n          }\n        }\n      } else {\n        originalMapping = {\n          source: filename?.replace(/\\\\/g, \"/\") || this._sourceFileName,\n          line: line,\n          column: column,\n        };\n      }\n    }\n\n    maybeAddMapping(this._map, {\n      name: identifierName,\n      generated,\n      source: originalMapping?.source,\n      original: originalMapping,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js":{"lineLengths":[29,197,164,173,84,0,21,28,26,28,26,0,23,7,50,7,22,48,50,52,38,32,29,41,55,9,5,7,103,36,7,24,19,5,99,115,5,39,55,5,7,100,102,86,7,107,114,6,7,100,102,86,7,47,54,6,7,69,7,53,81,52,40,5,52,106,52,44,41,19,44,12,47,5,7,104,41,7,32,143,40,16,23,40,31,52,35,27,21,41,10,5,7,104,41,7,32,42,112,5,7,84,7,29,53,83,44,48,86,64,27,58,19,5,7,101,42,7,31,23,84,51,37,51,36,71,39,41,37,39,63,90,41,61,17,64,13,9,19,5,99,117,118,48,54,22,56,23,52,9,59,70,51,99,102,19,9,39,77,67,5,39,56,29,9,31,5,46,32,54,36,45,22,9,21,5,42,52,36,9,29,5,46,36,25,53,39,22,9,25,34,5,36,46,43,5,42,101,51,24,24,37,101,105,50,33,5,90,89,24,25,37,87,30,25,100,48,55,47,51,78,5,57,71,22,121,9,146,5,0,36,36,36,38,30,46,46,34,48,40,40,0,66,0,4,43,0],"data":{"version":3,"file":"gen-mapping.umd.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/gen-mapping/src/sourcemap-segment.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts"],"sourcesContent":["type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n","import { SetArray, put, remove } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\nimport { TraceMap, decodedMappings } from '@jridgewell/trace-mapping';\n\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type { SourceMapInput } from '@jridgewell/trace-mapping';\nimport type { SourceMapSegment } from './sourcemap-segment';\nimport type { DecodedSourceMap, EncodedSourceMap, Pos, Mapping } from './types';\n\nexport type { DecodedSourceMap, EncodedSourceMap, Mapping };\n\nexport type Options = {\n  file?: string | null;\n  sourceRoot?: string | null;\n};\n\nconst NO_NAME = -1;\n\n/**\n * Provides the state to generate a sourcemap.\n */\nexport class GenMapping {\n  private declare _names: SetArray<string>;\n  private declare _sources: SetArray<string>;\n  private declare _sourcesContent: (string | null)[];\n  private declare _mappings: SourceMapSegment[][];\n  private declare _ignoreList: SetArray<number>;\n  declare file: string | null | undefined;\n  declare sourceRoot: string | null | undefined;\n\n  constructor({ file, sourceRoot }: Options = {}) {\n    this._names = new SetArray();\n    this._sources = new SetArray();\n    this._sourcesContent = [];\n    this._mappings = [];\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n    this._ignoreList = new SetArray();\n  }\n}\n\ninterface PublicMap {\n  _names: GenMapping['_names'];\n  _sources: GenMapping['_sources'];\n  _sourcesContent: GenMapping['_sourcesContent'];\n  _mappings: GenMapping['_mappings'];\n  _ignoreList: GenMapping['_ignoreList'];\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map: unknown): PublicMap {\n  return map as any;\n}\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source?: null,\n  sourceLine?: null,\n  sourceColumn?: null,\n  name?: null,\n  content?: null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: string,\n  sourceLine: number,\n  sourceColumn: number,\n  name?: null,\n  content?: string | null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: string,\n  sourceLine: number,\n  sourceColumn: number,\n  name: string,\n  content?: string | null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source?: string | null,\n  sourceLine?: number | null,\n  sourceColumn?: number | null,\n  name?: string | null,\n  content?: string | null,\n): void {\n  return addSegmentInternal(\n    false,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content,\n  );\n}\n\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source?: null;\n    original?: null;\n    name?: null;\n    content?: null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: string;\n    original: Pos;\n    name?: null;\n    content?: string | null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: string;\n    original: Pos;\n    name: string;\n    content?: string | null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source?: string | null;\n    original?: Pos | null;\n    name?: string | null;\n    content?: string | null;\n  },\n): void {\n  return addMappingInternal(false, map, mapping as Parameters<typeof addMappingInternal>[2]);\n}\n\n/**\n * Same as `addSegment`, but will only add the segment if it generates useful information in the\n * resulting map. This only works correctly if segments are added **in order**, meaning you should\n * not add a segment with a lower generated line/column than one that came before.\n */\nexport const maybeAddSegment: typeof addSegment = (\n  map,\n  genLine,\n  genColumn,\n  source,\n  sourceLine,\n  sourceColumn,\n  name,\n  content,\n) => {\n  return addSegmentInternal(\n    true,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content,\n  );\n};\n\n/**\n * Same as `addMapping`, but will only add the mapping if it generates useful information in the\n * resulting map. This only works correctly if mappings are added **in order**, meaning you should\n * not add a mapping with a lower generated line/column than one that came before.\n */\nexport const maybeAddMapping: typeof addMapping = (map, mapping) => {\n  return addMappingInternal(true, map, mapping as Parameters<typeof addMappingInternal>[2]);\n};\n\n/**\n * Adds/removes the content of the source file to the source map.\n */\nexport function setSourceContent(map: GenMapping, source: string, content: string | null): void {\n  const { _sources: sources, _sourcesContent: sourcesContent } = cast(map);\n  const index = put(sources, source);\n  sourcesContent[index] = content;\n}\n\nexport function setIgnore(map: GenMapping, source: string, ignore = true) {\n  const { _sources: sources, _sourcesContent: sourcesContent, _ignoreList: ignoreList } = cast(map);\n  const index = put(sources, source);\n  if (index === sourcesContent.length) sourcesContent[index] = null;\n  if (ignore) put(ignoreList, index);\n  else remove(ignoreList, index);\n}\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function toDecodedMap(map: GenMapping): DecodedSourceMap {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names,\n    _ignoreList: ignoreList,\n  } = cast(map);\n  removeEmptyFinalLines(mappings);\n\n  return {\n    version: 3,\n    file: map.file || undefined,\n    names: names.array,\n    sourceRoot: map.sourceRoot || undefined,\n    sources: sources.array,\n    sourcesContent,\n    mappings,\n    ignoreList: ignoreList.array,\n  };\n}\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function toEncodedMap(map: GenMapping): EncodedSourceMap {\n  const decoded = toDecodedMap(map);\n  return {\n    ...decoded,\n    mappings: encode(decoded.mappings as SourceMapSegment[][]),\n  };\n}\n\n/**\n * Constructs a new GenMapping, using the already present mappings of the input.\n */\nexport function fromMap(input: SourceMapInput): GenMapping {\n  const map = new TraceMap(input);\n  const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n\n  putAll(cast(gen)._names, map.names);\n  putAll(cast(gen)._sources, map.sources as string[]);\n  cast(gen)._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n  cast(gen)._mappings = decodedMappings(map) as GenMapping['_mappings'];\n  if (map.ignoreList) putAll(cast(gen)._ignoreList, map.ignoreList);\n\n  return gen;\n}\n\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nexport function allMappings(map: GenMapping): Mapping[] {\n  const out: Mapping[] = [];\n  const { _mappings: mappings, _sources: sources, _names: names } = cast(map);\n\n  for (let i = 0; i < mappings.length; i++) {\n    const line = mappings[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n\n      const generated = { line: i + 1, column: seg[COLUMN] };\n      let source: string | undefined = undefined;\n      let original: Pos | undefined = undefined;\n      let name: string | undefined = undefined;\n\n      if (seg.length !== 1) {\n        source = sources.array[seg[SOURCES_INDEX]];\n        original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n\n        if (seg.length === 5) name = names.array[seg[NAMES_INDEX]];\n      }\n\n      out.push({ generated, source, original, name } as Mapping);\n    }\n  }\n\n  return out;\n}\n\n// This split declaration is only so that terser can elminiate the static initialization block.\nfunction addSegmentInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: S,\n  sourceLine: S extends string ? number : null | undefined,\n  sourceColumn: S extends string ? number : null | undefined,\n  name: S extends string ? string | null | undefined : null | undefined,\n  content: S extends string ? string | null | undefined : null | undefined,\n): void {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names,\n  } = cast(map);\n  const line = getLine(mappings, genLine);\n  const index = getColumnIndex(line, genColumn);\n\n  if (!source) {\n    if (skipable && skipSourceless(line, index)) return;\n    return insert(line, index, [genColumn]);\n  }\n\n  // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source\n  // isn't nullish.\n  assert<number>(sourceLine);\n  assert<number>(sourceColumn);\n\n  const sourcesIndex = put(sources, source);\n  const namesIndex = name ? put(names, name) : NO_NAME;\n  if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content ?? null;\n\n  if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n    return;\n  }\n\n  return insert(\n    line,\n    index,\n    name\n      ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n      : [genColumn, sourcesIndex, sourceLine, sourceColumn],\n  );\n}\n\nfunction assert<T>(_val: unknown): asserts _val is T {\n  // noop.\n}\n\nfunction getLine(mappings: SourceMapSegment[][], index: number): SourceMapSegment[] {\n  for (let i = mappings.length; i <= index; i++) {\n    mappings[i] = [];\n  }\n  return mappings[index];\n}\n\nfunction getColumnIndex(line: SourceMapSegment[], genColumn: number): number {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; index = i--) {\n    const current = line[i];\n    if (genColumn >= current[COLUMN]) break;\n  }\n  return index;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\nfunction removeEmptyFinalLines(mappings: SourceMapSegment[][]) {\n  const { length } = mappings;\n  let len = length;\n  for (let i = len - 1; i >= 0; len = i, i--) {\n    if (mappings[i].length > 0) break;\n  }\n  if (len < length) mappings.length = len;\n}\n\nfunction putAll<T extends string | number>(setarr: SetArray<T>, array: T[]) {\n  for (let i = 0; i < array.length; i++) put(setarr, array[i]);\n}\n\nfunction skipSourceless(line: SourceMapSegment[], index: number): boolean {\n  // The start of a line is already sourceless, so adding a sourceless segment to the beginning\n  // doesn't generate any useful information.\n  if (index === 0) return true;\n\n  const prev = line[index - 1];\n  // If the previous segment is also sourceless, then adding another sourceless segment doesn't\n  // genrate any new information. Else, this segment will end the source/named segment and point to\n  // a sourceless position, which is useful.\n  return prev.length === 1;\n}\n\nfunction skipSource(\n  line: SourceMapSegment[],\n  index: number,\n  sourcesIndex: number,\n  sourceLine: number,\n  sourceColumn: number,\n  namesIndex: number,\n): boolean {\n  // A source/named segment at the start of a line gives position at that genColumn\n  if (index === 0) return false;\n\n  const prev = line[index - 1];\n\n  // If the previous segment is sourceless, then we're transitioning to a source.\n  if (prev.length === 1) return false;\n\n  // If the previous segment maps to the exact same source position, then this segment doesn't\n  // provide any new position information.\n  return (\n    sourcesIndex === prev[SOURCES_INDEX] &&\n    sourceLine === prev[SOURCE_LINE] &&\n    sourceColumn === prev[SOURCE_COLUMN] &&\n    namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME)\n  );\n}\n\nfunction addMappingInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: S;\n    original: S extends string ? Pos : null | undefined;\n    name: S extends string ? string | null | undefined : null | undefined;\n    content: S extends string ? string | null | undefined : null | undefined;\n  },\n) {\n  const { generated, source, original, name, content } = mapping;\n  if (!source) {\n    return addSegmentInternal(\n      skipable,\n      map,\n      generated.line - 1,\n      generated.column,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n  }\n  assert<Pos>(original);\n  return addSegmentInternal(\n    skipable,\n    map,\n    generated.line - 1,\n    generated.column,\n    source as string,\n    original.line - 1,\n    original.column,\n    name,\n    content,\n  );\n}\n"],"names":["SetArray","put","remove","encode","TraceMap","decodedMappings"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/set-array/dist/set-array.umd.js":{"lineLengths":[29,85,79,110,44,0,7,100,47,6,101,101,38,7,20,23,48,28,9,5,7,103,36,7,24,19,5,7,91,7,31,42,5,7,79,51,7,31,78,39,32,25,58,39,43,5,7,52,7,26,58,31,19,33,34,5,7,48,7,34,39,32,19,58,56,31,29,25,9,33,20,5,0,32,22,22,22,28,0,66,0,4,41,0],"data":{"version":3,"file":"set-array.umd.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/set-array/src/set-array.ts"],"sourcesContent":["type Key = string | number | symbol;\n\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nexport class SetArray<T extends Key = Key> {\n  private declare _indexes: Record<T, number | undefined>;\n  declare array: readonly T[];\n\n  constructor() {\n    this._indexes = { __proto__: null } as any;\n    this.array = [];\n  }\n}\n\ninterface PublicSet<T extends Key> {\n  array: T[];\n  _indexes: SetArray<T>['_indexes'];\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the set into a type\n * with public access modifiers.\n */\nfunction cast<T extends Key>(set: SetArray<T>): PublicSet<T> {\n  return set as any;\n}\n\n/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nexport function get<T extends Key>(setarr: SetArray<T>, key: T): number | undefined {\n  return cast(setarr)._indexes[key];\n}\n\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nexport function put<T extends Key>(setarr: SetArray<T>, key: T): number {\n  // The key may or may not be present. If it is present, it's a number.\n  const index = get(setarr, key);\n  if (index !== undefined) return index;\n\n  const { array, _indexes: indexes } = cast(setarr);\n\n  const length = array.push(key);\n  return (indexes[key] = length - 1);\n}\n\n/**\n * Pops the last added item out of the SetArray.\n */\nexport function pop<T extends Key>(setarr: SetArray<T>): void {\n  const { array, _indexes: indexes } = cast(setarr);\n  if (array.length === 0) return;\n\n  const last = array.pop()!;\n  indexes[last] = undefined;\n}\n\n/**\n * Removes the key, if it exists in the set.\n */\nexport function remove<T extends Key>(setarr: SetArray<T>, key: T): void {\n  const index = get(setarr, key);\n  if (index === undefined) return;\n\n  const { array, _indexes: indexes } = cast(setarr);\n  for (let i = index + 1; i < array.length; i++) {\n    const k = array[i];\n    array[i - 1] = k;\n    indexes[k]!--;\n  }\n  indexes[key] = undefined;\n  array.pop();\n}\n"],"names":[],"mappings":";;;;;;IAEA;;;;;;;;UAQa,QAAQ;QAInB;YACE,IAAI,CAAC,QAAQ,GAAG,EAAE,SAAS,EAAE,IAAI,EAAS,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACjB;KACF;IAOD;;;;IAIA,SAAS,IAAI,CAAgB,GAAgB;QAC3C,OAAO,GAAU,CAAC;IACpB,CAAC;IAED;;;aAGgB,GAAG,CAAgB,MAAmB,EAAE,GAAM;QAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;;aAIgB,GAAG,CAAgB,MAAmB,EAAE,GAAM;;QAE5D,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO,KAAK,CAAC;QAEtC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAElD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,QAAQ,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE;IACrC,CAAC;IAED;;;aAGgB,GAAG,CAAgB,MAAmB;QACpD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAE/B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IAC5B,CAAC;IAED;;;aAGgB,MAAM,CAAgB,MAAmB,EAAE,GAAM;QAC/D,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO;QAEhC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,CAAC,CAAE,EAAE,CAAC;SACf;QACD,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;QACzB,KAAK,CAAC,GAAG,EAAE,CAAC;IACd;;;;;;;;;;;;;;","sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[29,85,79,116,44,0,36,40,85,63,63,44,38,25,25,5,46,22,22,24,12,36,35,45,23,31,39,21,27,41,9,32,5,52,35,59,12,43,25,26,36,46,28,19,5,38,30,25,39,5,0,32,49,49,43,39,15,29,88,42,18,13,15,29,33,58,59,21,31,18,14,24,23,25,26,52,9,18,36,35,41,46,29,13,9,17,46,76,9,5,24,29,25,33,9,16,54,9,16,52,9,23,41,50,52,9,5,0,21,42,33,47,26,25,21,51,47,52,46,41,31,33,25,13,50,52,44,120,29,45,26,20,63,41,53,13,30,31,30,9,22,5,43,42,45,62,9,30,5,66,36,96,22,32,62,46,39,55,41,31,47,31,40,9,47,39,40,67,22,13,72,9,28,60,44,21,5,43,33,47,26,25,24,39,37,37,29,31,28,30,12,45,30,53,61,48,45,38,40,29,17,56,54,52,49,36,37,26,36,90,136,61,94,17,22,55,17,43,34,57,50,87,72,88,121,84,17,42,47,34,24,46,50,74,45,52,76,73,59,81,114,76,96,29,25,30,68,25,56,55,17,42,35,34,13,22,34,38,22,5,44,32,22,42,45,81,9,30,5,67,36,111,35,53,33,25,9,29,32,9,61,108,41,33,62,44,29,13,69,68,9,23,83,44,29,29,13,45,29,13,69,65,67,9,23,45,39,62,49,53,49,53,58,48,92,96,58,17,13,9,47,39,40,67,22,13,73,9,33,51,31,25,9,14,32,9,62,21,5,50,12,36,36,5,0,31,36,50,27,26,29,27,29,27,12,45,28,30,28,26,39,24,61,40,35,36,47,71,67,71,51,71,94,21,26,82,21,17,22,38,17,31,29,13,24,27,31,34,39,23,5,25,34,5,35,27,5,30,42,29,27,29,27,50,36,22,40,34,25,30,51,40,26,40,73,41,29,79,75,79,41,29,75,13,9,30,5,0,28,58,56,28,58,56,0,66,0,4,47,0],"data":{"version":3,"file":"sourcemap-codec.umd.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/src/strings.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":";;;;;;IAEO,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAE3C,MAAM,KAAK,GAAG,kEAAkE,CAAC;IACjF,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAClB;aAEe,aAAa,CAAC,MAAoB,EAAE,QAAgB;QAClE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,GAAG;YACD,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC;YACjC,KAAK,IAAI,CAAC,CAAC;SACZ,QAAQ,OAAO,GAAG,EAAE,EAAE;QAEvB,MAAM,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;QAC/B,KAAK,MAAM,CAAC,CAAC;QAEb,IAAI,YAAY,EAAE;YAChB,KAAK,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC;SAC9B;QAED,OAAO,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;aAEe,aAAa,CAAC,OAAqB,EAAE,GAAW,EAAE,QAAgB;QAChF,IAAI,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC;QAE3B,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;QACnD,GAAG;YACD,IAAI,OAAO,GAAG,KAAK,GAAG,QAAQ,CAAC;YAC/B,KAAK,MAAM,CAAC,CAAC;YACb,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO,IAAI,QAAQ,CAAC;YACnC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC,QAAQ,KAAK,GAAG,CAAC,EAAE;QAEpB,OAAO,GAAG,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,MAAoB,EAAE,GAAW;QAC1D,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG;YAAE,OAAO,KAAK,CAAC;QACpC,OAAO,MAAM,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC;IACjC;;ICtDA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;IAE5B;IACA,MAAM,EAAE,GACN,OAAO,WAAW,KAAK,WAAW;0BACd,IAAI,WAAW,EAAE;UACjC,OAAO,MAAM,KAAK,WAAW;cAC7B;gBACE,MAAM,CAAC,GAAe;oBACpB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;oBACpE,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;iBACvB;aACF;cACD;gBACE,MAAM,CAAC,GAAe;oBACpB,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;qBACpC;oBACD,OAAO,GAAG,CAAC;iBACZ;aACF,CAAC;UAEK,YAAY;QAAzB;YACE,QAAG,GAAG,CAAC,CAAC;YACA,QAAG,GAAG,EAAE,CAAC;YACT,WAAM,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;SAe5C;QAbC,KAAK,CAAC,CAAS;YACb,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;gBAC1B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;aACd;SACF;QAED,KAAK;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAClC,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;SACjE;KACF;UAEY,YAAY;QAIvB,YAAY,MAAc;YAH1B,QAAG,GAAG,CAAC,CAAC;YAIN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAED,IAAI;YACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAC3C;QAED,IAAI;YACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzC;QAED,OAAO,CAAC,IAAY;YAClB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACtC,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;SACzC;;;IC5DH,MAAM,KAAK,GAAU,EAAE,CAAC;aA+BR,oBAAoB,CAAC,KAAa;QAChD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,MAAM,GAAoB,EAAE,CAAC;QACnC,MAAM,KAAK,GAAoB,EAAE,CAAC;QAClC,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,OAAO,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACf,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBACjB,SAAS;aACV;YAED,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACtC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAEhC,MAAM,KAAK,IACT,OAAO,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAC3E,CAAC;YAEnB,IAAI,IAAI,GAAU,KAAK,CAAC;YACxB,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC9B,IAAI,GAAG,EAAE,CAAC;gBACV,GAAG;oBACD,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtB,QAAQ,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;aACtC;YACD,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YAElB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;aAEe,oBAAoB,CAAC,MAAuB;QAC1D,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;YACnC,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,qBAAqB,CAC5B,MAAuB,EACvB,KAAa,EACb,MAAoB,EACpB,KAEC;QAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;QAExF,IAAI,KAAK,GAAG,CAAC;YAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEnC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACtC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE/B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;QAC/C,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3D,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;YACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;gBACpD,MAAM;aACP;YACD,KAAK,GAAG,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC7D;QAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAEpC,OAAO,KAAK,CAAC;IACf,CAAC;aAEe,qBAAqB,CAAC,KAAa;QACjD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,MAAM,GAAqB,EAAE,CAAC;QACpC,MAAM,KAAK,GAAqB,EAAE,CAAC;QAEnC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,sBAAsB,GAAG,CAAC,CAAC;QAC/B,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,aAAa,GAAG,CAAC,CAAC;QAEtB,GAAG;YACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,SAAS,GAAG,CAAC,CAAC;YAElB,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;gBACtC,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAE7C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;oBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBACpB,SAAS;iBACV;gBAED,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACxC,MAAM,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC;gBACtC,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC;gBACpC,MAAM,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;gBAEjC,IAAI,QAAQ,GAAoB,IAAI,CAAC;gBACrC,IAAI,QAAQ,GAAc,KAAK,CAAC;gBAChC,IAAI,KAAqB,CAAC;gBAC1B,IAAI,aAAa,EAAE;oBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;oBACtE,oBAAoB,GAAG,aAAa,CAClC,MAAM,EACN,sBAAsB,KAAK,eAAe,GAAG,oBAAoB,GAAG,CAAC,CACtE,CAAC;oBAEF,sBAAsB,GAAG,eAAe,CAAC;oBACzC,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,oBAAoB,CAAmB,CAAC;iBAC7F;qBAAM;oBACL,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAmB,CAAC;iBACtD;gBAED,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAE3B,IAAI,WAAW,EAAE;oBACf,MAAM,OAAO,GAAG,oBAAoB,CAAC;oBACrC,MAAM,QAAQ,GAAG,YAAY,CAAC;oBAC9B,oBAAoB,GAAG,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;oBACnE,MAAM,UAAU,GAAG,OAAO,KAAK,oBAAoB,CAAC;oBACpD,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;oBACpE,cAAc,GAAG,aAAa,CAC5B,MAAM,EACN,UAAU,IAAI,QAAQ,KAAK,YAAY,GAAG,cAAc,GAAG,CAAC,CAC7D,CAAC;oBAEF,QAAQ,GAAG,CAAC,oBAAoB,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;iBACjE;gBACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAE1B,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC5B,QAAQ,GAAG,EAAE,CAAC;oBACd,GAAG;wBACD,WAAW,GAAG,OAAO,CAAC;wBACtB,aAAa,GAAG,SAAS,CAAC;wBAC1B,MAAM,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAClD,IAAI,gBAA0C,CAAC;wBAC/C,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;4BACzB,gBAAgB,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;gCAC1C,MAAM,MAAM,GAAG,WAAW,CAAC;gCAC3B,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;gCACjD,aAAa,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,KAAK,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC;gCAClF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gCAC5C,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;6BACjE;yBACF;6BAAM;4BACL,gBAAgB,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;yBACzC;wBACD,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACjC,QAAQ,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;iBACpC;gBACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAE1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnB;YAED,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB,QAAQ,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE;QAE9B,OAAO,MAAM,CAAC;IAChB,CAAC;aAEe,qBAAqB,CAAC,MAAwB;QAC5D,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,EAAE,CAAC;QAEnC,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;YACnC,CAAC,GAAG,sBAAsB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtE;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,sBAAsB,CAC7B,MAAwB,EACxB,KAAa,EACb,MAAoB,EACpB,KAQC;QAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,EACJ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,WAAW,EACd,CAAC,EAAE,OAAO,EACV,CAAC,EAAE,SAAS,EACZ,OAAO,EACP,QAAQ,EACR,QAAQ,GACT,GAAG,KAAK,CAAC;QAEV,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,EAAE;YACxB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACzC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACrB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;aAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YACpB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB;QAED,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAErD,MAAM,MAAM,GACV,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,KAAK,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QACvF,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAEjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;YAClD,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;YACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,QAAS,CAAC;YACxE,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;iBAAM,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;YACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACxD;QAED,IAAI,QAAQ,EAAE;YACZ,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC9B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;oBAAE,aAAa,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClE,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;gBACrC,IAAI,gBAAgB,GAAG,SAAS,CAAC;gBACjC,IAAI,kBAAkB,GAAG,WAAW,CAAC;gBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC5B,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,gBAAgB,CAAC,CAAC;oBACzE,kBAAkB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,kBAAkB,CAAC,CAAC;oBAC7E,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;iBACxC;aACF;SACF;QAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;YACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;gBACpD,MAAM;aACP;YACD,KAAK,GAAG,sBAAsB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC9D;QAED,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE;YACtB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;YACvC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;YACnB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;aAAM;YACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,WAAW,CAAC,MAAoB,EAAE,QAAgB,EAAE,IAAY;QACvE,GAAG;YACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACzB,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC9B;;aCtUgB,MAAM,CAAC,QAAgB;QACrC,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC;QAC5B,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,OAAO,GAAsB,EAAE,CAAC;QACtC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,GAAG;YACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjC,MAAM,IAAI,GAAkB,EAAE,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,SAAS,GAAG,CAAC,CAAC;YAEd,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE;gBACxB,IAAI,GAAqB,CAAC;gBAE1B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAC7C,IAAI,SAAS,GAAG,OAAO;oBAAE,MAAM,GAAG,KAAK,CAAC;gBACxC,OAAO,GAAG,SAAS,CAAC;gBAEpB,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC5B,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBACnD,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;oBAC/C,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBAEnD,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;wBAC5B,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;wBAC/C,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;qBACvE;yBAAM;wBACL,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;qBAC3D;iBACF;qBAAM;oBACL,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;iBACnB;gBAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,CAAC,GAAG,EAAE,CAAC;aACd;YAED,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB,QAAQ,MAAM,CAAC,GAAG,IAAI,MAAM,EAAE;QAE/B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,SAAS,IAAI,CAAC,IAAwB;QACpC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS,cAAc,CAAC,CAAmB,EAAE,CAAmB;QAC9D,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;aAIe,MAAM,CAAC,OAAoC;QACzD,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YAEhC,IAAI,SAAS,GAAG,CAAC,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,GAAG,CAAC;oBAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAE/B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAEzD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS;gBACnC,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC/D,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC3D,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAE/D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS;gBACnC,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;aAC5D;SACF;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB;;;;;;;;;;;;;;;","sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[29,161,137,156,72,0,35,72,79,134,40,24,39,5,0,7,67,7,34,18,22,44,40,5,0,21,28,26,28,26,33,35,0,41,67,46,28,106,68,19,40,104,59,9,24,5,55,55,39,25,9,31,5,29,47,56,29,13,9,20,5,40,19,32,41,5,35,37,5,0,22,7,81,100,101,22,6,12,28,24,82,6,30,42,42,10,7,56,29,50,55,28,29,27,13,26,30,13,18,31,13,9,22,23,5,50,67,47,22,9,21,5,50,54,47,22,9,21,5,30,16,24,27,26,10,5,7,100,87,7,65,57,20,39,30,40,83,33,13,39,76,55,13,18,33,13,9,28,34,77,5,0,103,32,45,50,50,36,51,36,37,29,55,52,56,60,103,48,107,105,109,66,135,41,76,13,9,23,5,42,52,36,9,29,5,104,101,104,99,40,31,35,5,0,43,34,38,48,9,28,27,34,25,30,112,24,23,30,18,20,27,21,23,10,43,6,25,63,5,139,35,51,48,30,32,42,58,70,38,80,17,41,58,17,13,154,9,5,142,36,33,41,49,45,41,45,87,41,33,21,45,12,60,42,20,52,60,50,41,102,103,106,69,33,23,100,99,49,108,54,55,36,51,36,53,108,33,63,27,39,39,29,17,72,52,56,41,70,104,13,9,5,33,46,31,5,34,49,24,26,5,0,82,102,33,35,20,34,53,46,27,62,89,35,29,37,41,35,49,91,74,78,40,47,41,42,13,18,42,62,13,48,40,44,9,5,7,103,36,7,24,19,5,7,79,7,35,15,15,141,5,7,95,7,35,15,104,5,7,97,84,7,46,45,84,81,35,24,39,113,53,5,7,96,101,28,7,47,44,15,21,43,23,45,45,84,81,35,52,39,121,25,52,40,33,52,47,174,5,7,99,7,48,54,97,5,7,100,7,52,54,87,93,5,7,57,7,35,45,47,50,36,51,36,44,47,34,40,42,32,39,53,46,44,17,37,41,20,34,36,27,33,35,25,19,13,9,5,39,49,44,25,52,21,5,7,95,7,44,39,35,24,47,59,5,7,70,7,37,35,31,25,47,65,5,7,103,12,7,47,60,45,22,5,7,104,41,7,30,48,5,7,104,41,7,30,48,5,35,16,33,27,29,39,33,47,21,66,10,5,51,46,5,37,32,5,71,71,20,100,9,44,20,54,22,21,5,74,91,102,104,105,106,100,35,49,18,50,22,104,104,33,69,97,19,59,61,26,35,42,98,9,22,5,70,15,15,21,43,23,45,49,50,31,58,31,51,171,54,29,51,59,16,79,79,25,40,40,88,5,0,28,56,50,32,64,36,46,38,36,46,56,34,54,54,48,40,0,4,45,0],"data":{"version":3,"file":"trace-mapping.umd.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/resolve.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/strip-filename.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/sort.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/binary-search.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/by-source.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/any-map.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts"],"sourcesContent":["import resolveUri from '@jridgewell/resolve-uri';\n\nexport default function resolve(input: string, base: string | undefined): string {\n  // The base is always treated as a directory, if it's not empty.\n  // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n  // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n  if (base && !base.endsWith('/')) base += '/';\n\n  return resolveUri(input, base);\n}\n","/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nexport default function stripFilename(path: string | undefined | null): string {\n  if (!path) return '';\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n","type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\ntype GeneratedLine = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport type ReverseSegment = [SourceColumn, GeneratedLine, GeneratedColumn];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n\nexport const REV_GENERATED_LINE = 1;\nexport const REV_GENERATED_COLUMN = 2;\n","import { COLUMN } from './sourcemap-segment';\n\nimport type { SourceMapSegment } from './sourcemap-segment';\n\nexport default function maybeSort(\n  mappings: SourceMapSegment[][],\n  owned: boolean,\n): SourceMapSegment[][] {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n\n  // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n  // not, we do not want to modify the consumer's input array.\n  if (!owned) mappings = mappings.slice();\n\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\n\nfunction nextUnsortedSegmentLine(mappings: SourceMapSegment[][], start: number): number {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\n\nfunction isSorted(line: SourceMapSegment[]): boolean {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction sortSegments(line: SourceMapSegment[], owned: boolean): SourceMapSegment[] {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[COLUMN] - b[COLUMN];\n}\n","import type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport { COLUMN } from './sourcemap-segment';\n\nexport type MemoState = {\n  lastKey: number;\n  lastNeedle: number;\n  lastIndex: number;\n};\n\nexport let found = false;\n\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nexport function binarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  low: number,\n  high: number,\n): number {\n  while (low <= high) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  found = false;\n  return low - 1;\n}\n\nexport function upperBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function lowerBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function memoizedState(): MemoState {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1,\n  };\n}\n\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nexport function memoizedBinarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  state: MemoState,\n  key: number,\n): number {\n  const { lastKey, lastNeedle, lastIndex } = state;\n\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n\n    if (needle >= lastNeedle) {\n      // lastIndex may be -1 if the previous needle was not found.\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n\n  return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n","import { COLUMN, SOURCES_INDEX, SOURCE_LINE, SOURCE_COLUMN } from './sourcemap-segment';\nimport { memoizedBinarySearch, upperBound } from './binary-search';\n\nimport type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';\nimport type { MemoState } from './binary-search';\n\nexport type Source = {\n  __proto__: null;\n  [line: number]: Exclude<ReverseSegment, [number]>[];\n};\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nexport default function buildBySources(\n  decoded: readonly SourceMapSegment[][],\n  memos: MemoState[],\n): Source[] {\n  const sources: Source[] = memos.map(buildNullArray);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n\n      const sourceIndex = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const originalSource = sources[sourceIndex];\n      const originalLine = (originalSource[sourceLine] ||= []);\n      const memo = memos[sourceIndex];\n\n      // The binary search either found a match, or it found the left-index just before where the\n      // segment should go. Either way, we want to insert after that. And there may be multiple\n      // generated segments associated with an original location, so there may need to move several\n      // indexes before we find where we need to insert.\n      let index = upperBound(\n        originalLine,\n        sourceColumn,\n        memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine),\n      );\n\n      memo.lastIndex = ++index;\n      insert(originalLine, index, [sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n\n  return sources;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray<T extends { __proto__: null }>(): T {\n  return { __proto__: null } as T;\n}\n","import { TraceMap, presortedDecodedMap, decodedMappings } from './trace-mapping';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type {\n  DecodedSourceMap,\n  DecodedSourceMapXInput,\n  EncodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionedSourceMapInput,\n  SectionXInput,\n} from './types';\nimport type { SourceMapSegment } from './sourcemap-segment';\n\ntype AnyMap = {\n  new (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n  (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n};\n\nexport const AnyMap: AnyMap = function (map, mapUrl) {\n  const parsed = parse(map);\n\n  if (!('sections' in parsed)) {\n    return new TraceMap(parsed as DecodedSourceMapXInput | EncodedSourceMapXInput, mapUrl);\n  }\n\n  const mappings: SourceMapSegment[][] = [];\n  const sources: string[] = [];\n  const sourcesContent: (string | null)[] = [];\n  const names: string[] = [];\n  const ignoreList: number[] = [];\n\n  recurse(\n    parsed,\n    mapUrl,\n    mappings,\n    sources,\n    sourcesContent,\n    names,\n    ignoreList,\n    0,\n    0,\n    Infinity,\n    Infinity,\n  );\n\n  const joined: DecodedSourceMap = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n    ignoreList,\n  };\n\n  return presortedDecodedMap(joined);\n} as AnyMap;\n\nfunction parse<T>(map: T): Exclude<T, string> {\n  return typeof map === 'string' ? JSON.parse(map) : map;\n}\n\nfunction recurse(\n  input: SectionedSourceMapXInput,\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      ignoreList,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc,\n    );\n  }\n}\n\nfunction addSection(\n  input: SectionXInput['map'],\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const parsed = parse(input);\n  if ('sections' in parsed) return recurse(...(arguments as unknown as Parameters<typeof recurse>));\n\n  const map = new TraceMap(parsed, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents, ignoreList: ignores } = map;\n\n  append(sources, resolvedSources);\n  append(names, map.names);\n\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n\n  if (ignores) for (let i = 0; i < ignores.length; i++) ignoreList.push(ignores[i] + sourcesOffset);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n\n    // We can only add so many lines before we step into the range that the next section's map\n    // controls. When we get to the last line, then we'll start checking the segments to see if\n    // they've crossed into the column range. But it may not have any columns that overstep, so we\n    // still need to check that we don't overstep lines, too.\n    if (lineI > stopLine) return;\n\n    // The out line may already exist in mappings (if we're continuing the line started by a\n    // previous section). Or, we may have jumped ahead several lines to start this section.\n    const out = getLine(mappings, lineI);\n    // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\n    // map can be multiple lines), it doesn't.\n    const cOffset = i === 0 ? columnOffset : 0;\n\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n\n      // If this segment steps into the column range that the next section's map controls, we need\n      // to stop early.\n      if (lineI === stopLine && column >= stopColumn) return;\n\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4\n          ? [column, sourcesIndex, sourceLine, sourceColumn]\n          : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]],\n      );\n    }\n  }\n}\n\nfunction append<T>(arr: T[], other: T[]) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\n\nfunction getLine<T>(arr: T[][], index: number): T[] {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n","import { encode, decode } from '@jridgewell/sourcemap-codec';\n\nimport resolve from './resolve';\nimport stripFilename from './strip-filename';\nimport maybeSort from './sort';\nimport buildBySources from './by-source';\nimport {\n  memoizedState,\n  memoizedBinarySearch,\n  upperBound,\n  lowerBound,\n  found as bsFound,\n} from './binary-search';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n  REV_GENERATED_LINE,\n  REV_GENERATED_COLUMN,\n} from './sourcemap-segment';\n\nimport type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport type {\n  SourceMapV3,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  InvalidOriginalMapping,\n  OriginalMapping,\n  InvalidGeneratedMapping,\n  GeneratedMapping,\n  SourceMapInput,\n  Needle,\n  SourceNeedle,\n  SourceMap,\n  EachMapping,\n  Bias,\n  XInput,\n} from './types';\nimport type { Source } from './by-source';\nimport type { MemoState } from './binary-search';\n\nexport type { SourceMapSegment } from './sourcemap-segment';\nexport type {\n  SourceMap,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  Section,\n  SectionedSourceMap,\n  SourceMapV3,\n  Bias,\n  EachMapping,\n  GeneratedMapping,\n  InvalidGeneratedMapping,\n  InvalidOriginalMapping,\n  Needle,\n  OriginalMapping,\n  OriginalMapping as Mapping,\n  SectionedSourceMapInput,\n  SourceMapInput,\n  SourceNeedle,\n  XInput,\n  EncodedSourceMapXInput,\n  DecodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionXInput,\n} from './types';\n\ninterface PublicMap {\n  _encoded: TraceMap['_encoded'];\n  _decoded: TraceMap['_decoded'];\n  _decodedMemo: TraceMap['_decodedMemo'];\n  _bySources: TraceMap['_bySources'];\n  _bySourceMemos: TraceMap['_bySourceMemos'];\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\n\nexport const LEAST_UPPER_BOUND = -1;\nexport const GREATEST_LOWER_BOUND = 1;\n\nexport { AnyMap } from './any-map';\n\nexport class TraceMap implements SourceMap {\n  declare version: SourceMapV3['version'];\n  declare file: SourceMapV3['file'];\n  declare names: SourceMapV3['names'];\n  declare sourceRoot: SourceMapV3['sourceRoot'];\n  declare sources: SourceMapV3['sources'];\n  declare sourcesContent: SourceMapV3['sourcesContent'];\n  declare ignoreList: SourceMapV3['ignoreList'];\n\n  declare resolvedSources: string[];\n  private declare _encoded: string | undefined;\n\n  private declare _decoded: SourceMapSegment[][] | undefined;\n  private declare _decodedMemo: MemoState;\n\n  private declare _bySources: Source[] | undefined;\n  private declare _bySourceMemos: MemoState[] | undefined;\n\n  constructor(map: SourceMapInput, mapUrl?: string | null) {\n    const isString = typeof map === 'string';\n\n    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;\n\n    const parsed = (isString ? JSON.parse(map) : map) as DecodedSourceMap | EncodedSourceMap;\n\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || (parsed as XInput).x_google_ignoreList || undefined;\n\n    const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n    this.resolvedSources = sources.map((s) => resolve(s || '', from));\n\n    const { mappings } = parsed;\n    if (typeof mappings === 'string') {\n      this._encoded = mappings;\n      this._decoded = undefined;\n    } else {\n      this._encoded = undefined;\n      this._decoded = maybeSort(mappings, isString);\n    }\n\n    this._decodedMemo = memoizedState();\n    this._bySources = undefined;\n    this._bySourceMemos = undefined;\n  }\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map: unknown): PublicMap {\n  return map as any;\n}\n\n/**\n * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\n */\nexport function encodedMappings(map: TraceMap): EncodedSourceMap['mappings'] {\n  return (cast(map)._encoded ??= encode(cast(map)._decoded!));\n}\n\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nexport function decodedMappings(map: TraceMap): Readonly<DecodedSourceMap['mappings']> {\n  return (cast(map)._decoded ||= decode(cast(map)._encoded!));\n}\n\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nexport function traceSegment(\n  map: TraceMap,\n  line: number,\n  column: number,\n): Readonly<SourceMapSegment> | null {\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return null;\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    GREATEST_LOWER_BOUND,\n  );\n\n  return index === -1 ? null : segments[index];\n}\n\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nexport function originalPositionFor(\n  map: TraceMap,\n  needle: Needle,\n): OriginalMapping | InvalidOriginalMapping {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND,\n  );\n\n  if (index === -1) return OMapping(null, null, null, null);\n\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null,\n  );\n}\n\n/**\n * Finds the generated line/column position of the provided source/line/column source position.\n */\nexport function generatedPositionFor(\n  map: TraceMap,\n  needle: SourceNeedle,\n): GeneratedMapping | InvalidGeneratedMapping {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\n\n/**\n * Finds all generated line/column positions of the provided source/line/column source position.\n */\nexport function allGeneratedPositionsFor(map: TraceMap, needle: SourceNeedle): GeneratedMapping[] {\n  const { source, line, column, bias } = needle;\n  // SourceMapConsumer uses LEAST_UPPER_BOUND for some reason, so we follow suit.\n  return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n}\n\n/**\n * Iterates each mapping in generated position order.\n */\nexport function eachMapping(map: TraceMap, cb: (mapping: EachMapping) => void): void {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name,\n      } as EachMapping);\n    }\n  }\n}\n\nfunction sourceIndex(map: TraceMap, source: string): number {\n  const { sources, resolvedSources } = map;\n  let index = sources.indexOf(source);\n  if (index === -1) index = resolvedSources.indexOf(source);\n  return index;\n}\n\n/**\n * Retrieves the source content for a particular source, if its found. Returns null if not.\n */\nexport function sourceContentFor(map: TraceMap, source: string): string | null {\n  const { sourcesContent } = map;\n  if (sourcesContent == null) return null;\n  const index = sourceIndex(map, source);\n  return index === -1 ? null : sourcesContent[index];\n}\n\n/**\n * Determines if the source is marked to ignore by the source map.\n */\nexport function isIgnored(map: TraceMap, source: string): boolean {\n  const { ignoreList } = map;\n  if (ignoreList == null) return false;\n  const index = sourceIndex(map, source);\n  return index === -1 ? false : ignoreList.includes(index);\n}\n\n/**\n * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\n * maps.\n */\nexport function presortedDecodedMap(map: DecodedSourceMap, mapUrl?: string): TraceMap {\n  const tracer = new TraceMap(clone(map, []), mapUrl);\n  cast(tracer)._decoded = map.mappings;\n  return tracer;\n}\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function decodedMap(\n  map: TraceMap,\n): Omit<DecodedSourceMap, 'mappings'> & { mappings: readonly SourceMapSegment[][] } {\n  return clone(map, decodedMappings(map));\n}\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function encodedMap(map: TraceMap): EncodedSourceMap {\n  return clone(map, encodedMappings(map));\n}\n\nfunction clone<T extends string | readonly SourceMapSegment[][]>(\n  map: TraceMap | DecodedSourceMap,\n  mappings: T,\n): T extends string ? EncodedSourceMap : DecodedSourceMap {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n    ignoreList: map.ignoreList || (map as XInput).x_google_ignoreList,\n  } as any;\n}\n\nfunction OMapping(source: null, line: null, column: null, name: null): InvalidOriginalMapping;\nfunction OMapping(\n  source: string,\n  line: number,\n  column: number,\n  name: string | null,\n): OriginalMapping;\nfunction OMapping(\n  source: string | null,\n  line: number | null,\n  column: number | null,\n  name: string | null,\n): OriginalMapping | InvalidOriginalMapping {\n  return { source, line, column, name } as any;\n}\n\nfunction GMapping(line: null, column: null): InvalidGeneratedMapping;\nfunction GMapping(line: number, column: number): GeneratedMapping;\nfunction GMapping(\n  line: number | null,\n  column: number | null,\n): GeneratedMapping | InvalidGeneratedMapping {\n  return { line, column } as any;\n}\n\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[] | ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (bsFound) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\n\nfunction sliceGeneratedPositions(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): GeneratedMapping[] {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n\n  // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\n  // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\n  // still need to call `lowerBound()` to find the first segment, which is slower than just looking\n  // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\n  // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\n  // match LEAST_UPPER_BOUND.\n  if (!bsFound && bias === LEAST_UPPER_BOUND) min++;\n\n  if (min === -1 || min === segments.length) return [];\n\n  // We may have found the segment that started at an earlier column. If this is the case, then we\n  // need to slice all generated segments that match _that_ column, because all such segments span\n  // to our desired column.\n  const matchedColumn = bsFound ? column : segments[min][COLUMN];\n\n  // The binary search is not guaranteed to find the lower bound when a match wasn't found.\n  if (!bsFound) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\n\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: false,\n): GeneratedMapping | InvalidGeneratedMapping;\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: true,\n): GeneratedMapping[];\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: boolean,\n): GeneratedMapping | InvalidGeneratedMapping | GeneratedMapping[] {\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const { sources, resolvedSources } = map;\n  let sourceIndex = sources.indexOf(source);\n  if (sourceIndex === -1) sourceIndex = resolvedSources.indexOf(source);\n  if (sourceIndex === -1) return all ? [] : GMapping(null, null);\n\n  const generated = (cast(map)._bySources ||= buildBySources(\n    decodedMappings(map),\n    (cast(map)._bySourceMemos = sources.map(memoizedState)),\n  ));\n\n  const segments = generated[sourceIndex][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n\n  const memo = cast(map)._bySourceMemos![sourceIndex];\n\n  if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n"],"names":["encode","decode","bsFound"],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/printer.js":{"lineLengths":[13,0,46,13,3,25,37,40,15,33,42,58,56,7,15,13,14,14,20,16,7,33,37,41,67,30,63,1,7,13,6,15,50,51,24,30,29,21,27,28,35,43,46,38,34,31,30,30,35,37,25,68,44,45,25,26,38,52,58,65,3,27,105,64,3,35,18,57,18,12,105,66,5,3,20,46,73,118,22,5,43,51,18,69,42,6,3,17,37,84,5,20,31,27,3,12,11,12,13,68,13,5,19,3,12,11,12,13,68,13,5,19,3,28,31,16,27,37,13,5,24,37,51,51,74,17,9,68,77,7,5,20,35,3,20,31,38,5,47,24,3,21,47,23,3,24,11,12,13,56,16,20,40,40,43,22,7,5,3,44,86,39,31,56,78,20,5,29,30,51,3,23,39,55,45,77,7,19,5,19,192,3,57,86,56,31,73,40,39,183,20,5,36,35,3,19,86,42,39,31,56,40,115,20,5,27,35,3,25,23,17,65,32,21,15,7,5,21,37,33,22,5,11,3,18,39,3,17,35,3,28,46,3,27,38,3,24,15,11,13,5,32,35,3,21,21,29,32,3,45,51,29,56,3,45,42,53,43,51,3,12,20,3,14,20,3,52,86,48,123,31,33,36,32,5,45,44,3,30,41,40,31,34,30,3,21,28,31,31,34,30,3,16,28,26,31,34,3,27,64,52,5,3,28,64,18,5,3,17,41,52,37,22,5,3,23,11,12,13,33,59,37,7,13,5,49,42,3,14,9,11,9,6,52,46,13,5,37,22,5,83,26,199,34,5,3,16,45,3,29,34,21,3,66,67,22,35,31,31,38,24,28,5,39,36,141,5,37,29,24,79,5,37,39,59,98,265,187,63,27,35,34,36,31,16,30,38,29,44,16,35,7,5,36,256,31,33,5,37,24,29,141,34,34,118,59,16,73,49,9,7,5,28,25,45,37,78,44,55,7,69,45,5,30,45,80,64,28,48,32,22,23,7,25,53,63,66,36,48,12,76,5,31,32,31,53,69,5,35,3,48,63,55,3,28,50,45,55,18,26,29,22,12,5,3,27,51,46,54,18,26,29,22,12,5,3,24,29,114,23,5,3,125,49,52,23,97,74,22,7,5,30,25,31,26,6,77,29,35,28,26,62,67,44,35,107,7,22,35,107,36,9,28,26,16,28,40,124,48,9,7,5,30,3,34,75,30,21,30,3,22,29,41,19,5,21,3,52,11,20,22,13,56,70,5,62,73,5,3,39,42,55,51,3,68,33,25,170,5,34,37,3,33,35,40,55,39,45,60,30,76,74,19,5,30,3,31,38,3,73,139,3,84,138,3,37,36,128,39,78,3,32,31,53,25,19,13,5,19,13,5,45,50,47,49,24,34,15,7,5,33,22,5,3,43,33,53,89,15,5,37,103,61,17,7,5,39,57,15,5,13,3,40,52,59,90,72,22,5,44,77,19,5,12,25,35,54,25,97,21,75,48,9,34,46,16,86,66,44,11,71,9,7,35,33,12,35,5,41,24,13,39,37,15,47,46,40,40,73,75,12,40,40,5,47,28,5,46,22,5,3,75,29,32,27,58,54,21,34,91,35,34,71,30,23,14,7,55,56,52,25,25,24,116,49,13,18,49,11,36,31,41,30,84,37,11,32,81,36,31,41,30,62,35,11,16,92,36,31,41,9,14,23,32,19,9,24,126,148,27,131,24,24,55,43,18,43,11,165,75,16,41,9,7,5,43,39,5,3,1,53,1,52,1,41,48,42,26,1,0,35,0],"data":{"version":3,"names":["_buffer","require","_index","n","_t","_tokenMap","generatorFunctions","_deprecated","isExpression","isFunction","isStatement","isClassBody","isTSInterfaceBody","isTSEnumMember","SCIENTIFIC_NOTATION","ZERO_DECIMAL_INTEGER","HAS_NEWLINE","HAS_NEWLINE_OR_BlOCK_COMMENT_END","commentIsNewline","c","type","test","value","needsParens","Printer","constructor","format","map","tokens","originalCode","tokenContext","TokenContext","normal","_tokens","_originalCode","_currentNode","_indent","_indentRepeat","_insideAux","_noLineTerminator","_noLineTerminatorAfterNode","_printAuxAfterOnNextUserNode","_printedComments","Set","_endsWithInteger","_endsWithWord","_endsWithDiv","_lastCommentLine","_endsWithInnerRaw","_indentInnerComments","tokenMap","_boundGetRawIdentifier","_getRawIdentifier","bind","_printSemicolonBeforeNextNode","_printSemicolonBeforeNextToken","indent","style","length","_inputMap","_buf","Buffer","enterForStatementInit","forInitHead","forInOrInitHeadAccumulate","enterForXStatementInit","isForOf","forOfHead","forInHead","enterDelimited","oldTokenContext","oldNoLineTerminatorAfterNode","generate","ast","preserveFormat","TokenMap","print","_maybeAddAuxComment","get","compact","concise","dedent","semicolon","force","_appendChar","node","start","end","endMatches","getCurrentLine","indexes","getIndexes","_catchUpTo","loc","_queue","rightBrace","minified","removeLastSemicolon","sourceWithOffset","token","rightParens","space","_space","hasContent","lastCp","getLastChar","word","str","noLineTerminatorAfter","forInOrInitHeadAccumulatePassThroughMask","_maybePrintInnerComments","_catchUpToCurrentToken","charCodeAt","_append","number","isNonDecimalLiteral","secondChar","Number","isInteger","maybeNewline","occurrenceCount","lastChar","strFirst","tokenChar","char","String","fromCharCode","newline","i","retainLines","getNewlineCount","j","_newline","endsWith","endsWithCharAndNewline","removeTrailingNewline","exactSource","cb","_catchUp","source","prop","columnOffset","sourceIdentifierName","identifierName","pos","_canMarkIdName","sourcePosition","_sourcePosition","identifierNamePos","findMatching","appendChar","_maybeIndent","append","queue","firstChar","queueIndentation","_getIndent","_shouldIndent","catchUp","line","count","column","index","spacesCount","getCurrentColumn","spaces","slice","replace","repeat","printTerminatorless","trailingCommentsLineOffset","_node$extra","_node$leadingComments","_node$leadingComments2","nodeType","oldConcise","_compact","printMethod","undefined","ReferenceError","JSON","stringify","name","parent","oldInAux","parenthesized","extra","shouldPrintParens","retainFunctionParens","leadingComments","parentType","callee","indentParenthesized","some","isLastChild","_node$trailingComment","trailingComments","_printLeadingComments","_printTrailingComments","enteredPositionlessNode","_printAuxBeforeComment","_printAuxAfterComment","comment","auxiliaryCommentBefore","_printComment","auxiliaryCommentAfter","getPossibleRaw","raw","rawValue","printJoin","nodes","statement","separator","printTrailingSeparator","addNewlines","iterator","_nodes$0$loc","startLine","newlineOpts","nextNodeStartLine","boundSeparator","len","_printNewline","_node$trailingComment2","_nextNode$loc","nextNode","printAndIndentOnComments","printBlock","body","lineOffset","innerComments","_printComments","comments","nextTokenStr","nextTokenOccurrenceCount","_this$tokenMap","printInnerComments","nextToken","hasSpace","printedCommentsCount","size","noIndentInnerCommentsHere","printSequence","printList","items","commaSeparator","shouldPrintTrailingComma","listEnd","listEndIndex","findLastIndex","matchesOriginal","newLine","opts","lastCommentLine","offset","_shouldPrintComment","ignore","has","commentTok","find","add","shouldPrintComment","skipNewLines","noLineTerminator","isBlockComment","printNewLines","lastCharCode","val","adjustMultilineComment","_comment$loc","newlineRegex","RegExp","indentSize","nodeLoc","hasLoc","nodeStartLine","nodeEndLine","lastLine","leadingCommentNewline","shouldPrint","commentStartLine","commentEndLine","Math","max","min","singleLine","shouldSkipNewline","properties","Object","assign","prototype","addDeprecatedGenerators","_default","exports","default","last"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/printer.ts"],"sourcesContent":["import Buffer, { type Pos } from \"./buffer.ts\";\nimport type { Loc } from \"./buffer.ts\";\nimport * as n from \"./node/index.ts\";\nimport type * as t from \"@babel/types\";\nimport {\n  isExpression,\n  isFunction,\n  isStatement,\n  isClassBody,\n  isTSInterfaceBody,\n  isTSEnumMember,\n} from \"@babel/types\";\nimport type { Opts as jsescOptions } from \"jsesc\";\n\nimport { TokenMap } from \"./token-map.ts\";\nimport type { GeneratorOptions } from \"./index.ts\";\nimport * as generatorFunctions from \"./generators/index.ts\";\nimport {\n  addDeprecatedGenerators,\n  type DeprecatedBabel7ASTTypes,\n} from \"./generators/deprecated.ts\";\nimport type SourceMap from \"./source-map.ts\";\nimport type { TraceMap } from \"@jridgewell/trace-mapping\";\nimport type { Token } from \"@babel/parser\";\n\n// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst HAS_NEWLINE = /[\\n\\r\\u2028\\u2029]/;\nconst HAS_NEWLINE_OR_BlOCK_COMMENT_END = /[\\n\\r\\u2028\\u2029]|\\*\\//;\n\nfunction commentIsNewline(c: t.Comment) {\n  return c.type === \"CommentLine\" || HAS_NEWLINE.test(c.value);\n}\n\nconst { needsParens } = n;\n\nimport { TokenContext } from \"./node/index.ts\";\n\nconst enum COMMENT_TYPE {\n  LEADING,\n  INNER,\n  TRAILING,\n}\n\nconst enum COMMENT_SKIP_NEWLINE {\n  DEFAULT,\n  ALL,\n  LEADING,\n  TRAILING,\n}\n\nconst enum PRINT_COMMENT_HINT {\n  SKIP,\n  ALLOW,\n  DEFER,\n}\n\nexport type Format = {\n  shouldPrintComment: (comment: string) => boolean;\n  preserveFormat: boolean;\n  retainLines: boolean;\n  retainFunctionParens: boolean;\n  comments: boolean;\n  auxiliaryCommentBefore: string;\n  auxiliaryCommentAfter: string;\n  compact: boolean | \"auto\";\n  minified: boolean;\n  concise: boolean;\n  indent: {\n    adjustMultilineComment: boolean;\n    style: string;\n  };\n  /**\n   * @deprecated Removed in Babel 8, syntax type is always 'hash'\n   */\n  recordAndTupleSyntaxType?: GeneratorOptions[\"recordAndTupleSyntaxType\"];\n  jsescOption: jsescOptions;\n  /**\n   * @deprecated Removed in Babel 8, use `jsescOption` instead\n   */\n  jsonCompatibleStrings?: boolean;\n  /**\n   * For use with the Hack-style pipe operator.\n   * Changes what token is used for pipe bodies’ topic references.\n   */\n  topicToken?: GeneratorOptions[\"topicToken\"];\n  /**\n   * @deprecated Removed in Babel 8\n   */\n  decoratorsBeforeExport?: boolean;\n  /**\n   * The import attributes syntax style:\n   * - \"with\"        : `import { a } from \"b\" with { type: \"json\" };`\n   * - \"assert\"      : `import { a } from \"b\" assert { type: \"json\" };`\n   * - \"with-legacy\" : `import { a } from \"b\" with type: \"json\";`\n   */\n  importAttributesKeyword?: \"with\" | \"assert\" | \"with-legacy\";\n};\n\ninterface AddNewlinesOptions {\n  addNewlines(leading: boolean, node: t.Node): number;\n  nextNodeStartLine: number;\n}\n\ninterface PrintSequenceOptions extends Partial<AddNewlinesOptions> {\n  statement?: boolean;\n  indent?: boolean;\n  trailingCommentsLineOffset?: number;\n}\n\ninterface PrintListOptions {\n  separator?: (this: Printer, occurrenceCount: number, last: boolean) => void;\n  iterator?: (node: t.Node, index: number) => void;\n  statement?: boolean;\n  indent?: boolean;\n  printTrailingSeparator?: boolean;\n}\n\nexport type PrintJoinOptions = PrintListOptions & PrintSequenceOptions;\nclass Printer {\n  constructor(\n    format: Format,\n    map: SourceMap,\n    tokens?: Token[],\n    originalCode?: string,\n  ) {\n    this.format = format;\n\n    this._tokens = tokens;\n    this._originalCode = originalCode;\n\n    this._indentRepeat = format.indent.style.length;\n\n    this._inputMap = map?._inputMap;\n\n    this._buf = new Buffer(map, format.indent.style[0]);\n  }\n  declare _inputMap: TraceMap;\n\n  declare format: Format;\n\n  enterForStatementInit() {\n    this.tokenContext |=\n      TokenContext.forInitHead | TokenContext.forInOrInitHeadAccumulate;\n    return () => (this.tokenContext = TokenContext.normal);\n  }\n\n  enterForXStatementInit(isForOf: boolean) {\n    if (isForOf) {\n      this.tokenContext |= TokenContext.forOfHead;\n      return null;\n    } else {\n      this.tokenContext |=\n        TokenContext.forInHead | TokenContext.forInOrInitHeadAccumulate;\n      return () => (this.tokenContext = TokenContext.normal);\n    }\n  }\n\n  enterDelimited() {\n    const oldTokenContext = this.tokenContext;\n    const oldNoLineTerminatorAfterNode = this._noLineTerminatorAfterNode;\n    if (\n      !(oldTokenContext & TokenContext.forInOrInitHeadAccumulate) &&\n      oldNoLineTerminatorAfterNode === null\n    ) {\n      return () => {};\n    }\n    this._noLineTerminatorAfterNode = null;\n    this.tokenContext = TokenContext.normal;\n    return () => {\n      this._noLineTerminatorAfterNode = oldNoLineTerminatorAfterNode;\n      this.tokenContext = oldTokenContext;\n    };\n  }\n\n  tokenContext: number = TokenContext.normal;\n\n  _tokens: Token[] = null;\n  _originalCode: string | null = null;\n\n  declare _buf: Buffer;\n  _currentNode: t.Node = null;\n  _indent: number = 0;\n  _indentRepeat: number = 0;\n  _insideAux: boolean = false;\n  _noLineTerminator: boolean = false;\n  _noLineTerminatorAfterNode: t.Node | null = null;\n  _printAuxAfterOnNextUserNode: boolean = false;\n  _printedComments = new Set<t.Comment>();\n  _endsWithInteger = false;\n  _endsWithWord = false;\n  _endsWithDiv = false;\n  _lastCommentLine = 0;\n  _endsWithInnerRaw: boolean = false;\n  _indentInnerComments: boolean = true;\n  tokenMap: TokenMap = null;\n\n  _boundGetRawIdentifier = this._getRawIdentifier.bind(this);\n\n  generate(ast: t.Node) {\n    if (this.format.preserveFormat) {\n      this.tokenMap = new TokenMap(ast, this._tokens, this._originalCode);\n    }\n    this.print(ast);\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  /**\n   * Increment indent size.\n   */\n\n  indent(): void {\n    const { format } = this;\n    if (format.preserveFormat || format.compact || format.concise) {\n      return;\n    }\n\n    this._indent++;\n  }\n\n  /**\n   * Decrement indent size.\n   */\n\n  dedent(): void {\n    const { format } = this;\n    if (format.preserveFormat || format.compact || format.concise) {\n      return;\n    }\n\n    this._indent--;\n  }\n\n  /**\n   * If the next token is on the same line, we must first print a semicolon.\n   * This option is only used in `preserveFormat` node, for semicolons that\n   * might have omitted due to them being absent in the original code (thanks\n   * to ASI).\n   *\n   * We need both *NextToken and *NextNode because we only want to insert the\n   * semicolon when the next token starts a new node, and not in cases like\n   * foo} (where } is not starting a new node). So we first set *NextNode, and\n   * then the print() method will move it to *NextToken.\n   */\n  _printSemicolonBeforeNextNode: number = -1;\n  _printSemicolonBeforeNextToken: number = -1;\n\n  /**\n   * Add a semicolon to the buffer.\n   */\n  semicolon(force: boolean = false): void {\n    this._maybeAddAuxComment();\n    if (force) {\n      this._appendChar(charCodes.semicolon);\n      this._noLineTerminator = false;\n      return;\n    }\n    if (this.tokenMap) {\n      const node = this._currentNode;\n      if (node.start != null && node.end != null) {\n        if (!this.tokenMap.endMatches(node, \";\")) {\n          // no semicolon\n          this._printSemicolonBeforeNextNode = this._buf.getCurrentLine();\n          return;\n        }\n        const indexes = this.tokenMap.getIndexes(this._currentNode);\n        this._catchUpTo(this._tokens[indexes[indexes.length - 1]].loc.start);\n      }\n    }\n    this._queue(charCodes.semicolon);\n    this._noLineTerminator = false;\n  }\n\n  /**\n   * Add a right brace to the buffer.\n   */\n\n  rightBrace(node: t.Node): void {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n    this.sourceWithOffset(\"end\", node.loc, -1);\n    this.token(\"}\");\n  }\n\n  rightParens(node: t.Node): void {\n    this.sourceWithOffset(\"end\", node.loc, -1);\n    this.token(\")\");\n  }\n\n  /**\n   * Add a space to the buffer unless it is compact.\n   */\n\n  space(force: boolean = false): void {\n    const { format } = this;\n    if (format.compact || format.preserveFormat) return;\n\n    if (force) {\n      this._space();\n    } else if (this._buf.hasContent()) {\n      const lastCp = this.getLastChar();\n      if (lastCp !== charCodes.space && lastCp !== charCodes.lineFeed) {\n        this._space();\n      }\n    }\n  }\n\n  /**\n   * Writes a token that can't be safely parsed without taking whitespace into account.\n   */\n\n  word(str: string, noLineTerminatorAfter: boolean = false): void {\n    this.tokenContext &= TokenContext.forInOrInitHeadAccumulatePassThroughMask;\n\n    this._maybePrintInnerComments(str);\n\n    this._maybeAddAuxComment();\n\n    if (this.tokenMap) this._catchUpToCurrentToken(str);\n\n    // prevent concatenating words and creating // comment out of division and regex\n    if (\n      this._endsWithWord ||\n      (this._endsWithDiv && str.charCodeAt(0) === charCodes.slash)\n    ) {\n      this._space();\n    }\n    this._append(str, false);\n\n    this._endsWithWord = true;\n    this._noLineTerminator = noLineTerminatorAfter;\n  }\n\n  /**\n   * Writes a number token so that we can validate if it is an integer.\n   */\n\n  number(str: string, number?: number): void {\n    // const NON_DECIMAL_LITERAL = /^0[box]/;\n    function isNonDecimalLiteral(str: string) {\n      if (str.length > 2 && str.charCodeAt(0) === charCodes.digit0) {\n        const secondChar = str.charCodeAt(1);\n        return (\n          secondChar === charCodes.lowercaseB ||\n          secondChar === charCodes.lowercaseO ||\n          secondChar === charCodes.lowercaseX\n        );\n      }\n      return false;\n    }\n    this.word(str);\n\n    // Integer tokens need special handling because they cannot have '.'s inserted\n    // immediately after them.\n    this._endsWithInteger =\n      Number.isInteger(number) &&\n      !isNonDecimalLiteral(str) &&\n      !SCIENTIFIC_NOTATION.test(str) &&\n      !ZERO_DECIMAL_INTEGER.test(str) &&\n      str.charCodeAt(str.length - 1) !== charCodes.dot;\n  }\n\n  /**\n   * Writes a simple token.\n   *\n   * @param {string} str The string to append.\n   * @param {boolean} [maybeNewline=false] Wether `str` might potentially\n   *    contain a line terminator or not.\n   * @param {number} [occurrenceCount=0] The occurrence count of this token in\n   *    the current node. This is used when printing in `preserveFormat` mode,\n   *    to know which token we should map to (for example, to disambiguate the\n   *    commas in an array literal).\n   */\n  token(str: string, maybeNewline = false, occurrenceCount = 0): void {\n    this.tokenContext &= TokenContext.forInOrInitHeadAccumulatePassThroughMask;\n\n    this._maybePrintInnerComments(str, occurrenceCount);\n\n    this._maybeAddAuxComment();\n\n    if (this.tokenMap) this._catchUpToCurrentToken(str, occurrenceCount);\n\n    const lastChar = this.getLastChar();\n    const strFirst = str.charCodeAt(0);\n    if (\n      (lastChar === charCodes.exclamationMark &&\n        // space is mandatory to avoid outputting <!--\n        // http://javascript.spec.whatwg.org/#comment-syntax\n        (str === \"--\" ||\n          // Needs spaces to avoid changing a! == 0 to a!== 0\n          strFirst === charCodes.equalsTo)) ||\n      // Need spaces for operators of the same kind to avoid: `a+++b`\n      (strFirst === charCodes.plusSign && lastChar === charCodes.plusSign) ||\n      (strFirst === charCodes.dash && lastChar === charCodes.dash) ||\n      // Needs spaces to avoid changing '34' to '34.', which would still be a valid number.\n      (strFirst === charCodes.dot && this._endsWithInteger)\n    ) {\n      this._space();\n    }\n    this._append(str, maybeNewline);\n    this._noLineTerminator = false;\n  }\n\n  tokenChar(char: number): void {\n    this.tokenContext &= TokenContext.forInOrInitHeadAccumulatePassThroughMask;\n\n    const str = String.fromCharCode(char);\n    this._maybePrintInnerComments(str);\n\n    this._maybeAddAuxComment();\n\n    if (this.tokenMap) this._catchUpToCurrentToken(str);\n\n    const lastChar = this.getLastChar();\n    if (\n      // Need spaces for operators of the same kind to avoid: `a+++b`\n      (char === charCodes.plusSign && lastChar === charCodes.plusSign) ||\n      (char === charCodes.dash && lastChar === charCodes.dash) ||\n      // Needs spaces to avoid changing '34' to '34.', which would still be a valid number.\n      (char === charCodes.dot && this._endsWithInteger)\n    ) {\n      this._space();\n    }\n    this._appendChar(char);\n    this._noLineTerminator = false;\n  }\n\n  /**\n   * Add a newline (or many newlines), maintaining formatting.\n   * This function checks the number of newlines in the queue and subtracts them.\n   * It currently has some limitations.\n   * @see {Buffer#getNewlineCount}\n   */\n  newline(i: number = 1, force?: boolean): void {\n    if (i <= 0) return;\n\n    if (!force) {\n      if (this.format.retainLines || this.format.compact) return;\n\n      if (this.format.concise) {\n        this.space();\n        return;\n      }\n    }\n\n    if (i > 2) i = 2; // Max two lines\n\n    i -= this._buf.getNewlineCount();\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n\n    return;\n  }\n\n  endsWith(char: number): boolean {\n    return this.getLastChar() === char;\n  }\n\n  getLastChar(): number {\n    return this._buf.getLastChar();\n  }\n\n  endsWithCharAndNewline(): number {\n    return this._buf.endsWithCharAndNewline();\n  }\n\n  removeTrailingNewline(): void {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc: Loc | undefined, cb: () => void) {\n    if (!loc) {\n      cb();\n      return;\n    }\n\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop: \"start\" | \"end\", loc: Loc | undefined): void {\n    if (!loc) return;\n\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  sourceWithOffset(\n    prop: \"start\" | \"end\",\n    loc: Loc | undefined,\n    columnOffset: number,\n  ): void {\n    if (!loc || this.format.preserveFormat) return;\n\n    this._catchUp(prop, loc);\n\n    this._buf.sourceWithOffset(prop, loc, columnOffset);\n  }\n\n  sourceIdentifierName(identifierName: string, pos?: Pos): void {\n    if (!this._buf._canMarkIdName) return;\n\n    const sourcePosition = this._buf._sourcePosition;\n    sourcePosition.identifierNamePos = pos;\n    sourcePosition.identifierName = identifierName;\n  }\n\n  _space(): void {\n    this._queue(charCodes.space);\n  }\n\n  _newline(): void {\n    this._queue(charCodes.lineFeed);\n  }\n\n  _catchUpToCurrentToken(str: string, occurrenceCount: number = 0): void {\n    // Assert: this.tokenMap\n\n    const token = this.tokenMap.findMatching(\n      this._currentNode,\n      str,\n      occurrenceCount,\n    );\n    if (token) this._catchUpTo(token.loc.start);\n\n    if (\n      this._printSemicolonBeforeNextToken !== -1 &&\n      this._printSemicolonBeforeNextToken === this._buf.getCurrentLine()\n    ) {\n      this._buf.appendChar(charCodes.semicolon);\n      this._endsWithWord = false;\n      this._endsWithInteger = false;\n      this._endsWithDiv = false;\n    }\n    this._printSemicolonBeforeNextToken = -1;\n    this._printSemicolonBeforeNextNode = -1;\n  }\n\n  _append(str: string, maybeNewline: boolean): void {\n    this._maybeIndent(str.charCodeAt(0));\n\n    this._buf.append(str, maybeNewline);\n\n    // callers are expected to then set these to `true` when needed\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n    this._endsWithDiv = false;\n  }\n\n  _appendChar(char: number): void {\n    this._maybeIndent(char);\n\n    this._buf.appendChar(char);\n\n    // callers are expected to then set these to `true` when needed\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n    this._endsWithDiv = false;\n  }\n\n  _queue(char: number) {\n    this._maybeIndent(char);\n\n    this._buf.queue(char);\n\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(firstChar: number): void {\n    // we've got a newline before us so prepend on the indentation\n    if (\n      this._indent &&\n      firstChar !== charCodes.lineFeed &&\n      this.endsWith(charCodes.lineFeed)\n    ) {\n      this._buf.queueIndentation(this._getIndent());\n    }\n  }\n\n  _shouldIndent(firstChar: number) {\n    // we've got a newline before us so prepend on the indentation\n    if (\n      this._indent &&\n      firstChar !== charCodes.lineFeed &&\n      this.endsWith(charCodes.lineFeed)\n    ) {\n      return true;\n    }\n  }\n\n  catchUp(line: number) {\n    if (!this.format.retainLines) return;\n\n    // catch up to this nodes newline if we're behind\n    const count = line - this._buf.getCurrentLine();\n\n    for (let i = 0; i < count; i++) {\n      this._newline();\n    }\n  }\n\n  _catchUp(prop: \"start\" | \"end\", loc?: Loc) {\n    const { format } = this;\n    if (!format.preserveFormat) {\n      if (format.retainLines && loc?.[prop]) {\n        this.catchUp(loc[prop].line);\n      }\n      return;\n    }\n\n    // catch up to this nodes newline if we're behind\n    const pos = loc?.[prop];\n    if (pos != null) this._catchUpTo(pos);\n  }\n\n  _catchUpTo({ line, column, index }: Pos) {\n    const count = line - this._buf.getCurrentLine();\n    if (count > 0 && this._noLineTerminator) {\n      // We cannot inject new lines when _noLineTemrinator is set\n      // to `true`, or we would generate invalid code.\n      return;\n    }\n\n    for (let i = 0; i < count; i++) {\n      this._newline();\n    }\n\n    const spacesCount =\n      count > 0 ? column : column - this._buf.getCurrentColumn();\n    if (spacesCount > 0) {\n      const spaces = this._originalCode\n        ? this._originalCode\n            .slice(index - spacesCount, index)\n            // https://tc39.es/ecma262/#sec-white-space\n            .replace(/[^\\t\\v\\f\\uFEFF\\p{Space_Separator}]/gu, \" \")\n        : \" \".repeat(spacesCount);\n      this._append(spaces, false);\n    }\n  }\n\n  /**\n   * Get the current indent.\n   */\n\n  _getIndent(): number {\n    return this._indentRepeat * this._indent;\n  }\n\n  printTerminatorless(node: t.Node) {\n    /**\n     * Set some state that will be modified if a newline has been inserted before any\n     * non-space characters.\n     *\n     * This is to prevent breaking semantics for terminatorless separator nodes. eg:\n     *\n     *   return foo;\n     *\n     * returns `foo`. But if we do:\n     *\n     *   return\n     *   foo;\n     *\n     *  `undefined` will be returned and not `foo` due to the terminator.\n     */\n    this._noLineTerminator = true;\n    this.print(node);\n  }\n\n  print(\n    node: t.Node | null,\n    noLineTerminatorAfter?: boolean,\n    // trailingCommentsLineOffset also used to check if called from printJoin\n    // it will be ignored if `noLineTerminatorAfter||this._noLineTerminator`\n    trailingCommentsLineOffset?: number,\n  ) {\n    if (!node) return;\n\n    this._endsWithInnerRaw = false;\n\n    const nodeType = node.type;\n    const format = this.format;\n\n    const oldConcise = format.concise;\n    if (\n      // @ts-expect-error document _compact AST properties\n      node._compact\n    ) {\n      format.concise = true;\n    }\n\n    const printMethod =\n      this[\n        nodeType as Exclude<\n          t.Node[\"type\"],\n          | DeprecatedBabel7ASTTypes\n          // renamed\n          | t.DeprecatedAliases[\"type\"]\n        >\n      ];\n    if (printMethod === undefined) {\n      throw new ReferenceError(\n        `unknown node of type ${JSON.stringify(\n          nodeType,\n        )} with constructor ${JSON.stringify(node.constructor.name)}`,\n      );\n    }\n\n    const parent = this._currentNode;\n    this._currentNode = node;\n\n    if (this.tokenMap) {\n      this._printSemicolonBeforeNextToken = this._printSemicolonBeforeNextNode;\n    }\n\n    const oldInAux = this._insideAux;\n    this._insideAux = node.loc == null;\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    const parenthesized = node.extra?.parenthesized as boolean | undefined;\n    let shouldPrintParens =\n      (parenthesized && format.preserveFormat) ||\n      (parenthesized &&\n        format.retainFunctionParens &&\n        nodeType === \"FunctionExpression\") ||\n      needsParens(\n        node,\n        parent,\n        this.tokenContext,\n        format.preserveFormat ? this._boundGetRawIdentifier : undefined,\n      );\n\n    if (\n      !shouldPrintParens &&\n      parenthesized &&\n      node.leadingComments?.length &&\n      node.leadingComments[0].type === \"CommentBlock\"\n    ) {\n      const parentType = parent?.type;\n      switch (parentType) {\n        case \"ExpressionStatement\":\n        case \"VariableDeclarator\":\n        case \"AssignmentExpression\":\n        case \"ReturnStatement\":\n          break;\n        case \"CallExpression\":\n        case \"OptionalCallExpression\":\n        case \"NewExpression\":\n          if (parent.callee !== node) break;\n        // falls through\n        default:\n          shouldPrintParens = true;\n      }\n    }\n\n    let indentParenthesized = false;\n    if (\n      !shouldPrintParens &&\n      this._noLineTerminator &&\n      (node.leadingComments?.some(commentIsNewline) ||\n        (this.format.retainLines &&\n          node.loc &&\n          node.loc.start.line > this._buf.getCurrentLine()))\n    ) {\n      shouldPrintParens = true;\n      indentParenthesized = true;\n    }\n\n    let oldNoLineTerminatorAfterNode;\n    let oldTokenContext;\n    if (!shouldPrintParens) {\n      noLineTerminatorAfter ||=\n        parent &&\n        this._noLineTerminatorAfterNode === parent &&\n        n.isLastChild(parent, node);\n      if (noLineTerminatorAfter) {\n        if (node.trailingComments?.some(commentIsNewline)) {\n          if (isExpression(node)) shouldPrintParens = true;\n        } else {\n          oldNoLineTerminatorAfterNode = this._noLineTerminatorAfterNode;\n          this._noLineTerminatorAfterNode = node;\n        }\n      }\n    }\n\n    if (shouldPrintParens) {\n      this.token(\"(\");\n      if (indentParenthesized) this.indent();\n      this._endsWithInnerRaw = false;\n      if (this.tokenContext & TokenContext.forInOrInitHeadAccumulate) {\n        oldTokenContext = this.tokenContext;\n        this.tokenContext = TokenContext.normal;\n      }\n      oldNoLineTerminatorAfterNode = this._noLineTerminatorAfterNode;\n      this._noLineTerminatorAfterNode = null;\n    }\n\n    this._lastCommentLine = 0;\n\n    this._printLeadingComments(node, parent);\n\n    const loc = nodeType === \"Program\" || nodeType === \"File\" ? null : node.loc;\n\n    this.exactSource(\n      loc,\n      // @ts-expect-error Expected 1 arguments, but got 3.\n      printMethod.bind(this, node, parent),\n    );\n\n    if (shouldPrintParens) {\n      this._printTrailingComments(node, parent);\n      if (indentParenthesized) {\n        this.dedent();\n        this.newline();\n      }\n      this.token(\")\");\n      this._noLineTerminator = noLineTerminatorAfter;\n      if (oldTokenContext) this.tokenContext = oldTokenContext;\n    } else if (noLineTerminatorAfter && !this._noLineTerminator) {\n      this._noLineTerminator = true;\n      this._printTrailingComments(node, parent);\n    } else {\n      this._printTrailingComments(node, parent, trailingCommentsLineOffset);\n    }\n\n    // end\n    this._currentNode = parent;\n    format.concise = oldConcise;\n    this._insideAux = oldInAux;\n\n    if (oldNoLineTerminatorAfterNode !== undefined) {\n      this._noLineTerminatorAfterNode = oldNoLineTerminatorAfterNode;\n    }\n\n    this._endsWithInnerRaw = false;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode?: boolean) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n\n    const comment = this.format.auxiliaryCommentBefore;\n    if (comment) {\n      this._printComment(\n        {\n          type: \"CommentBlock\",\n          value: comment,\n        },\n        COMMENT_SKIP_NEWLINE.DEFAULT,\n      );\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n\n    const comment = this.format.auxiliaryCommentAfter;\n    if (comment) {\n      this._printComment(\n        {\n          type: \"CommentBlock\",\n          value: comment,\n        },\n        COMMENT_SKIP_NEWLINE.DEFAULT,\n      );\n    }\n  }\n\n  getPossibleRaw(\n    node:\n      | t.StringLiteral\n      | t.NumericLiteral\n      | t.BigIntLiteral\n      | t.DirectiveLiteral\n      | t.JSXText,\n  ): string | undefined {\n    const extra = node.extra;\n    if (\n      extra?.raw != null &&\n      extra.rawValue != null &&\n      node.value === extra.rawValue\n    ) {\n      // @ts-expect-error: The extra.raw of these AST node types must be a string\n      return extra.raw;\n    }\n  }\n\n  printJoin(\n    nodes: Array<t.Node> | undefined | null,\n    statement?: boolean,\n    indent?: boolean,\n    separator?: PrintJoinOptions[\"separator\"],\n    printTrailingSeparator?: boolean,\n    addNewlines?: PrintJoinOptions[\"addNewlines\"],\n    iterator?: PrintJoinOptions[\"iterator\"],\n    trailingCommentsLineOffset?: number,\n  ) {\n    if (!nodes?.length) return;\n\n    if (indent == null && this.format.retainLines) {\n      const startLine = nodes[0].loc?.start.line;\n      if (startLine != null && startLine !== this._buf.getCurrentLine()) {\n        indent = true;\n      }\n    }\n\n    if (indent) this.indent();\n\n    const newlineOpts: AddNewlinesOptions = {\n      addNewlines: addNewlines,\n      nextNodeStartLine: 0,\n    };\n\n    const boundSeparator = separator?.bind(this);\n\n    const len = nodes.length;\n    for (let i = 0; i < len; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n\n      if (statement) this._printNewline(i === 0, newlineOpts);\n\n      this.print(node, undefined, trailingCommentsLineOffset || 0);\n\n      iterator?.(node, i);\n\n      if (boundSeparator != null) {\n        if (i < len - 1) boundSeparator(i, false);\n        else if (printTrailingSeparator) boundSeparator(i, true);\n      }\n\n      if (statement) {\n        if (!node.trailingComments?.length) {\n          this._lastCommentLine = 0;\n        }\n\n        if (i + 1 === len) {\n          this.newline(1);\n        } else {\n          const nextNode = nodes[i + 1];\n          newlineOpts.nextNodeStartLine = nextNode.loc?.start.line || 0;\n\n          this._printNewline(true, newlineOpts);\n        }\n      }\n    }\n\n    if (indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node: t.Node) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent: Extract<t.Node, { body: t.Statement }>) {\n    const node = parent.body;\n\n    if (node.type !== \"EmptyStatement\") {\n      this.space();\n    }\n\n    this.print(node);\n  }\n\n  _printTrailingComments(node: t.Node, parent?: t.Node, lineOffset?: number) {\n    const { innerComments, trailingComments } = node;\n    // We print inner comments here, so that if for some reason they couldn't\n    // be printed in earlier locations they are still printed *somewhere*,\n    // even if at the end of the node.\n    if (innerComments?.length) {\n      this._printComments(\n        COMMENT_TYPE.TRAILING,\n        innerComments,\n        node,\n        parent,\n        lineOffset,\n      );\n    }\n    if (trailingComments?.length) {\n      this._printComments(\n        COMMENT_TYPE.TRAILING,\n        trailingComments,\n        node,\n        parent,\n        lineOffset,\n      );\n    }\n  }\n\n  _printLeadingComments(node: t.Node, parent: t.Node) {\n    const comments = node.leadingComments;\n    if (!comments?.length) return;\n    this._printComments(COMMENT_TYPE.LEADING, comments, node, parent);\n  }\n\n  _maybePrintInnerComments(\n    nextTokenStr: string,\n    nextTokenOccurrenceCount?: number,\n  ) {\n    if (this._endsWithInnerRaw) {\n      this.printInnerComments(\n        this.tokenMap?.findMatching(\n          this._currentNode,\n          nextTokenStr,\n          nextTokenOccurrenceCount,\n        ),\n      );\n    }\n    this._endsWithInnerRaw = true;\n    this._indentInnerComments = true;\n  }\n\n  printInnerComments(nextToken?: Token) {\n    const node = this._currentNode;\n    const comments = node.innerComments;\n    if (!comments?.length) return;\n\n    const hasSpace = this.endsWith(charCodes.space);\n    const indent = this._indentInnerComments;\n    const printedCommentsCount = this._printedComments.size;\n    if (indent) this.indent();\n    this._printComments(\n      COMMENT_TYPE.INNER,\n      comments,\n      node,\n      undefined,\n      undefined,\n      nextToken,\n    );\n    if (hasSpace && printedCommentsCount !== this._printedComments.size) {\n      this.space();\n    }\n    if (indent) this.dedent();\n  }\n\n  noIndentInnerCommentsHere() {\n    this._indentInnerComments = false;\n  }\n\n  printSequence(\n    nodes: t.Node[],\n    indent?: boolean,\n    trailingCommentsLineOffset?: number,\n    addNewlines?: PrintSequenceOptions[\"addNewlines\"],\n  ) {\n    this.printJoin(\n      nodes,\n      true,\n      indent ?? false,\n      undefined,\n      undefined,\n      addNewlines,\n      undefined,\n      trailingCommentsLineOffset,\n    );\n  }\n\n  printList(\n    items: t.Node[],\n    printTrailingSeparator?: boolean,\n    statement?: boolean,\n    indent?: boolean,\n    separator?: PrintListOptions[\"separator\"],\n    iterator?: PrintListOptions[\"iterator\"],\n  ) {\n    this.printJoin(\n      items,\n      statement,\n      indent,\n      separator ?? commaSeparator,\n      printTrailingSeparator,\n      undefined,\n      iterator,\n    );\n  }\n\n  shouldPrintTrailingComma(listEnd: string): boolean | null {\n    if (!this.tokenMap) return null;\n\n    const listEndIndex = this.tokenMap.findLastIndex(this._currentNode, token =>\n      this.tokenMap.matchesOriginal(token, listEnd),\n    );\n    if (listEndIndex <= 0) return null;\n    return this.tokenMap.matchesOriginal(this._tokens[listEndIndex - 1], \",\");\n  }\n\n  _printNewline(newLine: boolean, opts: AddNewlinesOptions) {\n    const format = this.format;\n\n    // Fast path since 'this.newline' does nothing when not tracking lines.\n    if (format.retainLines || format.compact) return;\n\n    // Fast path for concise since 'this.newline' just inserts a space when\n    // concise formatting is in use.\n    if (format.concise) {\n      this.space();\n      return;\n    }\n\n    if (!newLine) {\n      return;\n    }\n\n    const startLine = opts.nextNodeStartLine;\n    const lastCommentLine = this._lastCommentLine;\n    if (startLine > 0 && lastCommentLine > 0) {\n      const offset = startLine - lastCommentLine;\n      if (offset >= 0) {\n        this.newline(offset || 1);\n        return;\n      }\n    }\n\n    // don't add newlines at the beginning of the file\n    if (this._buf.hasContent()) {\n      // Here is the logic of the original line wrapping according to the node layout, we are not using it now.\n      // We currently add at most one newline to each node in the list, ignoring `opts.addNewlines`.\n\n      // let lines = 0;\n      // if (!leading) lines++; // always include at least a single line after\n      // if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n\n      // const needs = leading ? needsWhitespaceBefore : needsWhitespaceAfter;\n      // if (needs(node, parent)) lines++;\n\n      // this.newline(Math.min(2, lines));\n\n      this.newline(1);\n    }\n  }\n\n  // Returns `PRINT_COMMENT_HINT.DEFER` if the comment cannot be printed in this position due to\n  // line terminators, signaling that the print comments loop can stop and\n  // resume printing comments at the next possible position. This happens when\n  // printing inner comments, since if we have an inner comment with a multiline\n  // there is at least one inner position where line terminators are allowed.\n  _shouldPrintComment(\n    comment: t.Comment,\n    nextToken?: Token,\n  ): PRINT_COMMENT_HINT {\n    // Some plugins (such as flow-strip-types) use this to mark comments as removed using the AST-root 'comments' property,\n    // where they can't manually mutate the AST node comment lists.\n    if (comment.ignore) return PRINT_COMMENT_HINT.SKIP;\n\n    if (this._printedComments.has(comment)) return PRINT_COMMENT_HINT.SKIP;\n\n    if (\n      this._noLineTerminator &&\n      HAS_NEWLINE_OR_BlOCK_COMMENT_END.test(comment.value)\n    ) {\n      return PRINT_COMMENT_HINT.DEFER;\n    }\n\n    if (nextToken && this.tokenMap) {\n      const commentTok = this.tokenMap.find(\n        this._currentNode,\n        token => token.value === comment.value,\n      );\n      if (commentTok && commentTok.start > nextToken.start) {\n        return PRINT_COMMENT_HINT.DEFER;\n      }\n    }\n\n    this._printedComments.add(comment);\n\n    if (!this.format.shouldPrintComment(comment.value)) {\n      return PRINT_COMMENT_HINT.SKIP;\n    }\n\n    return PRINT_COMMENT_HINT.ALLOW;\n  }\n\n  _printComment(comment: t.Comment, skipNewLines: COMMENT_SKIP_NEWLINE) {\n    const noLineTerminator = this._noLineTerminator;\n    const isBlockComment = comment.type === \"CommentBlock\";\n\n    // Add a newline before and after a block comment, unless explicitly\n    // disallowed\n    const printNewLines =\n      isBlockComment &&\n      skipNewLines !== COMMENT_SKIP_NEWLINE.ALL &&\n      !this._noLineTerminator;\n\n    if (\n      printNewLines &&\n      this._buf.hasContent() &&\n      skipNewLines !== COMMENT_SKIP_NEWLINE.LEADING\n    ) {\n      this.newline(1);\n    }\n\n    const lastCharCode = this.getLastChar();\n    if (\n      lastCharCode !== charCodes.leftSquareBracket &&\n      lastCharCode !== charCodes.leftCurlyBrace &&\n      lastCharCode !== charCodes.leftParenthesis\n    ) {\n      this.space();\n    }\n\n    let val;\n    if (isBlockComment) {\n      val = `/*${comment.value}*/`;\n      if (this.format.indent.adjustMultilineComment) {\n        const offset = comment.loc?.start.column;\n        if (offset) {\n          const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n          val = val.replace(newlineRegex, \"\\n\");\n        }\n        if (this.format.concise) {\n          val = val.replace(/\\n(?!$)/g, `\\n`);\n        } else {\n          let indentSize = this.format.retainLines\n            ? 0\n            : this._buf.getCurrentColumn();\n\n          if (this._shouldIndent(charCodes.slash) || this.format.retainLines) {\n            indentSize += this._getIndent();\n          }\n\n          val = val.replace(/\\n(?!$)/g, `\\n${\" \".repeat(indentSize)}`);\n        }\n      }\n    } else if (!noLineTerminator) {\n      val = `//${comment.value}`;\n    } else {\n      // It was a single-line comment, so it's guaranteed to not\n      // contain newlines and it can be safely printed as a block\n      // comment.\n      val = `/*${comment.value}*/`;\n    }\n\n    // Avoid converting a / operator into a line comment by appending /* to it\n    if (this._endsWithDiv) this._space();\n\n    if (this.tokenMap) {\n      const { _printSemicolonBeforeNextToken, _printSemicolonBeforeNextNode } =\n        this;\n      this._printSemicolonBeforeNextToken = -1;\n      this._printSemicolonBeforeNextNode = -1;\n      this.source(\"start\", comment.loc);\n      this._append(val, isBlockComment);\n      this._printSemicolonBeforeNextNode = _printSemicolonBeforeNextNode;\n      this._printSemicolonBeforeNextToken = _printSemicolonBeforeNextToken;\n    } else {\n      this.source(\"start\", comment.loc);\n      this._append(val, isBlockComment);\n    }\n\n    if (!isBlockComment && !noLineTerminator) {\n      this.newline(1, true);\n    }\n\n    if (printNewLines && skipNewLines !== COMMENT_SKIP_NEWLINE.TRAILING) {\n      this.newline(1);\n    }\n  }\n\n  _printComments(\n    type: COMMENT_TYPE,\n    comments: readonly t.Comment[],\n    node: t.Node,\n    parent?: t.Node,\n    lineOffset: number = 0,\n    nextToken?: Token,\n  ) {\n    const nodeLoc = node.loc;\n    const len = comments.length;\n    let hasLoc = !!nodeLoc;\n    const nodeStartLine = hasLoc ? nodeLoc.start.line : 0;\n    const nodeEndLine = hasLoc ? nodeLoc.end.line : 0;\n    let lastLine = 0;\n    let leadingCommentNewline = 0;\n\n    const maybeNewline = this._noLineTerminator\n      ? function () {}\n      : this.newline.bind(this);\n\n    for (let i = 0; i < len; i++) {\n      const comment = comments[i];\n\n      const shouldPrint = this._shouldPrintComment(comment, nextToken);\n      if (shouldPrint === PRINT_COMMENT_HINT.DEFER) {\n        hasLoc = false;\n        break;\n      }\n      if (hasLoc && comment.loc && shouldPrint === PRINT_COMMENT_HINT.ALLOW) {\n        const commentStartLine = comment.loc.start.line;\n        const commentEndLine = comment.loc.end.line;\n        if (type === COMMENT_TYPE.LEADING) {\n          let offset = 0;\n          if (i === 0) {\n            // Because currently we cannot handle blank lines before leading comments,\n            // we always wrap before and after multi-line comments.\n            if (\n              this._buf.hasContent() &&\n              (comment.type === \"CommentLine\" ||\n                commentStartLine !== commentEndLine)\n            ) {\n              offset = leadingCommentNewline = 1;\n            }\n          } else {\n            offset = commentStartLine - lastLine;\n          }\n          lastLine = commentEndLine;\n\n          maybeNewline(offset);\n          this._printComment(comment, COMMENT_SKIP_NEWLINE.ALL);\n\n          if (i + 1 === len) {\n            maybeNewline(\n              Math.max(nodeStartLine - lastLine, leadingCommentNewline),\n            );\n            lastLine = nodeStartLine;\n          }\n        } else if (type === COMMENT_TYPE.INNER) {\n          const offset =\n            commentStartLine - (i === 0 ? nodeStartLine : lastLine);\n          lastLine = commentEndLine;\n\n          maybeNewline(offset);\n          this._printComment(comment, COMMENT_SKIP_NEWLINE.ALL);\n\n          if (i + 1 === len) {\n            maybeNewline(Math.min(1, nodeEndLine - lastLine)); // TODO: Improve here when inner comments processing is stronger\n            lastLine = nodeEndLine;\n          }\n        } else {\n          const offset =\n            commentStartLine - (i === 0 ? nodeEndLine - lineOffset : lastLine);\n          lastLine = commentEndLine;\n\n          maybeNewline(offset);\n          this._printComment(comment, COMMENT_SKIP_NEWLINE.ALL);\n        }\n      } else {\n        hasLoc = false;\n        if (shouldPrint !== PRINT_COMMENT_HINT.ALLOW) {\n          continue;\n        }\n\n        if (len === 1) {\n          const singleLine = comment.loc\n            ? comment.loc.start.line === comment.loc.end.line\n            : !HAS_NEWLINE.test(comment.value);\n\n          const shouldSkipNewline =\n            singleLine &&\n            !isStatement(node) &&\n            !isClassBody(parent) &&\n            !isTSInterfaceBody(parent) &&\n            !isTSEnumMember(node);\n\n          if (type === COMMENT_TYPE.LEADING) {\n            this._printComment(\n              comment,\n              (shouldSkipNewline && node.type !== \"ObjectExpression\") ||\n                (singleLine && isFunction(parent, { body: node }))\n                ? COMMENT_SKIP_NEWLINE.ALL\n                : COMMENT_SKIP_NEWLINE.DEFAULT,\n            );\n          } else if (shouldSkipNewline && type === COMMENT_TYPE.TRAILING) {\n            this._printComment(comment, COMMENT_SKIP_NEWLINE.ALL);\n          } else {\n            this._printComment(comment, COMMENT_SKIP_NEWLINE.DEFAULT);\n          }\n        } else if (\n          type === COMMENT_TYPE.INNER &&\n          !(node.type === \"ObjectExpression\" && node.properties.length > 1) &&\n          node.type !== \"ClassBody\" &&\n          node.type !== \"TSInterfaceBody\"\n        ) {\n          // class X {\n          //   /*:: a: number*/\n          //   /*:: b: ?string*/\n          // }\n\n          this._printComment(\n            comment,\n            i === 0\n              ? COMMENT_SKIP_NEWLINE.LEADING\n              : i === len - 1\n                ? COMMENT_SKIP_NEWLINE.TRAILING\n                : COMMENT_SKIP_NEWLINE.DEFAULT,\n          );\n        } else {\n          this._printComment(comment, COMMENT_SKIP_NEWLINE.DEFAULT);\n        }\n      }\n    }\n\n    if (type === COMMENT_TYPE.TRAILING && hasLoc && lastLine) {\n      this._lastCommentLine = lastLine;\n    }\n  }\n}\n\n// Expose the node type functions and helpers on the prototype for easy usage.\nObject.assign(Printer.prototype, generatorFunctions);\n\nif (!process.env.BABEL_8_BREAKING) {\n  addDeprecatedGenerators(Printer);\n}\n\ntype GeneratorFunctions = typeof generatorFunctions;\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\ninterface Printer extends GeneratorFunctions {}\nexport default Printer;\n\nfunction commaSeparator(this: Printer, occurrenceCount: number, last: boolean) {\n  this.token(\",\", false, occurrenceCount);\n  if (!last) this.space();\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/buffer.js":{"lineLengths":[13,0,46,13,3,25,14,32,21,19,19,26,19,21,26,31,26,32,22,14,15,6,28,32,35,22,24,25,6,20,34,34,56,5,23,3,17,30,34,18,16,18,24,26,34,37,20,9,5,3,52,37,40,25,5,37,21,25,21,25,29,24,3,15,34,53,5,44,3,9,18,26,20,48,58,25,24,8,17,49,31,25,8,22,46,16,24,11,8,25,69,38,24,8,30,54,16,24,11,7,6,18,3,29,18,58,3,20,18,52,3,15,22,39,61,40,16,9,28,7,5,48,98,3,28,29,65,3,12,42,30,43,28,53,5,26,3,40,22,22,61,42,37,14,85,7,12,101,5,22,126,38,12,28,32,5,30,43,46,5,3,41,27,36,41,37,17,29,22,28,12,23,5,38,29,13,5,11,13,21,24,14,18,30,87,43,46,5,30,17,18,76,5,22,22,26,19,45,52,7,34,5,34,3,68,19,131,3,27,42,72,26,5,3,25,42,72,26,5,3,17,42,78,3,21,42,18,60,48,39,14,7,14,5,74,3,28,30,42,28,49,32,28,43,14,26,7,5,3,16,51,3,24,21,11,13,5,30,46,43,25,34,48,5,9,25,33,43,46,5,28,3,21,27,42,3,45,27,53,3,47,26,40,14,29,61,37,5,3,22,30,42,23,16,43,28,29,24,7,25,5,80,3,20,18,30,49,33,16,7,5,39,3,1,25,0,34,0],"data":{"version":3,"names":["Buffer","constructor","map","indentChar","_map","_buf","_str","_appendCount","_last","_queue","_queueCursor","_canMarkIdName","_indentChar","_fastIndentations","_position","line","column","_sourcePosition","identifierName","undefined","identifierNamePos","filename","i","push","repeat","_allocQueue","queue","char","_pushQueue","cursor","length","item","_popQueue","Error","get","_flush","result","code","trimRight","decodedMap","getDecoded","__mergedMap","resultMap","value","Object","defineProperty","writable","rawMappings","mappings","getRawMappings","append","str","maybeNewline","_append","appendChar","_appendChar","sourcePosition","queueIndentation","queueCursor","sourcePos","fastIndentation","String","fromCharCode","_mark","len","position","charCodeAt","indexOf","last","_this$_map","mark","removeTrailingNewline","removeLastSemicolon","getLastChar","getNewlineCount","count","endsWithCharAndNewline","lastCp","hasContent","exactSource","loc","cb","source","prop","_normalizePosition","sourceWithOffset","columnOffset","pos","target","Math","max","getCurrentColumn","lastIndex","getCurrentLine","exports","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/buffer.ts"],"sourcesContent":["import type SourceMap from \"./source-map.ts\";\n\n// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charcodes from \"charcodes\";\n\nexport type Pos = {\n  line: number;\n  column: number;\n  index: number;\n};\nexport type Loc = {\n  start?: Pos;\n  end?: Pos;\n  filename?: string;\n};\ntype SourcePos = {\n  line: number | undefined;\n  column: number | undefined;\n  identifierName: string | undefined;\n  filename: string | undefined;\n};\ntype InternalSourcePos = SourcePos & { identifierNamePos: Pos };\n\ntype QueueItem = {\n  char: number;\n  repeat: number;\n  line: number | undefined;\n  column: number | undefined;\n  identifierName: undefined; // Not used, it always undefined.\n  identifierNamePos: undefined; // Not used, it always undefined.\n  filename: string | undefined;\n};\n\nexport default class Buffer {\n  constructor(map: SourceMap | null, indentChar: string) {\n    this._map = map;\n    this._indentChar = indentChar;\n\n    for (let i = 0; i < 64; i++) {\n      this._fastIndentations.push(indentChar.repeat(i));\n    }\n\n    this._allocQueue();\n  }\n\n  _map: SourceMap = null;\n  _buf = \"\";\n  _str = \"\";\n  _appendCount = 0;\n  _last = 0;\n  _queue: QueueItem[] = [];\n  _queueCursor = 0;\n  _canMarkIdName = true;\n  _indentChar = \"\";\n  _fastIndentations: string[] = [];\n\n  _position = {\n    line: 1,\n    column: 0,\n  };\n  _sourcePosition: InternalSourcePos = {\n    identifierName: undefined,\n    identifierNamePos: undefined,\n    line: undefined,\n    column: undefined,\n    filename: undefined,\n  };\n\n  _allocQueue() {\n    const queue = this._queue;\n\n    for (let i = 0; i < 16; i++) {\n      queue.push({\n        char: 0,\n        repeat: 1,\n        line: undefined,\n        column: undefined,\n        identifierName: undefined,\n        identifierNamePos: undefined,\n        filename: \"\",\n      });\n    }\n  }\n\n  _pushQueue(\n    char: number,\n    repeat: number,\n    line: number | undefined,\n    column: number | undefined,\n    filename: string | undefined,\n  ) {\n    const cursor = this._queueCursor;\n    if (cursor === this._queue.length) {\n      this._allocQueue();\n    }\n    const item = this._queue[cursor];\n    item.char = char;\n    item.repeat = repeat;\n    item.line = line;\n    item.column = column;\n    item.filename = filename;\n\n    this._queueCursor++;\n  }\n\n  _popQueue(): QueueItem {\n    if (this._queueCursor === 0) {\n      throw new Error(\"Cannot pop from empty queue\");\n    }\n    return this._queue[--this._queueCursor];\n  }\n\n  /**\n   * Get the final string output from the buffer, along with the sourcemap if one exists.\n   */\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      // Whatever trim is used here should not execute a regex against the\n      // source string since it may be arbitrarily large after all transformations\n      code: (this._buf + this._str).trimRight(),\n      // Decoded sourcemap is free to generate.\n      decodedMap: map?.getDecoded(),\n      // Used as a marker for backwards compatibility. We moved input map merging\n      // into the generator. We cannot merge the input map a second time, so the\n      // presence of this field tells us we've already done the work.\n      get __mergedMap() {\n        return this.map;\n      },\n      // Encoding the sourcemap is moderately CPU expensive.\n      get map() {\n        const resultMap = map ? map.get() : null;\n        result.map = resultMap;\n        return resultMap;\n      },\n      set map(value) {\n        Object.defineProperty(result, \"map\", { value, writable: true });\n      },\n      // Retrieving the raw mappings is very memory intensive.\n      get rawMappings() {\n        const mappings = map?.getRawMappings();\n        result.rawMappings = mappings;\n        return mappings;\n      },\n      set rawMappings(value) {\n        Object.defineProperty(result, \"rawMappings\", { value, writable: true });\n      },\n    };\n\n    return result;\n  }\n\n  /**\n   * Add a string to the buffer that cannot be reverted.\n   */\n\n  append(str: string, maybeNewline: boolean): void {\n    this._flush();\n\n    this._append(str, this._sourcePosition, maybeNewline);\n  }\n\n  appendChar(char: number): void {\n    this._flush();\n    this._appendChar(char, 1, this._sourcePosition);\n  }\n\n  /**\n   * Add a string to the buffer than can be reverted.\n   */\n  queue(char: number): void {\n    // Drop trailing spaces when a newline is inserted.\n    if (char === charcodes.lineFeed) {\n      while (this._queueCursor !== 0) {\n        const char = this._queue[this._queueCursor - 1].char;\n        if (char !== charcodes.space && char !== charcodes.tab) {\n          break;\n        }\n\n        this._queueCursor--;\n      }\n    }\n\n    const sourcePosition = this._sourcePosition;\n    this._pushQueue(\n      char,\n      1,\n      sourcePosition.line,\n      sourcePosition.column,\n      sourcePosition.filename,\n    );\n  }\n\n  /**\n   * Same as queue, but this indentation will never have a sourcemap marker.\n   */\n  queueIndentation(repeat: number): void {\n    if (repeat === 0) return;\n    this._pushQueue(-1, repeat, undefined, undefined, undefined);\n  }\n\n  _flush(): void {\n    const queueCursor = this._queueCursor;\n    const queue = this._queue;\n    for (let i = 0; i < queueCursor; i++) {\n      const item: QueueItem = queue[i];\n      this._appendChar(item.char, item.repeat, item);\n    }\n    this._queueCursor = 0;\n  }\n\n  _appendChar(\n    char: number,\n    repeat: number,\n    sourcePos: InternalSourcePos,\n  ): void {\n    this._last = char;\n\n    if (char === -1) {\n      const fastIndentation = this._fastIndentations[repeat];\n      if (fastIndentation !== undefined) {\n        this._str += fastIndentation;\n      } else {\n        this._str +=\n          repeat > 1 ? this._indentChar.repeat(repeat) : this._indentChar;\n      }\n    } else {\n      this._str +=\n        repeat > 1\n          ? String.fromCharCode(char).repeat(repeat)\n          : String.fromCharCode(char);\n    }\n\n    if (char !== charcodes.lineFeed) {\n      this._mark(\n        sourcePos.line,\n        sourcePos.column,\n        sourcePos.identifierName,\n        sourcePos.identifierNamePos,\n        sourcePos.filename,\n      );\n      this._position.column += repeat;\n    } else {\n      this._position.line++;\n      this._position.column = 0;\n    }\n\n    if (this._canMarkIdName) {\n      sourcePos.identifierName = undefined;\n      sourcePos.identifierNamePos = undefined;\n    }\n  }\n\n  _append(\n    str: string,\n    sourcePos: InternalSourcePos,\n    maybeNewline: boolean,\n  ): void {\n    const len = str.length;\n    const position = this._position;\n\n    this._last = str.charCodeAt(len - 1);\n\n    if (++this._appendCount > 4096) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      +this._str; // Unexplainable huge performance boost. Ref: https://github.com/davidmarkclements/flatstr License: MIT\n      this._buf += this._str;\n      this._str = str;\n      this._appendCount = 0;\n    } else {\n      this._str += str;\n    }\n\n    if (!maybeNewline && !this._map) {\n      position.column += len;\n      return;\n    }\n\n    const { column, identifierName, identifierNamePos, filename } = sourcePos;\n    let line = sourcePos.line;\n\n    if (\n      (identifierName != null || identifierNamePos != null) &&\n      this._canMarkIdName\n    ) {\n      sourcePos.identifierName = undefined;\n      sourcePos.identifierNamePos = undefined;\n    }\n\n    // Search for newline chars. We search only for `\\n`, since both `\\r` and\n    // `\\r\\n` are normalized to `\\n` during parse. We exclude `\\u2028` and\n    // `\\u2029` for performance reasons, they're so uncommon that it's probably\n    // ok. It's also unclear how other sourcemap utilities handle them...\n    let i = str.indexOf(\"\\n\");\n    let last = 0;\n\n    // If the string starts with a newline char, then adding a mark is redundant.\n    // This catches both \"no newlines\" and \"newline after several chars\".\n    if (i !== 0) {\n      this._mark(line, column, identifierName, identifierNamePos, filename);\n    }\n\n    // Now, find each remaining newline char in the string.\n    while (i !== -1) {\n      position.line++;\n      position.column = 0;\n      last = i + 1;\n\n      // We mark the start of each line, which happens directly after this newline char\n      // unless this is the last char.\n      // When manually adding multi-line content (such as a comment), `line` will be `undefined`.\n      if (last < len && line !== undefined) {\n        this._mark(++line, 0, null, null, filename);\n      }\n      i = str.indexOf(\"\\n\", last);\n    }\n    position.column += len - last;\n  }\n\n  _mark(\n    line: number | undefined,\n    column: number | undefined,\n    identifierName: string | undefined,\n    identifierNamePos: Pos | undefined,\n    filename: string | undefined,\n  ): void {\n    this._map?.mark(\n      this._position,\n      line,\n      column,\n      identifierName,\n      identifierNamePos,\n      filename,\n    );\n  }\n\n  removeTrailingNewline(): void {\n    const queueCursor = this._queueCursor;\n    if (\n      queueCursor !== 0 &&\n      this._queue[queueCursor - 1].char === charcodes.lineFeed\n    ) {\n      this._queueCursor--;\n    }\n  }\n\n  removeLastSemicolon(): void {\n    const queueCursor = this._queueCursor;\n    if (\n      queueCursor !== 0 &&\n      this._queue[queueCursor - 1].char === charcodes.semicolon\n    ) {\n      this._queueCursor--;\n    }\n  }\n\n  getLastChar(): number {\n    const queueCursor = this._queueCursor;\n    return queueCursor !== 0 ? this._queue[queueCursor - 1].char : this._last;\n  }\n\n  /**\n   * This will only detect at most 1 newline after a call to `flush()`,\n   * but this has not been found so far, and an accurate count can be achieved if needed later.\n   */\n  getNewlineCount(): number {\n    const queueCursor = this._queueCursor;\n    let count = 0;\n    if (queueCursor === 0) return this._last === charcodes.lineFeed ? 1 : 0;\n    for (let i = queueCursor - 1; i >= 0; i--) {\n      if (this._queue[i].char !== charcodes.lineFeed) {\n        break;\n      }\n      count++;\n    }\n    return count === queueCursor && this._last === charcodes.lineFeed\n      ? count + 1\n      : count;\n  }\n\n  /**\n   * check if current _last + queue ends with newline, return the character before newline\n   */\n  endsWithCharAndNewline(): number {\n    const queue = this._queue;\n    const queueCursor = this._queueCursor;\n    if (queueCursor !== 0) {\n      // every element in queue is one-length whitespace string\n      const lastCp = queue[queueCursor - 1].char;\n      if (lastCp !== charcodes.lineFeed) return;\n      if (queueCursor > 1) {\n        return queue[queueCursor - 2].char;\n      } else {\n        return this._last;\n      }\n    }\n    // We assume that everything being matched is at most a single token plus some whitespace,\n    // which everything currently is, but otherwise we'd have to expand _last or check _buf.\n  }\n\n  hasContent(): boolean {\n    return this._queueCursor !== 0 || !!this._last;\n  }\n\n  /**\n   * Certain sourcemap usecases expect mappings to be more accurate than\n   * Babel's generic sourcemap handling allows. For now, we special-case\n   * identifiers to allow for the primary cases to work.\n   * The goal of this line is to ensure that the map output from Babel will\n   * have an exact range on identifiers in the output code. Without this\n   * line, Babel would potentially include some number of trailing tokens\n   * that are printed after the identifier, but before another location has\n   * been assigned.\n   * This allows tooling like Rollup and Webpack to more accurately perform\n   * their own transformations. Most importantly, this allows the import/export\n   * transformations performed by those tools to loose less information when\n   * applying their own transformations on top of the code and map results\n   * generated by Babel itself.\n   *\n   * The primary example of this is the snippet:\n   *\n   *   import mod from \"mod\";\n   *   mod();\n   *\n   * With this line, there will be one mapping range over \"mod\" and another\n   * over \"();\", where previously it would have been a single mapping.\n   */\n  exactSource(loc: Loc | undefined, cb: () => void) {\n    if (!this._map) {\n      cb();\n      return;\n    }\n\n    this.source(\"start\", loc);\n    // @ts-expect-error identifierName is not defined\n    const identifierName = loc.identifierName;\n    const sourcePos = this._sourcePosition;\n    if (identifierName) {\n      this._canMarkIdName = false;\n      sourcePos.identifierName = identifierName;\n    }\n    cb();\n\n    if (identifierName) {\n      this._canMarkIdName = true;\n      sourcePos.identifierName = undefined;\n      sourcePos.identifierNamePos = undefined;\n    }\n    this.source(\"end\", loc);\n  }\n\n  /**\n   * Sets a given position as the current source location so generated code after this call\n   * will be given this position in the sourcemap.\n   */\n\n  source(prop: \"start\" | \"end\", loc: Loc | undefined): void {\n    if (!this._map) return;\n\n    // Since this is called extremely often, we reuse the same _sourcePosition\n    // object for the whole lifetime of the buffer.\n    this._normalizePosition(prop, loc, 0);\n  }\n\n  sourceWithOffset(\n    prop: \"start\" | \"end\",\n    loc: Loc | undefined,\n    columnOffset: number,\n  ): void {\n    if (!this._map) return;\n\n    this._normalizePosition(prop, loc, columnOffset);\n  }\n\n  _normalizePosition(prop: \"start\" | \"end\", loc: Loc, columnOffset: number) {\n    const pos = loc[prop];\n    const target = this._sourcePosition;\n\n    if (pos) {\n      target.line = pos.line;\n      // TODO: Fix https://github.com/babel/babel/issues/15712 in downstream\n      target.column = Math.max(pos.column + columnOffset, 0);\n      target.filename = loc.filename;\n    }\n  }\n\n  getCurrentColumn(): number {\n    const queue = this._queue;\n    const queueCursor = this._queueCursor;\n\n    let lastIndex = -1;\n    let len = 0;\n    for (let i = 0; i < queueCursor; i++) {\n      const item = queue[i];\n      if (item.char === charcodes.lineFeed) {\n        lastIndex = len;\n      }\n      len += item.repeat;\n    }\n\n    return lastIndex === -1 ? this._position.column + len : len - 1 - lastIndex;\n  }\n\n  getCurrentLine(): number {\n    let count = 0;\n\n    const queue = this._queue;\n    for (let i = 0; i < this._queueCursor; i++) {\n      if (queue[i].char === charcodes.lineFeed) {\n        count++;\n      }\n    }\n\n    return this._position.line + count;\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/index.js":{"lineLengths":[13,0,46,13,3,30,34,34,42,52,54,44,41,33,7,21,15,19,14,24,21,18,27,7,45,12,25,15,19,25,18,16,16,33,47,2,29,24,28,29,73,14,123,14,3,40,45,18,36,30,7,12,27,5,3,13,1,45,64,38,31,16,3,72,1,46,28,26,36,27,3,135,33,31,3,15,1,46,42,1,45,42,1,68,26,28,58,49,3,28,155,3,148,1,44,22,22,18,28,111,12,19,3,1,37,48,53,39,24,18,36,29,44,40,21,19,5,3,15,1,0,33,0],"data":{"version":3,"names":["whitespace","require","parens","_t","FLIPPED_ALIAS_KEYS","VISITOR_KEYS","isCallExpression","isDecorator","isExpressionStatement","isMemberExpression","isNewExpression","isParenthesizedExpression","TokenContext","exports","normal","expressionStatement","arrowBody","exportDefault","arrowFlowReturnType","forInitHead","forInHead","forOfHead","forInOrInitHeadAccumulate","forInOrInitHeadAccumulatePassThroughMask","expandAliases","obj","map","Map","add","type","func","fn","get","set","node","parent","stack","getRawIdentifier","_fn","Object","keys","aliases","alias","expandedParens","expandedWhitespaceNodes","nodes","isOrHasCallExpression","object","needsWhitespace","_expandedWhitespaceNo","expression","flag","needsWhitespaceBefore","needsWhitespaceAfter","needsParens","tokenContext","_expandedParens$get","callee","isDecoratorMemberExpression","computed","property","isLastChild","child","visitorKeys","i","length","val","Array","isArray","j"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/node/index.ts"],"sourcesContent":["import * as whitespace from \"./whitespace.ts\";\nimport * as parens from \"./parentheses.ts\";\nimport {\n  FLIPPED_ALIAS_KEYS,\n  VISITOR_KEYS,\n  isCallExpression,\n  isDecorator,\n  isExpressionStatement,\n  isMemberExpression,\n  isNewExpression,\n  isParenthesizedExpression,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nimport type { WhitespaceFlag } from \"./whitespace.ts\";\n\nexport const enum TokenContext {\n  normal = 0,\n  expressionStatement = 1 << 0,\n  arrowBody = 1 << 1,\n  exportDefault = 1 << 2,\n  arrowFlowReturnType = 1 << 3,\n  forInitHead = 1 << 4,\n  forInHead = 1 << 5,\n  forOfHead = 1 << 6,\n  // This flag lives across the token boundary, and will\n  // be reset after forIn or forInit head is printed\n  forInOrInitHeadAccumulate = 1 << 7,\n  forInOrInitHeadAccumulatePassThroughMask = 0x80,\n}\n\ntype NodeHandler<R> = (\n  node: t.Node,\n  // todo:\n  // node: K extends keyof typeof t\n  //   ? Extract<typeof t[K], { type: \"string\" }>\n  //   : t.Node,\n  parent: t.Node,\n  tokenContext?: number,\n  getRawIdentifier?: (node: t.Identifier) => string,\n) => R;\n\nexport type NodeHandlers<R> = {\n  [K in string]?: NodeHandler<R>;\n};\n\nfunction expandAliases<R>(obj: NodeHandlers<R>) {\n  const map = new Map<string, NodeHandler<R>>();\n\n  function add(type: string, func: NodeHandler<R>) {\n    const fn = map.get(type);\n    map.set(\n      type,\n      fn\n        ? function (node, parent, stack, getRawIdentifier) {\n            return (\n              fn(node, parent, stack, getRawIdentifier) ??\n              func(node, parent, stack, getRawIdentifier)\n            );\n          }\n        : func,\n    );\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = FLIPPED_ALIAS_KEYS[type];\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return map;\n}\n\n// Rather than using `t.is` on each object property, we pre-expand any type aliases\n// into concrete types so that the 'find' call below can be as fast as possible.\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\n\nfunction isOrHasCallExpression(node: t.Node): boolean {\n  if (isCallExpression(node)) {\n    return true;\n  }\n\n  return isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nexport function needsWhitespace(\n  node: t.Node,\n  parent: t.Node,\n  type: WhitespaceFlag,\n): boolean {\n  if (!node) return false;\n\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  const flag = expandedWhitespaceNodes.get(node.type)?.(node, parent);\n\n  if (typeof flag === \"number\") {\n    return (flag & type) !== 0;\n  }\n\n  return false;\n}\n\nexport function needsWhitespaceBefore(node: t.Node, parent: t.Node) {\n  return needsWhitespace(node, parent, 1);\n}\n\nexport function needsWhitespaceAfter(node: t.Node, parent: t.Node) {\n  return needsWhitespace(node, parent, 2);\n}\n\nexport function needsParens(\n  node: t.Node,\n  parent: t.Node,\n  tokenContext?: number,\n  getRawIdentifier?: (node: t.Identifier) => string,\n) {\n  if (!parent) return false;\n\n  if (isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  if (isDecorator(parent)) {\n    return (\n      !isDecoratorMemberExpression(node) &&\n      !(isCallExpression(node) && isDecoratorMemberExpression(node.callee)) &&\n      !isParenthesizedExpression(node)\n    );\n  }\n\n  return expandedParens.get(node.type)?.(\n    node,\n    parent,\n    tokenContext,\n    getRawIdentifier,\n  );\n}\n\nfunction isDecoratorMemberExpression(node: t.Node): boolean {\n  switch (node.type) {\n    case \"Identifier\":\n      return true;\n    case \"MemberExpression\":\n      return (\n        !node.computed &&\n        node.property.type === \"Identifier\" &&\n        isDecoratorMemberExpression(node.object)\n      );\n    default:\n      return false;\n  }\n}\n\nexport function isLastChild(parent: t.Node, child: t.Node) {\n  const visitorKeys = VISITOR_KEYS[parent.type];\n  for (let i = visitorKeys.length - 1; i >= 0; i--) {\n    const val = (parent as any)[visitorKeys[i]] as t.Node | t.Node[] | null;\n    if (val === child) {\n      return true;\n    } else if (Array.isArray(val)) {\n      let j = val.length - 1;\n      while (j >= 0 && val[j] === null) j--;\n      return j >= 0 && val[j] === child;\n    } else if (val) {\n      return false;\n    }\n  }\n  return false;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/whitespace.js":{"lineLengths":[13,0,46,13,3,23,33,7,21,20,25,11,19,19,13,15,12,21,21,27,29,17,7,37,26,69,38,59,62,36,37,72,25,38,32,29,34,78,3,15,1,22,30,19,23,20,5,1,25,26,33,60,34,69,38,33,62,82,10,17,3,1,23,130,1,31,30,36,64,43,5,4,28,160,4,27,58,15,5,4,17,63,15,5,4,24,52,19,5,4,32,34,19,5,4,29,56,42,64,36,41,78,7,20,21,7,5,4,21,44,19,5,3,2,96,38,13,3,2,56,25,126,13,3,2,51,49,216,13,3,2,56,68,301,13,3,2,169,73,36,28,5,3,0,38,0],"data":{"version":3,"names":["_t","require","FLIPPED_ALIAS_KEYS","isArrayExpression","isAssignmentExpression","isBinary","isBlockStatement","isCallExpression","isFunction","isIdentifier","isLiteral","isMemberExpression","isObjectExpression","isOptionalCallExpression","isOptionalMemberExpression","isStringLiteral","crawlInternal","node","state","object","computed","property","left","right","hasCall","callee","hasFunction","hasHelper","isHelper","crawl","name","charCodeAt","isType","nodes","exports","AssignmentExpression","SwitchCase","parent","consequent","length","cases","LogicalExpression","Literal","value","CallExpression","OptionalCallExpression","VariableDeclaration","i","declarations","declar","enabled","id","init","IfStatement","ObjectProperty","ObjectTypeProperty","ObjectMethod","properties","ObjectTypeCallProperty","_parent$properties","callProperties","ObjectTypeIndexer","_parent$properties2","_parent$callPropertie","indexers","ObjectTypeInternalSlot","_parent$properties3","_parent$callPropertie2","_parent$indexers","internalSlots","forEach","type","amounts","concat","ret"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/node/whitespace.ts"],"sourcesContent":["import {\n  FLIPPED_ALIAS_KEYS,\n  isArrayExpression,\n  isAssignmentExpression,\n  isBinary,\n  isBlockStatement,\n  isCallExpression,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isMemberExpression,\n  isObjectExpression,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isStringLiteral,\n} from \"@babel/types\";\n\n// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\nimport type { NodeHandlers } from \"./index.ts\";\n\nimport type * as t from \"@babel/types\";\n\nconst enum WhitespaceFlag {\n  before = 1 << 0,\n  after = 1 << 1,\n}\n\nexport type { WhitespaceFlag };\n\nfunction crawlInternal(\n  node: t.Node,\n  state: { hasCall: boolean; hasFunction: boolean; hasHelper: boolean },\n) {\n  if (!node) return state;\n\n  if (isMemberExpression(node) || isOptionalMemberExpression(node)) {\n    crawlInternal(node.object, state);\n    if (node.computed) crawlInternal(node.property, state);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    crawlInternal(node.left, state);\n    crawlInternal(node.right, state);\n  } else if (isCallExpression(node) || isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawlInternal(node.callee, state);\n  } else if (isFunction(node)) {\n    state.hasFunction = true;\n  } else if (isIdentifier(node)) {\n    state.hasHelper =\n      // @ts-expect-error todo(flow->ts): node.callee is not really expected here…\n      state.hasHelper || (node.callee && isHelper(node.callee));\n  }\n\n  return state;\n}\n\n/**\n * Crawl a node to test if it contains a CallExpression, a Function, or a Helper.\n *\n * @example\n * crawl(node)\n * // { hasCall: false, hasFunction: true, hasHelper: false }\n */\n\nfunction crawl(node: t.Node) {\n  return crawlInternal(node, {\n    hasCall: false,\n    hasFunction: false,\n    hasHelper: false,\n  });\n}\n\n/**\n * Test if a node is or has a helper.\n */\n\nfunction isHelper(node: t.Node): boolean {\n  if (!node) return false;\n\n  if (isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (isIdentifier(node)) {\n    return (\n      node.name === \"require\" ||\n      node.name.charCodeAt(0) === charCodes.underscore\n    );\n  } else if (isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    return (\n      (isIdentifier(node.left) && isHelper(node.left)) || isHelper(node.right)\n    );\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node: t.Node) {\n  return (\n    isLiteral(node) ||\n    isObjectExpression(node) ||\n    isArrayExpression(node) ||\n    isIdentifier(node) ||\n    isMemberExpression(node)\n  );\n}\n\n/**\n * Tests for node types that need whitespace.\n */\n\nexport const nodes: NodeHandlers<WhitespaceFlag> = {\n  /**\n   * Test if AssignmentExpression needs whitespace.\n   */\n\n  AssignmentExpression(node: t.AssignmentExpression): WhitespaceFlag {\n    const state = crawl(node.right);\n    if ((state.hasCall && state.hasHelper) || state.hasFunction) {\n      return state.hasFunction\n        ? WhitespaceFlag.before | WhitespaceFlag.after\n        : WhitespaceFlag.after;\n    }\n  },\n\n  /**\n   * Test if SwitchCase needs whitespace.\n   */\n\n  SwitchCase(node: t.SwitchCase, parent: t.SwitchStatement): WhitespaceFlag {\n    return (\n      (!!node.consequent.length || parent.cases[0] === node\n        ? WhitespaceFlag.before\n        : 0) |\n      (!node.consequent.length && parent.cases[parent.cases.length - 1] === node\n        ? WhitespaceFlag.after\n        : 0)\n    );\n  },\n\n  /**\n   * Test if LogicalExpression needs whitespace.\n   */\n\n  LogicalExpression(node: t.LogicalExpression): WhitespaceFlag {\n    if (isFunction(node.left) || isFunction(node.right)) {\n      return WhitespaceFlag.after;\n    }\n  },\n\n  /**\n   * Test if Literal needs whitespace.\n   */\n\n  Literal(node: t.Literal): WhitespaceFlag {\n    if (isStringLiteral(node) && node.value === \"use strict\") {\n      return WhitespaceFlag.after;\n    }\n  },\n\n  /**\n   * Test if CallExpressionish needs whitespace.\n   */\n\n  CallExpression(node: t.CallExpression): WhitespaceFlag {\n    if (isFunction(node.callee) || isHelper(node)) {\n      return WhitespaceFlag.before | WhitespaceFlag.after;\n    }\n  },\n\n  OptionalCallExpression(node: t.OptionalCallExpression): WhitespaceFlag {\n    if (isFunction(node.callee)) {\n      return WhitespaceFlag.before | WhitespaceFlag.after;\n    }\n  },\n\n  /**\n   * Test if VariableDeclaration needs whitespace.\n   */\n\n  VariableDeclaration(node: t.VariableDeclaration): WhitespaceFlag {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n      if (!enabled && declar.init) {\n        const state = crawl(declar.init);\n        enabled = (isHelper(declar.init) && state.hasCall) || state.hasFunction;\n      }\n\n      if (enabled) {\n        return WhitespaceFlag.before | WhitespaceFlag.after;\n      }\n    }\n  },\n\n  /**\n   * Test if IfStatement needs whitespace.\n   */\n\n  IfStatement(node: t.IfStatement): WhitespaceFlag {\n    if (isBlockStatement(node.consequent)) {\n      return WhitespaceFlag.before | WhitespaceFlag.after;\n    }\n  },\n};\n\n/**\n * Test if Property needs whitespace.\n */\n\nnodes.ObjectProperty =\n  nodes.ObjectTypeProperty =\n  nodes.ObjectMethod =\n    function (\n      node: t.ObjectProperty | t.ObjectTypeProperty | t.ObjectMethod,\n      parent: t.ObjectExpression,\n    ): WhitespaceFlag {\n      if (parent.properties[0] === node) {\n        return WhitespaceFlag.before;\n      }\n    };\n\nnodes.ObjectTypeCallProperty = function (\n  node: t.ObjectTypeCallProperty,\n  parent: t.ObjectTypeAnnotation,\n): WhitespaceFlag {\n  if (parent.callProperties[0] === node && !parent.properties?.length) {\n    return WhitespaceFlag.before;\n  }\n};\n\nnodes.ObjectTypeIndexer = function (\n  node: t.ObjectTypeIndexer,\n  parent: t.ObjectTypeAnnotation,\n): WhitespaceFlag {\n  if (\n    parent.indexers[0] === node &&\n    !parent.properties?.length &&\n    !parent.callProperties?.length\n  ) {\n    return WhitespaceFlag.before;\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (\n  node: t.ObjectTypeInternalSlot,\n  parent: t.ObjectTypeAnnotation,\n): WhitespaceFlag {\n  if (\n    parent.internalSlots[0] === node &&\n    !parent.properties?.length &&\n    !parent.callProperties?.length &&\n    !parent.indexers?.length\n  ) {\n    return WhitespaceFlag.before;\n  }\n};\n\n/**\n * Add whitespace tests for nodes and their aliases.\n */\n\n(\n  [\n    [\"Function\", true],\n    [\"Class\", true],\n    [\"Loop\", true],\n    [\"LabeledStatement\", true],\n    [\"SwitchStatement\", true],\n    [\"TryStatement\", true],\n  ] as const\n).forEach(function ([type, amounts]) {\n  [type as string]\n    .concat(FLIPPED_ALIAS_KEYS[type] || [])\n    .forEach(function (type) {\n      const ret = amounts ? WhitespaceFlag.before | WhitespaceFlag.after : 0;\n      nodes[type] = () => ret;\n    });\n});\n"],"mappings":";;;;;;AAAA,IAAAA,EAAA,GAAAC,OAAA;AAesB;EAdpBC,kBAAkB;EAClBC,iBAAiB;EACjBC,sBAAsB;EACtBC,QAAQ;EACRC,gBAAgB;EAChBC,gBAAgB;EAChBC,UAAU;EACVC,YAAY;EACZC,SAAS;EACTC,kBAAkB;EAClBC,kBAAkB;EAClBC,wBAAwB;EACxBC,0BAA0B;EAC1BC;AAAe,IAAAf,EAAA;AAkBjB,SAASgB,aAAaA,CACpBC,IAAY,EACZC,KAAqE,EACrE;EACA,IAAI,CAACD,IAAI,EAAE,OAAOC,KAAK;EAEvB,IAAIP,kBAAkB,CAACM,IAAI,CAAC,IAAIH,0BAA0B,CAACG,IAAI,CAAC,EAAE;IAChED,aAAa,CAACC,IAAI,CAACE,MAAM,EAAED,KAAK,CAAC;IACjC,IAAID,IAAI,CAACG,QAAQ,EAAEJ,aAAa,CAACC,IAAI,CAACI,QAAQ,EAAEH,KAAK,CAAC;EACxD,CAAC,MAAM,IAAIb,QAAQ,CAACY,IAAI,CAAC,IAAIb,sBAAsB,CAACa,IAAI,CAAC,EAAE;IACzDD,aAAa,CAACC,IAAI,CAACK,IAAI,EAAEJ,KAAK,CAAC;IAC/BF,aAAa,CAACC,IAAI,CAACM,KAAK,EAAEL,KAAK,CAAC;EAClC,CAAC,MAAM,IAAIX,gBAAgB,CAACU,IAAI,CAAC,IAAIJ,wBAAwB,CAACI,IAAI,CAAC,EAAE;IACnEC,KAAK,CAACM,OAAO,GAAG,IAAI;IACpBR,aAAa,CAACC,IAAI,CAACQ,MAAM,EAAEP,KAAK,CAAC;EACnC,CAAC,MAAM,IAAIV,UAAU,CAACS,IAAI,CAAC,EAAE;IAC3BC,KAAK,CAACQ,WAAW,GAAG,IAAI;EAC1B,CAAC,MAAM,IAAIjB,YAAY,CAACQ,IAAI,CAAC,EAAE;IAC7BC,KAAK,CAACS,SAAS,GAEbT,KAAK,CAACS,SAAS,IAAKV,IAAI,CAACQ,MAAM,IAAIG,QAAQ,CAACX,IAAI,CAACQ,MAAM,CAAE;EAC7D;EAEA,OAAOP,KAAK;AACd;AAUA,SAASW,KAAKA,CAACZ,IAAY,EAAE;EAC3B,OAAOD,aAAa,CAACC,IAAI,EAAE;IACzBO,OAAO,EAAE,KAAK;IACdE,WAAW,EAAE,KAAK;IAClBC,SAAS,EAAE;EACb,CAAC,CAAC;AACJ;AAMA,SAASC,QAAQA,CAACX,IAAY,EAAW;EACvC,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;EAEvB,IAAIN,kBAAkB,CAACM,IAAI,CAAC,EAAE;IAC5B,OAAOW,QAAQ,CAACX,IAAI,CAACE,MAAM,CAAC,IAAIS,QAAQ,CAACX,IAAI,CAACI,QAAQ,CAAC;EACzD,CAAC,MAAM,IAAIZ,YAAY,CAACQ,IAAI,CAAC,EAAE;IAC7B,OACEA,IAAI,CAACa,IAAI,KAAK,SAAS,IACvBb,IAAI,CAACa,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,OAAyB;EAEpD,CAAC,MAAM,IAAIxB,gBAAgB,CAACU,IAAI,CAAC,EAAE;IACjC,OAAOW,QAAQ,CAACX,IAAI,CAACQ,MAAM,CAAC;EAC9B,CAAC,MAAM,IAAIpB,QAAQ,CAACY,IAAI,CAAC,IAAIb,sBAAsB,CAACa,IAAI,CAAC,EAAE;IACzD,OACGR,YAAY,CAACQ,IAAI,CAACK,IAAI,CAAC,IAAIM,QAAQ,CAACX,IAAI,CAACK,IAAI,CAAC,IAAKM,QAAQ,CAACX,IAAI,CAACM,KAAK,CAAC;EAE5E,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF;AAEA,SAASS,MAAMA,CAACf,IAAY,EAAE;EAC5B,OACEP,SAAS,CAACO,IAAI,CAAC,IACfL,kBAAkB,CAACK,IAAI,CAAC,IACxBd,iBAAiB,CAACc,IAAI,CAAC,IACvBR,YAAY,CAACQ,IAAI,CAAC,IAClBN,kBAAkB,CAACM,IAAI,CAAC;AAE5B;AAMO,MAAMgB,KAAmC,GAAAC,OAAA,CAAAD,KAAA,GAAG;EAKjDE,oBAAoBA,CAAClB,IAA4B,EAAkB;IACjE,MAAMC,KAAK,GAAGW,KAAK,CAACZ,IAAI,CAACM,KAAK,CAAC;IAC/B,IAAKL,KAAK,CAACM,OAAO,IAAIN,KAAK,CAACS,SAAS,IAAKT,KAAK,CAACQ,WAAW,EAAE;MAC3D,OAAOR,KAAK,CAACQ,WAAW,GACpB,KAA4C,IACxB;IAC1B;EACF,CAAC;EAMDU,UAAUA,CAACnB,IAAkB,EAAEoB,MAAyB,EAAkB;IACxE,OACE,CAAC,CAAC,CAACpB,IAAI,CAACqB,UAAU,CAACC,MAAM,IAAIF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,KAAKvB,IAAI,OAEjD,CAAC,KACJ,CAACA,IAAI,CAACqB,UAAU,CAACC,MAAM,IAAIF,MAAM,CAACG,KAAK,CAACH,MAAM,CAACG,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC,KAAKtB,IAAI,OAEtE,CAAC,CAAC;EAEV,CAAC;EAMDwB,iBAAiBA,CAACxB,IAAyB,EAAkB;IAC3D,IAAIT,UAAU,CAACS,IAAI,CAACK,IAAI,CAAC,IAAId,UAAU,CAACS,IAAI,CAACM,KAAK,CAAC,EAAE;MACnD;IACF;EACF,CAAC;EAMDmB,OAAOA,CAACzB,IAAe,EAAkB;IACvC,IAAIF,eAAe,CAACE,IAAI,CAAC,IAAIA,IAAI,CAAC0B,KAAK,KAAK,YAAY,EAAE;MACxD;IACF;EACF,CAAC;EAMDC,cAAcA,CAAC3B,IAAsB,EAAkB;IACrD,IAAIT,UAAU,CAACS,IAAI,CAACQ,MAAM,CAAC,IAAIG,QAAQ,CAACX,IAAI,CAAC,EAAE;MAC7C,OAAO,KAA4C;IACrD;EACF,CAAC;EAED4B,sBAAsBA,CAAC5B,IAA8B,EAAkB;IACrE,IAAIT,UAAU,CAACS,IAAI,CAACQ,MAAM,CAAC,EAAE;MAC3B,OAAO,KAA4C;IACrD;EACF,CAAC;EAMDqB,mBAAmBA,CAAC7B,IAA2B,EAAkB;IAC/D,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9B,IAAI,CAAC+B,YAAY,CAACT,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACjD,MAAME,MAAM,GAAGhC,IAAI,CAAC+B,YAAY,CAACD,CAAC,CAAC;MAEnC,IAAIG,OAAO,GAAGtB,QAAQ,CAACqB,MAAM,CAACE,EAAE,CAAC,IAAI,CAACnB,MAAM,CAACiB,MAAM,CAACG,IAAI,CAAC;MACzD,IAAI,CAACF,OAAO,IAAID,MAAM,CAACG,IAAI,EAAE;QAC3B,MAAMlC,KAAK,GAAGW,KAAK,CAACoB,MAAM,CAACG,IAAI,CAAC;QAChCF,OAAO,GAAItB,QAAQ,CAACqB,MAAM,CAACG,IAAI,CAAC,IAAIlC,KAAK,CAACM,OAAO,IAAKN,KAAK,CAACQ,WAAW;MACzE;MAEA,IAAIwB,OAAO,EAAE;QACX,OAAO,KAA4C;MACrD;IACF;EACF,CAAC;EAMDG,WAAWA,CAACpC,IAAmB,EAAkB;IAC/C,IAAIX,gBAAgB,CAACW,IAAI,CAACqB,UAAU,CAAC,EAAE;MACrC,OAAO,KAA4C;IACrD;EACF;AACF,CAAC;AAMDL,KAAK,CAACqB,cAAc,GAClBrB,KAAK,CAACsB,kBAAkB,GACxBtB,KAAK,CAACuB,YAAY,GAChB,UACEvC,IAA8D,EAC9DoB,MAA0B,EACV;EAChB,IAAIA,MAAM,CAACoB,UAAU,CAAC,CAAC,CAAC,KAAKxC,IAAI,EAAE;IACjC;EACF;AACF,CAAC;AAELgB,KAAK,CAACyB,sBAAsB,GAAG,UAC7BzC,IAA8B,EAC9BoB,MAA8B,EACd;EAAA,IAAAsB,kBAAA;EAChB,IAAItB,MAAM,CAACuB,cAAc,CAAC,CAAC,CAAC,KAAK3C,IAAI,IAAI,GAAA0C,kBAAA,GAACtB,MAAM,CAACoB,UAAU,aAAjBE,kBAAA,CAAmBpB,MAAM,GAAE;IACnE;EACF;AACF,CAAC;AAEDN,KAAK,CAAC4B,iBAAiB,GAAG,UACxB5C,IAAyB,EACzBoB,MAA8B,EACd;EAAA,IAAAyB,mBAAA,EAAAC,qBAAA;EAChB,IACE1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,CAAC,KAAK/C,IAAI,IAC3B,GAAA6C,mBAAA,GAACzB,MAAM,CAACoB,UAAU,aAAjBK,mBAAA,CAAmBvB,MAAM,KAC1B,GAAAwB,qBAAA,GAAC1B,MAAM,CAACuB,cAAc,aAArBG,qBAAA,CAAuBxB,MAAM,GAC9B;IACA;EACF;AACF,CAAC;AAEDN,KAAK,CAACgC,sBAAsB,GAAG,UAC7BhD,IAA8B,EAC9BoB,MAA8B,EACd;EAAA,IAAA6B,mBAAA,EAAAC,sBAAA,EAAAC,gBAAA;EAChB,IACE/B,MAAM,CAACgC,aAAa,CAAC,CAAC,CAAC,KAAKpD,IAAI,IAChC,GAAAiD,mBAAA,GAAC7B,MAAM,CAACoB,UAAU,aAAjBS,mBAAA,CAAmB3B,MAAM,KAC1B,GAAA4B,sBAAA,GAAC9B,MAAM,CAACuB,cAAc,aAArBO,sBAAA,CAAuB5B,MAAM,KAC9B,GAAA6B,gBAAA,GAAC/B,MAAM,CAAC2B,QAAQ,aAAfI,gBAAA,CAAiB7B,MAAM,GACxB;IACA;EACF;AACF,CAAC;AAOC,CACE,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,OAAO,EAAE,IAAI,CAAC,EACf,CAAC,MAAM,EAAE,IAAI,CAAC,EACd,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAC1B,CAAC,iBAAiB,EAAE,IAAI,CAAC,EACzB,CAAC,cAAc,EAAE,IAAI,CAAC,CACvB,CACD+B,OAAO,CAAC,UAAU,CAACC,IAAI,EAAEC,OAAO,CAAC,EAAE;EACnC,CAACD,IAAI,CAAW,CACbE,MAAM,CAACvE,kBAAkB,CAACqE,IAAI,CAAC,IAAI,EAAE,CAAC,CACtCD,OAAO,CAAC,UAAUC,IAAI,EAAE;IACvB,MAAMG,GAAG,GAAGF,OAAO,GAAG,KAA4C,GAAG,CAAC;IACtEvC,KAAK,CAACsC,IAAI,CAAC,GAAG,MAAMG,GAAG;EACzB,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/index.js":{"lineLengths":[13,0,46,13,3,20,14,19,42,34,28,26,18,14,18,28,24,19,20,29,31,25,32,23,20,32,16,22,21,21,19,20,20,33,17,34,25,29,29,33,30,35,24,17,21,21,11,18,22,20,14,15,26,26,21,16,27,15,29,26,14,23,17,35,38,2,66,19,20,39,3,3,46,19,20,31,3,3,47,19,20,32,3,3,60,19,20,45,3,3,46,19,20,31,3,3,62,19,20,47,3,3,41,19,20,26,3,3,45,19,20,30,3,3,55,19,20,40,3,3,45,19,20,30,3,3,51,19,20,36,3,3,55,19,20,40,3,3,53,19,20,38,3,3,69,19,20,54,3,3,61,19,20,40,3,3,47,19,20,32,3,3,60,19,20,45,3,3,57,19,20,42,3,3,51,19,20,36,3,3,62,19,20,47,3,3,56,19,20,41,3,3,58,19,20,43,3,3,59,19,20,44,3,3,44,19,20,29,3,3,52,19,20,37,3,3,38,19,20,23,3,3,45,19,20,30,3,3,49,19,20,34,3,3,47,19,20,32,3,3,41,19,20,26,3,3,42,19,20,27,3,3,53,19,20,38,3,3,53,19,20,38,3,3,48,19,20,33,3,3,43,19,20,28,3,3,54,19,20,39,3,3,42,19,20,27,3,3,56,19,20,41,3,3,53,19,20,38,3,3,41,19,20,26,3,3,50,19,20,35,3,3,61,19,20,46,3,3,23,50,19,20,35,3,3,52,19,20,37,3,3,56,19,20,41,3,3,56,19,20,41,3,3,48,19,20,33,3,3,59,19,20,44,3,3,43,19,20,28,3,3,49,19,20,34,3,3,48,19,20,33,3,3,48,19,20,33,3,3,46,19,20,31,3,3,47,19,20,32,3,3,44,19,20,29,3,3,48,19,20,33,3,3,44,19,20,29,3,3,47,19,20,32,3,3,74,64,66,53,53,44,56,70,61,39,21,22,25,5,5,3,105,77,79,56,50,56,70,67,39,21,22,31,5,5,3,55,45,56,70,62,39,21,22,26,5,5,3,49,41,49,69,61,54,56,74,78,66,80,62,56,45,56,70,62,39,21,22,26,5,5,3,46,45,56,70,62,39,21,22,26,5,5,3,58,82,50,62,60,60,56,58,58,48,45,56,70,62,39,21,22,26,5,5,3,87,55,89,71,79,84,84,78,88,66,50,47,56,70,64,39,21,22,28,5,5,3,58,55,40,54,62,58,46,48,70,70,60,50,72,48,76,70,46,64,52,88,57,45,56,70,62,39,21,22,26,5,5,3,67,76,31,46,36,39,2,1,63,1,41,115,1,0,33,0],"data":{"version":3,"names":["_isReactComponent","require","_isCompatTag","_buildChildren","_assertNode","_index","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_createTypeAnnotationBasedOnTypeof","_createFlowUnionType","_createTSUnionType","_productions","_index2","_cloneNode","_clone","_cloneDeep","_cloneDeepWithoutLoc","_cloneWithoutLoc","_addComment","_addComments","_inheritInnerComments","_inheritLeadingComments","_inheritsComments","_inheritTrailingComments","_removeComments","_index3","_index4","_ensureBlock","_toBindingIdentifierName","_toBlock","_toComputedKey","_toExpression","_toIdentifier","_toKeyAlias","_toStatement","_valueToNode","_index5","_appendToMemberExpression","_inherits","_prependToMemberExpression","_removeProperties","_removePropertiesDeep","_removeTypeDuplicates","_getAssignmentIdentifiers","_getBindingIdentifiers","_getOuterBindingIdentifiers","_getFunctionName","_traverse","_traverseFast","_shallowEqual","_is","_isBinding","_isBlockScoped","_isImmutable","_isLet","_isNode","_isNodesEquivalent","_isPlaceholderType","_isReferenced","_isScope","_isSpecifierDefault","_isType","_isValidES3Identifier","_isValidIdentifier","_isVar","_matchesPattern","_validate","_buildMatchMemberExpression","_index6","_deprecationWarning","_toSequenceExpression","react","isReactComponent","isCompatTag","buildChildren","toSequenceExpression","process","env","BABEL_TYPES_8_BREAKING","console","warn"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/index.ts"],"sourcesContent":["import isReactComponent from \"./validators/react/isReactComponent.ts\";\nimport isCompatTag from \"./validators/react/isCompatTag.ts\";\nimport buildChildren from \"./builders/react/buildChildren.ts\";\n\n// asserts\nexport { default as assertNode } from \"./asserts/assertNode.ts\";\nexport * from \"./asserts/generated/index.ts\";\n\n// builders\nexport { default as createTypeAnnotationBasedOnTypeof } from \"./builders/flow/createTypeAnnotationBasedOnTypeof.ts\";\n/** @deprecated use createFlowUnionType instead */\nexport { default as createUnionTypeAnnotation } from \"./builders/flow/createFlowUnionType.ts\";\nexport { default as createFlowUnionType } from \"./builders/flow/createFlowUnionType.ts\";\nexport { default as createTSUnionType } from \"./builders/typescript/createTSUnionType.ts\";\nexport * from \"./builders/productions.ts\";\nexport * from \"./builders/generated/index.ts\"; // includes AST types\n\n// clone\nexport { default as cloneNode } from \"./clone/cloneNode.ts\";\nexport { default as clone } from \"./clone/clone.ts\";\nexport { default as cloneDeep } from \"./clone/cloneDeep.ts\";\nexport { default as cloneDeepWithoutLoc } from \"./clone/cloneDeepWithoutLoc.ts\";\nexport { default as cloneWithoutLoc } from \"./clone/cloneWithoutLoc.ts\";\n\n// comments\nexport { default as addComment } from \"./comments/addComment.ts\";\nexport { default as addComments } from \"./comments/addComments.ts\";\nexport { default as inheritInnerComments } from \"./comments/inheritInnerComments.ts\";\nexport { default as inheritLeadingComments } from \"./comments/inheritLeadingComments.ts\";\nexport { default as inheritsComments } from \"./comments/inheritsComments.ts\";\nexport { default as inheritTrailingComments } from \"./comments/inheritTrailingComments.ts\";\nexport { default as removeComments } from \"./comments/removeComments.ts\";\n\n// constants\nexport * from \"./constants/generated/index.ts\";\nexport * from \"./constants/index.ts\";\n\n// converters\nexport { default as ensureBlock } from \"./converters/ensureBlock.ts\";\nexport { default as toBindingIdentifierName } from \"./converters/toBindingIdentifierName.ts\";\nexport { default as toBlock } from \"./converters/toBlock.ts\";\nexport { default as toComputedKey } from \"./converters/toComputedKey.ts\";\nexport { default as toExpression } from \"./converters/toExpression.ts\";\nexport { default as toIdentifier } from \"./converters/toIdentifier.ts\";\nexport { default as toKeyAlias } from \"./converters/toKeyAlias.ts\";\nexport { default as toStatement } from \"./converters/toStatement.ts\";\nexport { default as valueToNode } from \"./converters/valueToNode.ts\";\n\n// definitions\nexport * from \"./definitions/index.ts\";\n\n// modifications\nexport { default as appendToMemberExpression } from \"./modifications/appendToMemberExpression.ts\";\nexport { default as inherits } from \"./modifications/inherits.ts\";\nexport { default as prependToMemberExpression } from \"./modifications/prependToMemberExpression.ts\";\nexport {\n  default as removeProperties,\n  type Options as RemovePropertiesOptions,\n} from \"./modifications/removeProperties.ts\";\nexport { default as removePropertiesDeep } from \"./modifications/removePropertiesDeep.ts\";\nexport { default as removeTypeDuplicates } from \"./modifications/flow/removeTypeDuplicates.ts\";\n\n// retrievers\nexport { default as getAssignmentIdentifiers } from \"./retrievers/getAssignmentIdentifiers.ts\";\nexport { default as getBindingIdentifiers } from \"./retrievers/getBindingIdentifiers.ts\";\nexport { default as getOuterBindingIdentifiers } from \"./retrievers/getOuterBindingIdentifiers.ts\";\nexport { default as getFunctionName } from \"./retrievers/getFunctionName.ts\";\n\n// traverse\nexport { default as traverse } from \"./traverse/traverse.ts\";\nexport * from \"./traverse/traverse.ts\";\nexport { default as traverseFast } from \"./traverse/traverseFast.ts\";\n\n// utils\nexport { default as shallowEqual } from \"./utils/shallowEqual.ts\";\n\n// validators\nexport { default as is } from \"./validators/is.ts\";\nexport { default as isBinding } from \"./validators/isBinding.ts\";\nexport { default as isBlockScoped } from \"./validators/isBlockScoped.ts\";\nexport { default as isImmutable } from \"./validators/isImmutable.ts\";\nexport { default as isLet } from \"./validators/isLet.ts\";\nexport { default as isNode } from \"./validators/isNode.ts\";\nexport { default as isNodesEquivalent } from \"./validators/isNodesEquivalent.ts\";\nexport { default as isPlaceholderType } from \"./validators/isPlaceholderType.ts\";\nexport { default as isReferenced } from \"./validators/isReferenced.ts\";\nexport { default as isScope } from \"./validators/isScope.ts\";\nexport { default as isSpecifierDefault } from \"./validators/isSpecifierDefault.ts\";\nexport { default as isType } from \"./validators/isType.ts\";\nexport { default as isValidES3Identifier } from \"./validators/isValidES3Identifier.ts\";\nexport { default as isValidIdentifier } from \"./validators/isValidIdentifier.ts\";\nexport { default as isVar } from \"./validators/isVar.ts\";\nexport { default as matchesPattern } from \"./validators/matchesPattern.ts\";\nexport { default as validate } from \"./validators/validate.ts\";\nexport { default as buildMatchMemberExpression } from \"./validators/buildMatchMemberExpression.ts\";\nexport * from \"./validators/generated/index.ts\";\n\n// react\nexport const react = {\n  isReactComponent,\n  isCompatTag,\n  buildChildren,\n};\n\n// this is used by @babel/traverse to warn about deprecated visitors\nexport { default as __internal__deprecationWarning } from \"./utils/deprecationWarning.ts\";\n\nimport toSequenceExpression from \"./converters/toSequenceExpression.ts\" with { if: \"!process.env.BABEL_8_BREAKING && !USE_ESM && !IS_STANDALONE\" };\nif (!process.env.BABEL_8_BREAKING && !USE_ESM && !IS_STANDALONE) {\n  // eslint-disable-next-line no-restricted-globals\n  exports.toSequenceExpression = toSequenceExpression;\n}\n\nif (!process.env.BABEL_8_BREAKING && process.env.BABEL_TYPES_8_BREAKING) {\n  console.warn(\n    \"BABEL_TYPES_8_BREAKING is not supported anymore. Use the latest Babel 8.0.0 pre-release instead!\",\n  );\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/react/isReactComponent.js":{"lineLengths":[13,0,46,13,3,25,78,85,50,0,44,0],"data":{"version":3,"names":["_buildMatchMemberExpression","require","isReactComponent","buildMatchMemberExpression","_default","exports","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/react/isReactComponent.ts"],"sourcesContent":["import buildMatchMemberExpression from \"../buildMatchMemberExpression.ts\";\n\nconst isReactComponent = buildMatchMemberExpression(\"React.Component\");\n\nexport default isReactComponent;\n"],"mappings":";;;;;;AAAA,IAAAA,2BAAA,GAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAG,IAAAC,mCAA0B,EAAC,iBAAiB,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAExDJ,gBAAgB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js":{"lineLengths":[13,0,46,13,3,45,53,58,33,77,1,0,54,0],"data":{"version":3,"names":["_matchesPattern","require","buildMatchMemberExpression","match","allowPartial","parts","split","member","matchesPattern"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/buildMatchMemberExpression.ts"],"sourcesContent":["import matchesPattern from \"./matchesPattern.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AAUe,SAASC,0BAA0BA,CAChDC,KAAa,EACbC,YAAsB,EACtB;EACA,MAAMC,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;EAE9B,OAAQC,MAAc,IAAK,IAAAC,uBAAc,EAACD,MAAM,EAAEF,KAAK,EAAED,YAAY,CAAC;AACxE","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/matchesPattern.js":{"lineLengths":[13,0,46,13,3,33,45,54,60,64,19,11,81,30,3,19,48,65,69,26,14,41,24,51,25,52,21,12,19,5,41,3,14,1,0,42,0],"data":{"version":3,"names":["_index","require","matchesPattern","member","match","allowPartial","isMemberExpression","parts","Array","isArray","split","nodes","node","object","push","property","length","i","j","value","isIdentifier","name","isStringLiteral","isThisExpression"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/matchesPattern.ts"],"sourcesContent":["import {\n  isIdentifier,\n  isMemberExpression,\n  isStringLiteral,\n  isThisExpression,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Determines whether or not the input node `member` matches the\n * input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function matchesPattern(\n  member: t.Node | null | undefined,\n  match: string | string[],\n  allowPartial?: boolean,\n): boolean {\n  // not a member expression\n  if (!isMemberExpression(member)) return false;\n\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n\n  let node;\n  for (node = member; isMemberExpression(node); node = node.object) {\n    nodes.push(node.property);\n  }\n  nodes.push(node);\n\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n    if (isIdentifier(node)) {\n      value = node.name;\n    } else if (isStringLiteral(node)) {\n      value = node.value;\n    } else if (isThisExpression(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAee,SAASC,cAAcA,CACpCC,MAAiC,EACjCC,KAAwB,EACxBC,YAAsB,EACb;EAET,IAAI,CAAC,IAAAC,yBAAkB,EAACH,MAAM,CAAC,EAAE,OAAO,KAAK;EAE7C,MAAMI,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,GAAGA,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC;EAC7D,MAAMC,KAAK,GAAG,EAAE;EAEhB,IAAIC,IAAI;EACR,KAAKA,IAAI,GAAGT,MAAM,EAAE,IAAAG,yBAAkB,EAACM,IAAI,CAAC,EAAEA,IAAI,GAAGA,IAAI,CAACC,MAAM,EAAE;IAChEF,KAAK,CAACG,IAAI,CAACF,IAAI,CAACG,QAAQ,CAAC;EAC3B;EACAJ,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC;EAEhB,IAAID,KAAK,CAACK,MAAM,GAAGT,KAAK,CAACS,MAAM,EAAE,OAAO,KAAK;EAC7C,IAAI,CAACX,YAAY,IAAIM,KAAK,CAACK,MAAM,GAAGT,KAAK,CAACS,MAAM,EAAE,OAAO,KAAK;EAE9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGP,KAAK,CAACK,MAAM,GAAG,CAAC,EAAEC,CAAC,GAAGV,KAAK,CAACS,MAAM,EAAEC,CAAC,EAAE,EAAEC,CAAC,EAAE,EAAE;IAChE,MAAMN,IAAI,GAAGD,KAAK,CAACO,CAAC,CAAC;IACrB,IAAIC,KAAK;IACT,IAAI,IAAAC,mBAAY,EAACR,IAAI,CAAC,EAAE;MACtBO,KAAK,GAAGP,IAAI,CAACS,IAAI;IACnB,CAAC,MAAM,IAAI,IAAAC,sBAAe,EAACV,IAAI,CAAC,EAAE;MAChCO,KAAK,GAAGP,IAAI,CAACO,KAAK;IACpB,CAAC,MAAM,IAAI,IAAAI,uBAAgB,EAACX,IAAI,CAAC,EAAE;MACjCO,KAAK,GAAG,MAAM;IAChB,CAAC,MAAM;MACL,OAAO,KAAK;IACd;IAEA,IAAIZ,KAAK,CAACU,CAAC,CAAC,KAAKE,KAAK,EAAE,OAAO,KAAK;EACtC;EAEA,OAAO,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/generated/index.js":{"lineLengths":[13,0,46,13,3,32,50,54,46,40,54,62,56,50,46,42,28,48,44,26,38,44,44,72,58,44,44,38,26,58,34,48,46,46,38,52,56,42,54,38,58,50,50,44,38,40,70,64,46,48,42,56,50,48,46,50,34,34,48,40,48,44,54,32,46,50,46,54,36,44,48,44,48,44,56,56,50,64,60,60,64,46,36,54,50,24,24,52,46,42,32,22,44,44,40,42,32,54,52,44,60,50,58,36,38,34,28,46,50,60,48,64,66,46,50,50,56,48,62,56,68,22,40,50,52,36,52,60,38,42,54,50,50,52,52,44,30,24,48,30,50,24,48,40,28,42,54,50,48,46,42,24,38,66,60,42,70,56,44,48,40,40,42,44,56,60,50,60,52,64,36,60,66,64,62,30,38,56,74,62,38,30,38,30,32,30,62,48,42,40,38,40,46,32,52,42,44,40,34,38,42,70,56,26,36,46,56,40,38,44,36,46,48,68,50,78,50,50,46,40,36,50,40,52,74,66,44,66,40,48,54,38,66,46,60,52,52,42,40,50,42,54,52,72,44,54,42,46,46,44,54,54,54,46,36,58,46,46,58,36,38,28,60,48,46,42,42,44,46,68,72,46,38,46,52,38,48,42,64,46,46,44,44,52,44,44,40,46,54,34,44,52,42,64,68,36,56,46,34,54,48,50,58,54,52,32,52,26,44,42,46,59,71,40,26,52,64,1,45,26,57,64,1,41,26,53,64,1,45,26,57,64,1,34,26,46,64,1,41,26,53,64,1,39,26,51,64,1,39,26,51,64,1,39,26,51,64,1,36,26,48,64,1,46,26,58,64,1,42,26,54,64,1,42,26,54,64,1,41,26,53,64,1,39,26,51,64,1,44,26,56,64,1,29,26,41,64,1,39,26,51,64,1,37,26,49,64,1,44,26,56,64,1,43,26,55,64,1,35,26,47,64,1,36,26,48,64,1,41,26,53,64,1,38,26,50,64,1,39,26,51,64,1,36,26,48,64,1,39,26,51,64,1,38,26,50,64,1,42,26,54,64,1,41,26,53,64,1,38,26,50,64,1,32,26,44,64,1,41,26,53,64,1,37,26,49,64,1,39,26,51,64,1,36,26,48,64,1,40,26,52,64,1,43,26,55,64,1,48,26,60,64,1,35,26,47,64,1,40,26,52,64,1,39,26,51,64,1,39,26,51,64,1,37,26,49,64,1,40,26,52,64,1,41,26,53,64,1,44,26,56,64,1,43,26,55,64,1,39,26,51,64,1,38,26,50,64,1,42,26,54,64,1,37,26,49,64,1,48,26,60,64,1,34,26,46,64,1,40,26,52,64,1,41,26,53,64,1,45,26,57,64,1,49,26,61,64,1,47,26,59,64,1,40,26,52,64,1,39,26,51,64,1,42,26,54,64,1,47,26,59,64,1,49,26,61,64,1,40,26,52,64,1,41,26,53,64,1,37,26,49,64,1,36,26,48,64,1,38,26,50,64,1,38,26,50,64,1,30,26,42,64,1,49,26,61,64,1,40,26,52,64,1,40,26,52,64,1,40,26,52,64,1,40,26,52,64,1,31,26,43,64,1,38,26,50,64,1,49,26,61,64,1,49,26,61,64,1,47,26,59,64,1,38,26,50,64,1,46,26,58,64,1,45,26,57,64,1,43,26,55,64,1,36,26,48,64,1,36,26,48,64,1,40,26,52,64,1,42,26,54,64,1,44,26,56,64,1,46,26,58,64,1,53,26,65,64,1,50,26,62,64,1,40,26,52,64,1,37,26,49,64,1,40,26,52,64,1,41,26,53,64,1,38,26,50,64,1,45,26,57,64,1,41,26,53,64,1,42,26,54,64,1,40,26,52,64,1,49,26,61,64,1,52,26,64,64,1,42,26,54,64,1,45,26,57,64,1,47,26,59,64,1,42,26,54,64,1,46,26,58,64,1,42,26,54,64,1,41,26,53,64,1,45,26,57,64,1,48,26,60,64,1,51,26,63,64,1,44,26,56,64,1,44,26,56,64,1,47,26,59,64,1,52,26,64,64,1,45,26,57,64,1,45,26,57,64,1,47,26,59,64,1,47,26,59,64,1,42,26,54,64,1,43,26,55,64,1,49,26,61,64,1,35,26,47,64,1,48,26,60,64,1,52,26,64,64,1,45,26,57,64,1,45,26,57,64,1,43,26,55,64,1,44,26,56,64,1,45,26,57,64,1,34,26,46,64,1,39,26,51,64,1,43,26,55,64,1,38,26,50,64,1,49,26,61,64,1,51,26,63,64,1,44,26,56,64,1,33,26,45,64,1,43,26,55,64,1,40,26,52,64,1,40,26,52,64,1,39,26,51,64,1,39,26,51,64,1,39,26,51,64,1,42,26,54,64,1,41,26,53,64,1,41,26,53,64,1,44,26,56,64,1,42,26,54,64,1,50,26,62,64,1,37,26,49,64,1,42,26,54,64,1,35,26,47,64,1,43,26,55,64,1,47,26,59,64,1,39,26,51,64,1,38,26,50,64,1,44,26,56,64,1,42,26,54,64,1,42,26,54,64,1,43,26,55,64,1,32,26,44,64,1,36,26,48,64,1,43,26,55,64,1,43,26,55,64,1,29,26,41,64,1,36,26,48,64,1,46,26,58,64,1,44,26,56,64,1,39,26,51,64,1,34,26,46,64,1,37,26,49,64,1,47,26,59,64,1,41,26,53,64,1,40,26,52,64,1,39,26,51,64,1,41,26,53,64,1,39,26,51,64,1,48,26,60,64,1,45,26,57,64,1,54,26,66,64,1,44,26,56,64,1,42,26,54,64,1,40,26,52,64,1,40,26,52,64,1,51,26,63,64,1,56,26,68,64,1,44,26,56,64,1,42,26,54,64,1,41,26,53,64,1,37,26,49,64,1,41,26,53,64,1,40,26,52,64,1,43,26,55,64,1,39,26,51,64,1,38,26,50,64,1,40,26,52,64,1,40,26,52,64,1,40,26,52,64,1,40,26,52,64,1,43,26,55,64,1,41,26,53,64,1,38,26,50,64,1,35,26,47,64,1,39,26,51,64,1,42,26,54,64,1,40,26,52,64,1,40,26,52,64,1,36,26,48,64,1,38,26,50,64,1,36,26,48,64,1,36,26,48,64,1,39,26,51,64,1,35,26,47,64,1,43,26,55,64,1,36,26,48,64,1,43,26,55,64,1,42,26,54,64,1,36,26,48,64,1,44,26,56,64,1,39,26,51,64,1,44,26,56,64,1,37,26,49,64,1,46,26,58,64,1,38,26,50,64,1,54,26,66,64,1,47,26,59,64,1,40,26,52,64,1,47,26,59,64,1,50,26,62,64,1,39,26,51,64,1,46,26,58,64,1,40,26,52,64,1,35,26,47,64,1,42,26,54,64,1,37,26,49,64,1,44,26,56,64,1,38,26,50,64,1,37,26,49,64,1,50,26,62,64,1,50,26,62,64,1,44,26,56,64,1,43,26,55,64,1,53,26,65,64,1,41,26,53,64,1,53,26,65,64,1,51,26,63,64,1,40,26,52,64,1,37,26,22,27,32,28,32,21,28,26,26,26,23,33,29,29,28,26,31,16,26,24,31,30,22,23,28,25,26,23,26,25,29,28,25,19,28,24,26,23,27,30,35,22,27,26,26,24,27,28,31,30,26,25,29,24,35,21,27,28,32,36,34,27,26,29,34,36,27,28,24,23,25,25,17,36,27,27,27,27,18,25,36,36,34,25,33,32,30,23,23,27,12,23,34,26,29,30,25,16,16,23,7,12,12,19,3,64,1,35,26,22,27,32,28,26,33,30,22,25,26,23,26,25,29,28,25,28,30,35,26,27,28,35,27,28,24,17,36,27,27,27,18,25,36,34,30,22,23,26,24,28,27,26,28,26,35,32,41,37,26,33,27,31,12,23,34,26,26,29,16,16,23,7,12,12,19,3,64,1,31,26,22,28,29,12,12,19,3,64,1,33,26,22,26,23,28,26,24,31,30,19,24,27,26,35,27,28,26,23,30,23,25,12,23,56,12,19,3,64,1,36,26,22,26,23,28,26,24,31,30,19,24,27,26,35,26,23,30,23,25,12,23,56,12,19,3,64,1,30,26,22,26,19,25,12,23,56,12,19,3,64,1,34,26,22,26,26,29,29,28,26,31,26,24,31,23,28,27,27,26,24,31,26,25,28,32,36,34,26,29,24,27,28,25,32,28,29,27,36,39,32,22,21,27,29,34,34,29,31,37,30,40,12,23,34,25,27,30,16,16,23,7,12,12,19,3,64,1,39,26,22,26,29,27,26,27,27,12,12,19,3,64,1,44,26,22,26,29,27,26,12,12,19,3,64,1,36,26,22,33,23,12,12,19,3,64,1,29,26,22,28,26,24,26,26,12,12,19,3,64,1,30,26,22,28,26,12,12,19,3,64,1,42,26,22,31,35,30,12,12,19,3,64,1,28,26,22,26,24,26,12,12,19,3,64,1,38,26,22,26,26,12,12,19,3,64,1,33,26,22,31,30,24,35,23,30,12,12,19,3,64,1,39,26,22,31,30,24,35,23,30,23,25,12,12,19,3,64,1,32,26,22,31,30,25,26,23,26,25,35,25,26,12,23,55,12,19,3,64,1,36,26,22,31,31,28,32,36,34,29,24,27,28,25,32,28,29,27,36,39,32,22,21,27,29,34,34,29,31,37,12,23,53,12,19,3,64,1,36,26,22,22,23,29,24,25,26,33,27,31,12,23,34,23,26,16,16,23,7,12,12,19,3,64,1,29,26,22,22,28,23,29,24,25,31,26,33,27,31,12,23,34,23,26,16,16,23,7,12,12,19,3,64,1,37,26,22,22,27,12,23,52,12,19,3,64,1,32,26,22,25,26,23,26,25,27,25,26,12,23,55,12,19,3,64,1,34,26,22,25,26,23,26,25,24,29,22,34,26,29,19,23,30,30,26,12,23,55,12,19,3,64,1,42,26,22,24,26,34,34,29,30,36,12,12,19,3,64,1,31,26,22,24,23,30,12,12,19,3,64,1,37,26,22,24,26,12,12,19,3,64,1,33,26,22,26,25,33,32,12,12,19,3,64,1,34,26,22,27,25,12,12,19,3,64,1,32,26,22,29,24,25,12,23,49,12,19,3,64,1,30,26,22,27,28,12,12,19,3,64,1,50,26,22,32,36,34,29,12,12,19,3,64,1,42,26,22,32,36,34,12,12,19,3,64,1,40,26,22,27,34,36,27,36,34,12,12,19,3,64,1,33,26,22,33,12,12,19,3,64,1,32,26,22,32,30,23,12,12,19,3,64,1,29,26,22,29,31,33,40,37,27,24,27,28,25,32,28,29,27,36,39,29,32,34,29,33,29,28,32,35,38,31,31,34,39,32,32,34,34,29,30,36,22,35,39,32,32,30,31,32,21,26,30,25,36,38,31,20,30,27,27,26,26,26,29,28,28,31,29,37,12,12,19,3,64,1,33,26,22,29,31,33,40,37,32,34,33,35,38,31,31,34,39,32,32,39,32,32,30,31,32,31,30,29,37,12,12,19,3,64,1,43,26,22,29,33,37,31,31,32,32,32,30,30,12,12,19,3,64,1,40,26,22,24,27,28,25,32,28,29,27,36,39,32,22,21,12,12,19,3,64,1,38,26,22,29,29,12,12,19,3,64,1,33,26,22,27,26,26,26,12,12,19,3,64,1,35,26,22,29,28,28,31,12,12,19,3,64,1,28,26,22,24,29,22,30,34,26,25,31,29,29,30,19,23,30,30,12,12,19,3,64,1,38,26,22,16,23,33,12,12,19,3,64,1,35,26,22,31,29,27,27,38,43,31,29,28,24,28,27,30,26,25,27,27,27,27,30,28,25,22,26,29,27,27,23,25,23,23,26,22,30,23,30,29,23,31,26,31,24,33,25,41,34,27,34,37,26,33,27,22,29,24,31,25,24,37,37,31,30,40,28,40,38,27,12,12,19,3,64,1,38,26,22,38,43,31,29,28,12,12,19,3,64,1,31,26,22,24,28,27,30,26,25,27,27,27,27,30,28,25,22,26,29,27,27,23,25,23,23,26,22,23,30,29,23,31,26,31,24,33,25,41,24,12,12,19,3,64,1,35,26,22,24,28,27,30,26,25,27,27,27,27,30,28,25,22,33,25,12,12,19,3,64,1,38,74,26,50,64,1,37,72,26,49,64,1,37,70,26,49,64,1,39,74,26,51,64,1,42,89,49,1,0,33,0],"data":{"version":3,"names":["_shallowEqual","require","_deprecationWarning","isArrayExpression","node","opts","type","shallowEqual","isAssignmentExpression","isBinaryExpression","isInterpreterDirective","isDirective","isDirectiveLiteral","isBlockStatement","isBreakStatement","isCallExpression","isCatchClause","isConditionalExpression","isContinueStatement","isDebuggerStatement","isDoWhileStatement","isEmptyStatement","isExpressionStatement","isFile","isForInStatement","isForStatement","isFunctionDeclaration","isFunctionExpression","isIdentifier","isIfStatement","isLabeledStatement","isStringLiteral","isNumericLiteral","isNullLiteral","isBooleanLiteral","isRegExpLiteral","isLogicalExpression","isMemberExpression","isNewExpression","isProgram","isObjectExpression","isObjectMethod","isObjectProperty","isRestElement","isReturnStatement","isSequenceExpression","isParenthesizedExpression","isSwitchCase","isSwitchStatement","isThisExpression","isThrowStatement","isTryStatement","isUnaryExpression","isUpdateExpression","isVariableDeclaration","isVariableDeclarator","isWhileStatement","isWithStatement","isAssignmentPattern","isArrayPattern","isArrowFunctionExpression","isClassBody","isClassExpression","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isExportSpecifier","isForOfStatement","isImportDeclaration","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","isImportExpression","isMetaProperty","isClassMethod","isObjectPattern","isSpreadElement","isSuper","isTaggedTemplateExpression","isTemplateElement","isTemplateLiteral","isYieldExpression","isAwaitExpression","isImport","isBigIntLiteral","isExportNamespaceSpecifier","isOptionalMemberExpression","isOptionalCallExpression","isClassProperty","isClassAccessorProperty","isClassPrivateProperty","isClassPrivateMethod","isPrivateName","isStaticBlock","isImportAttribute","isAnyTypeAnnotation","isArrayTypeAnnotation","isBooleanTypeAnnotation","isBooleanLiteralTypeAnnotation","isNullLiteralTypeAnnotation","isClassImplements","isDeclareClass","isDeclareFunction","isDeclareInterface","isDeclareModule","isDeclareModuleExports","isDeclareTypeAlias","isDeclareOpaqueType","isDeclareVariable","isDeclareExportDeclaration","isDeclareExportAllDeclaration","isDeclaredPredicate","isExistsTypeAnnotation","isFunctionTypeAnnotation","isFunctionTypeParam","isGenericTypeAnnotation","isInferredPredicate","isInterfaceExtends","isInterfaceDeclaration","isInterfaceTypeAnnotation","isIntersectionTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isNullableTypeAnnotation","isNumberLiteralTypeAnnotation","isNumberTypeAnnotation","isObjectTypeAnnotation","isObjectTypeInternalSlot","isObjectTypeCallProperty","isObjectTypeIndexer","isObjectTypeProperty","isObjectTypeSpreadProperty","isOpaqueType","isQualifiedTypeIdentifier","isStringLiteralTypeAnnotation","isStringTypeAnnotation","isSymbolTypeAnnotation","isThisTypeAnnotation","isTupleTypeAnnotation","isTypeofTypeAnnotation","isTypeAlias","isTypeAnnotation","isTypeCastExpression","isTypeParameter","isTypeParameterDeclaration","isTypeParameterInstantiation","isUnionTypeAnnotation","isVariance","isVoidTypeAnnotation","isEnumDeclaration","isEnumBooleanBody","isEnumNumberBody","isEnumStringBody","isEnumSymbolBody","isEnumBooleanMember","isEnumNumberMember","isEnumStringMember","isEnumDefaultedMember","isIndexedAccessType","isOptionalIndexedAccessType","isJSXAttribute","isJSXClosingElement","isJSXElement","isJSXEmptyExpression","isJSXExpressionContainer","isJSXSpreadChild","isJSXIdentifier","isJSXMemberExpression","isJSXNamespacedName","isJSXOpeningElement","isJSXSpreadAttribute","isJSXText","isJSXFragment","isJSXOpeningFragment","isJSXClosingFragment","isNoop","isPlaceholder","isV8IntrinsicIdentifier","isArgumentPlaceholder","isBindExpression","isDecorator","isDoExpression","isExportDefaultSpecifier","isRecordExpression","isTupleExpression","isDecimalLiteral","isModuleExpression","isTopicReference","isPipelineTopicExpression","isPipelineBareFunction","isPipelinePrimaryTopicReference","isTSParameterProperty","isTSDeclareFunction","isTSDeclareMethod","isTSQualifiedName","isTSCallSignatureDeclaration","isTSConstructSignatureDeclaration","isTSPropertySignature","isTSMethodSignature","isTSIndexSignature","isTSAnyKeyword","isTSBooleanKeyword","isTSBigIntKeyword","isTSIntrinsicKeyword","isTSNeverKeyword","isTSNullKeyword","isTSNumberKeyword","isTSObjectKeyword","isTSStringKeyword","isTSSymbolKeyword","isTSUndefinedKeyword","isTSUnknownKeyword","isTSVoidKeyword","isTSThisType","isTSFunctionType","isTSConstructorType","isTSTypeReference","isTSTypePredicate","isTSTypeQuery","isTSTypeLiteral","isTSArrayType","isTSTupleType","isTSOptionalType","isTSRestType","isTSNamedTupleMember","isTSUnionType","isTSIntersectionType","isTSConditionalType","isTSInferType","isTSParenthesizedType","isTSTypeOperator","isTSIndexedAccessType","isTSMappedType","isTSTemplateLiteralType","isTSLiteralType","isTSExpressionWithTypeArguments","isTSInterfaceDeclaration","isTSInterfaceBody","isTSTypeAliasDeclaration","isTSInstantiationExpression","isTSAsExpression","isTSSatisfiesExpression","isTSTypeAssertion","isTSEnumBody","isTSEnumDeclaration","isTSEnumMember","isTSModuleDeclaration","isTSModuleBlock","isTSImportType","isTSImportEqualsDeclaration","isTSExternalModuleReference","isTSNonNullExpression","isTSExportAssignment","isTSNamespaceExportDeclaration","isTSTypeAnnotation","isTSTypeParameterInstantiation","isTSTypeParameterDeclaration","isTSTypeParameter","isStandardized","expectedNode","isExpression","isBinary","isScopable","isBlockParent","isBlock","isStatement","isTerminatorless","isCompletionStatement","isConditional","isLoop","isWhile","isExpressionWrapper","isFor","isForXStatement","isFunction","isFunctionParent","isPureish","isDeclaration","isPatternLike","isLVal","isTSEntityName","isLiteral","isImmutable","isUserWhitespacable","isMethod","isObjectMember","isProperty","isUnaryLike","isPattern","isClass","isImportOrExportDeclaration","isExportDeclaration","isModuleSpecifier","isAccessor","isPrivate","isFlow","isFlowType","isFlowBaseAnnotation","isFlowDeclaration","isFlowPredicate","isEnumBody","isEnumMember","isJSX","isMiscellaneous","isTypeScript","isTSTypeElement","isTSType","isTSBaseType","isNumberLiteral","deprecationWarning","isRegexLiteral","isRestProperty","isSpreadProperty","isModuleDeclaration"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/generated/index.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/* eslint-disable no-fallthrough */\n\nimport shallowEqual from \"../../utils/shallowEqual.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\ntype Opts<Obj> = Partial<{\n  [Prop in keyof Obj]: Obj[Prop] extends t.Node\n    ? t.Node\n    : Obj[Prop] extends t.Node[]\n      ? t.Node[]\n      : Obj[Prop];\n}>;\n\nexport function isArrayExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayExpression> | null,\n): node is t.ArrayExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentExpression> | null,\n): node is t.AssignmentExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BinaryExpression> | null,\n): node is t.BinaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BinaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterpreterDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterpreterDirective> | null,\n): node is t.InterpreterDirective {\n  if (!node) return false;\n\n  if (node.type !== \"InterpreterDirective\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Directive> | null,\n): node is t.Directive {\n  if (!node) return false;\n\n  if (node.type !== \"Directive\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirectiveLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DirectiveLiteral> | null,\n): node is t.DirectiveLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DirectiveLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockStatement> | null,\n): node is t.BlockStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BlockStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBreakStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BreakStatement> | null,\n): node is t.BreakStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BreakStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CallExpression> | null,\n): node is t.CallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"CallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCatchClause(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CatchClause> | null,\n): node is t.CatchClause {\n  if (!node) return false;\n\n  if (node.type !== \"CatchClause\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditionalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ConditionalExpression> | null,\n): node is t.ConditionalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ConditionalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isContinueStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ContinueStatement> | null,\n): node is t.ContinueStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ContinueStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDebuggerStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DebuggerStatement> | null,\n): node is t.DebuggerStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DebuggerStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoWhileStatement> | null,\n): node is t.DoWhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DoWhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyStatement> | null,\n): node is t.EmptyStatement {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionStatement> | null,\n): node is t.ExpressionStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ExpressionStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.File> | null,\n): node is t.File {\n  if (!node) return false;\n\n  if (node.type !== \"File\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForInStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForInStatement> | null,\n): node is t.ForInStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForInStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForStatement> | null,\n): node is t.ForStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionDeclaration> | null,\n): node is t.FunctionDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionExpression> | null,\n): node is t.FunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Identifier> | null,\n): node is t.Identifier {\n  if (!node) return false;\n\n  if (node.type !== \"Identifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IfStatement> | null,\n): node is t.IfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"IfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLabeledStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LabeledStatement> | null,\n): node is t.LabeledStatement {\n  if (!node) return false;\n\n  if (node.type !== \"LabeledStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteral> | null,\n): node is t.StringLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumericLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumericLiteral> | null,\n): node is t.NumericLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NumericLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteral> | null,\n): node is t.NullLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteral> | null,\n): node is t.BooleanLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRegExpLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegExpLiteral> | null,\n): node is t.RegExpLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"RegExpLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLogicalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LogicalExpression> | null,\n): node is t.LogicalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"LogicalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MemberExpression> | null,\n): node is t.MemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"MemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNewExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NewExpression> | null,\n): node is t.NewExpression {\n  if (!node) return false;\n\n  if (node.type !== \"NewExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProgram(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Program> | null,\n): node is t.Program {\n  if (!node) return false;\n\n  if (node.type !== \"Program\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectExpression> | null,\n): node is t.ObjectExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMethod> | null,\n): node is t.ObjectMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectProperty> | null,\n): node is t.ObjectProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRestElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestElement> | null,\n): node is t.RestElement {\n  if (!node) return false;\n\n  if (node.type !== \"RestElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isReturnStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ReturnStatement> | null,\n): node is t.ReturnStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ReturnStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSequenceExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SequenceExpression> | null,\n): node is t.SequenceExpression {\n  if (!node) return false;\n\n  if (node.type !== \"SequenceExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isParenthesizedExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ParenthesizedExpression> | null,\n): node is t.ParenthesizedExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ParenthesizedExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchCase(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchCase> | null,\n): node is t.SwitchCase {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchCase\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchStatement> | null,\n): node is t.SwitchStatement {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisExpression> | null,\n): node is t.ThisExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ThisExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThrowStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThrowStatement> | null,\n): node is t.ThrowStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ThrowStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTryStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TryStatement> | null,\n): node is t.TryStatement {\n  if (!node) return false;\n\n  if (node.type !== \"TryStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryExpression> | null,\n): node is t.UnaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UnaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUpdateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UpdateExpression> | null,\n): node is t.UpdateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UpdateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclaration> | null,\n): node is t.VariableDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclarator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclarator> | null,\n): node is t.VariableDeclarator {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclarator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WhileStatement> | null,\n): node is t.WhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWithStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WithStatement> | null,\n): node is t.WithStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WithStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentPattern> | null,\n): node is t.AssignmentPattern {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayPattern> | null,\n): node is t.ArrayPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrowFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrowFunctionExpression> | null,\n): node is t.ArrowFunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrowFunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassBody> | null,\n): node is t.ClassBody {\n  if (!node) return false;\n\n  if (node.type !== \"ClassBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassExpression> | null,\n): node is t.ClassExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ClassExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassDeclaration> | null,\n): node is t.ClassDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ClassDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportAllDeclaration> | null,\n): node is t.ExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultDeclaration> | null,\n): node is t.ExportDefaultDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamedDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamedDeclaration> | null,\n): node is t.ExportNamedDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamedDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportSpecifier> | null,\n): node is t.ExportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForOfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForOfStatement> | null,\n): node is t.ForOfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForOfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDeclaration> | null,\n): node is t.ImportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDefaultSpecifier> | null,\n): node is t.ImportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportNamespaceSpecifier> | null,\n): node is t.ImportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportSpecifier> | null,\n): node is t.ImportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportExpression> | null,\n): node is t.ImportExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ImportExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMetaProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MetaProperty> | null,\n): node is t.MetaProperty {\n  if (!node) return false;\n\n  if (node.type !== \"MetaProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassMethod> | null,\n): node is t.ClassMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectPattern> | null,\n): node is t.ObjectPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSpreadElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadElement> | null,\n): node is t.SpreadElement {\n  if (!node) return false;\n\n  if (node.type !== \"SpreadElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSuper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Super> | null,\n): node is t.Super {\n  if (!node) return false;\n\n  if (node.type !== \"Super\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTaggedTemplateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TaggedTemplateExpression> | null,\n): node is t.TaggedTemplateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TaggedTemplateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateElement> | null,\n): node is t.TemplateElement {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateLiteral> | null,\n): node is t.TemplateLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isYieldExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.YieldExpression> | null,\n): node is t.YieldExpression {\n  if (!node) return false;\n\n  if (node.type !== \"YieldExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAwaitExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AwaitExpression> | null,\n): node is t.AwaitExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AwaitExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImport(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Import> | null,\n): node is t.Import {\n  if (!node) return false;\n\n  if (node.type !== \"Import\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBigIntLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BigIntLiteral> | null,\n): node is t.BigIntLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BigIntLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamespaceSpecifier> | null,\n): node is t.ExportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalMemberExpression> | null,\n): node is t.OptionalMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalCallExpression> | null,\n): node is t.OptionalCallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalCallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassProperty> | null,\n): node is t.ClassProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassAccessorProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassAccessorProperty> | null,\n): node is t.ClassAccessorProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassAccessorProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateProperty> | null,\n): node is t.ClassPrivateProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateMethod> | null,\n): node is t.ClassPrivateMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivateName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PrivateName> | null,\n): node is t.PrivateName {\n  if (!node) return false;\n\n  if (node.type !== \"PrivateName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStaticBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StaticBlock> | null,\n): node is t.StaticBlock {\n  if (!node) return false;\n\n  if (node.type !== \"StaticBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportAttribute> | null,\n): node is t.ImportAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"ImportAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAnyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AnyTypeAnnotation> | null,\n): node is t.AnyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"AnyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayTypeAnnotation> | null,\n): node is t.ArrayTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanTypeAnnotation> | null,\n): node is t.BooleanTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteralTypeAnnotation> | null,\n): node is t.BooleanLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteralTypeAnnotation> | null,\n): node is t.NullLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassImplements(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassImplements> | null,\n): node is t.ClassImplements {\n  if (!node) return false;\n\n  if (node.type !== \"ClassImplements\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareClass> | null,\n): node is t.DeclareClass {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareClass\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareFunction> | null,\n): node is t.DeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareInterface(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareInterface> | null,\n): node is t.DeclareInterface {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareInterface\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModule(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModule> | null,\n): node is t.DeclareModule {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModule\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModuleExports(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModuleExports> | null,\n): node is t.DeclareModuleExports {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModuleExports\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareTypeAlias> | null,\n): node is t.DeclareTypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareTypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareOpaqueType> | null,\n): node is t.DeclareOpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareOpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareVariable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareVariable> | null,\n): node is t.DeclareVariable {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareVariable\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportDeclaration> | null,\n): node is t.DeclareExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportAllDeclaration> | null,\n): node is t.DeclareExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclaredPredicate> | null,\n): node is t.DeclaredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"DeclaredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExistsTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExistsTypeAnnotation> | null,\n): node is t.ExistsTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ExistsTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeAnnotation> | null,\n): node is t.FunctionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeParam(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeParam> | null,\n): node is t.FunctionTypeParam {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeParam\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isGenericTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.GenericTypeAnnotation> | null,\n): node is t.GenericTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"GenericTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInferredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InferredPredicate> | null,\n): node is t.InferredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"InferredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceExtends(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceExtends> | null,\n): node is t.InterfaceExtends {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceExtends\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceDeclaration> | null,\n): node is t.InterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceTypeAnnotation> | null,\n): node is t.InterfaceTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIntersectionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IntersectionTypeAnnotation> | null,\n): node is t.IntersectionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"IntersectionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMixedTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MixedTypeAnnotation> | null,\n): node is t.MixedTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"MixedTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyTypeAnnotation> | null,\n): node is t.EmptyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullableTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullableTypeAnnotation> | null,\n): node is t.NullableTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullableTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteralTypeAnnotation> | null,\n): node is t.NumberLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberTypeAnnotation> | null,\n): node is t.NumberTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeAnnotation> | null,\n): node is t.ObjectTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeInternalSlot(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeInternalSlot> | null,\n): node is t.ObjectTypeInternalSlot {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeInternalSlot\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeCallProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeCallProperty> | null,\n): node is t.ObjectTypeCallProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeCallProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeIndexer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeIndexer> | null,\n): node is t.ObjectTypeIndexer {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeIndexer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeProperty> | null,\n): node is t.ObjectTypeProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeSpreadProperty> | null,\n): node is t.ObjectTypeSpreadProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeSpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OpaqueType> | null,\n): node is t.OpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"OpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isQualifiedTypeIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.QualifiedTypeIdentifier> | null,\n): node is t.QualifiedTypeIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"QualifiedTypeIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteralTypeAnnotation> | null,\n): node is t.StringLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringTypeAnnotation> | null,\n): node is t.StringTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSymbolTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SymbolTypeAnnotation> | null,\n): node is t.SymbolTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"SymbolTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisTypeAnnotation> | null,\n): node is t.ThisTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ThisTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleTypeAnnotation> | null,\n): node is t.TupleTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TupleTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeofTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeofTypeAnnotation> | null,\n): node is t.TypeofTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeofTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAlias> | null,\n): node is t.TypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAnnotation> | null,\n): node is t.TypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeCastExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeCastExpression> | null,\n): node is t.TypeCastExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TypeCastExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameter> | null,\n): node is t.TypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterDeclaration> | null,\n): node is t.TypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterInstantiation> | null,\n): node is t.TypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnionTypeAnnotation> | null,\n): node is t.UnionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"UnionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariance(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Variance> | null,\n): node is t.Variance {\n  if (!node) return false;\n\n  if (node.type !== \"Variance\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVoidTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VoidTypeAnnotation> | null,\n): node is t.VoidTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"VoidTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDeclaration> | null,\n): node is t.EnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanBody> | null,\n): node is t.EnumBooleanBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberBody> | null,\n): node is t.EnumNumberBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringBody> | null,\n): node is t.EnumStringBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumSymbolBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumSymbolBody> | null,\n): node is t.EnumSymbolBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumSymbolBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanMember> | null,\n): node is t.EnumBooleanMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberMember> | null,\n): node is t.EnumNumberMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringMember> | null,\n): node is t.EnumStringMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDefaultedMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDefaultedMember> | null,\n): node is t.EnumDefaultedMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDefaultedMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IndexedAccessType> | null,\n): node is t.IndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"IndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalIndexedAccessType> | null,\n): node is t.OptionalIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXAttribute> | null,\n): node is t.JSXAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingElement> | null,\n): node is t.JSXClosingElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXElement> | null,\n): node is t.JSXElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXEmptyExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXEmptyExpression> | null,\n): node is t.JSXEmptyExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXEmptyExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXExpressionContainer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXExpressionContainer> | null,\n): node is t.JSXExpressionContainer {\n  if (!node) return false;\n\n  if (node.type !== \"JSXExpressionContainer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadChild(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadChild> | null,\n): node is t.JSXSpreadChild {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadChild\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXIdentifier> | null,\n): node is t.JSXIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"JSXIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXMemberExpression> | null,\n): node is t.JSXMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXNamespacedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXNamespacedName> | null,\n): node is t.JSXNamespacedName {\n  if (!node) return false;\n\n  if (node.type !== \"JSXNamespacedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningElement> | null,\n): node is t.JSXOpeningElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadAttribute> | null,\n): node is t.JSXSpreadAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXText(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXText> | null,\n): node is t.JSXText {\n  if (!node) return false;\n\n  if (node.type !== \"JSXText\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXFragment> | null,\n): node is t.JSXFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningFragment> | null,\n): node is t.JSXOpeningFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingFragment> | null,\n): node is t.JSXClosingFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Noop> | null,\n): node is t.Noop {\n  if (!node) return false;\n\n  if (node.type !== \"Noop\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Placeholder> | null,\n): node is t.Placeholder {\n  if (!node) return false;\n\n  if (node.type !== \"Placeholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isV8IntrinsicIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.V8IntrinsicIdentifier> | null,\n): node is t.V8IntrinsicIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"V8IntrinsicIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArgumentPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArgumentPlaceholder> | null,\n): node is t.ArgumentPlaceholder {\n  if (!node) return false;\n\n  if (node.type !== \"ArgumentPlaceholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBindExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BindExpression> | null,\n): node is t.BindExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BindExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecorator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Decorator> | null,\n): node is t.Decorator {\n  if (!node) return false;\n\n  if (node.type !== \"Decorator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoExpression> | null,\n): node is t.DoExpression {\n  if (!node) return false;\n\n  if (node.type !== \"DoExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultSpecifier> | null,\n): node is t.ExportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRecordExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RecordExpression> | null,\n): node is t.RecordExpression {\n  if (!node) return false;\n\n  if (node.type !== \"RecordExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleExpression> | null,\n): node is t.TupleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TupleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecimalLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DecimalLiteral> | null,\n): node is t.DecimalLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DecimalLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleExpression> | null,\n): node is t.ModuleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ModuleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TopicReference> | null,\n): node is t.TopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"TopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineTopicExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineTopicExpression> | null,\n): node is t.PipelineTopicExpression {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineTopicExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineBareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineBareFunction> | null,\n): node is t.PipelineBareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineBareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelinePrimaryTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelinePrimaryTopicReference> | null,\n): node is t.PipelinePrimaryTopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"PipelinePrimaryTopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParameterProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParameterProperty> | null,\n): node is t.TSParameterProperty {\n  if (!node) return false;\n\n  if (node.type !== \"TSParameterProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareFunction> | null,\n): node is t.TSDeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareMethod> | null,\n): node is t.TSDeclareMethod {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSQualifiedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSQualifiedName> | null,\n): node is t.TSQualifiedName {\n  if (!node) return false;\n\n  if (node.type !== \"TSQualifiedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSCallSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSCallSignatureDeclaration> | null,\n): node is t.TSCallSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSCallSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructSignatureDeclaration> | null,\n): node is t.TSConstructSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSPropertySignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSPropertySignature> | null,\n): node is t.TSPropertySignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSPropertySignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMethodSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMethodSignature> | null,\n): node is t.TSMethodSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSMethodSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexSignature> | null,\n): node is t.TSIndexSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAnyKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAnyKeyword> | null,\n): node is t.TSAnyKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSAnyKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBooleanKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBooleanKeyword> | null,\n): node is t.TSBooleanKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBooleanKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBigIntKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBigIntKeyword> | null,\n): node is t.TSBigIntKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBigIntKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntrinsicKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntrinsicKeyword> | null,\n): node is t.TSIntrinsicKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntrinsicKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNeverKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNeverKeyword> | null,\n): node is t.TSNeverKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNeverKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNullKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNullKeyword> | null,\n): node is t.TSNullKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNullKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNumberKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNumberKeyword> | null,\n): node is t.TSNumberKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNumberKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSObjectKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSObjectKeyword> | null,\n): node is t.TSObjectKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSObjectKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSStringKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSStringKeyword> | null,\n): node is t.TSStringKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSStringKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSymbolKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSymbolKeyword> | null,\n): node is t.TSSymbolKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSSymbolKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUndefinedKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUndefinedKeyword> | null,\n): node is t.TSUndefinedKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUndefinedKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnknownKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnknownKeyword> | null,\n): node is t.TSUnknownKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnknownKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSVoidKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSVoidKeyword> | null,\n): node is t.TSVoidKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSVoidKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSThisType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSThisType> | null,\n): node is t.TSThisType {\n  if (!node) return false;\n\n  if (node.type !== \"TSThisType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSFunctionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSFunctionType> | null,\n): node is t.TSFunctionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSFunctionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructorType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructorType> | null,\n): node is t.TSConstructorType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructorType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeReference> | null,\n): node is t.TSTypeReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypePredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypePredicate> | null,\n): node is t.TSTypePredicate {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypePredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeQuery(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeQuery> | null,\n): node is t.TSTypeQuery {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeQuery\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeLiteral> | null,\n): node is t.TSTypeLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSArrayType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSArrayType> | null,\n): node is t.TSArrayType {\n  if (!node) return false;\n\n  if (node.type !== \"TSArrayType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTupleType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTupleType> | null,\n): node is t.TSTupleType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTupleType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSOptionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSOptionalType> | null,\n): node is t.TSOptionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSOptionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSRestType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSRestType> | null,\n): node is t.TSRestType {\n  if (!node) return false;\n\n  if (node.type !== \"TSRestType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamedTupleMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamedTupleMember> | null,\n): node is t.TSNamedTupleMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamedTupleMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnionType> | null,\n): node is t.TSUnionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntersectionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntersectionType> | null,\n): node is t.TSIntersectionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntersectionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConditionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConditionalType> | null,\n): node is t.TSConditionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConditionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInferType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInferType> | null,\n): node is t.TSInferType {\n  if (!node) return false;\n\n  if (node.type !== \"TSInferType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParenthesizedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParenthesizedType> | null,\n): node is t.TSParenthesizedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSParenthesizedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeOperator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeOperator> | null,\n): node is t.TSTypeOperator {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeOperator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexedAccessType> | null,\n): node is t.TSIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMappedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMappedType> | null,\n): node is t.TSMappedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSMappedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTemplateLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTemplateLiteralType> | null,\n): node is t.TSTemplateLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTemplateLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSLiteralType> | null,\n): node is t.TSLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExpressionWithTypeArguments(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExpressionWithTypeArguments> | null,\n): node is t.TSExpressionWithTypeArguments {\n  if (!node) return false;\n\n  if (node.type !== \"TSExpressionWithTypeArguments\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceDeclaration> | null,\n): node is t.TSInterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceBody> | null,\n): node is t.TSInterfaceBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAliasDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAliasDeclaration> | null,\n): node is t.TSTypeAliasDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAliasDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInstantiationExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInstantiationExpression> | null,\n): node is t.TSInstantiationExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSInstantiationExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAsExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAsExpression> | null,\n): node is t.TSAsExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSAsExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSatisfiesExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSatisfiesExpression> | null,\n): node is t.TSSatisfiesExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSSatisfiesExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAssertion(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAssertion> | null,\n): node is t.TSTypeAssertion {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAssertion\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumBody> | null,\n): node is t.TSEnumBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumDeclaration> | null,\n): node is t.TSEnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumMember> | null,\n): node is t.TSEnumMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleDeclaration> | null,\n): node is t.TSModuleDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleBlock> | null,\n): node is t.TSModuleBlock {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportType> | null,\n): node is t.TSImportType {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportEqualsDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportEqualsDeclaration> | null,\n): node is t.TSImportEqualsDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportEqualsDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExternalModuleReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExternalModuleReference> | null,\n): node is t.TSExternalModuleReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSExternalModuleReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNonNullExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNonNullExpression> | null,\n): node is t.TSNonNullExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSNonNullExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExportAssignment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExportAssignment> | null,\n): node is t.TSExportAssignment {\n  if (!node) return false;\n\n  if (node.type !== \"TSExportAssignment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamespaceExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamespaceExportDeclaration> | null,\n): node is t.TSNamespaceExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamespaceExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAnnotation> | null,\n): node is t.TSTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterInstantiation> | null,\n): node is t.TSTypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterDeclaration> | null,\n): node is t.TSTypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameter> | null,\n): node is t.TSTypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStandardized(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Standardized> | null,\n): node is t.Standardized {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"InterpreterDirective\":\n    case \"Directive\":\n    case \"DirectiveLiteral\":\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"CallExpression\":\n    case \"CatchClause\":\n    case \"ConditionalExpression\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"File\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"Program\":\n    case \"ObjectExpression\":\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"RestElement\":\n    case \"ReturnStatement\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"SwitchCase\":\n    case \"SwitchStatement\":\n    case \"ThisExpression\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"VariableDeclaration\":\n    case \"VariableDeclarator\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassBody\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ExportSpecifier\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"ClassMethod\":\n    case \"ObjectPattern\":\n    case \"SpreadElement\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateElement\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"ExportNamespaceSpecifier\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n    case \"StaticBlock\":\n    case \"ImportAttribute\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Identifier\":\n        case \"StringLiteral\":\n        case \"BlockStatement\":\n        case \"ClassBody\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Expression> | null,\n): node is t.Expression {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"CallExpression\":\n    case \"ConditionalExpression\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"ObjectExpression\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"ThisExpression\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"TypeCastExpression\":\n    case \"JSXElement\":\n    case \"JSXFragment\":\n    case \"BindExpression\":\n    case \"DoExpression\":\n    case \"RecordExpression\":\n    case \"TupleExpression\":\n    case \"DecimalLiteral\":\n    case \"ModuleExpression\":\n    case \"TopicReference\":\n    case \"PipelineTopicExpression\":\n    case \"PipelineBareFunction\":\n    case \"PipelinePrimaryTopicReference\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Expression\":\n        case \"Identifier\":\n        case \"StringLiteral\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinary(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Binary> | null,\n): node is t.Binary {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isScopable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Scopable> | null,\n): node is t.Scopable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockParent> | null,\n): node is t.BlockParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Block> | null,\n): node is t.Block {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"Program\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Statement> | null,\n): node is t.Statement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"ReturnStatement\":\n    case \"SwitchStatement\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"VariableDeclaration\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Statement\":\n        case \"Declaration\":\n        case \"BlockStatement\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTerminatorless(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Terminatorless> | null,\n): node is t.Terminatorless {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCompletionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CompletionStatement> | null,\n): node is t.CompletionStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditional(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Conditional> | null,\n): node is t.Conditional {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Loop> | null,\n): node is t.Loop {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"WhileStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.While> | null,\n): node is t.While {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"WhileStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionWrapper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionWrapper> | null,\n): node is t.ExpressionWrapper {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExpressionStatement\":\n    case \"ParenthesizedExpression\":\n    case \"TypeCastExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.For> | null,\n): node is t.For {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForXStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForXStatement> | null,\n): node is t.ForXStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Function> | null,\n): node is t.Function {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionParent> | null,\n): node is t.FunctionParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPureish(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pureish> | null,\n): node is t.Pureish {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"ArrowFunctionExpression\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Declaration> | null,\n): node is t.Declaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"VariableDeclaration\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Declaration\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPatternLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PatternLike> | null,\n): node is t.PatternLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLVal(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LVal> | null,\n): node is t.LVal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSParameterProperty\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEntityName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEntityName> | null,\n): node is t.TSEntityName {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"TSQualifiedName\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Identifier\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Literal> | null,\n): node is t.Literal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"TemplateLiteral\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImmutable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Immutable> | null,\n): node is t.Immutable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"BigIntLiteral\":\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXOpeningElement\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUserWhitespacable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UserWhitespacable> | null,\n): node is t.UserWhitespacable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Method> | null,\n): node is t.Method {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMember> | null,\n): node is t.ObjectMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Property> | null,\n): node is t.Property {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectProperty\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryLike> | null,\n): node is t.UnaryLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pattern> | null,\n): node is t.Pattern {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Pattern\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Class> | null,\n): node is t.Class {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportOrExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportOrExportDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDeclaration> | null,\n): node is t.ExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleSpecifier> | null,\n): node is t.ModuleSpecifier {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportSpecifier\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAccessor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Accessor> | null,\n): node is t.Accessor {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassAccessorProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Private> | null,\n): node is t.Private {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlow(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Flow> | null,\n): node is t.Flow {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ClassImplements\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"DeclaredPredicate\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"FunctionTypeParam\":\n    case \"GenericTypeAnnotation\":\n    case \"InferredPredicate\":\n    case \"InterfaceExtends\":\n    case \"InterfaceDeclaration\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n    case \"OpaqueType\":\n    case \"QualifiedTypeIdentifier\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"TypeAlias\":\n    case \"TypeAnnotation\":\n    case \"TypeCastExpression\":\n    case \"TypeParameter\":\n    case \"TypeParameterDeclaration\":\n    case \"TypeParameterInstantiation\":\n    case \"UnionTypeAnnotation\":\n    case \"Variance\":\n    case \"VoidTypeAnnotation\":\n    case \"EnumDeclaration\":\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowType> | null,\n): node is t.FlowType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"GenericTypeAnnotation\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"UnionTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowBaseAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowBaseAnnotation> | null,\n): node is t.FlowBaseAnnotation {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowDeclaration> | null,\n): node is t.FlowDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowPredicate> | null,\n): node is t.FlowPredicate {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclaredPredicate\":\n    case \"InferredPredicate\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBody> | null,\n): node is t.EnumBody {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumMember> | null,\n): node is t.EnumMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSX(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSX> | null,\n): node is t.JSX {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXEmptyExpression\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXIdentifier\":\n    case \"JSXMemberExpression\":\n    case \"JSXNamespacedName\":\n    case \"JSXOpeningElement\":\n    case \"JSXSpreadAttribute\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMiscellaneous(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Miscellaneous> | null,\n): node is t.Miscellaneous {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Noop\":\n    case \"Placeholder\":\n    case \"V8IntrinsicIdentifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeScript(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeScript> | null,\n): node is t.TypeScript {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSParameterProperty\":\n    case \"TSDeclareFunction\":\n    case \"TSDeclareMethod\":\n    case \"TSQualifiedName\":\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSNamedTupleMember\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSInterfaceBody\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSEnumBody\":\n    case \"TSEnumDeclaration\":\n    case \"TSEnumMember\":\n    case \"TSModuleDeclaration\":\n    case \"TSModuleBlock\":\n    case \"TSImportType\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExternalModuleReference\":\n    case \"TSNonNullExpression\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n    case \"TSTypeAnnotation\":\n    case \"TSTypeParameterInstantiation\":\n    case \"TSTypeParameterDeclaration\":\n    case \"TSTypeParameter\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeElement> | null,\n): node is t.TSTypeElement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSType> | null,\n): node is t.TSType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSImportType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBaseType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBaseType> | null,\n): node is t.TSBaseType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isNumericLiteral`\n */\nexport function isNumberLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteral> | null,\n): boolean {\n  deprecationWarning(\"isNumberLiteral\", \"isNumericLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRegExpLiteral`\n */\nexport function isRegexLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegexLiteral> | null,\n): boolean {\n  deprecationWarning(\"isRegexLiteral\", \"isRegExpLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"RegexLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRestElement`\n */\nexport function isRestProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestProperty> | null,\n): boolean {\n  deprecationWarning(\"isRestProperty\", \"isRestElement\");\n  if (!node) return false;\n\n  if (node.type !== \"RestProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isSpreadElement`\n */\nexport function isSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadProperty> | null,\n): boolean {\n  deprecationWarning(\"isSpreadProperty\", \"isSpreadElement\");\n  if (!node) return false;\n\n  if (node.type !== \"SpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isImportOrExportDeclaration`\n */\nexport function isModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  deprecationWarning(\"isModuleDeclaration\", \"isImportOrExportDeclaration\");\n  return isImportOrExportDeclaration(node, opts);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/shallowEqual.js":{"lineLengths":[13,0,46,13,3,31,41,37,27,40,19,5,3,14,1,0,40,0],"data":{"version":3,"names":["shallowEqual","actual","expected","keys","Object","key"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/utils/shallowEqual.ts"],"sourcesContent":["export default function shallowEqual<T extends object>(\n  actual: object,\n  expected: T,\n): actual is T {\n  const keys = Object.keys(expected) as (keyof T)[];\n\n  for (const key of keys) {\n    if (\n      // @ts-expect-error maybe we should check whether key exists first\n      actual[key] !== expected[key]\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"mappings":";;;;;;AAAe,SAASA,YAAYA,CAClCC,MAAc,EACdC,QAAW,EACE;EACb,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,QAAQ,CAAgB;EAEjD,KAAK,MAAMG,GAAG,IAAIF,IAAI,EAAE;IACtB,IAEEF,MAAM,CAACI,GAAG,CAAC,KAAKH,QAAQ,CAACG,GAAG,CAAC,EAC7B;MACA,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/deprecationWarning.js":{"lineLengths":[13,0,46,13,3,37,27,80,37,25,9,13,9,35,17,11,3,106,1,47,9,20,21,12,17,44,51,23,4,20,42,46,27,20,13,4,72,10,72,69,4,1,0,46,0],"data":{"version":3,"names":["warnings","Set","deprecationWarning","oldName","newName","prefix","cacheKey","has","add","internal","trace","captureShortStackTrace","console","warn","skip","length","stackTraceLimit","prepareStackTrace","Error","stackTrace","err","stack","shortStackTrace","slice","test","getFileName","map","frame","join"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/utils/deprecationWarning.ts"],"sourcesContent":["const warnings = new Set();\n\nexport default function deprecationWarning(\n  oldName: string,\n  newName: string,\n  prefix: string = \"\",\n  cacheKey: string = oldName,\n) {\n  if (warnings.has(cacheKey)) return;\n  warnings.add(cacheKey);\n\n  const { internal, trace } = captureShortStackTrace(1, 2);\n  if (internal) {\n    // If usage comes from an internal package, there is no point in warning because\n    // 1. The new version of the package will already use the new API\n    // 2. When the deprecation will become an error (in a future major version), users\n    //    will have to update every package anyway.\n    return;\n  }\n  console.warn(\n    `${prefix}\\`${oldName}\\` has been deprecated, please migrate to \\`${newName}\\`\\n${trace}`,\n  );\n}\n\nfunction captureShortStackTrace(skip: number, length: number) {\n  const { stackTraceLimit, prepareStackTrace } = Error;\n  let stackTrace: NodeJS.CallSite[];\n  // We add 1 to also take into account this function.\n  Error.stackTraceLimit = 1 + skip + length;\n  Error.prepareStackTrace = function (err, stack) {\n    stackTrace = stack;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  new Error().stack;\n  Error.stackTraceLimit = stackTraceLimit;\n  Error.prepareStackTrace = prepareStackTrace;\n\n  if (!stackTrace) return { internal: false, trace: \"\" };\n\n  const shortStackTrace = stackTrace.slice(1 + skip, 1 + skip + length);\n  return {\n    internal: /[\\\\/]@babel[\\\\/]/.test(shortStackTrace[1].getFileName()),\n    trace: shortStackTrace.map(frame => `    at ${frame}`).join(\"\\n\"),\n  };\n}\n"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEX,SAASC,kBAAkBA,CACxCC,OAAe,EACfC,OAAe,EACfC,MAAc,GAAG,EAAE,EACnBC,QAAgB,GAAGH,OAAO,EAC1B;EACA,IAAIH,QAAQ,CAACO,GAAG,CAACD,QAAQ,CAAC,EAAE;EAC5BN,QAAQ,CAACQ,GAAG,CAACF,QAAQ,CAAC;EAEtB,MAAM;IAAEG,QAAQ;IAAEC;EAAM,CAAC,GAAGC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC;EACxD,IAAIF,QAAQ,EAAE;IAKZ;EACF;EACAG,OAAO,CAACC,IAAI,CACV,GAAGR,MAAM,KAAKF,OAAO,+CAA+CC,OAAO,OAAOM,KAAK,EACzF,CAAC;AACH;AAEA,SAASC,sBAAsBA,CAACG,IAAY,EAAEC,MAAc,EAAE;EAC5D,MAAM;IAAEC,eAAe;IAAEC;EAAkB,CAAC,GAAGC,KAAK;EACpD,IAAIC,UAA6B;EAEjCD,KAAK,CAACF,eAAe,GAAG,CAAC,GAAGF,IAAI,GAAGC,MAAM;EACzCG,KAAK,CAACD,iBAAiB,GAAG,UAAUG,GAAG,EAAEC,KAAK,EAAE;IAC9CF,UAAU,GAAGE,KAAK;EACpB,CAAC;EAED,IAAIH,KAAK,CAAC,CAAC,CAACG,KAAK;EACjBH,KAAK,CAACF,eAAe,GAAGA,eAAe;EACvCE,KAAK,CAACD,iBAAiB,GAAGA,iBAAiB;EAE3C,IAAI,CAACE,UAAU,EAAE,OAAO;IAAEV,QAAQ,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAG,CAAC;EAEtD,MAAMY,eAAe,GAAGH,UAAU,CAACI,KAAK,CAAC,CAAC,GAAGT,IAAI,EAAE,CAAC,GAAGA,IAAI,GAAGC,MAAM,CAAC;EACrE,OAAO;IACLN,QAAQ,EAAE,kBAAkB,CAACe,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAAC;IACnEf,KAAK,EAAEY,eAAe,CAACI,GAAG,CAACC,KAAK,IAAI,UAAUA,KAAK,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI;EAClE,CAAC;AACH","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/react/isCompatTag.js":{"lineLengths":[13,0,46,13,3,30,31,45,1,0,39,0],"data":{"version":3,"names":["isCompatTag","tagName","test"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/react/isCompatTag.ts"],"sourcesContent":["export default function isCompatTag(tagName?: string): boolean {\n  // Must start with a lowercase ASCII letter\n  return !!tagName && /^[a-z]/.test(tagName);\n}\n"],"mappings":";;;;;;AAAe,SAASA,WAAWA,CAACC,OAAgB,EAAW;EAE7D,OAAO,CAAC,CAACA,OAAO,IAAI,QAAQ,CAACC,IAAI,CAACD,OAAO,CAAC;AAC5C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/react/buildChildren.js":{"lineLengths":[13,0,46,13,3,32,60,95,30,22,50,33,39,65,15,5,78,58,25,3,18,1,0,41,0],"data":{"version":3,"names":["_index","require","_cleanJSXElementLiteralChild","buildChildren","node","elements","i","children","length","child","isJSXText","cleanJSXElementLiteralChild","isJSXExpressionContainer","expression","isJSXEmptyExpression","push"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/react/buildChildren.ts"],"sourcesContent":["import {\n  isJSXText,\n  isJSXExpressionContainer,\n  isJSXEmptyExpression,\n} from \"../../validators/generated/index.ts\";\nimport cleanJSXElementLiteralChild from \"../../utils/react/cleanJSXElementLiteralChild.ts\";\nimport type * as t from \"../../index.ts\";\n\ntype ReturnedChild =\n  | t.JSXSpreadChild\n  | t.JSXElement\n  | t.JSXFragment\n  | t.Expression;\n\nexport default function buildChildren(\n  node: t.JSXElement | t.JSXFragment,\n): ReturnedChild[] {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child: any = node.children[i];\n\n    if (isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elements);\n      continue;\n    }\n\n    if (isJSXExpressionContainer(child)) child = child.expression;\n    if (isJSXEmptyExpression(child)) continue;\n\n    elements.push(child);\n  }\n\n  return elements;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAKA,IAAAC,4BAAA,GAAAD,OAAA;AASe,SAASE,aAAaA,CACnCC,IAAkC,EACjB;EACjB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,QAAQ,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC7C,IAAIG,KAAU,GAAGL,IAAI,CAACG,QAAQ,CAACD,CAAC,CAAC;IAEjC,IAAI,IAAAI,gBAAS,EAACD,KAAK,CAAC,EAAE;MACpB,IAAAE,oCAA2B,EAACF,KAAK,EAAEJ,QAAQ,CAAC;MAC5C;IACF;IAEA,IAAI,IAAAO,+BAAwB,EAACH,KAAK,CAAC,EAAEA,KAAK,GAAGA,KAAK,CAACI,UAAU;IAC7D,IAAI,IAAAC,2BAAoB,EAACL,KAAK,CAAC,EAAE;IAEjCJ,QAAQ,CAACU,IAAI,CAACN,KAAK,CAAC;EACtB;EAEA,OAAOJ,QAAQ;AACjB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js":{"lineLengths":[13,0,46,13,3,46,58,40,51,48,27,42,34,27,5,3,15,42,26,32,46,54,47,23,51,5,22,51,5,22,32,27,7,25,5,3,83,1,0,55,0],"data":{"version":3,"names":["_index","require","_index2","cleanJSXElementLiteralChild","child","args","lines","value","split","lastNonEmptyLine","i","length","exec","str","line","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","replace","push","inherits","stringLiteral"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/utils/react/cleanJSXElementLiteralChild.ts"],"sourcesContent":["import { stringLiteral } from \"../../builders/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\nimport { inherits } from \"../../index.ts\";\n\nexport default function cleanJSXElementLiteralChild(\n  child: t.JSXText,\n  args: Array<t.Node>,\n) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (/[^ \\t]/.exec(lines[i])) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^ +/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/ +$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(inherits(stringLiteral(str), child));\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAEe,SAASE,2BAA2BA,CACjDC,KAAgB,EAChBC,IAAmB,EACnB;EACA,MAAMC,KAAK,GAAGF,KAAK,CAACG,KAAK,CAACC,KAAK,CAAC,YAAY,CAAC;EAE7C,IAAIC,gBAAgB,GAAG,CAAC;EAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAI,QAAQ,CAACE,IAAI,CAACN,KAAK,CAACI,CAAC,CAAC,CAAC,EAAE;MAC3BD,gBAAgB,GAAGC,CAAC;IACtB;EACF;EAEA,IAAIG,GAAG,GAAG,EAAE;EAEZ,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAMI,IAAI,GAAGR,KAAK,CAACI,CAAC,CAAC;IAErB,MAAMK,WAAW,GAAGL,CAAC,KAAK,CAAC;IAC3B,MAAMM,UAAU,GAAGN,CAAC,KAAKJ,KAAK,CAACK,MAAM,GAAG,CAAC;IACzC,MAAMM,kBAAkB,GAAGP,CAAC,KAAKD,gBAAgB;IAGjD,IAAIS,WAAW,GAAGJ,IAAI,CAACK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IAG1C,IAAI,CAACJ,WAAW,EAAE;MAChBG,WAAW,GAAGA,WAAW,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC9C;IAGA,IAAI,CAACH,UAAU,EAAE;MACfE,WAAW,GAAGA,WAAW,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC9C;IAEA,IAAID,WAAW,EAAE;MACf,IAAI,CAACD,kBAAkB,EAAE;QACvBC,WAAW,IAAI,GAAG;MACpB;MAEAL,GAAG,IAAIK,WAAW;IACpB;EACF;EAEA,IAAIL,GAAG,EAAER,IAAI,CAACe,IAAI,CAAC,IAAAC,gBAAQ,EAAC,IAAAC,oBAAa,EAACT,GAAG,CAAC,EAAET,KAAK,CAAC,CAAC;AACzD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/index.js":{"lineLengths":[13,0,46,13,3,43,48,56,65,39,21,22,29,5,5,3,43,48,56,65,39,21,22,29,5,5,3,0,33,0],"data":{"version":3,"names":["_lowercase","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get","_uppercase"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/generated/index.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\nexport * from \"./lowercase.ts\";\nexport * from \"./uppercase.ts\";\n\n// Uppercase builders and AST types conflict with each other, which is\n// not allowed by TypeScript when using `export * from ...`\n// We instead explicity list the AST types here, so that:\n// - From a TypeScript perspective, the AST types win over the uppercase\n//   builders (which is the standard behavior for JS when a named\n//   re-export conflicts with a * re-export.)\n// - At runtime, this `export type` is removed, leaving only the uppercase\n//   builders behind (which are thus visible to JavaScript code).\n// This ensures compatibility with legacy code that uses the uppercase\n// builders, while allowing TypeScript users to use the lowercase builders\n// together with the AST types.\n\n// prettier-ignore\nexport type {\n  ArrayExpression, AssignmentExpression, BinaryExpression, InterpreterDirective, Directive, DirectiveLiteral, BlockStatement, BreakStatement, CallExpression, CatchClause, ConditionalExpression, ContinueStatement, DebuggerStatement, DoWhileStatement, EmptyStatement, ExpressionStatement, File, ForInStatement, ForStatement, FunctionDeclaration, FunctionExpression, Identifier, IfStatement, LabeledStatement, StringLiteral, NumericLiteral, NullLiteral, BooleanLiteral, RegExpLiteral, LogicalExpression, MemberExpression, NewExpression, Program, ObjectExpression, ObjectMethod, ObjectProperty, RestElement, ReturnStatement, SequenceExpression, ParenthesizedExpression, SwitchCase, SwitchStatement, ThisExpression, ThrowStatement, TryStatement, UnaryExpression, UpdateExpression, VariableDeclaration, VariableDeclarator, WhileStatement, WithStatement, AssignmentPattern, ArrayPattern, ArrowFunctionExpression, ClassBody, ClassExpression, ClassDeclaration, ExportAllDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ForOfStatement, ImportDeclaration, ImportDefaultSpecifier, ImportNamespaceSpecifier, ImportSpecifier, ImportExpression, MetaProperty, ClassMethod, ObjectPattern, SpreadElement, Super, TaggedTemplateExpression, TemplateElement, TemplateLiteral, YieldExpression, AwaitExpression, Import, BigIntLiteral, ExportNamespaceSpecifier, OptionalMemberExpression, OptionalCallExpression, ClassProperty, ClassAccessorProperty, ClassPrivateProperty, ClassPrivateMethod, PrivateName, StaticBlock, ImportAttribute, AnyTypeAnnotation, ArrayTypeAnnotation, BooleanTypeAnnotation, BooleanLiteralTypeAnnotation, NullLiteralTypeAnnotation, ClassImplements, DeclareClass, DeclareFunction, DeclareInterface, DeclareModule, DeclareModuleExports, DeclareTypeAlias, DeclareOpaqueType, DeclareVariable, DeclareExportDeclaration, DeclareExportAllDeclaration, DeclaredPredicate, ExistsTypeAnnotation, FunctionTypeAnnotation, FunctionTypeParam, GenericTypeAnnotation, InferredPredicate, InterfaceExtends, InterfaceDeclaration, InterfaceTypeAnnotation, IntersectionTypeAnnotation, MixedTypeAnnotation, EmptyTypeAnnotation, NullableTypeAnnotation, NumberLiteralTypeAnnotation, NumberTypeAnnotation, ObjectTypeAnnotation, ObjectTypeInternalSlot, ObjectTypeCallProperty, ObjectTypeIndexer, ObjectTypeProperty, ObjectTypeSpreadProperty, OpaqueType, QualifiedTypeIdentifier, StringLiteralTypeAnnotation, StringTypeAnnotation, SymbolTypeAnnotation, ThisTypeAnnotation, TupleTypeAnnotation, TypeofTypeAnnotation, TypeAlias, TypeAnnotation, TypeCastExpression, TypeParameter, TypeParameterDeclaration, TypeParameterInstantiation, UnionTypeAnnotation, Variance, VoidTypeAnnotation, EnumDeclaration, EnumBooleanBody, EnumNumberBody, EnumStringBody, EnumSymbolBody, EnumBooleanMember, EnumNumberMember, EnumStringMember, EnumDefaultedMember, IndexedAccessType, OptionalIndexedAccessType, JSXAttribute, JSXClosingElement, JSXElement, JSXEmptyExpression, JSXExpressionContainer, JSXSpreadChild, JSXIdentifier, JSXMemberExpression, JSXNamespacedName, JSXOpeningElement, JSXSpreadAttribute, JSXText, JSXFragment, JSXOpeningFragment, JSXClosingFragment, Noop, Placeholder, V8IntrinsicIdentifier, ArgumentPlaceholder, BindExpression, Decorator, DoExpression, ExportDefaultSpecifier, RecordExpression, TupleExpression, DecimalLiteral, ModuleExpression, TopicReference, PipelineTopicExpression, PipelineBareFunction, PipelinePrimaryTopicReference, TSParameterProperty, TSDeclareFunction, TSDeclareMethod, TSQualifiedName, TSCallSignatureDeclaration, TSConstructSignatureDeclaration, TSPropertySignature, TSMethodSignature, TSIndexSignature, TSAnyKeyword, TSBooleanKeyword, TSBigIntKeyword, TSIntrinsicKeyword, TSNeverKeyword, TSNullKeyword, TSNumberKeyword, TSObjectKeyword, TSStringKeyword, TSSymbolKeyword, TSUndefinedKeyword, TSUnknownKeyword, TSVoidKeyword, TSThisType, TSFunctionType, TSConstructorType, TSTypeReference, TSTypePredicate, TSTypeQuery, TSTypeLiteral, TSArrayType, TSTupleType, TSOptionalType, TSRestType, TSNamedTupleMember, TSUnionType, TSIntersectionType, TSConditionalType, TSInferType, TSParenthesizedType, TSTypeOperator, TSIndexedAccessType, TSMappedType, TSTemplateLiteralType, TSLiteralType, TSExpressionWithTypeArguments, TSInterfaceDeclaration, TSInterfaceBody, TSTypeAliasDeclaration, TSInstantiationExpression, TSAsExpression, TSSatisfiesExpression, TSTypeAssertion, TSEnumBody, TSEnumDeclaration, TSEnumMember, TSModuleDeclaration, TSModuleBlock, TSImportType, TSImportEqualsDeclaration, TSExternalModuleReference, TSNonNullExpression, TSExportAssignment, TSNamespaceExportDeclaration, TSTypeAnnotation, TSTypeParameterInstantiation, TSTypeParameterDeclaration, TSTypeParameter,\n  NumberLiteral, RegexLiteral, RestProperty, SpreadProperty\n} from \"../../ast-types/generated/index.ts\";\n\n// This will re-export all the type definitions that do not conflict with\n// uppercase builders, such as aliases.\nexport type * from \"../../ast-types/generated/index.ts\";\n"],"mappings":";;;;;AAKA,IAAAA,UAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAH,UAAA,EAAAI,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAL,UAAA,CAAAK,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAT,UAAA,CAAAK,GAAA;IAAA;EAAA;AAAA;AACA,IAAAK,UAAA,GAAAT,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAO,UAAA,EAAAN,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAK,UAAA,CAAAL,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAC,UAAA,CAAAL,GAAA;IAAA;EAAA;AAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/lowercase.js":{"lineLengths":[13,0,46,13,3,46,50,42,36,50,58,52,46,42,38,44,40,40,40,68,54,40,40,34,54,30,44,42,42,34,48,52,38,54,46,46,40,36,66,60,42,44,38,52,46,44,42,46,30,30,44,36,44,40,50,42,46,42,50,40,44,40,44,40,52,52,60,56,56,60,42,50,20,40,40,36,50,48,56,46,54,32,34,25,42,46,56,44,60,42,46,46,52,44,58,52,64,59,74,77,53,77,89,56,62,80,74,74,77,77,65,44,44,46,44,36,50,44,38,20,34,62,56,38,66,52,40,44,36,38,40,52,56,46,56,48,60,32,56,62,60,58,52,70,58,34,34,26,58,44,38,36,34,36,42,48,38,40,34,38,66,52,23,32,42,52,60,42,42,40,48,40,40,36,59,56,65,68,71,101,74,116,74,74,68,53,74,59,77,110,98,65,98,59,71,80,56,98,68,89,77,77,62,59,74,62,80,77,107,65,80,62,68,68,65,80,80,80,68,53,86,68,68,86,53,56,89,71,68,62,65,68,101,107,68,56,68,77,56,71,62,42,50,30,40,48,38,60,64,52,42,50,44,54,50,48,28,48,40,38,42,56,71,50,7,28,14,7,13,10,41,16,28,12,4,43,57,14,1,54,16,33,13,9,9,4,48,54,45,48,14,1,50,16,29,13,9,9,4,44,54,45,48,14,1,38,16,33,9,4,48,45,14,1,27,16,22,9,4,37,48,14,1,34,16,29,9,4,44,45,14,1,48,16,27,9,14,4,42,45,63,14,1,39,16,27,9,4,42,48,14,1,45,16,27,11,25,4,42,51,61,14,1,42,16,24,10,8,4,39,48,45,14,1,61,16,34,9,15,13,4,49,45,63,60,14,1,42,16,30,9,4,45,48,14,1,30,10,29,4,1,39,16,29,9,8,4,44,45,45,14,1,27,10,26,4,1,42,16,32,14,4,47,63,14,1,56,16,17,12,13,10,4,32,54,57,48,14,1,44,16,27,9,10,8,4,42,45,48,45,14,1,70,16,25,9,9,11,8,4,40,45,45,51,45,14,1,89,16,32,7,11,9,14,9,4,47,39,51,45,57,45,14,1,88,16,31,7,11,9,14,9,4,46,39,51,45,57,45,14,1,27,16,23,8,4,38,42,14,1,58,16,24,9,15,13,4,39,45,63,60,14,1,40,16,29,10,8,4,44,48,45,14,1,31,16,26,9,4,41,45,14,1,32,16,27,9,4,42,45,14,1,24,10,23,4,1,32,16,27,9,4,42,45,14,1,45,16,26,12,9,4,41,51,45,14,1,51,16,30,13,9,9,4,45,54,45,48,14,1,80,16,29,11,13,13,12,4,44,51,57,54,54,14,1,44,16,26,11,25,4,41,51,61,14,1,84,16,20,9,15,15,15,4,35,45,63,60,66,14,1,39,16,29,14,4,44,63,14,1,111,16,25,9,8,11,9,13,14,9,4,40,42,42,51,45,54,57,45,14,1,93,16,27,8,10,13,14,14,4,42,42,48,54,57,63,14,1,32,16,24,12,4,39,57,14,1,43,16,28,12,4,43,57,14,1,42,16,31,15,4,46,66,14,1,46,16,36,14,4,51,63,14,1,46,16,23,9,14,4,38,45,63,14,1,47,16,28,17,9,4,43,69,48,14,1,27,10,26,4,1,35,16,27,12,4,42,57,14,1,64,16,25,10,12,13,4,40,48,54,60,14,1,61,16,28,13,13,10,4,43,54,57,48,14,1,63,16,29,13,13,10,4,44,54,57,48,14,1,50,16,32,9,16,4,47,42,69,14,1,46,16,31,7,8,4,46,39,45,14,1,37,16,27,9,8,4,42,45,45,14,1,38,16,26,11,8,4,41,51,45,14,1,41,16,30,9,9,4,45,45,48,14,1,33,16,25,12,4,40,57,14,1,63,16,36,11,9,10,20,4,51,51,45,45,14,1,26,16,22,8,4,37,45,14,1,81,16,28,7,15,9,14,4,43,39,63,45,63,14,1,82,16,29,7,15,9,14,4,44,39,63,45,63,14,1,39,16,33,10,4,48,51,14,1,48,16,37,15,4,52,66,14,1,85,16,35,16,15,10,4,50,66,63,51,14,1,43,16,28,10,12,4,43,48,57,14,1,60,16,27,9,10,9,17,4,42,45,48,45,46,14,1,48,16,30,15,10,4,45,63,51,14,1,40,16,35,9,4,50,48,14,1,42,16,37,9,4,52,48,14,1,43,16,28,10,12,4,43,48,57,14,1,51,16,29,11,11,4,44,51,54,14,1,39,16,25,9,12,4,40,45,57,14,1,127,16,24,9,8,11,9,13,20,14,9,4,39,42,42,51,45,54,49,57,45,14,1,36,16,26,14,4,41,63,14,1,34,16,26,12,4,41,57,14,1,19,10,17,4,1,47,16,37,8,9,4,52,42,48,14,1,47,16,28,10,8,4,43,45,42,14,1,47,16,28,11,15,4,43,51,66,14,1,61,16,28,13,12,4,43,57,54,14,1,36,16,28,12,4,43,57,14,1,20,10,18,4,1,31,16,26,9,4,41,45,14,1,45,16,37,12,4,52,57,14,1,81,16,37,11,13,13,12,4,52,51,57,54,54,14,1,63,16,35,11,26,12,4,50,51,61,54,14,1,120,16,26,8,10,19,15,13,19,4,41,42,48,75,63,54,49,14,1,128,16,34,8,10,19,15,13,19,4,49,42,48,75,63,54,49,14,1,86,16,33,8,10,15,19,4,48,42,48,63,49,14,1,82,16,31,9,8,11,9,19,4,46,42,42,51,45,49,14,1,26,16,24,6,4,39,39,14,1,28,16,24,8,4,39,45,14,1,38,16,28,8,9,4,43,42,48,14,1,30,10,29,4,1,43,16,32,15,4,47,66,14,1,34,10,33,4,1,46,16,41,9,4,56,45,14,1,38,10,37,4,1,53,16,28,7,18,4,43,39,75,14,1,73,16,25,7,19,22,8,4,40,39,75,55,45,14,1,30,16,28,6,4,43,39,14,1,77,16,29,7,19,22,8,4,44,39,75,55,45,14,1,47,16,26,7,9,8,4,41,39,45,42,14,1,47,16,33,18,4,48,75,14,1,61,16,29,7,19,9,4,44,39,75,48,14,1,73,16,30,7,19,13,4,45,39,75,60,14,1,30,16,28,6,4,43,39,14,1,108,16,37,16,15,11,14,4,52,66,63,51,63,14,1,65,16,40,11,14,4,55,51,63,14,1,35,16,30,9,4,45,48,14,1,33,10,32,4,1,89,16,35,19,11,9,14,4,50,75,51,45,63,14,1,57,16,30,9,18,4,45,45,75,14,1,59,16,34,7,18,4,49,39,75,14,1,30,10,29,4,1,54,16,29,7,18,4,44,39,75,14,1,81,16,33,7,19,22,8,4,48,39,75,55,45,14,1,57,16,36,22,8,4,51,55,45,14,1,44,16,39,9,4,54,48,14,1,32,10,31,4,1,32,10,31,4,1,49,16,35,18,4,50,75,14,1,45,16,40,9,4,55,45,14,1,33,10,32,4,1,114,16,33,15,13,19,18,9,4,48,63,57,75,72,45,14,1,71,16,35,7,10,13,20,10,4,50,39,48,54,49,48,14,1,40,16,35,10,16,4,50,48,14,1,68,16,30,7,8,10,13,16,4,45,39,42,48,57,14,1,58,16,31,8,10,13,15,17,19,16,16,4,46,42,48,57,14,1,45,16,37,12,4,52,57,14,1,76,16,23,7,19,14,12,4,38,39,75,60,57,14,1,53,16,36,7,17,4,51,39,72,14,1,45,16,40,9,4,55,45,14,1,33,10,32,4,1,33,10,32,4,1,31,10,30,4,1,37,16,32,9,4,47,48,14,1,41,16,33,12,4,48,57,14,1,54,16,22,7,19,9,4,37,39,75,48,14,1,41,16,27,18,4,42,75,14,1,57,16,31,15,18,4,46,63,75,14,1,72,16,26,10,22,13,14,4,41,48,55,57,14,1,43,16,37,10,4,52,51,14,1,45,16,39,10,4,54,51,14,1,37,16,32,9,4,47,48,14,1,25,16,21,8,4,36,42,14,1,31,10,30,4,1,36,16,28,7,8,4,43,39,45,14,1,35,16,28,12,23,27,4,43,54,14,1,34,16,27,12,23,27,4,42,54,14,1,34,16,27,12,23,27,4,42,54,14,1,34,16,27,12,27,4,42,54,14,1,32,16,30,7,14,4,45,39,14,1,37,16,29,7,8,4,44,39,45,14,1,37,16,29,7,8,4,44,39,45,14,1,34,16,32,6,4,47,39,14,1,51,16,30,15,13,4,45,63,60,14,1,59,16,38,15,14,18,4,53,63,60,14,1,43,16,25,9,9,4,40,45,48,14,1,34,16,30,8,4,45,45,14,1,90,16,23,19,19,13,15,4,38,75,75,57,63,14,1,31,10,30,4,1,45,16,35,14,4,50,63,14,1,37,16,27,14,4,42,63,14,1,30,16,26,8,4,41,42,14,1,48,16,32,11,12,4,47,51,57,14,1,45,16,30,14,8,4,45,60,45,14,1,67,16,30,9,15,15,4,45,45,63,63,14,1,39,16,31,12,4,46,57,14,1,25,16,20,9,4,35,45,14,1,66,16,24,20,20,12,4,39,78,78,57,14,1,31,10,30,4,1,31,10,30,4,1,17,10,16,4,1,42,16,24,17,8,4,39,66,45,14,1,38,16,34,8,4,49,42,14,1,32,10,31,4,1,41,16,27,11,10,4,42,51,51,14,1,32,16,22,14,4,37,63,14,1,44,16,25,9,9,4,40,45,45,14,1,43,16,35,12,4,50,57,14,1,39,16,29,14,4,44,63,14,1,41,16,28,12,4,43,57,14,1,32,16,27,9,4,42,45,14,1,33,16,29,8,4,44,45,14,1,27,10,26,4,1,46,16,36,14,4,51,63,14,1,39,16,33,10,4,48,51,14,1,42,10,41,4,1,41,16,32,13,4,47,60,14,1,89,16,30,7,19,11,14,4,45,39,75,51,63,14,1,100,16,28,15,8,19,11,14,4,43,63,42,75,51,63,14,1,39,16,28,9,9,4,43,45,48,14,1,95,16,39,19,15,18,4,54,75,63,75,14,1,100,16,44,19,15,18,4,59,75,63,75,14,1,58,16,32,8,18,4,47,42,75,14,1,91,16,30,8,19,15,19,14,4,45,42,75,63,75,14,1,62,16,29,15,18,4,44,63,75,14,1,25,10,24,4,1,29,10,28,4,1,28,10,27,4,1,31,10,30,4,1,27,10,26,4,1,26,10,25,4,1,28,10,27,4,1,28,10,27,4,1,28,10,27,4,1,28,10,27,4,1,31,10,30,4,1,29,10,28,4,1,26,10,25,4,1,23,10,22,4,1,83,16,27,19,15,18,4,42,75,63,75,14,1,86,16,30,19,15,18,4,45,75,63,75,14,1,59,16,28,13,18,4,43,57,75,14,1,80,16,28,18,19,11,4,43,72,75,51,14,1,55,16,24,13,18,4,39,57,75,14,1,33,16,26,11,4,41,54,14,1,35,16,24,15,4,39,66,14,1,36,16,24,16,4,39,69,14,1,41,16,27,18,4,42,75,14,1,37,16,23,18,4,38,75,14,1,67,16,31,10,16,12,4,46,48,66,54,14,1,29,16,24,9,4,39,48,14,1,36,16,31,9,4,46,48,14,1,73,16,30,14,16,13,13,4,45,60,66,57,60,14,1,37,16,24,17,4,39,72,14,1,46,16,32,18,4,47,75,14,1,41,16,27,19,18,4,42,75,14,1,53,16,32,15,13,4,47,63,60,14,1,78,16,25,18,19,12,4,40,72,75,57,14,1,47,16,34,11,9,4,49,51,48,14,1,33,16,26,11,4,41,54,14,1,75,16,42,15,18,4,57,63,75,14,1,83,16,35,7,19,22,8,4,50,39,75,55,45,14,1,32,16,28,8,4,43,45,14,1,76,16,35,7,19,18,4,50,39,75,75,14,1,71,16,38,15,18,4,53,63,75,14,1,53,16,27,15,18,4,42,63,75,14,1,60,16,34,15,18,4,49,63,75,14,1,54,16,28,19,14,4,43,75,63,14,1,30,16,23,11,4,38,54,14,1,41,16,30,7,11,4,45,39,54,14,1,47,16,25,7,15,4,40,39,66,14,1,40,16,32,7,9,14,4,47,39,45,14,1,30,16,26,8,4,41,45,14,1,74,16,25,13,14,18,4,40,57,60,75,14,1,57,16,38,7,20,18,4,53,39,78,14,1,48,16,38,14,4,53,63,14,1,42,16,32,14,4,47,63,14,1,41,16,31,14,4,46,63,14,1,43,16,41,6,4,56,39,14,1,43,16,29,18,4,44,75,14,1,47,16,41,10,4,56,51,14,1,45,16,39,10,4,54,51,14,1,68,16,28,15,22,8,4,43,63,55,42,14,1,31,88,31,1,44,86,39,1,33,84,31,1,35,88,33,1,0,37,0],"data":{"version":3,"names":["_validate","require","_deprecationWarning","utils","validateInternal","validate","NODE_FIELDS","arrayExpression","elements","node","type","defs","ArrayExpression","assignmentExpression","operator","left","right","AssignmentExpression","binaryExpression","BinaryExpression","interpreterDirective","value","InterpreterDirective","directive","Directive","directiveLiteral","DirectiveLiteral","blockStatement","body","directives","BlockStatement","breakStatement","label","BreakStatement","callExpression","callee","_arguments","arguments","CallExpression","catchClause","param","CatchClause","conditionalExpression","test","consequent","alternate","ConditionalExpression","continueStatement","ContinueStatement","debuggerStatement","doWhileStatement","DoWhileStatement","emptyStatement","expressionStatement","expression","ExpressionStatement","file","program","comments","tokens","File","forInStatement","ForInStatement","forStatement","init","update","ForStatement","functionDeclaration","id","params","generator","async","FunctionDeclaration","functionExpression","FunctionExpression","identifier","name","Identifier","ifStatement","IfStatement","labeledStatement","LabeledStatement","stringLiteral","StringLiteral","numericLiteral","NumericLiteral","nullLiteral","booleanLiteral","BooleanLiteral","regExpLiteral","pattern","flags","RegExpLiteral","logicalExpression","LogicalExpression","memberExpression","object","property","computed","optional","MemberExpression","newExpression","NewExpression","sourceType","interpreter","Program","objectExpression","properties","ObjectExpression","objectMethod","kind","key","ObjectMethod","objectProperty","shorthand","decorators","ObjectProperty","restElement","argument","RestElement","returnStatement","ReturnStatement","sequenceExpression","expressions","SequenceExpression","parenthesizedExpression","ParenthesizedExpression","switchCase","SwitchCase","switchStatement","discriminant","cases","SwitchStatement","thisExpression","throwStatement","ThrowStatement","tryStatement","block","handler","finalizer","TryStatement","unaryExpression","prefix","UnaryExpression","updateExpression","UpdateExpression","variableDeclaration","declarations","VariableDeclaration","variableDeclarator","VariableDeclarator","whileStatement","WhileStatement","withStatement","WithStatement","assignmentPattern","AssignmentPattern","arrayPattern","ArrayPattern","arrowFunctionExpression","ArrowFunctionExpression","classBody","ClassBody","classExpression","superClass","ClassExpression","classDeclaration","ClassDeclaration","exportAllDeclaration","source","ExportAllDeclaration","exportDefaultDeclaration","declaration","ExportDefaultDeclaration","exportNamedDeclaration","specifiers","ExportNamedDeclaration","exportSpecifier","local","exported","ExportSpecifier","forOfStatement","_await","await","ForOfStatement","importDeclaration","ImportDeclaration","importDefaultSpecifier","ImportDefaultSpecifier","importNamespaceSpecifier","ImportNamespaceSpecifier","importSpecifier","imported","ImportSpecifier","importExpression","options","ImportExpression","metaProperty","meta","MetaProperty","classMethod","_static","static","ClassMethod","objectPattern","ObjectPattern","spreadElement","SpreadElement","_super","taggedTemplateExpression","tag","quasi","TaggedTemplateExpression","templateElement","tail","TemplateElement","templateLiteral","quasis","TemplateLiteral","yieldExpression","delegate","YieldExpression","awaitExpression","AwaitExpression","_import","bigIntLiteral","BigIntLiteral","exportNamespaceSpecifier","ExportNamespaceSpecifier","optionalMemberExpression","OptionalMemberExpression","optionalCallExpression","OptionalCallExpression","classProperty","typeAnnotation","ClassProperty","classAccessorProperty","ClassAccessorProperty","classPrivateProperty","ClassPrivateProperty","classPrivateMethod","ClassPrivateMethod","privateName","PrivateName","staticBlock","StaticBlock","importAttribute","ImportAttribute","anyTypeAnnotation","arrayTypeAnnotation","elementType","ArrayTypeAnnotation","booleanTypeAnnotation","booleanLiteralTypeAnnotation","BooleanLiteralTypeAnnotation","nullLiteralTypeAnnotation","classImplements","typeParameters","ClassImplements","declareClass","_extends","extends","DeclareClass","declareFunction","DeclareFunction","declareInterface","DeclareInterface","declareModule","DeclareModule","declareModuleExports","DeclareModuleExports","declareTypeAlias","DeclareTypeAlias","declareOpaqueType","supertype","DeclareOpaqueType","declareVariable","DeclareVariable","declareExportDeclaration","attributes","DeclareExportDeclaration","declareExportAllDeclaration","DeclareExportAllDeclaration","declaredPredicate","DeclaredPredicate","existsTypeAnnotation","functionTypeAnnotation","rest","returnType","FunctionTypeAnnotation","functionTypeParam","FunctionTypeParam","genericTypeAnnotation","GenericTypeAnnotation","inferredPredicate","interfaceExtends","InterfaceExtends","interfaceDeclaration","InterfaceDeclaration","interfaceTypeAnnotation","InterfaceTypeAnnotation","intersectionTypeAnnotation","types","IntersectionTypeAnnotation","mixedTypeAnnotation","emptyTypeAnnotation","nullableTypeAnnotation","NullableTypeAnnotation","numberLiteralTypeAnnotation","NumberLiteralTypeAnnotation","numberTypeAnnotation","objectTypeAnnotation","indexers","callProperties","internalSlots","exact","ObjectTypeAnnotation","objectTypeInternalSlot","method","ObjectTypeInternalSlot","objectTypeCallProperty","ObjectTypeCallProperty","objectTypeIndexer","variance","ObjectTypeIndexer","objectTypeProperty","proto","ObjectTypeProperty","objectTypeSpreadProperty","ObjectTypeSpreadProperty","opaqueType","impltype","OpaqueType","qualifiedTypeIdentifier","qualification","QualifiedTypeIdentifier","stringLiteralTypeAnnotation","StringLiteralTypeAnnotation","stringTypeAnnotation","symbolTypeAnnotation","thisTypeAnnotation","tupleTypeAnnotation","TupleTypeAnnotation","typeofTypeAnnotation","TypeofTypeAnnotation","typeAlias","TypeAlias","TypeAnnotation","typeCastExpression","TypeCastExpression","typeParameter","bound","_default","default","TypeParameter","typeParameterDeclaration","TypeParameterDeclaration","typeParameterInstantiation","TypeParameterInstantiation","unionTypeAnnotation","UnionTypeAnnotation","Variance","voidTypeAnnotation","enumDeclaration","EnumDeclaration","enumBooleanBody","members","explicitType","hasUnknownMembers","EnumBooleanBody","enumNumberBody","EnumNumberBody","enumStringBody","EnumStringBody","enumSymbolBody","EnumSymbolBody","enumBooleanMember","EnumBooleanMember","enumNumberMember","EnumNumberMember","enumStringMember","EnumStringMember","enumDefaultedMember","EnumDefaultedMember","indexedAccessType","objectType","indexType","IndexedAccessType","optionalIndexedAccessType","OptionalIndexedAccessType","jsxAttribute","JSXAttribute","jsxClosingElement","JSXClosingElement","jsxElement","openingElement","closingElement","children","selfClosing","JSXElement","jsxEmptyExpression","jsxExpressionContainer","JSXExpressionContainer","jsxSpreadChild","JSXSpreadChild","jsxIdentifier","JSXIdentifier","jsxMemberExpression","JSXMemberExpression","jsxNamespacedName","namespace","JSXNamespacedName","jsxOpeningElement","JSXOpeningElement","jsxSpreadAttribute","JSXSpreadAttribute","jsxText","JSXText","jsxFragment","openingFragment","closingFragment","JSXFragment","jsxOpeningFragment","jsxClosingFragment","noop","placeholder","expectedNode","Placeholder","v8IntrinsicIdentifier","V8IntrinsicIdentifier","argumentPlaceholder","bindExpression","BindExpression","decorator","Decorator","doExpression","DoExpression","exportDefaultSpecifier","ExportDefaultSpecifier","recordExpression","RecordExpression","tupleExpression","TupleExpression","decimalLiteral","DecimalLiteral","moduleExpression","ModuleExpression","topicReference","pipelineTopicExpression","PipelineTopicExpression","pipelineBareFunction","PipelineBareFunction","pipelinePrimaryTopicReference","tsParameterProperty","parameter","TSParameterProperty","tsDeclareFunction","TSDeclareFunction","tsDeclareMethod","TSDeclareMethod","tsQualifiedName","TSQualifiedName","tsCallSignatureDeclaration","parameters","TSCallSignatureDeclaration","tsConstructSignatureDeclaration","TSConstructSignatureDeclaration","tsPropertySignature","TSPropertySignature","tsMethodSignature","TSMethodSignature","tsIndexSignature","TSIndexSignature","tsAnyKeyword","tsBooleanKeyword","tsBigIntKeyword","tsIntrinsicKeyword","tsNeverKeyword","tsNullKeyword","tsNumberKeyword","tsObjectKeyword","tsStringKeyword","tsSymbolKeyword","tsUndefinedKeyword","tsUnknownKeyword","tsVoidKeyword","tsThisType","tsFunctionType","TSFunctionType","tsConstructorType","TSConstructorType","tsTypeReference","typeName","TSTypeReference","tsTypePredicate","parameterName","asserts","TSTypePredicate","tsTypeQuery","exprName","TSTypeQuery","tsTypeLiteral","TSTypeLiteral","tsArrayType","TSArrayType","tsTupleType","elementTypes","TSTupleType","tsOptionalType","TSOptionalType","tsRestType","TSRestType","tsNamedTupleMember","TSNamedTupleMember","tsUnionType","TSUnionType","tsIntersectionType","TSIntersectionType","tsConditionalType","checkType","extendsType","trueType","falseType","TSConditionalType","tsInferType","TSInferType","tsParenthesizedType","TSParenthesizedType","tsTypeOperator","TSTypeOperator","tsIndexedAccessType","TSIndexedAccessType","tsMappedType","nameType","TSMappedType","tsTemplateLiteralType","TSTemplateLiteralType","tsLiteralType","literal","TSLiteralType","tsExpressionWithTypeArguments","TSExpressionWithTypeArguments","tsInterfaceDeclaration","TSInterfaceDeclaration","tsInterfaceBody","TSInterfaceBody","tsTypeAliasDeclaration","TSTypeAliasDeclaration","tsInstantiationExpression","TSInstantiationExpression","tsAsExpression","TSAsExpression","tsSatisfiesExpression","TSSatisfiesExpression","tsTypeAssertion","TSTypeAssertion","tsEnumBody","TSEnumBody","tsEnumDeclaration","TSEnumDeclaration","tsEnumMember","initializer","TSEnumMember","tsModuleDeclaration","TSModuleDeclaration","tsModuleBlock","TSModuleBlock","tsImportType","qualifier","TSImportType","tsImportEqualsDeclaration","moduleReference","isExport","TSImportEqualsDeclaration","tsExternalModuleReference","TSExternalModuleReference","tsNonNullExpression","TSNonNullExpression","tsExportAssignment","TSExportAssignment","tsNamespaceExportDeclaration","TSNamespaceExportDeclaration","tsTypeAnnotation","TSTypeAnnotation","tsTypeParameterInstantiation","TSTypeParameterInstantiation","tsTypeParameterDeclaration","TSTypeParameterDeclaration","tsTypeParameter","constraint","TSTypeParameter","NumberLiteral","deprecationWarning","RegexLiteral","RestProperty","SpreadProperty"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/generated/lowercase.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport * as _validate from \"../../validators/validate.ts\";\nimport type * as t from \"../../ast-types/generated/index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\nimport * as utils from \"../../definitions/utils.ts\";\n\nconst { validateInternal: validate } = _validate;\nconst { NODE_FIELDS } = utils;\n\nexport function arrayExpression(\n  elements: Array<null | t.Expression | t.SpreadElement> = [],\n): t.ArrayExpression {\n  const node: t.ArrayExpression = {\n    type: \"ArrayExpression\",\n    elements,\n  };\n  const defs = NODE_FIELDS.ArrayExpression;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function assignmentExpression(\n  operator: string,\n  left: t.LVal | t.OptionalMemberExpression,\n  right: t.Expression,\n): t.AssignmentExpression {\n  const node: t.AssignmentExpression = {\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.AssignmentExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function binaryExpression(\n  operator:\n    | \"+\"\n    | \"-\"\n    | \"/\"\n    | \"%\"\n    | \"*\"\n    | \"**\"\n    | \"&\"\n    | \"|\"\n    | \">>\"\n    | \">>>\"\n    | \"<<\"\n    | \"^\"\n    | \"==\"\n    | \"===\"\n    | \"!=\"\n    | \"!==\"\n    | \"in\"\n    | \"instanceof\"\n    | \">\"\n    | \"<\"\n    | \">=\"\n    | \"<=\"\n    | \"|>\",\n  left: t.Expression | t.PrivateName,\n  right: t.Expression,\n): t.BinaryExpression {\n  const node: t.BinaryExpression = {\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.BinaryExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function interpreterDirective(value: string): t.InterpreterDirective {\n  const node: t.InterpreterDirective = {\n    type: \"InterpreterDirective\",\n    value,\n  };\n  const defs = NODE_FIELDS.InterpreterDirective;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function directive(value: t.DirectiveLiteral): t.Directive {\n  const node: t.Directive = {\n    type: \"Directive\",\n    value,\n  };\n  const defs = NODE_FIELDS.Directive;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function directiveLiteral(value: string): t.DirectiveLiteral {\n  const node: t.DirectiveLiteral = {\n    type: \"DirectiveLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.DirectiveLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function blockStatement(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n): t.BlockStatement {\n  const node: t.BlockStatement = {\n    type: \"BlockStatement\",\n    body,\n    directives,\n  };\n  const defs = NODE_FIELDS.BlockStatement;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.directives, node, \"directives\", directives, 1);\n  return node;\n}\nexport function breakStatement(\n  label: t.Identifier | null = null,\n): t.BreakStatement {\n  const node: t.BreakStatement = {\n    type: \"BreakStatement\",\n    label,\n  };\n  const defs = NODE_FIELDS.BreakStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  return node;\n}\nexport function callExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n): t.CallExpression {\n  const node: t.CallExpression = {\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments,\n  };\n  const defs = NODE_FIELDS.CallExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  return node;\n}\nexport function catchClause(\n  param:\n    | t.Identifier\n    | t.ArrayPattern\n    | t.ObjectPattern\n    | null\n    | undefined = null,\n  body: t.BlockStatement,\n): t.CatchClause {\n  const node: t.CatchClause = {\n    type: \"CatchClause\",\n    param,\n    body,\n  };\n  const defs = NODE_FIELDS.CatchClause;\n  validate(defs.param, node, \"param\", param, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function conditionalExpression(\n  test: t.Expression,\n  consequent: t.Expression,\n  alternate: t.Expression,\n): t.ConditionalExpression {\n  const node: t.ConditionalExpression = {\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate,\n  };\n  const defs = NODE_FIELDS.ConditionalExpression;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  validate(defs.alternate, node, \"alternate\", alternate, 1);\n  return node;\n}\nexport function continueStatement(\n  label: t.Identifier | null = null,\n): t.ContinueStatement {\n  const node: t.ContinueStatement = {\n    type: \"ContinueStatement\",\n    label,\n  };\n  const defs = NODE_FIELDS.ContinueStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  return node;\n}\nexport function debuggerStatement(): t.DebuggerStatement {\n  return {\n    type: \"DebuggerStatement\",\n  };\n}\nexport function doWhileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.DoWhileStatement {\n  const node: t.DoWhileStatement = {\n    type: \"DoWhileStatement\",\n    test,\n    body,\n  };\n  const defs = NODE_FIELDS.DoWhileStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function emptyStatement(): t.EmptyStatement {\n  return {\n    type: \"EmptyStatement\",\n  };\n}\nexport function expressionStatement(\n  expression: t.Expression,\n): t.ExpressionStatement {\n  const node: t.ExpressionStatement = {\n    type: \"ExpressionStatement\",\n    expression,\n  };\n  const defs = NODE_FIELDS.ExpressionStatement;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function file(\n  program: t.Program,\n  comments: Array<t.CommentBlock | t.CommentLine> | null = null,\n  tokens: Array<any> | null = null,\n): t.File {\n  const node: t.File = {\n    type: \"File\",\n    program,\n    comments,\n    tokens,\n  };\n  const defs = NODE_FIELDS.File;\n  validate(defs.program, node, \"program\", program, 1);\n  validate(defs.comments, node, \"comments\", comments, 1);\n  validate(defs.tokens, node, \"tokens\", tokens);\n  return node;\n}\nexport function forInStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n): t.ForInStatement {\n  const node: t.ForInStatement = {\n    type: \"ForInStatement\",\n    left,\n    right,\n    body,\n  };\n  const defs = NODE_FIELDS.ForInStatement;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function forStatement(\n  init: t.VariableDeclaration | t.Expression | null | undefined = null,\n  test: t.Expression | null | undefined = null,\n  update: t.Expression | null | undefined = null,\n  body: t.Statement,\n): t.ForStatement {\n  const node: t.ForStatement = {\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body,\n  };\n  const defs = NODE_FIELDS.ForStatement;\n  validate(defs.init, node, \"init\", init, 1);\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.update, node, \"update\", update, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function functionDeclaration(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionDeclaration {\n  const node: t.FunctionDeclaration = {\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.FunctionDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function functionExpression(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionExpression {\n  const node: t.FunctionExpression = {\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.FunctionExpression;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function identifier(name: string): t.Identifier {\n  const node: t.Identifier = {\n    type: \"Identifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.Identifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport function ifStatement(\n  test: t.Expression,\n  consequent: t.Statement,\n  alternate: t.Statement | null = null,\n): t.IfStatement {\n  const node: t.IfStatement = {\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate,\n  };\n  const defs = NODE_FIELDS.IfStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  validate(defs.alternate, node, \"alternate\", alternate, 1);\n  return node;\n}\nexport function labeledStatement(\n  label: t.Identifier,\n  body: t.Statement,\n): t.LabeledStatement {\n  const node: t.LabeledStatement = {\n    type: \"LabeledStatement\",\n    label,\n    body,\n  };\n  const defs = NODE_FIELDS.LabeledStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function stringLiteral(value: string): t.StringLiteral {\n  const node: t.StringLiteral = {\n    type: \"StringLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.StringLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function numericLiteral(value: number): t.NumericLiteral {\n  const node: t.NumericLiteral = {\n    type: \"NumericLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.NumericLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function nullLiteral(): t.NullLiteral {\n  return {\n    type: \"NullLiteral\",\n  };\n}\nexport function booleanLiteral(value: boolean): t.BooleanLiteral {\n  const node: t.BooleanLiteral = {\n    type: \"BooleanLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.BooleanLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function regExpLiteral(\n  pattern: string,\n  flags: string = \"\",\n): t.RegExpLiteral {\n  const node: t.RegExpLiteral = {\n    type: \"RegExpLiteral\",\n    pattern,\n    flags,\n  };\n  const defs = NODE_FIELDS.RegExpLiteral;\n  validate(defs.pattern, node, \"pattern\", pattern);\n  validate(defs.flags, node, \"flags\", flags);\n  return node;\n}\nexport function logicalExpression(\n  operator: \"||\" | \"&&\" | \"??\",\n  left: t.Expression,\n  right: t.Expression,\n): t.LogicalExpression {\n  const node: t.LogicalExpression = {\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.LogicalExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function memberExpression(\n  object: t.Expression | t.Super,\n  property: t.Expression | t.Identifier | t.PrivateName,\n  computed: boolean = false,\n  optional: boolean | null = null,\n): t.MemberExpression {\n  const node: t.MemberExpression = {\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  };\n  const defs = NODE_FIELDS.MemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function newExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n): t.NewExpression {\n  const node: t.NewExpression = {\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments,\n  };\n  const defs = NODE_FIELDS.NewExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  return node;\n}\nexport function program(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n  sourceType: \"script\" | \"module\" = \"script\",\n  interpreter: t.InterpreterDirective | null = null,\n): t.Program {\n  const node: t.Program = {\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n  };\n  const defs = NODE_FIELDS.Program;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.directives, node, \"directives\", directives, 1);\n  validate(defs.sourceType, node, \"sourceType\", sourceType);\n  validate(defs.interpreter, node, \"interpreter\", interpreter, 1);\n  return node;\n}\nexport function objectExpression(\n  properties: Array<t.ObjectMethod | t.ObjectProperty | t.SpreadElement>,\n): t.ObjectExpression {\n  const node: t.ObjectExpression = {\n    type: \"ObjectExpression\",\n    properties,\n  };\n  const defs = NODE_FIELDS.ObjectExpression;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function objectMethod(\n  kind: \"method\" | \"get\" | \"set\" | undefined = \"method\",\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ObjectMethod {\n  const node: t.ObjectMethod = {\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.ObjectMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function objectProperty(\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.DecimalLiteral\n    | t.PrivateName,\n  value: t.Expression | t.PatternLike,\n  computed: boolean = false,\n  shorthand: boolean = false,\n  decorators: Array<t.Decorator> | null = null,\n): t.ObjectProperty {\n  const node: t.ObjectProperty = {\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ObjectProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.shorthand, node, \"shorthand\", shorthand);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function restElement(argument: t.LVal): t.RestElement {\n  const node: t.RestElement = {\n    type: \"RestElement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.RestElement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function returnStatement(\n  argument: t.Expression | null = null,\n): t.ReturnStatement {\n  const node: t.ReturnStatement = {\n    type: \"ReturnStatement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ReturnStatement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function sequenceExpression(\n  expressions: Array<t.Expression>,\n): t.SequenceExpression {\n  const node: t.SequenceExpression = {\n    type: \"SequenceExpression\",\n    expressions,\n  };\n  const defs = NODE_FIELDS.SequenceExpression;\n  validate(defs.expressions, node, \"expressions\", expressions, 1);\n  return node;\n}\nexport function parenthesizedExpression(\n  expression: t.Expression,\n): t.ParenthesizedExpression {\n  const node: t.ParenthesizedExpression = {\n    type: \"ParenthesizedExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.ParenthesizedExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function switchCase(\n  test: t.Expression | null | undefined = null,\n  consequent: Array<t.Statement>,\n): t.SwitchCase {\n  const node: t.SwitchCase = {\n    type: \"SwitchCase\",\n    test,\n    consequent,\n  };\n  const defs = NODE_FIELDS.SwitchCase;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  return node;\n}\nexport function switchStatement(\n  discriminant: t.Expression,\n  cases: Array<t.SwitchCase>,\n): t.SwitchStatement {\n  const node: t.SwitchStatement = {\n    type: \"SwitchStatement\",\n    discriminant,\n    cases,\n  };\n  const defs = NODE_FIELDS.SwitchStatement;\n  validate(defs.discriminant, node, \"discriminant\", discriminant, 1);\n  validate(defs.cases, node, \"cases\", cases, 1);\n  return node;\n}\nexport function thisExpression(): t.ThisExpression {\n  return {\n    type: \"ThisExpression\",\n  };\n}\nexport function throwStatement(argument: t.Expression): t.ThrowStatement {\n  const node: t.ThrowStatement = {\n    type: \"ThrowStatement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ThrowStatement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function tryStatement(\n  block: t.BlockStatement,\n  handler: t.CatchClause | null = null,\n  finalizer: t.BlockStatement | null = null,\n): t.TryStatement {\n  const node: t.TryStatement = {\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer,\n  };\n  const defs = NODE_FIELDS.TryStatement;\n  validate(defs.block, node, \"block\", block, 1);\n  validate(defs.handler, node, \"handler\", handler, 1);\n  validate(defs.finalizer, node, \"finalizer\", finalizer, 1);\n  return node;\n}\nexport function unaryExpression(\n  operator: \"void\" | \"throw\" | \"delete\" | \"!\" | \"+\" | \"-\" | \"~\" | \"typeof\",\n  argument: t.Expression,\n  prefix: boolean = true,\n): t.UnaryExpression {\n  const node: t.UnaryExpression = {\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix,\n  };\n  const defs = NODE_FIELDS.UnaryExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.prefix, node, \"prefix\", prefix);\n  return node;\n}\nexport function updateExpression(\n  operator: \"++\" | \"--\",\n  argument: t.Expression,\n  prefix: boolean = false,\n): t.UpdateExpression {\n  const node: t.UpdateExpression = {\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix,\n  };\n  const defs = NODE_FIELDS.UpdateExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.prefix, node, \"prefix\", prefix);\n  return node;\n}\nexport function variableDeclaration(\n  kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  declarations: Array<t.VariableDeclarator>,\n): t.VariableDeclaration {\n  const node: t.VariableDeclaration = {\n    type: \"VariableDeclaration\",\n    kind,\n    declarations,\n  };\n  const defs = NODE_FIELDS.VariableDeclaration;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.declarations, node, \"declarations\", declarations, 1);\n  return node;\n}\nexport function variableDeclarator(\n  id: t.LVal,\n  init: t.Expression | null = null,\n): t.VariableDeclarator {\n  const node: t.VariableDeclarator = {\n    type: \"VariableDeclarator\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.VariableDeclarator;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function whileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.WhileStatement {\n  const node: t.WhileStatement = {\n    type: \"WhileStatement\",\n    test,\n    body,\n  };\n  const defs = NODE_FIELDS.WhileStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function withStatement(\n  object: t.Expression,\n  body: t.Statement,\n): t.WithStatement {\n  const node: t.WithStatement = {\n    type: \"WithStatement\",\n    object,\n    body,\n  };\n  const defs = NODE_FIELDS.WithStatement;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function assignmentPattern(\n  left:\n    | t.Identifier\n    | t.ObjectPattern\n    | t.ArrayPattern\n    | t.MemberExpression\n    | t.TSAsExpression\n    | t.TSSatisfiesExpression\n    | t.TSTypeAssertion\n    | t.TSNonNullExpression,\n  right: t.Expression,\n): t.AssignmentPattern {\n  const node: t.AssignmentPattern = {\n    type: \"AssignmentPattern\",\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.AssignmentPattern;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function arrayPattern(\n  elements: Array<null | t.PatternLike | t.LVal>,\n): t.ArrayPattern {\n  const node: t.ArrayPattern = {\n    type: \"ArrayPattern\",\n    elements,\n  };\n  const defs = NODE_FIELDS.ArrayPattern;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function arrowFunctionExpression(\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement | t.Expression,\n  async: boolean = false,\n): t.ArrowFunctionExpression {\n  const node: t.ArrowFunctionExpression = {\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null,\n  };\n  const defs = NODE_FIELDS.ArrowFunctionExpression;\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function classBody(\n  body: Array<\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty\n    | t.TSDeclareMethod\n    | t.TSIndexSignature\n    | t.StaticBlock\n  >,\n): t.ClassBody {\n  const node: t.ClassBody = {\n    type: \"ClassBody\",\n    body,\n  };\n  const defs = NODE_FIELDS.ClassBody;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function classExpression(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassExpression {\n  const node: t.ClassExpression = {\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ClassExpression;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.superClass, node, \"superClass\", superClass, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function classDeclaration(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassDeclaration {\n  const node: t.ClassDeclaration = {\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ClassDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.superClass, node, \"superClass\", superClass, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function exportAllDeclaration(\n  source: t.StringLiteral,\n): t.ExportAllDeclaration {\n  const node: t.ExportAllDeclaration = {\n    type: \"ExportAllDeclaration\",\n    source,\n  };\n  const defs = NODE_FIELDS.ExportAllDeclaration;\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function exportDefaultDeclaration(\n  declaration:\n    | t.TSDeclareFunction\n    | t.FunctionDeclaration\n    | t.ClassDeclaration\n    | t.Expression,\n): t.ExportDefaultDeclaration {\n  const node: t.ExportDefaultDeclaration = {\n    type: \"ExportDefaultDeclaration\",\n    declaration,\n  };\n  const defs = NODE_FIELDS.ExportDefaultDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  return node;\n}\nexport function exportNamedDeclaration(\n  declaration: t.Declaration | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier\n  > = [],\n  source: t.StringLiteral | null = null,\n): t.ExportNamedDeclaration {\n  const node: t.ExportNamedDeclaration = {\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  };\n  const defs = NODE_FIELDS.ExportNamedDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function exportSpecifier(\n  local: t.Identifier,\n  exported: t.Identifier | t.StringLiteral,\n): t.ExportSpecifier {\n  const node: t.ExportSpecifier = {\n    type: \"ExportSpecifier\",\n    local,\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function forOfStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n  _await: boolean = false,\n): t.ForOfStatement {\n  const node: t.ForOfStatement = {\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await,\n  };\n  const defs = NODE_FIELDS.ForOfStatement;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.await, node, \"await\", _await);\n  return node;\n}\nexport function importDeclaration(\n  specifiers: Array<\n    t.ImportSpecifier | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier\n  >,\n  source: t.StringLiteral,\n): t.ImportDeclaration {\n  const node: t.ImportDeclaration = {\n    type: \"ImportDeclaration\",\n    specifiers,\n    source,\n  };\n  const defs = NODE_FIELDS.ImportDeclaration;\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function importDefaultSpecifier(\n  local: t.Identifier,\n): t.ImportDefaultSpecifier {\n  const node: t.ImportDefaultSpecifier = {\n    type: \"ImportDefaultSpecifier\",\n    local,\n  };\n  const defs = NODE_FIELDS.ImportDefaultSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  return node;\n}\nexport function importNamespaceSpecifier(\n  local: t.Identifier,\n): t.ImportNamespaceSpecifier {\n  const node: t.ImportNamespaceSpecifier = {\n    type: \"ImportNamespaceSpecifier\",\n    local,\n  };\n  const defs = NODE_FIELDS.ImportNamespaceSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  return node;\n}\nexport function importSpecifier(\n  local: t.Identifier,\n  imported: t.Identifier | t.StringLiteral,\n): t.ImportSpecifier {\n  const node: t.ImportSpecifier = {\n    type: \"ImportSpecifier\",\n    local,\n    imported,\n  };\n  const defs = NODE_FIELDS.ImportSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  validate(defs.imported, node, \"imported\", imported, 1);\n  return node;\n}\nexport function importExpression(\n  source: t.Expression,\n  options: t.Expression | null = null,\n): t.ImportExpression {\n  const node: t.ImportExpression = {\n    type: \"ImportExpression\",\n    source,\n    options,\n  };\n  const defs = NODE_FIELDS.ImportExpression;\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.options, node, \"options\", options, 1);\n  return node;\n}\nexport function metaProperty(\n  meta: t.Identifier,\n  property: t.Identifier,\n): t.MetaProperty {\n  const node: t.MetaProperty = {\n    type: \"MetaProperty\",\n    meta,\n    property,\n  };\n  const defs = NODE_FIELDS.MetaProperty;\n  validate(defs.meta, node, \"meta\", meta, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  return node;\n}\nexport function classMethod(\n  kind: \"get\" | \"set\" | \"method\" | \"constructor\" | undefined = \"method\",\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  _static: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ClassMethod {\n  const node: t.ClassMethod = {\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.ClassMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function objectPattern(\n  properties: Array<t.RestElement | t.ObjectProperty>,\n): t.ObjectPattern {\n  const node: t.ObjectPattern = {\n    type: \"ObjectPattern\",\n    properties,\n  };\n  const defs = NODE_FIELDS.ObjectPattern;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function spreadElement(argument: t.Expression): t.SpreadElement {\n  const node: t.SpreadElement = {\n    type: \"SpreadElement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.SpreadElement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nfunction _super(): t.Super {\n  return {\n    type: \"Super\",\n  };\n}\nexport { _super as super };\nexport function taggedTemplateExpression(\n  tag: t.Expression,\n  quasi: t.TemplateLiteral,\n): t.TaggedTemplateExpression {\n  const node: t.TaggedTemplateExpression = {\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi,\n  };\n  const defs = NODE_FIELDS.TaggedTemplateExpression;\n  validate(defs.tag, node, \"tag\", tag, 1);\n  validate(defs.quasi, node, \"quasi\", quasi, 1);\n  return node;\n}\nexport function templateElement(\n  value: { raw: string; cooked?: string },\n  tail: boolean = false,\n): t.TemplateElement {\n  const node: t.TemplateElement = {\n    type: \"TemplateElement\",\n    value,\n    tail,\n  };\n  const defs = NODE_FIELDS.TemplateElement;\n  validate(defs.value, node, \"value\", value);\n  validate(defs.tail, node, \"tail\", tail);\n  return node;\n}\nexport function templateLiteral(\n  quasis: Array<t.TemplateElement>,\n  expressions: Array<t.Expression | t.TSType>,\n): t.TemplateLiteral {\n  const node: t.TemplateLiteral = {\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions,\n  };\n  const defs = NODE_FIELDS.TemplateLiteral;\n  validate(defs.quasis, node, \"quasis\", quasis, 1);\n  validate(defs.expressions, node, \"expressions\", expressions, 1);\n  return node;\n}\nexport function yieldExpression(\n  argument: t.Expression | null = null,\n  delegate: boolean = false,\n): t.YieldExpression {\n  const node: t.YieldExpression = {\n    type: \"YieldExpression\",\n    argument,\n    delegate,\n  };\n  const defs = NODE_FIELDS.YieldExpression;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.delegate, node, \"delegate\", delegate);\n  return node;\n}\nexport function awaitExpression(argument: t.Expression): t.AwaitExpression {\n  const node: t.AwaitExpression = {\n    type: \"AwaitExpression\",\n    argument,\n  };\n  const defs = NODE_FIELDS.AwaitExpression;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nfunction _import(): t.Import {\n  return {\n    type: \"Import\",\n  };\n}\nexport { _import as import };\nexport function bigIntLiteral(value: string): t.BigIntLiteral {\n  const node: t.BigIntLiteral = {\n    type: \"BigIntLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.BigIntLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function exportNamespaceSpecifier(\n  exported: t.Identifier,\n): t.ExportNamespaceSpecifier {\n  const node: t.ExportNamespaceSpecifier = {\n    type: \"ExportNamespaceSpecifier\",\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportNamespaceSpecifier;\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function optionalMemberExpression(\n  object: t.Expression,\n  property: t.Expression | t.Identifier,\n  computed: boolean | undefined = false,\n  optional: boolean,\n): t.OptionalMemberExpression {\n  const node: t.OptionalMemberExpression = {\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  };\n  const defs = NODE_FIELDS.OptionalMemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function optionalCallExpression(\n  callee: t.Expression,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n  optional: boolean,\n): t.OptionalCallExpression {\n  const node: t.OptionalCallExpression = {\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional,\n  };\n  const defs = NODE_FIELDS.OptionalCallExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function classProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassProperty {\n  const node: t.ClassProperty = {\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classAccessorProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression\n    | t.PrivateName,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassAccessorProperty {\n  const node: t.ClassAccessorProperty = {\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassAccessorProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classPrivateProperty(\n  key: t.PrivateName,\n  value: t.Expression | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  _static: boolean = false,\n): t.ClassPrivateProperty {\n  const node: t.ClassPrivateProperty = {\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassPrivateProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classPrivateMethod(\n  kind: \"get\" | \"set\" | \"method\" | undefined = \"method\",\n  key: t.PrivateName,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  _static: boolean = false,\n): t.ClassPrivateMethod {\n  const node: t.ClassPrivateMethod = {\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassPrivateMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function privateName(id: t.Identifier): t.PrivateName {\n  const node: t.PrivateName = {\n    type: \"PrivateName\",\n    id,\n  };\n  const defs = NODE_FIELDS.PrivateName;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function staticBlock(body: Array<t.Statement>): t.StaticBlock {\n  const node: t.StaticBlock = {\n    type: \"StaticBlock\",\n    body,\n  };\n  const defs = NODE_FIELDS.StaticBlock;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function importAttribute(\n  key: t.Identifier | t.StringLiteral,\n  value: t.StringLiteral,\n): t.ImportAttribute {\n  const node: t.ImportAttribute = {\n    type: \"ImportAttribute\",\n    key,\n    value,\n  };\n  const defs = NODE_FIELDS.ImportAttribute;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function anyTypeAnnotation(): t.AnyTypeAnnotation {\n  return {\n    type: \"AnyTypeAnnotation\",\n  };\n}\nexport function arrayTypeAnnotation(\n  elementType: t.FlowType,\n): t.ArrayTypeAnnotation {\n  const node: t.ArrayTypeAnnotation = {\n    type: \"ArrayTypeAnnotation\",\n    elementType,\n  };\n  const defs = NODE_FIELDS.ArrayTypeAnnotation;\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  return node;\n}\nexport function booleanTypeAnnotation(): t.BooleanTypeAnnotation {\n  return {\n    type: \"BooleanTypeAnnotation\",\n  };\n}\nexport function booleanLiteralTypeAnnotation(\n  value: boolean,\n): t.BooleanLiteralTypeAnnotation {\n  const node: t.BooleanLiteralTypeAnnotation = {\n    type: \"BooleanLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.BooleanLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function nullLiteralTypeAnnotation(): t.NullLiteralTypeAnnotation {\n  return {\n    type: \"NullLiteralTypeAnnotation\",\n  };\n}\nexport function classImplements(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.ClassImplements {\n  const node: t.ClassImplements = {\n    type: \"ClassImplements\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.ClassImplements;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function declareClass(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareClass {\n  const node: t.DeclareClass = {\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.DeclareClass;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function declareFunction(id: t.Identifier): t.DeclareFunction {\n  const node: t.DeclareFunction = {\n    type: \"DeclareFunction\",\n    id,\n  };\n  const defs = NODE_FIELDS.DeclareFunction;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function declareInterface(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareInterface {\n  const node: t.DeclareInterface = {\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.DeclareInterface;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function declareModule(\n  id: t.Identifier | t.StringLiteral,\n  body: t.BlockStatement,\n  kind: \"CommonJS\" | \"ES\" | null = null,\n): t.DeclareModule {\n  const node: t.DeclareModule = {\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind,\n  };\n  const defs = NODE_FIELDS.DeclareModule;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.kind, node, \"kind\", kind);\n  return node;\n}\nexport function declareModuleExports(\n  typeAnnotation: t.TypeAnnotation,\n): t.DeclareModuleExports {\n  const node: t.DeclareModuleExports = {\n    type: \"DeclareModuleExports\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.DeclareModuleExports;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function declareTypeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.DeclareTypeAlias {\n  const node: t.DeclareTypeAlias = {\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right,\n  };\n  const defs = NODE_FIELDS.DeclareTypeAlias;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function declareOpaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null = null,\n  supertype: t.FlowType | null = null,\n): t.DeclareOpaqueType {\n  const node: t.DeclareOpaqueType = {\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n  };\n  const defs = NODE_FIELDS.DeclareOpaqueType;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.supertype, node, \"supertype\", supertype, 1);\n  return node;\n}\nexport function declareVariable(id: t.Identifier): t.DeclareVariable {\n  const node: t.DeclareVariable = {\n    type: \"DeclareVariable\",\n    id,\n  };\n  const defs = NODE_FIELDS.DeclareVariable;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function declareExportDeclaration(\n  declaration: t.Flow | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportNamespaceSpecifier\n  > | null = null,\n  source: t.StringLiteral | null = null,\n  attributes: Array<t.ImportAttribute> | null = null,\n): t.DeclareExportDeclaration {\n  const node: t.DeclareExportDeclaration = {\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source,\n    attributes,\n  };\n  const defs = NODE_FIELDS.DeclareExportDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  return node;\n}\nexport function declareExportAllDeclaration(\n  source: t.StringLiteral,\n  attributes: Array<t.ImportAttribute> | null = null,\n): t.DeclareExportAllDeclaration {\n  const node: t.DeclareExportAllDeclaration = {\n    type: \"DeclareExportAllDeclaration\",\n    source,\n    attributes,\n  };\n  const defs = NODE_FIELDS.DeclareExportAllDeclaration;\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  return node;\n}\nexport function declaredPredicate(value: t.Flow): t.DeclaredPredicate {\n  const node: t.DeclaredPredicate = {\n    type: \"DeclaredPredicate\",\n    value,\n  };\n  const defs = NODE_FIELDS.DeclaredPredicate;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function existsTypeAnnotation(): t.ExistsTypeAnnotation {\n  return {\n    type: \"ExistsTypeAnnotation\",\n  };\n}\nexport function functionTypeAnnotation(\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  params: Array<t.FunctionTypeParam>,\n  rest: t.FunctionTypeParam | null | undefined = null,\n  returnType: t.FlowType,\n): t.FunctionTypeAnnotation {\n  const node: t.FunctionTypeAnnotation = {\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType,\n  };\n  const defs = NODE_FIELDS.FunctionTypeAnnotation;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.rest, node, \"rest\", rest, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport function functionTypeParam(\n  name: t.Identifier | null | undefined = null,\n  typeAnnotation: t.FlowType,\n): t.FunctionTypeParam {\n  const node: t.FunctionTypeParam = {\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.FunctionTypeParam;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function genericTypeAnnotation(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.GenericTypeAnnotation {\n  const node: t.GenericTypeAnnotation = {\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.GenericTypeAnnotation;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function inferredPredicate(): t.InferredPredicate {\n  return {\n    type: \"InferredPredicate\",\n  };\n}\nexport function interfaceExtends(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.InterfaceExtends {\n  const node: t.InterfaceExtends = {\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.InterfaceExtends;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function interfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceDeclaration {\n  const node: t.InterfaceDeclaration = {\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.InterfaceDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function interfaceTypeAnnotation(\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceTypeAnnotation {\n  const node: t.InterfaceTypeAnnotation = {\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.InterfaceTypeAnnotation;\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function intersectionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.IntersectionTypeAnnotation {\n  const node: t.IntersectionTypeAnnotation = {\n    type: \"IntersectionTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.IntersectionTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function mixedTypeAnnotation(): t.MixedTypeAnnotation {\n  return {\n    type: \"MixedTypeAnnotation\",\n  };\n}\nexport function emptyTypeAnnotation(): t.EmptyTypeAnnotation {\n  return {\n    type: \"EmptyTypeAnnotation\",\n  };\n}\nexport function nullableTypeAnnotation(\n  typeAnnotation: t.FlowType,\n): t.NullableTypeAnnotation {\n  const node: t.NullableTypeAnnotation = {\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.NullableTypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function numberLiteralTypeAnnotation(\n  value: number,\n): t.NumberLiteralTypeAnnotation {\n  const node: t.NumberLiteralTypeAnnotation = {\n    type: \"NumberLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.NumberLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function numberTypeAnnotation(): t.NumberTypeAnnotation {\n  return {\n    type: \"NumberTypeAnnotation\",\n  };\n}\nexport function objectTypeAnnotation(\n  properties: Array<t.ObjectTypeProperty | t.ObjectTypeSpreadProperty>,\n  indexers: Array<t.ObjectTypeIndexer> = [],\n  callProperties: Array<t.ObjectTypeCallProperty> = [],\n  internalSlots: Array<t.ObjectTypeInternalSlot> = [],\n  exact: boolean = false,\n): t.ObjectTypeAnnotation {\n  const node: t.ObjectTypeAnnotation = {\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact,\n  };\n  const defs = NODE_FIELDS.ObjectTypeAnnotation;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  validate(defs.indexers, node, \"indexers\", indexers, 1);\n  validate(defs.callProperties, node, \"callProperties\", callProperties, 1);\n  validate(defs.internalSlots, node, \"internalSlots\", internalSlots, 1);\n  validate(defs.exact, node, \"exact\", exact);\n  return node;\n}\nexport function objectTypeInternalSlot(\n  id: t.Identifier,\n  value: t.FlowType,\n  optional: boolean,\n  _static: boolean,\n  method: boolean,\n): t.ObjectTypeInternalSlot {\n  const node: t.ObjectTypeInternalSlot = {\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method,\n  };\n  const defs = NODE_FIELDS.ObjectTypeInternalSlot;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  validate(defs.static, node, \"static\", _static);\n  validate(defs.method, node, \"method\", method);\n  return node;\n}\nexport function objectTypeCallProperty(\n  value: t.FlowType,\n): t.ObjectTypeCallProperty {\n  const node: t.ObjectTypeCallProperty = {\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeCallProperty;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function objectTypeIndexer(\n  id: t.Identifier | null | undefined = null,\n  key: t.FlowType,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeIndexer {\n  const node: t.ObjectTypeIndexer = {\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeIndexer;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function objectTypeProperty(\n  key: t.Identifier | t.StringLiteral,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeProperty {\n  const node: t.ObjectTypeProperty = {\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function objectTypeSpreadProperty(\n  argument: t.FlowType,\n): t.ObjectTypeSpreadProperty {\n  const node: t.ObjectTypeSpreadProperty = {\n    type: \"ObjectTypeSpreadProperty\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ObjectTypeSpreadProperty;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function opaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  supertype: t.FlowType | null | undefined = null,\n  impltype: t.FlowType,\n): t.OpaqueType {\n  const node: t.OpaqueType = {\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype,\n  };\n  const defs = NODE_FIELDS.OpaqueType;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.supertype, node, \"supertype\", supertype, 1);\n  validate(defs.impltype, node, \"impltype\", impltype, 1);\n  return node;\n}\nexport function qualifiedTypeIdentifier(\n  id: t.Identifier,\n  qualification: t.Identifier | t.QualifiedTypeIdentifier,\n): t.QualifiedTypeIdentifier {\n  const node: t.QualifiedTypeIdentifier = {\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification,\n  };\n  const defs = NODE_FIELDS.QualifiedTypeIdentifier;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.qualification, node, \"qualification\", qualification, 1);\n  return node;\n}\nexport function stringLiteralTypeAnnotation(\n  value: string,\n): t.StringLiteralTypeAnnotation {\n  const node: t.StringLiteralTypeAnnotation = {\n    type: \"StringLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.StringLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function stringTypeAnnotation(): t.StringTypeAnnotation {\n  return {\n    type: \"StringTypeAnnotation\",\n  };\n}\nexport function symbolTypeAnnotation(): t.SymbolTypeAnnotation {\n  return {\n    type: \"SymbolTypeAnnotation\",\n  };\n}\nexport function thisTypeAnnotation(): t.ThisTypeAnnotation {\n  return {\n    type: \"ThisTypeAnnotation\",\n  };\n}\nexport function tupleTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.TupleTypeAnnotation {\n  const node: t.TupleTypeAnnotation = {\n    type: \"TupleTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.TupleTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function typeofTypeAnnotation(\n  argument: t.FlowType,\n): t.TypeofTypeAnnotation {\n  const node: t.TypeofTypeAnnotation = {\n    type: \"TypeofTypeAnnotation\",\n    argument,\n  };\n  const defs = NODE_FIELDS.TypeofTypeAnnotation;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function typeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.TypeAlias {\n  const node: t.TypeAlias = {\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right,\n  };\n  const defs = NODE_FIELDS.TypeAlias;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function typeAnnotation(typeAnnotation: t.FlowType): t.TypeAnnotation {\n  const node: t.TypeAnnotation = {\n    type: \"TypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function typeCastExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TypeAnnotation,\n): t.TypeCastExpression {\n  const node: t.TypeCastExpression = {\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TypeCastExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function typeParameter(\n  bound: t.TypeAnnotation | null = null,\n  _default: t.FlowType | null = null,\n  variance: t.Variance | null = null,\n): t.TypeParameter {\n  const node: t.TypeParameter = {\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null,\n  };\n  const defs = NODE_FIELDS.TypeParameter;\n  validate(defs.bound, node, \"bound\", bound, 1);\n  validate(defs.default, node, \"default\", _default, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function typeParameterDeclaration(\n  params: Array<t.TypeParameter>,\n): t.TypeParameterDeclaration {\n  const node: t.TypeParameterDeclaration = {\n    type: \"TypeParameterDeclaration\",\n    params,\n  };\n  const defs = NODE_FIELDS.TypeParameterDeclaration;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport function typeParameterInstantiation(\n  params: Array<t.FlowType>,\n): t.TypeParameterInstantiation {\n  const node: t.TypeParameterInstantiation = {\n    type: \"TypeParameterInstantiation\",\n    params,\n  };\n  const defs = NODE_FIELDS.TypeParameterInstantiation;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport function unionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.UnionTypeAnnotation {\n  const node: t.UnionTypeAnnotation = {\n    type: \"UnionTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.UnionTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function variance(kind: \"minus\" | \"plus\"): t.Variance {\n  const node: t.Variance = {\n    type: \"Variance\",\n    kind,\n  };\n  const defs = NODE_FIELDS.Variance;\n  validate(defs.kind, node, \"kind\", kind);\n  return node;\n}\nexport function voidTypeAnnotation(): t.VoidTypeAnnotation {\n  return {\n    type: \"VoidTypeAnnotation\",\n  };\n}\nexport function enumDeclaration(\n  id: t.Identifier,\n  body:\n    | t.EnumBooleanBody\n    | t.EnumNumberBody\n    | t.EnumStringBody\n    | t.EnumSymbolBody,\n): t.EnumDeclaration {\n  const node: t.EnumDeclaration = {\n    type: \"EnumDeclaration\",\n    id,\n    body,\n  };\n  const defs = NODE_FIELDS.EnumDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function enumBooleanBody(\n  members: Array<t.EnumBooleanMember>,\n): t.EnumBooleanBody {\n  const node: t.EnumBooleanBody = {\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumBooleanBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumNumberBody(\n  members: Array<t.EnumNumberMember>,\n): t.EnumNumberBody {\n  const node: t.EnumNumberBody = {\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumNumberBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumStringBody(\n  members: Array<t.EnumStringMember | t.EnumDefaultedMember>,\n): t.EnumStringBody {\n  const node: t.EnumStringBody = {\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumStringBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumSymbolBody(\n  members: Array<t.EnumDefaultedMember>,\n): t.EnumSymbolBody {\n  const node: t.EnumSymbolBody = {\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumSymbolBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumBooleanMember(id: t.Identifier): t.EnumBooleanMember {\n  const node: t.EnumBooleanMember = {\n    type: \"EnumBooleanMember\",\n    id,\n    init: null,\n  };\n  const defs = NODE_FIELDS.EnumBooleanMember;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function enumNumberMember(\n  id: t.Identifier,\n  init: t.NumericLiteral,\n): t.EnumNumberMember {\n  const node: t.EnumNumberMember = {\n    type: \"EnumNumberMember\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.EnumNumberMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function enumStringMember(\n  id: t.Identifier,\n  init: t.StringLiteral,\n): t.EnumStringMember {\n  const node: t.EnumStringMember = {\n    type: \"EnumStringMember\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.EnumStringMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function enumDefaultedMember(id: t.Identifier): t.EnumDefaultedMember {\n  const node: t.EnumDefaultedMember = {\n    type: \"EnumDefaultedMember\",\n    id,\n  };\n  const defs = NODE_FIELDS.EnumDefaultedMember;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function indexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.IndexedAccessType {\n  const node: t.IndexedAccessType = {\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType,\n  };\n  const defs = NODE_FIELDS.IndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport function optionalIndexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.OptionalIndexedAccessType {\n  const node: t.OptionalIndexedAccessType = {\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null,\n  };\n  const defs = NODE_FIELDS.OptionalIndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport function jsxAttribute(\n  name: t.JSXIdentifier | t.JSXNamespacedName,\n  value:\n    | t.JSXElement\n    | t.JSXFragment\n    | t.StringLiteral\n    | t.JSXExpressionContainer\n    | null = null,\n): t.JSXAttribute {\n  const node: t.JSXAttribute = {\n    type: \"JSXAttribute\",\n    name,\n    value,\n  };\n  const defs = NODE_FIELDS.JSXAttribute;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport { jsxAttribute as jSXAttribute };\nexport function jsxClosingElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n): t.JSXClosingElement {\n  const node: t.JSXClosingElement = {\n    type: \"JSXClosingElement\",\n    name,\n  };\n  const defs = NODE_FIELDS.JSXClosingElement;\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport { jsxClosingElement as jSXClosingElement };\nexport function jsxElement(\n  openingElement: t.JSXOpeningElement,\n  closingElement: t.JSXClosingElement | null | undefined = null,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n  selfClosing: boolean | null = null,\n): t.JSXElement {\n  const node: t.JSXElement = {\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing,\n  };\n  const defs = NODE_FIELDS.JSXElement;\n  validate(defs.openingElement, node, \"openingElement\", openingElement, 1);\n  validate(defs.closingElement, node, \"closingElement\", closingElement, 1);\n  validate(defs.children, node, \"children\", children, 1);\n  validate(defs.selfClosing, node, \"selfClosing\", selfClosing);\n  return node;\n}\nexport { jsxElement as jSXElement };\nexport function jsxEmptyExpression(): t.JSXEmptyExpression {\n  return {\n    type: \"JSXEmptyExpression\",\n  };\n}\nexport { jsxEmptyExpression as jSXEmptyExpression };\nexport function jsxExpressionContainer(\n  expression: t.Expression | t.JSXEmptyExpression,\n): t.JSXExpressionContainer {\n  const node: t.JSXExpressionContainer = {\n    type: \"JSXExpressionContainer\",\n    expression,\n  };\n  const defs = NODE_FIELDS.JSXExpressionContainer;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { jsxExpressionContainer as jSXExpressionContainer };\nexport function jsxSpreadChild(expression: t.Expression): t.JSXSpreadChild {\n  const node: t.JSXSpreadChild = {\n    type: \"JSXSpreadChild\",\n    expression,\n  };\n  const defs = NODE_FIELDS.JSXSpreadChild;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { jsxSpreadChild as jSXSpreadChild };\nexport function jsxIdentifier(name: string): t.JSXIdentifier {\n  const node: t.JSXIdentifier = {\n    type: \"JSXIdentifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.JSXIdentifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport { jsxIdentifier as jSXIdentifier };\nexport function jsxMemberExpression(\n  object: t.JSXMemberExpression | t.JSXIdentifier,\n  property: t.JSXIdentifier,\n): t.JSXMemberExpression {\n  const node: t.JSXMemberExpression = {\n    type: \"JSXMemberExpression\",\n    object,\n    property,\n  };\n  const defs = NODE_FIELDS.JSXMemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  return node;\n}\nexport { jsxMemberExpression as jSXMemberExpression };\nexport function jsxNamespacedName(\n  namespace: t.JSXIdentifier,\n  name: t.JSXIdentifier,\n): t.JSXNamespacedName {\n  const node: t.JSXNamespacedName = {\n    type: \"JSXNamespacedName\",\n    namespace,\n    name,\n  };\n  const defs = NODE_FIELDS.JSXNamespacedName;\n  validate(defs.namespace, node, \"namespace\", namespace, 1);\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport { jsxNamespacedName as jSXNamespacedName };\nexport function jsxOpeningElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n  attributes: Array<t.JSXAttribute | t.JSXSpreadAttribute>,\n  selfClosing: boolean = false,\n): t.JSXOpeningElement {\n  const node: t.JSXOpeningElement = {\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing,\n  };\n  const defs = NODE_FIELDS.JSXOpeningElement;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  validate(defs.selfClosing, node, \"selfClosing\", selfClosing);\n  return node;\n}\nexport { jsxOpeningElement as jSXOpeningElement };\nexport function jsxSpreadAttribute(\n  argument: t.Expression,\n): t.JSXSpreadAttribute {\n  const node: t.JSXSpreadAttribute = {\n    type: \"JSXSpreadAttribute\",\n    argument,\n  };\n  const defs = NODE_FIELDS.JSXSpreadAttribute;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport { jsxSpreadAttribute as jSXSpreadAttribute };\nexport function jsxText(value: string): t.JSXText {\n  const node: t.JSXText = {\n    type: \"JSXText\",\n    value,\n  };\n  const defs = NODE_FIELDS.JSXText;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport { jsxText as jSXText };\nexport function jsxFragment(\n  openingFragment: t.JSXOpeningFragment,\n  closingFragment: t.JSXClosingFragment,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n): t.JSXFragment {\n  const node: t.JSXFragment = {\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children,\n  };\n  const defs = NODE_FIELDS.JSXFragment;\n  validate(defs.openingFragment, node, \"openingFragment\", openingFragment, 1);\n  validate(defs.closingFragment, node, \"closingFragment\", closingFragment, 1);\n  validate(defs.children, node, \"children\", children, 1);\n  return node;\n}\nexport { jsxFragment as jSXFragment };\nexport function jsxOpeningFragment(): t.JSXOpeningFragment {\n  return {\n    type: \"JSXOpeningFragment\",\n  };\n}\nexport { jsxOpeningFragment as jSXOpeningFragment };\nexport function jsxClosingFragment(): t.JSXClosingFragment {\n  return {\n    type: \"JSXClosingFragment\",\n  };\n}\nexport { jsxClosingFragment as jSXClosingFragment };\nexport function noop(): t.Noop {\n  return {\n    type: \"Noop\",\n  };\n}\nexport function placeholder(\n  expectedNode:\n    | \"Identifier\"\n    | \"StringLiteral\"\n    | \"Expression\"\n    | \"Statement\"\n    | \"Declaration\"\n    | \"BlockStatement\"\n    | \"ClassBody\"\n    | \"Pattern\",\n  name: t.Identifier,\n): t.Placeholder {\n  const node: t.Placeholder = {\n    type: \"Placeholder\",\n    expectedNode,\n    name,\n  };\n  const defs = NODE_FIELDS.Placeholder;\n  validate(defs.expectedNode, node, \"expectedNode\", expectedNode);\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport function v8IntrinsicIdentifier(name: string): t.V8IntrinsicIdentifier {\n  const node: t.V8IntrinsicIdentifier = {\n    type: \"V8IntrinsicIdentifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.V8IntrinsicIdentifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport function argumentPlaceholder(): t.ArgumentPlaceholder {\n  return {\n    type: \"ArgumentPlaceholder\",\n  };\n}\nexport function bindExpression(\n  object: t.Expression,\n  callee: t.Expression,\n): t.BindExpression {\n  const node: t.BindExpression = {\n    type: \"BindExpression\",\n    object,\n    callee,\n  };\n  const defs = NODE_FIELDS.BindExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.callee, node, \"callee\", callee, 1);\n  return node;\n}\nexport function decorator(expression: t.Expression): t.Decorator {\n  const node: t.Decorator = {\n    type: \"Decorator\",\n    expression,\n  };\n  const defs = NODE_FIELDS.Decorator;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function doExpression(\n  body: t.BlockStatement,\n  async: boolean = false,\n): t.DoExpression {\n  const node: t.DoExpression = {\n    type: \"DoExpression\",\n    body,\n    async,\n  };\n  const defs = NODE_FIELDS.DoExpression;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function exportDefaultSpecifier(\n  exported: t.Identifier,\n): t.ExportDefaultSpecifier {\n  const node: t.ExportDefaultSpecifier = {\n    type: \"ExportDefaultSpecifier\",\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportDefaultSpecifier;\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function recordExpression(\n  properties: Array<t.ObjectProperty | t.SpreadElement>,\n): t.RecordExpression {\n  const node: t.RecordExpression = {\n    type: \"RecordExpression\",\n    properties,\n  };\n  const defs = NODE_FIELDS.RecordExpression;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function tupleExpression(\n  elements: Array<t.Expression | t.SpreadElement> = [],\n): t.TupleExpression {\n  const node: t.TupleExpression = {\n    type: \"TupleExpression\",\n    elements,\n  };\n  const defs = NODE_FIELDS.TupleExpression;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function decimalLiteral(value: string): t.DecimalLiteral {\n  const node: t.DecimalLiteral = {\n    type: \"DecimalLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.DecimalLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function moduleExpression(body: t.Program): t.ModuleExpression {\n  const node: t.ModuleExpression = {\n    type: \"ModuleExpression\",\n    body,\n  };\n  const defs = NODE_FIELDS.ModuleExpression;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function topicReference(): t.TopicReference {\n  return {\n    type: \"TopicReference\",\n  };\n}\nexport function pipelineTopicExpression(\n  expression: t.Expression,\n): t.PipelineTopicExpression {\n  const node: t.PipelineTopicExpression = {\n    type: \"PipelineTopicExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.PipelineTopicExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function pipelineBareFunction(\n  callee: t.Expression,\n): t.PipelineBareFunction {\n  const node: t.PipelineBareFunction = {\n    type: \"PipelineBareFunction\",\n    callee,\n  };\n  const defs = NODE_FIELDS.PipelineBareFunction;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  return node;\n}\nexport function pipelinePrimaryTopicReference(): t.PipelinePrimaryTopicReference {\n  return {\n    type: \"PipelinePrimaryTopicReference\",\n  };\n}\nexport function tsParameterProperty(\n  parameter: t.Identifier | t.AssignmentPattern,\n): t.TSParameterProperty {\n  const node: t.TSParameterProperty = {\n    type: \"TSParameterProperty\",\n    parameter,\n  };\n  const defs = NODE_FIELDS.TSParameterProperty;\n  validate(defs.parameter, node, \"parameter\", parameter, 1);\n  return node;\n}\nexport { tsParameterProperty as tSParameterProperty };\nexport function tsDeclareFunction(\n  id: t.Identifier | null | undefined = null,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareFunction {\n  const node: t.TSDeclareFunction = {\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType,\n  };\n  const defs = NODE_FIELDS.TSDeclareFunction;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport { tsDeclareFunction as tSDeclareFunction };\nexport function tsDeclareMethod(\n  decorators: Array<t.Decorator> | null | undefined = null,\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareMethod {\n  const node: t.TSDeclareMethod = {\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType,\n  };\n  const defs = NODE_FIELDS.TSDeclareMethod;\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport { tsDeclareMethod as tSDeclareMethod };\nexport function tsQualifiedName(\n  left: t.TSEntityName,\n  right: t.Identifier,\n): t.TSQualifiedName {\n  const node: t.TSQualifiedName = {\n    type: \"TSQualifiedName\",\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.TSQualifiedName;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport { tsQualifiedName as tSQualifiedName };\nexport function tsCallSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSCallSignatureDeclaration {\n  const node: t.TSCallSignatureDeclaration = {\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSCallSignatureDeclaration;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsCallSignatureDeclaration as tSCallSignatureDeclaration };\nexport function tsConstructSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructSignatureDeclaration {\n  const node: t.TSConstructSignatureDeclaration = {\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSConstructSignatureDeclaration;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsConstructSignatureDeclaration as tSConstructSignatureDeclaration };\nexport function tsPropertySignature(\n  key: t.Expression,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSPropertySignature {\n  const node: t.TSPropertySignature = {\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSPropertySignature;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsPropertySignature as tSPropertySignature };\nexport function tsMethodSignature(\n  key: t.Expression,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSMethodSignature {\n  const node: t.TSMethodSignature = {\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null,\n  };\n  const defs = NODE_FIELDS.TSMethodSignature;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsMethodSignature as tSMethodSignature };\nexport function tsIndexSignature(\n  parameters: Array<t.Identifier>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSIndexSignature {\n  const node: t.TSIndexSignature = {\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSIndexSignature;\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsIndexSignature as tSIndexSignature };\nexport function tsAnyKeyword(): t.TSAnyKeyword {\n  return {\n    type: \"TSAnyKeyword\",\n  };\n}\nexport { tsAnyKeyword as tSAnyKeyword };\nexport function tsBooleanKeyword(): t.TSBooleanKeyword {\n  return {\n    type: \"TSBooleanKeyword\",\n  };\n}\nexport { tsBooleanKeyword as tSBooleanKeyword };\nexport function tsBigIntKeyword(): t.TSBigIntKeyword {\n  return {\n    type: \"TSBigIntKeyword\",\n  };\n}\nexport { tsBigIntKeyword as tSBigIntKeyword };\nexport function tsIntrinsicKeyword(): t.TSIntrinsicKeyword {\n  return {\n    type: \"TSIntrinsicKeyword\",\n  };\n}\nexport { tsIntrinsicKeyword as tSIntrinsicKeyword };\nexport function tsNeverKeyword(): t.TSNeverKeyword {\n  return {\n    type: \"TSNeverKeyword\",\n  };\n}\nexport { tsNeverKeyword as tSNeverKeyword };\nexport function tsNullKeyword(): t.TSNullKeyword {\n  return {\n    type: \"TSNullKeyword\",\n  };\n}\nexport { tsNullKeyword as tSNullKeyword };\nexport function tsNumberKeyword(): t.TSNumberKeyword {\n  return {\n    type: \"TSNumberKeyword\",\n  };\n}\nexport { tsNumberKeyword as tSNumberKeyword };\nexport function tsObjectKeyword(): t.TSObjectKeyword {\n  return {\n    type: \"TSObjectKeyword\",\n  };\n}\nexport { tsObjectKeyword as tSObjectKeyword };\nexport function tsStringKeyword(): t.TSStringKeyword {\n  return {\n    type: \"TSStringKeyword\",\n  };\n}\nexport { tsStringKeyword as tSStringKeyword };\nexport function tsSymbolKeyword(): t.TSSymbolKeyword {\n  return {\n    type: \"TSSymbolKeyword\",\n  };\n}\nexport { tsSymbolKeyword as tSSymbolKeyword };\nexport function tsUndefinedKeyword(): t.TSUndefinedKeyword {\n  return {\n    type: \"TSUndefinedKeyword\",\n  };\n}\nexport { tsUndefinedKeyword as tSUndefinedKeyword };\nexport function tsUnknownKeyword(): t.TSUnknownKeyword {\n  return {\n    type: \"TSUnknownKeyword\",\n  };\n}\nexport { tsUnknownKeyword as tSUnknownKeyword };\nexport function tsVoidKeyword(): t.TSVoidKeyword {\n  return {\n    type: \"TSVoidKeyword\",\n  };\n}\nexport { tsVoidKeyword as tSVoidKeyword };\nexport function tsThisType(): t.TSThisType {\n  return {\n    type: \"TSThisType\",\n  };\n}\nexport { tsThisType as tSThisType };\nexport function tsFunctionType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSFunctionType {\n  const node: t.TSFunctionType = {\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSFunctionType;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsFunctionType as tSFunctionType };\nexport function tsConstructorType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructorType {\n  const node: t.TSConstructorType = {\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSConstructorType;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsConstructorType as tSConstructorType };\nexport function tsTypeReference(\n  typeName: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeReference {\n  const node: t.TSTypeReference = {\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSTypeReference;\n  validate(defs.typeName, node, \"typeName\", typeName, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsTypeReference as tSTypeReference };\nexport function tsTypePredicate(\n  parameterName: t.Identifier | t.TSThisType,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  asserts: boolean | null = null,\n): t.TSTypePredicate {\n  const node: t.TSTypePredicate = {\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts,\n  };\n  const defs = NODE_FIELDS.TSTypePredicate;\n  validate(defs.parameterName, node, \"parameterName\", parameterName, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.asserts, node, \"asserts\", asserts);\n  return node;\n}\nexport { tsTypePredicate as tSTypePredicate };\nexport function tsTypeQuery(\n  exprName: t.TSEntityName | t.TSImportType,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeQuery {\n  const node: t.TSTypeQuery = {\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSTypeQuery;\n  validate(defs.exprName, node, \"exprName\", exprName, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsTypeQuery as tSTypeQuery };\nexport function tsTypeLiteral(\n  members: Array<t.TSTypeElement>,\n): t.TSTypeLiteral {\n  const node: t.TSTypeLiteral = {\n    type: \"TSTypeLiteral\",\n    members,\n  };\n  const defs = NODE_FIELDS.TSTypeLiteral;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsTypeLiteral as tSTypeLiteral };\nexport function tsArrayType(elementType: t.TSType): t.TSArrayType {\n  const node: t.TSArrayType = {\n    type: \"TSArrayType\",\n    elementType,\n  };\n  const defs = NODE_FIELDS.TSArrayType;\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  return node;\n}\nexport { tsArrayType as tSArrayType };\nexport function tsTupleType(\n  elementTypes: Array<t.TSType | t.TSNamedTupleMember>,\n): t.TSTupleType {\n  const node: t.TSTupleType = {\n    type: \"TSTupleType\",\n    elementTypes,\n  };\n  const defs = NODE_FIELDS.TSTupleType;\n  validate(defs.elementTypes, node, \"elementTypes\", elementTypes, 1);\n  return node;\n}\nexport { tsTupleType as tSTupleType };\nexport function tsOptionalType(typeAnnotation: t.TSType): t.TSOptionalType {\n  const node: t.TSOptionalType = {\n    type: \"TSOptionalType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSOptionalType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsOptionalType as tSOptionalType };\nexport function tsRestType(typeAnnotation: t.TSType): t.TSRestType {\n  const node: t.TSRestType = {\n    type: \"TSRestType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSRestType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsRestType as tSRestType };\nexport function tsNamedTupleMember(\n  label: t.Identifier,\n  elementType: t.TSType,\n  optional: boolean = false,\n): t.TSNamedTupleMember {\n  const node: t.TSNamedTupleMember = {\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional,\n  };\n  const defs = NODE_FIELDS.TSNamedTupleMember;\n  validate(defs.label, node, \"label\", label, 1);\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport { tsNamedTupleMember as tSNamedTupleMember };\nexport function tsUnionType(types: Array<t.TSType>): t.TSUnionType {\n  const node: t.TSUnionType = {\n    type: \"TSUnionType\",\n    types,\n  };\n  const defs = NODE_FIELDS.TSUnionType;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsUnionType as tSUnionType };\nexport function tsIntersectionType(\n  types: Array<t.TSType>,\n): t.TSIntersectionType {\n  const node: t.TSIntersectionType = {\n    type: \"TSIntersectionType\",\n    types,\n  };\n  const defs = NODE_FIELDS.TSIntersectionType;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsIntersectionType as tSIntersectionType };\nexport function tsConditionalType(\n  checkType: t.TSType,\n  extendsType: t.TSType,\n  trueType: t.TSType,\n  falseType: t.TSType,\n): t.TSConditionalType {\n  const node: t.TSConditionalType = {\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType,\n  };\n  const defs = NODE_FIELDS.TSConditionalType;\n  validate(defs.checkType, node, \"checkType\", checkType, 1);\n  validate(defs.extendsType, node, \"extendsType\", extendsType, 1);\n  validate(defs.trueType, node, \"trueType\", trueType, 1);\n  validate(defs.falseType, node, \"falseType\", falseType, 1);\n  return node;\n}\nexport { tsConditionalType as tSConditionalType };\nexport function tsInferType(typeParameter: t.TSTypeParameter): t.TSInferType {\n  const node: t.TSInferType = {\n    type: \"TSInferType\",\n    typeParameter,\n  };\n  const defs = NODE_FIELDS.TSInferType;\n  validate(defs.typeParameter, node, \"typeParameter\", typeParameter, 1);\n  return node;\n}\nexport { tsInferType as tSInferType };\nexport function tsParenthesizedType(\n  typeAnnotation: t.TSType,\n): t.TSParenthesizedType {\n  const node: t.TSParenthesizedType = {\n    type: \"TSParenthesizedType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSParenthesizedType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsParenthesizedType as tSParenthesizedType };\nexport function tsTypeOperator(typeAnnotation: t.TSType): t.TSTypeOperator {\n  const node: t.TSTypeOperator = {\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null,\n  };\n  const defs = NODE_FIELDS.TSTypeOperator;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeOperator as tSTypeOperator };\nexport function tsIndexedAccessType(\n  objectType: t.TSType,\n  indexType: t.TSType,\n): t.TSIndexedAccessType {\n  const node: t.TSIndexedAccessType = {\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType,\n  };\n  const defs = NODE_FIELDS.TSIndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport { tsIndexedAccessType as tSIndexedAccessType };\nexport function tsMappedType(\n  typeParameter: t.TSTypeParameter,\n  typeAnnotation: t.TSType | null = null,\n  nameType: t.TSType | null = null,\n): t.TSMappedType {\n  const node: t.TSMappedType = {\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType,\n  };\n  const defs = NODE_FIELDS.TSMappedType;\n  validate(defs.typeParameter, node, \"typeParameter\", typeParameter, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.nameType, node, \"nameType\", nameType, 1);\n  return node;\n}\nexport { tsMappedType as tSMappedType };\nexport function tsTemplateLiteralType(\n  quasis: Array<t.TemplateElement>,\n  types: Array<t.TSType>,\n): t.TSTemplateLiteralType {\n  const node: t.TSTemplateLiteralType = {\n    type: \"TSTemplateLiteralType\",\n    quasis,\n    types,\n  };\n  const defs = NODE_FIELDS.TSTemplateLiteralType;\n  validate(defs.quasis, node, \"quasis\", quasis, 1);\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsTemplateLiteralType as tSTemplateLiteralType };\nexport function tsLiteralType(\n  literal:\n    | t.NumericLiteral\n    | t.StringLiteral\n    | t.BooleanLiteral\n    | t.BigIntLiteral\n    | t.TemplateLiteral\n    | t.UnaryExpression,\n): t.TSLiteralType {\n  const node: t.TSLiteralType = {\n    type: \"TSLiteralType\",\n    literal,\n  };\n  const defs = NODE_FIELDS.TSLiteralType;\n  validate(defs.literal, node, \"literal\", literal, 1);\n  return node;\n}\nexport { tsLiteralType as tSLiteralType };\nexport function tsExpressionWithTypeArguments(\n  expression: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSExpressionWithTypeArguments {\n  const node: t.TSExpressionWithTypeArguments = {\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSExpressionWithTypeArguments;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsExpressionWithTypeArguments as tSExpressionWithTypeArguments };\nexport function tsInterfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.TSExpressionWithTypeArguments> | null | undefined = null,\n  body: t.TSInterfaceBody,\n): t.TSInterfaceDeclaration {\n  const node: t.TSInterfaceDeclaration = {\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.TSInterfaceDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsInterfaceDeclaration as tSInterfaceDeclaration };\nexport function tsInterfaceBody(\n  body: Array<t.TSTypeElement>,\n): t.TSInterfaceBody {\n  const node: t.TSInterfaceBody = {\n    type: \"TSInterfaceBody\",\n    body,\n  };\n  const defs = NODE_FIELDS.TSInterfaceBody;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsInterfaceBody as tSInterfaceBody };\nexport function tsTypeAliasDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  typeAnnotation: t.TSType,\n): t.TSTypeAliasDeclaration {\n  const node: t.TSTypeAliasDeclaration = {\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSTypeAliasDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeAliasDeclaration as tSTypeAliasDeclaration };\nexport function tsInstantiationExpression(\n  expression: t.Expression,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSInstantiationExpression {\n  const node: t.TSInstantiationExpression = {\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSInstantiationExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsInstantiationExpression as tSInstantiationExpression };\nexport function tsAsExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSAsExpression {\n  const node: t.TSAsExpression = {\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSAsExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsAsExpression as tSAsExpression };\nexport function tsSatisfiesExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSSatisfiesExpression {\n  const node: t.TSSatisfiesExpression = {\n    type: \"TSSatisfiesExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSSatisfiesExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsSatisfiesExpression as tSSatisfiesExpression };\nexport function tsTypeAssertion(\n  typeAnnotation: t.TSType,\n  expression: t.Expression,\n): t.TSTypeAssertion {\n  const node: t.TSTypeAssertion = {\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression,\n  };\n  const defs = NODE_FIELDS.TSTypeAssertion;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsTypeAssertion as tSTypeAssertion };\nexport function tsEnumBody(members: Array<t.TSEnumMember>): t.TSEnumBody {\n  const node: t.TSEnumBody = {\n    type: \"TSEnumBody\",\n    members,\n  };\n  const defs = NODE_FIELDS.TSEnumBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsEnumBody as tSEnumBody };\nexport function tsEnumDeclaration(\n  id: t.Identifier,\n  members: Array<t.TSEnumMember>,\n): t.TSEnumDeclaration {\n  const node: t.TSEnumDeclaration = {\n    type: \"TSEnumDeclaration\",\n    id,\n    members,\n  };\n  const defs = NODE_FIELDS.TSEnumDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsEnumDeclaration as tSEnumDeclaration };\nexport function tsEnumMember(\n  id: t.Identifier | t.StringLiteral,\n  initializer: t.Expression | null = null,\n): t.TSEnumMember {\n  const node: t.TSEnumMember = {\n    type: \"TSEnumMember\",\n    id,\n    initializer,\n  };\n  const defs = NODE_FIELDS.TSEnumMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.initializer, node, \"initializer\", initializer, 1);\n  return node;\n}\nexport { tsEnumMember as tSEnumMember };\nexport function tsModuleDeclaration(\n  id: t.Identifier | t.StringLiteral,\n  body: t.TSModuleBlock | t.TSModuleDeclaration,\n): t.TSModuleDeclaration {\n  const node: t.TSModuleDeclaration = {\n    type: \"TSModuleDeclaration\",\n    id,\n    body,\n    kind: null,\n  };\n  const defs = NODE_FIELDS.TSModuleDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsModuleDeclaration as tSModuleDeclaration };\nexport function tsModuleBlock(body: Array<t.Statement>): t.TSModuleBlock {\n  const node: t.TSModuleBlock = {\n    type: \"TSModuleBlock\",\n    body,\n  };\n  const defs = NODE_FIELDS.TSModuleBlock;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsModuleBlock as tSModuleBlock };\nexport function tsImportType(\n  argument: t.StringLiteral,\n  qualifier: t.TSEntityName | null = null,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSImportType {\n  const node: t.TSImportType = {\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSImportType;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.qualifier, node, \"qualifier\", qualifier, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsImportType as tSImportType };\nexport function tsImportEqualsDeclaration(\n  id: t.Identifier,\n  moduleReference: t.TSEntityName | t.TSExternalModuleReference,\n): t.TSImportEqualsDeclaration {\n  const node: t.TSImportEqualsDeclaration = {\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null,\n  };\n  const defs = NODE_FIELDS.TSImportEqualsDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.moduleReference, node, \"moduleReference\", moduleReference, 1);\n  return node;\n}\nexport { tsImportEqualsDeclaration as tSImportEqualsDeclaration };\nexport function tsExternalModuleReference(\n  expression: t.StringLiteral,\n): t.TSExternalModuleReference {\n  const node: t.TSExternalModuleReference = {\n    type: \"TSExternalModuleReference\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSExternalModuleReference;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsExternalModuleReference as tSExternalModuleReference };\nexport function tsNonNullExpression(\n  expression: t.Expression,\n): t.TSNonNullExpression {\n  const node: t.TSNonNullExpression = {\n    type: \"TSNonNullExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSNonNullExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsNonNullExpression as tSNonNullExpression };\nexport function tsExportAssignment(\n  expression: t.Expression,\n): t.TSExportAssignment {\n  const node: t.TSExportAssignment = {\n    type: \"TSExportAssignment\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSExportAssignment;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsExportAssignment as tSExportAssignment };\nexport function tsNamespaceExportDeclaration(\n  id: t.Identifier,\n): t.TSNamespaceExportDeclaration {\n  const node: t.TSNamespaceExportDeclaration = {\n    type: \"TSNamespaceExportDeclaration\",\n    id,\n  };\n  const defs = NODE_FIELDS.TSNamespaceExportDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport { tsNamespaceExportDeclaration as tSNamespaceExportDeclaration };\nexport function tsTypeAnnotation(typeAnnotation: t.TSType): t.TSTypeAnnotation {\n  const node: t.TSTypeAnnotation = {\n    type: \"TSTypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSTypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeAnnotation as tSTypeAnnotation };\nexport function tsTypeParameterInstantiation(\n  params: Array<t.TSType>,\n): t.TSTypeParameterInstantiation {\n  const node: t.TSTypeParameterInstantiation = {\n    type: \"TSTypeParameterInstantiation\",\n    params,\n  };\n  const defs = NODE_FIELDS.TSTypeParameterInstantiation;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport { tsTypeParameterInstantiation as tSTypeParameterInstantiation };\nexport function tsTypeParameterDeclaration(\n  params: Array<t.TSTypeParameter>,\n): t.TSTypeParameterDeclaration {\n  const node: t.TSTypeParameterDeclaration = {\n    type: \"TSTypeParameterDeclaration\",\n    params,\n  };\n  const defs = NODE_FIELDS.TSTypeParameterDeclaration;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport { tsTypeParameterDeclaration as tSTypeParameterDeclaration };\nexport function tsTypeParameter(\n  constraint: t.TSType | null | undefined = null,\n  _default: t.TSType | null | undefined = null,\n  name: string,\n): t.TSTypeParameter {\n  const node: t.TSTypeParameter = {\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name,\n  };\n  const defs = NODE_FIELDS.TSTypeParameter;\n  validate(defs.constraint, node, \"constraint\", constraint, 1);\n  validate(defs.default, node, \"default\", _default, 1);\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport { tsTypeParameter as tSTypeParameter };\n/** @deprecated */\nfunction NumberLiteral(value: number) {\n  deprecationWarning(\"NumberLiteral\", \"NumericLiteral\", \"The node type \");\n  return numericLiteral(value);\n}\nexport { NumberLiteral as numberLiteral };\n/** @deprecated */\nfunction RegexLiteral(pattern: string, flags: string = \"\") {\n  deprecationWarning(\"RegexLiteral\", \"RegExpLiteral\", \"The node type \");\n  return regExpLiteral(pattern, flags);\n}\nexport { RegexLiteral as regexLiteral };\n/** @deprecated */\nfunction RestProperty(argument: t.LVal) {\n  deprecationWarning(\"RestProperty\", \"RestElement\", \"The node type \");\n  return restElement(argument);\n}\nexport { RestProperty as restProperty };\n/** @deprecated */\nfunction SpreadProperty(argument: t.Expression) {\n  deprecationWarning(\"SpreadProperty\", \"SpreadElement\", \"The node type \");\n  return spreadElement(argument);\n}\nexport { SpreadProperty as spreadProperty };\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/validate.js":{"lineLengths":[13,0,46,13,3,27,38,38,44,48,35,20,47,22,28,39,32,1,61,49,44,33,18,30,26,29,153,3,1,47,49,44,33,1,40,29,47,27,153,1,0,36,0],"data":{"version":3,"names":["_index","require","validate","node","key","val","fields","NODE_FIELDS","type","field","validateField","validateChild","validateInternal","maybeNode","optional","_NODE_PARENT_VALIDATI","NODE_PARENT_VALIDATIONS","call","_NODE_PARENT_VALIDATI2"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/validate.ts"],"sourcesContent":["import {\n  NODE_FIELDS,\n  NODE_PARENT_VALIDATIONS,\n  type FieldOptions,\n} from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function validate(\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n): void {\n  if (!node) return;\n\n  const fields = NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nexport function validateInternal(\n  field: FieldOptions,\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n  maybeNode?: 1,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n\n  if (maybeNode) {\n    const type = (val as t.Node).type;\n    if (type == null) return;\n    NODE_PARENT_VALIDATIONS[type]?.(node, key, val);\n  }\n}\n\nexport function validateField(\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n  field: FieldOptions | undefined | null,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nexport function validateChild(\n  node: t.Node | undefined | null,\n  key: string | { toString(): string },\n  val?: unknown,\n) {\n  const type = (val as t.Node)?.type;\n  if (type == null) return;\n  NODE_PARENT_VALIDATIONS[type]?.(node, key, val);\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAOe,SAASC,QAAQA,CAC9BC,IAA+B,EAC/BC,GAAW,EACXC,GAAY,EACN;EACN,IAAI,CAACF,IAAI,EAAE;EAEX,MAAMG,MAAM,GAAGC,kBAAW,CAACJ,IAAI,CAACK,IAAI,CAAC;EACrC,IAAI,CAACF,MAAM,EAAE;EAEb,MAAMG,KAAK,GAAGH,MAAM,CAACF,GAAG,CAAC;EACzBM,aAAa,CAACP,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEI,KAAK,CAAC;EACpCE,aAAa,CAACR,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC;AAC/B;AAEO,SAASO,gBAAgBA,CAC9BH,KAAmB,EACnBN,IAA+B,EAC/BC,GAAW,EACXC,GAAY,EACZQ,SAAa,EACP;EACN,IAAI,EAACJ,KAAK,YAALA,KAAK,CAAEP,QAAQ,GAAE;EACtB,IAAIO,KAAK,CAACK,QAAQ,IAAIT,GAAG,IAAI,IAAI,EAAE;EAEnCI,KAAK,CAACP,QAAQ,CAACC,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC;EAE9B,IAAIQ,SAAS,EAAE;IAAA,IAAAE,qBAAA;IACb,MAAMP,IAAI,GAAIH,GAAG,CAAYG,IAAI;IACjC,IAAIA,IAAI,IAAI,IAAI,EAAE;IAClB,CAAAO,qBAAA,GAAAC,8BAAuB,CAACR,IAAI,CAAC,aAA7BO,qBAAA,CAAAE,IAAA,CAAAD,8BAAuB,EAASb,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC;EACjD;AACF;AAEO,SAASK,aAAaA,CAC3BP,IAA+B,EAC/BC,GAAW,EACXC,GAAY,EACZI,KAAsC,EAChC;EACN,IAAI,EAACA,KAAK,YAALA,KAAK,CAAEP,QAAQ,GAAE;EACtB,IAAIO,KAAK,CAACK,QAAQ,IAAIT,GAAG,IAAI,IAAI,EAAE;EAEnCI,KAAK,CAACP,QAAQ,CAACC,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC;AAChC;AAEO,SAASM,aAAaA,CAC3BR,IAA+B,EAC/BC,GAAoC,EACpCC,GAAa,EACb;EAAA,IAAAa,sBAAA;EACA,MAAMV,IAAI,GAAIH,GAAG,oBAAHA,GAAG,CAAaG,IAAI;EAClC,IAAIA,IAAI,IAAI,IAAI,EAAE;EAClB,CAAAU,sBAAA,GAAAF,8BAAuB,CAACR,IAAI,CAAC,aAA7BU,sBAAA,CAAAD,IAAA,CAAAD,8BAAuB,EAASb,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC;AACjD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/index.js":{"lineLengths":[13,0,46,13,3,46,19,20,29,3,3,48,19,20,31,3,3,54,19,20,49,3,3,51,19,20,34,3,3,54,19,20,37,3,3,47,19,20,30,3,3,59,19,20,42,3,3,48,19,20,38,3,3,54,19,20,44,3,3,62,19,20,52,3,3,23,48,19,20,31,3,3,21,21,20,21,29,27,35,49,60,79,129,3,12,8,5,31,29,52,18,36,12,20,5,3,1,151,0,33,0],"data":{"version":3,"names":["require","_utils","_placeholders","_deprecatedAliases","Object","keys","DEPRECATED_ALIASES","forEach","deprecatedAlias","FLIPPED_ALIAS_KEYS","types","set","allExpandedTypes","type","aliases","add","TYPES","exports","concat","VISITOR_KEYS","DEPRECATED_KEYS"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/index.ts"],"sourcesContent":["import \"./core.ts\";\nimport \"./flow.ts\";\nimport \"./jsx.ts\";\nimport \"./misc.ts\";\nimport \"./experimental.ts\";\nimport \"./typescript.ts\";\nimport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  allExpandedTypes,\n} from \"./utils.ts\";\nimport {\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n} from \"./placeholders.ts\";\nimport { DEPRECATED_ALIASES } from \"./deprecated-aliases.ts\";\n\n(\n  Object.keys(DEPRECATED_ALIASES) as (keyof typeof DEPRECATED_ALIASES)[]\n).forEach(deprecatedAlias => {\n  FLIPPED_ALIAS_KEYS[deprecatedAlias] =\n    FLIPPED_ALIAS_KEYS[DEPRECATED_ALIASES[deprecatedAlias]];\n});\n\nfor (const { types, set } of allExpandedTypes) {\n  for (const type of types) {\n    const aliases = FLIPPED_ALIAS_KEYS[type];\n    if (aliases) {\n      aliases.forEach(set.add, set);\n    } else {\n      set.add(type);\n    }\n  }\n}\n\nconst TYPES: Array<string> = [].concat(\n  Object.keys(VISITOR_KEYS),\n  Object.keys(FLIPPED_ALIAS_KEYS),\n  Object.keys(DEPRECATED_KEYS),\n);\n\nexport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_ALIASES,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n  TYPES,\n};\n\nexport type { FieldOptions } from \"./utils.ts\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAA;AACAA,OAAA;AACAA,OAAA;AACAA,OAAA;AACAA,OAAA;AACAA,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAUA,IAAAE,aAAA,GAAAF,OAAA;AAKA,IAAAG,kBAAA,GAAAH,OAAA;AAGEI,MAAM,CAACC,IAAI,CAACC,qCAAkB,CAAC,CAC/BC,OAAO,CAACC,eAAe,IAAI;EAC3BC,yBAAkB,CAACD,eAAe,CAAC,GACjCC,yBAAkB,CAACH,qCAAkB,CAACE,eAAe,CAAC,CAAC;AAC3D,CAAC,CAAC;AAEF,KAAK,MAAM;EAAEE,KAAK;EAAEC;AAAI,CAAC,IAAIC,uBAAgB,EAAE;EAC7C,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;IACxB,MAAMI,OAAO,GAAGL,yBAAkB,CAACI,IAAI,CAAC;IACxC,IAAIC,OAAO,EAAE;MACXA,OAAO,CAACP,OAAO,CAACI,GAAG,CAACI,GAAG,EAAEJ,GAAG,CAAC;IAC/B,CAAC,MAAM;MACLA,GAAG,CAACI,GAAG,CAACF,IAAI,CAAC;IACf;EACF;AACF;AAEA,MAAMG,KAAoB,GAAAC,OAAA,CAAAD,KAAA,GAAG,EAAE,CAACE,MAAM,CACpCd,MAAM,CAACC,IAAI,CAACc,mBAAY,CAAC,EACzBf,MAAM,CAACC,IAAI,CAACI,yBAAkB,CAAC,EAC/BL,MAAM,CAACC,IAAI,CAACe,sBAAe,CAC7B,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/core.js":{"lineLengths":[13,0,46,13,3,243,41,71,79,65,46,35,65,31,11,15,110,67,5,4,24,25,3,36,11,15,121,83,53,42,90,36,10,12,22,8,6,11,325,6,12,56,5,4,41,29,25,3,32,41,11,15,67,6,11,29,68,77,67,71,36,12,55,11,25,9,6,12,56,5,4,29,35,3,36,21,11,12,53,5,3,3,25,21,11,12,62,5,3,3,32,21,11,12,53,5,3,3,30,34,34,11,17,53,17,6,54,4,60,3,30,21,11,12,57,20,5,4,65,3,30,70,35,26,25,13,90,6,101,20,73,20,5,6,15,55,20,6,21,75,20,5,48,15,55,20,5,4,3,27,29,11,12,90,20,6,11,60,5,4,38,3,37,47,11,11,56,6,17,56,6,16,56,5,4,40,3,33,21,11,12,57,20,5,4,65,3,33,24,3,32,28,28,11,11,56,6,11,55,5,4,68,3,30,24,3,35,26,11,17,56,5,4,45,3,20,45,23,11,14,53,6,15,79,15,57,9,93,20,6,13,64,19,10,20,5,3,3,30,37,84,11,11,315,6,12,56,6,11,55,5,3,3,28,46,67,11,11,80,20,6,11,57,20,6,13,57,20,6,11,55,5,3,3,31,82,14,18,4,10,18,3,3,40,45,15,87,18,4,19,107,18,3,3,68,77,12,53,18,4,7,55,18,3,3,62,35,58,81,90,11,60,6,16,85,20,5,5,108,75,64,41,66,40,7,6,5,3,34,34,94,79,9,57,20,6,11,60,6,16,85,20,5,4,3,34,19,87,18,4,13,53,18,4,15,51,18,3,3,46,26,20,44,65,50,11,151,59,73,9,10,22,49,5,5,79,50,23,32,21,21,6,35,72,80,37,64,62,42,62,42,55,22,17,38,52,18,17,5,157,70,5,15,3,27,47,40,11,11,56,6,17,55,6,16,21,55,5,3,3,32,29,25,11,12,56,6,11,55,5,3,3,29,21,11,12,53,5,4,60,3,30,21,35,11,12,114,51,138,12,9,10,22,9,5,4,60,3,27,60,3,30,21,11,12,54,5,4,60,3,29,32,34,48,11,14,53,6,12,151,46,22,76,9,10,22,50,17,5,3,3,33,41,29,36,11,15,68,6,11,56,6,12,56,5,3,3,32,108,34,34,25,13,65,6,15,29,79,66,53,62,36,10,79,25,9,6,15,20,5,44,15,55,20,5,9,3,29,28,3,23,34,63,11,17,60,23,6,18,67,20,20,6,17,53,17,6,54,4,47,3,32,26,26,11,98,3,3,28,79,83,79,25,63,46,23,12,15,20,6,10,29,116,66,53,62,36,10,116,25,9,6,17,53,20,6,11,60,5,5,115,3,30,117,11,15,20,6,10,29,149,66,67,62,36,12,139,11,25,9,6,12,71,6,16,158,31,28,105,9,56,113,9,10,23,51,20,6,17,53,20,5,4,42,61,75,157,64,41,89,43,6,5,3,27,42,24,35,34,50,15,269,5,5,73,56,72,37,46,76,5,15,3,31,24,66,11,15,57,20,5,3,3,34,27,11,62,4,25,3,39,26,47,11,17,56,5,3,3,26,34,11,11,57,20,6,60,3,3,31,37,52,11,19,56,6,56,3,3,30,25,3,30,24,66,11,15,56,5,3,3,28,45,25,11,12,148,47,93,9,10,42,56,6,14,21,57,6,16,21,60,5,3,3,31,46,11,13,19,6,15,56,6,15,66,5,4,24,38,3,32,46,11,13,20,6,15,157,6,15,67,5,4,24,25,3,35,36,28,40,11,14,55,20,6,11,86,6,71,4,57,80,117,42,41,13,13,20,15,70,18,9,25,40,123,9,7,40,67,44,45,18,49,11,16,49,9,7,6,18,3,34,26,11,9,164,6,15,21,54,6,11,21,56,5,3,3,30,28,69,11,11,56,6,11,55,5,3,3,29,30,25,11,13,56,6,11,55,5,3,3,33,43,29,46,50,11,194,6,12,56,6,17,53,20,5,4,3,28,42,24,46,50,15,161,5,4,3,39,39,75,94,79,17,54,6,11,74,6,16,85,20,5,4,3,25,20,11,198,3,3,31,54,119,47,11,9,57,20,6,21,109,20,6,11,55,6,17,21,56,6,30,105,20,6,17,92,20,6,17,53,20,6,13,63,20,5,3,3,32,30,61,11,9,57,20,6,21,109,20,6,11,55,6,17,21,56,6,30,105,20,6,17,92,20,6,17,53,20,6,13,63,20,6,14,55,20,6,15,55,20,5,4,75,64,41,66,40,7,6,5,3,53,15,19,56,4,15,21,19,56,3,2,36,22,50,90,25,13,59,6,86,22,3,40,27,90,11,120,78,3,3,38,51,149,90,25,18,21,155,44,101,9,33,75,9,10,39,53,5,24,17,18,49,124,73,64,56,63,36,12,99,11,10,6,13,60,20,6,86,4,3,31,33,31,11,12,56,6,15,73,6,17,57,20,5,3,3,30,37,46,84,11,11,29,50,75,9,78,200,56,61,40,18,33,11,12,201,11,9,6,12,56,6,11,55,6,12,20,5,3,3,33,36,64,69,47,13,21,54,6,12,20,58,6,121,13,59,6,17,67,20,5,4,3,38,21,31,11,12,56,5,3,3,40,21,31,11,12,56,5,3,3,31,33,33,31,11,12,56,6,15,73,6,17,67,20,5,3,3,32,33,26,11,12,20,58,6,13,56,6,14,57,20,5,3,3,28,32,26,11,11,154,21,27,26,30,18,21,32,18,24,30,18,9,60,24,13,59,9,10,38,52,6,15,56,5,3,3,44,13,53,18,4,18,72,18,4,11,18,4,13,18,4,13,18,4,13,53,18,4,8,45,114,64,40,60,34,8,116,3,3,66,115,105,9,77,21,4,11,130,18,4,15,51,18,3,3,76,27,79,89,83,97,11,60,5,4,3,29,58,26,46,50,80,4,3,29,24,25,36,11,15,56,5,3,3,21,25,3,40,46,28,26,11,10,56,6,12,61,6,25,105,20,5,3,3,31,29,11,12,59,14,57,10,17,58,24,9,57,35,39,29,58,10,15,14,25,83,26,38,12,37,39,50,44,30,33,11,64,57,8,6,11,20,5,3,3,31,37,37,11,63,18,175,52,187,9,8,5,3,3,31,36,24,44,11,15,152,36,109,9,10,23,51,20,6,15,21,56,5,3,3,31,24,24,44,11,15,56,5,3,3,22,25,3,29,21,11,12,53,5,4,60,3,40,24,31,11,15,56,5,3,3,40,58,34,26,11,13,56,6,15,29,64,66,67,62,36,12,54,11,25,9,6,15,20,6,15,192,5,3,3,38,70,47,26,25,13,56,6,101,15,192,6,20,73,20,5,6,21,75,20,5,4,3,29,72,82,24,60,12,57,20,6,15,55,20,6,21,89,20,6,17,53,20,6,15,55,20,6,14,55,20,6,15,55,20,5,4,3,37,60,82,36,60,10,47,131,66,42,62,36,10,133,6,12,57,20,6,15,55,20,6,21,89,20,6,17,53,20,6,15,55,20,6,14,55,20,6,15,55,20,5,4,3,36,72,52,35,11,10,57,6,12,57,20,6,21,89,20,6,17,53,20,6,13,55,20,6,15,55,20,6,15,55,20,6,15,55,20,6,15,55,20,5,3,3,34,55,83,90,97,11,64,23,6,10,57,6,11,60,5,4,3,27,18,23,11,9,56,5,3,3,27,20,11,54,4,56,3,31,28,11,10,73,6,12,59,5,3,3,0,32,0],"data":{"version":3,"names":["_is","require","_isValidIdentifier","_helperValidatorIdentifier","_helperStringParser","_index","_utils","defineType","defineAliasedType","fields","elements","validate","arrayOf","assertNodeOrValueType","default","process","env","BABEL_TYPES_8_BREAKING","undefined","visitor","aliases","operator","assertValueType","Object","assign","identifier","assertOneOf","ASSIGNMENT_OPERATORS","pattern","node","key","val","validator","is","left","type","assertNodeType","right","builder","BINARY_OPERATORS","expression","inOp","oneOfNodeTypes","value","directives","arrayOfType","body","validateArrayOfType","label","optional","callee","arguments","typeArguments","typeParameters","param","test","consequent","alternate","program","comments","each","assertEach","tokens","init","update","functionCommon","params","generator","async","exports","functionTypeAnnotationCommon","returnType","functionDeclarationCommon","declare","id","predicate","parent","inherits","patternLikeCommon","typeAnnotation","decorators","name","chain","isValidIdentifier","TypeError","match","exec","toString","parentKey","nonComp","computed","imported","meta","isKeyword","isReservedWord","deprecatedAlias","Number","isFinite","error","Error","flags","invalid","LOGICAL_OPERATORS","object","property","normal","sourceType","interpreter","properties","kind","shorthand","argument","listKey","index","length","expressions","discriminant","cases","block","handler","finalizer","prefix","UNARY_OPERATORS","UPDATE_OPERATORS","declarations","withoutInit","constOrLetOrVar","usingOrAwaitUsing","parentIsForX","decl","definite","superClass","implements","mixins","abstract","importAttributes","attributes","assertions","deprecated","source","exportKind","validateOptional","declaration","validateType","specifiers","sourced","sourceless","local","exported","lval","await","module","phase","importKind","options","classMethodOrPropertyCommon","accessibility","static","override","classMethodOrDeclareMethodCommon","access","tag","quasi","assertShape","raw","cooked","templateElementCookedValidator","unterminatedCalled","str","firstInvalidLoc","readStringContents","unterminated","strictNumericEscape","invalidEscapeSequence","numericSeparatorInEscapeSequence","unexpectedNumericSeparator","invalidDigit","invalidCodePoint","tail","quasis","delegate","assertOptionalChainStart","readonly","variance"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/core.ts"],"sourcesContent":["import is from \"../validators/is.ts\";\nimport isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isKeyword, isReservedWord } from \"@babel/helper-validator-identifier\";\nimport type * as t from \"../index.ts\";\nimport { readStringContents } from \"@babel/helper-string-parser\";\n\nimport {\n  BINARY_OPERATORS,\n  LOGICAL_OPERATORS,\n  ASSIGNMENT_OPERATORS,\n  UNARY_OPERATORS,\n  UPDATE_OPERATORS,\n} from \"../constants/index.ts\";\n\nimport {\n  defineAliasedType,\n  assertShape,\n  assertOptionalChainStart,\n  assertValueType,\n  assertNodeType,\n  assertNodeOrValueType,\n  assertEach,\n  chain,\n  assertOneOf,\n  validateOptional,\n  type Validator,\n  arrayOf,\n  arrayOfType,\n  validateArrayOfType,\n  validateType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: arrayOf(\n        assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\"),\n      ),\n      default:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? []\n          : undefined,\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"string\")\n          : Object.assign(\n              (function () {\n                const identifier = assertOneOf(...ASSIGNMENT_OPERATORS);\n                const pattern = assertOneOf(\"=\");\n\n                return function (node: t.AssignmentExpression, key, val) {\n                  const validator = is(\"Pattern\", node.left)\n                    ? pattern\n                    : identifier;\n                  validator(node, key, val);\n                } as Validator;\n              })(),\n              { type: \"string\" },\n            ),\n    },\n    left: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\", \"OptionalMemberExpression\")\n          : assertNodeType(\n              \"Identifier\",\n              \"MemberExpression\",\n              \"OptionalMemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...BINARY_OPERATORS),\n    },\n    left: {\n      validate: (function () {\n        const expression = assertNodeType(\"Expression\");\n        const inOp = assertNodeType(\"Expression\", \"PrivateName\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.BinaryExpression, key, val) {\n            const validator = node.operator === \"in\" ? inOp : expression;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `operator` property\n          { oneOfNodeTypes: [\"Expression\", \"PrivateName\"] },\n        );\n        return validator;\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: assertNodeType(\"DirectiveLiteral\"),\n    },\n  },\n});\n\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: arrayOfType(\"Directive\"),\n      default: [],\n    },\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"],\n});\n\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"callee\", \"arguments\", \"typeArguments\"]\n    : [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\"),\n    },\n    arguments: validateArrayOfType(\n      \"Expression\",\n      \"SpreadElement\",\n      \"ArgumentPlaceholder\",\n    ),\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n    ...(process.env.BABEL_TYPES_8_BREAKING\n      ? {}\n      : {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    alternate: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\", \"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\", {\n  builder: [\"test\", \"body\"],\n  visitor: [\"body\", \"test\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"],\n});\n\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: assertNodeType(\"Program\"),\n    },\n    comments: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? Object.assign(() => {}, {\n              each: { oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"] },\n            })\n          : assertEach(assertNodeType(\"CommentBlock\", \"CommentLine\")),\n      optional: true,\n    },\n    tokens: {\n      // todo(ts): add Token type\n      validate: assertEach(Object.assign(() => {}, { type: \"any\" })),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"VariableDeclaration\", \"LVal\")\n          : assertNodeType(\n              \"VariableDeclaration\",\n              \"Identifier\",\n              \"MemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true,\n    },\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    update: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\nexport const functionCommon = () => ({\n  params: validateArrayOfType(\"Identifier\", \"Pattern\", \"RestElement\"),\n  generator: {\n    default: false,\n  },\n  async: {\n    default: false,\n  },\n});\n\nexport const functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\")\n      : assertNodeType(\n          \"TypeParameterDeclaration\",\n          \"TSTypeParameterDeclaration\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n});\n\nexport const functionDeclarationCommon = () => ({\n  ...functionCommon(),\n  declare: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  id: {\n    validate: assertNodeType(\"Identifier\"),\n    optional: true, // May be null for `export default function`\n  },\n});\n\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\n    \"id\",\n    \"typeParameters\",\n    \"params\",\n    \"predicate\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Statement\",\n    \"Pureish\",\n    \"Declaration\",\n  ],\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const identifier = assertNodeType(\"Identifier\");\n\n          return function (parent, key, node) {\n            if (!is(\"ExportDefaultDeclaration\", parent)) {\n              identifier(node, \"id\", node.id);\n            }\n          };\n        })(),\n});\n\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\nexport const patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  decorators: {\n    validate: arrayOfType(\"Decorator\"),\n    optional: true,\n  },\n});\n\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\" /* for legacy param decorators */],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: {\n    ...patternLikeCommon(),\n    name: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"string\"),\n              Object.assign(\n                function (node, key, val) {\n                  if (!isValidIdentifier(val, false)) {\n                    throw new TypeError(\n                      `\"${val}\" is not a valid identifier name`,\n                    );\n                  }\n                } as Validator,\n                { type: \"string\" },\n              ),\n            )\n          : assertValueType(\"string\"),\n    },\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? function (parent, key, node) {\n          const match = /\\.(\\w+)$/.exec(key.toString());\n          if (!match) return;\n\n          const [, parentKey] = match;\n          const nonComp = { computed: false };\n\n          // We can't check if `parent.property === node`, because nodes are validated\n          // before replacing them in the AST.\n          if (parentKey === \"property\") {\n            if (is(\"MemberExpression\", parent, nonComp)) return;\n            if (is(\"OptionalMemberExpression\", parent, nonComp)) return;\n          } else if (parentKey === \"key\") {\n            if (is(\"Property\", parent, nonComp)) return;\n            if (is(\"Method\", parent, nonComp)) return;\n          } else if (parentKey === \"exported\") {\n            if (is(\"ExportSpecifier\", parent)) return;\n          } else if (parentKey === \"imported\") {\n            if (is(\"ImportSpecifier\", parent, { imported: node })) return;\n          } else if (parentKey === \"meta\") {\n            if (is(\"MetaProperty\", parent, { meta: node })) return;\n          }\n\n          if (\n            // Ideally we should call isStrictReservedWord if this node is a descendant\n            // of a block in strict mode. Also, we should pass the inModule option so\n            // we can disable \"await\" in module.\n            (isKeyword(node.name) || isReservedWord(node.name, false)) &&\n            // Even if \"this\" is a keyword, we are using the Identifier\n            // node to represent it.\n            node.name !== \"this\"\n          ) {\n            throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n          }\n        }\n      : undefined,\n});\n\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    alternate: {\n      optional: true,\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: chain(\n        assertValueType(\"number\"),\n        Object.assign(\n          function (node, key, val) {\n            if (1 / val < 0 || !Number.isFinite(val)) {\n              const error = new Error(\n                \"NumericLiterals must be non-negative finite numbers. \" +\n                  `You can use t.valueToNode(${val}) instead.`,\n              );\n              if (process.env.BABEL_8_BREAKING) {\n                // TODO(@nicolo-ribaudo) Fix regenerator to not pass negative\n                // numbers here.\n                if (!IS_STANDALONE) {\n                  if (!new Error().stack.includes(\"regenerator\")) {\n                    throw error;\n                  }\n                }\n              } else {\n                // TODO: Enable this warning once regenerator is fixed.\n                // https://github.com/facebook/regenerator/pull/680\n                // console.warn(error);\n              }\n            }\n          } satisfies Validator,\n          { type: \"number\" },\n        ),\n      ),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"boolean\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: assertValueType(\"string\"),\n    },\n    flags: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"string\"),\n              Object.assign(\n                function (node, key, val) {\n                  const invalid = /[^gimsuy]/.exec(val);\n                  if (invalid) {\n                    throw new TypeError(\n                      `\"${invalid[0]}\" is not a valid RegExp flag`,\n                    );\n                  }\n                } as Validator,\n                { type: \"string\" },\n              ),\n            )\n          : assertValueType(\"string\"),\n      default: \"\",\n    },\n  },\n});\n\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...LOGICAL_OPERATORS),\n    },\n    left: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"MemberExpression\", {\n  builder: [\n    \"object\",\n    \"property\",\n    \"computed\",\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? [\"optional\"]\n      : []),\n  ],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\", \"Super\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\", \"PrivateName\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (\n          node: t.MemberExpression,\n          key,\n          val,\n        ) {\n          const validator: Validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }\n      : {}),\n  },\n});\n\ndefineType(\"NewExpression\", { inherits: \"CallExpression\" });\n\ndefineType(\"Program\", {\n  // Note: We explicitly leave 'interpreter' out here because it is\n  // conceptually comment-like, and Babel does not traverse comments either.\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceType: {\n      validate: assertOneOf(\"script\", \"module\"),\n      default: \"script\",\n    },\n    interpreter: {\n      validate: assertNodeType(\"InterpreterDirective\"),\n      default: null,\n      optional: true,\n    },\n    directives: {\n      validate: arrayOfType(\"Directive\"),\n      default: [],\n    },\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"],\n});\n\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: validateArrayOfType(\n      \"ObjectMethod\",\n      \"ObjectProperty\",\n      \"SpreadElement\",\n    ),\n  },\n});\n\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n      ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n        ? { default: \"method\" }\n        : {}),\n    },\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (node: t.ObjectMethod, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\n          \"Expression\",\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        ];\n        return validator;\n      })(),\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\n    \"UserWhitespacable\",\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"ObjectMember\",\n  ],\n});\n\ndefineType(\"ObjectProperty\", {\n  builder: [\n    \"key\",\n    \"value\",\n    \"computed\",\n    \"shorthand\",\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? [\"decorators\"]\n      : []),\n  ],\n  fields: {\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = process.env.BABEL_8_BREAKING\n          ? assertNodeType(\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              \"PrivateName\",\n            )\n          : assertNodeType(\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n              \"DecimalLiteral\",\n              \"PrivateName\",\n            );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          {\n            // todo(ts): can be discriminated union by `computed` property\n            oneOfNodeTypes: process.env.BABEL_8_BREAKING\n              ? [\n                  \"Expression\",\n                  \"Identifier\",\n                  \"StringLiteral\",\n                  \"NumericLiteral\",\n                  \"BigIntLiteral\",\n                  \"PrivateName\",\n                ]\n              : [\n                  \"Expression\",\n                  \"Identifier\",\n                  \"StringLiteral\",\n                  \"NumericLiteral\",\n                  \"BigIntLiteral\",\n                  \"DecimalLiteral\",\n                  \"PrivateName\",\n                ],\n          },\n        );\n        return validator;\n      })(),\n    },\n    value: {\n      // Value may be PatternLike if this is an AssignmentProperty\n      // https://github.com/babel/babylon/issues/434\n      validate: assertNodeType(\"Expression\", \"PatternLike\"),\n    },\n    shorthand: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"boolean\"),\n              Object.assign(\n                function (node: t.ObjectProperty, key, shorthand) {\n                  if (!shorthand) return;\n\n                  if (node.computed) {\n                    throw new TypeError(\n                      \"Property shorthand of ObjectProperty cannot be true if computed is true\",\n                    );\n                  }\n\n                  if (!is(\"Identifier\", node.key)) {\n                    throw new TypeError(\n                      \"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\",\n                    );\n                  }\n                } as Validator,\n                { type: \"boolean\" },\n              ),\n            )\n          : assertValueType(\"boolean\"),\n      default: false,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const pattern = assertNodeType(\n            \"Identifier\",\n            \"Pattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSNonNullExpression\",\n            \"TSTypeAssertion\",\n          );\n          const expression = assertNodeType(\"Expression\");\n\n          return function (parent, key, node) {\n            const validator = is(\"ObjectPattern\", parent)\n              ? pattern\n              : expression;\n            validator(node, \"value\", node.value);\n          };\n        })(),\n});\n\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: {\n    ...patternLikeCommon(),\n    argument: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\")\n          : assertNodeType(\n              \"Identifier\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"MemberExpression\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? function (parent: t.ArrayPattern | t.ObjectPattern, key) {\n          const match = /(\\w+)\\[(\\d+)\\]/.exec(key.toString());\n          if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n\n          const [, listKey, index] = match as unknown as [\n            string,\n            keyof typeof parent,\n            string,\n          ];\n          if ((parent[listKey] as t.Node[]).length > +index + 1) {\n            throw new TypeError(\n              `RestElement must be last element of ${listKey}`,\n            );\n          }\n        }\n      : undefined,\n});\n\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: validateArrayOfType(\"Expression\"),\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    consequent: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    cases: validateArrayOfType(\"SwitchCase\"),\n  },\n});\n\ndefineType(\"ThisExpression\", {\n  aliases: process.env.BABEL_8_BREAKING\n    ? [\"Expression\", \"TSEntityName\"]\n    : [\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"BlockStatement\"),\n              Object.assign(\n                function (node: t.TryStatement) {\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (!node.handler && !node.finalizer) {\n                    throw new TypeError(\n                      \"TryStatement expects either a handler or finalizer, or both\",\n                    );\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"BlockStatement\"] },\n              ),\n            )\n          : assertNodeType(\"BlockStatement\"),\n    },\n    handler: {\n      optional: true,\n      validate: assertNodeType(\"CatchClause\"),\n    },\n    finalizer: {\n      optional: true,\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true,\n    },\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UNARY_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"],\n});\n\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false,\n    },\n    argument: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"Expression\")\n          : assertNodeType(\"Identifier\", \"MemberExpression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UPDATE_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    kind: {\n      validate: assertOneOf(\n        \"var\",\n        \"let\",\n        \"const\",\n        // https://github.com/tc39/proposal-explicit-resource-management\n        \"using\",\n        // https://github.com/tc39/proposal-async-explicit-resource-management\n        \"await using\",\n      ),\n    },\n    declarations: validateArrayOfType(\"VariableDeclarator\"),\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? (() => {\n          const withoutInit = assertNodeType(\"Identifier\", \"Placeholder\");\n          const constOrLetOrVar = assertNodeType(\n            \"Identifier\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"Placeholder\",\n          );\n          const usingOrAwaitUsing = withoutInit;\n\n          return function (parent, key, node: t.VariableDeclaration) {\n            const { kind, declarations } = node;\n            const parentIsForX = is(\"ForXStatement\", parent, { left: node });\n            if (parentIsForX) {\n              if (declarations.length !== 1) {\n                throw new TypeError(\n                  `Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`,\n                );\n              }\n            }\n            for (const decl of declarations) {\n              if (kind === \"const\" || kind === \"let\" || kind === \"var\") {\n                if (!parentIsForX && !decl.init) {\n                  withoutInit(decl, \"id\", decl.id);\n                } else {\n                  constOrLetOrVar(decl, \"id\", decl.id);\n                }\n              } else {\n                usingOrAwaitUsing(decl, \"id\", decl.id);\n              }\n            }\n          };\n        })()\n      : undefined,\n});\n\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\")\n          : assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n    },\n    definite: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    init: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\n// --- ES2015 ---\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\" /* for legacy param decorators */],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    left: {\n      validate: assertNodeType(\n        \"Identifier\",\n        \"ObjectPattern\",\n        \"ArrayPattern\",\n        \"MemberExpression\",\n        \"TSAsExpression\",\n        \"TSSatisfiesExpression\",\n        \"TSTypeAssertion\",\n        \"TSNonNullExpression\",\n      ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    // For TypeScript\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeOrValueType(\"null\", \"PatternLike\", \"LVal\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"typeParameters\", \"params\", \"predicate\", \"returnType\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    expression: {\n      // https://github.com/babel/babylon/issues/505\n      validate: assertValueType(\"boolean\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\", \"Expression\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\n      \"ClassMethod\",\n      \"ClassPrivateMethod\",\n      \"ClassProperty\",\n      \"ClassPrivateProperty\",\n      \"ClassAccessorProperty\",\n      \"TSDeclareMethod\",\n      \"TSIndexSignature\",\n      \"StaticBlock\",\n    ),\n  },\n});\n\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\n    \"decorators\",\n    \"id\",\n    \"typeParameters\",\n    \"superClass\",\n    process.env.BABEL_8_BREAKING ? \"superTypeArguments\" : \"superTypeParameters\",\n    \"mixins\",\n    \"implements\",\n    \"body\",\n  ],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    [process.env.BABEL_8_BREAKING\n      ? \"superTypeArguments\"\n      : \"superTypeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n        \"ClassImplements\",\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      // The id may be omitted if this is the child of an\n      // ExportDefaultDeclaration.\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    [process.env.BABEL_8_BREAKING\n      ? \"superTypeArguments\"\n      : \"superTypeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n        \"ClassImplements\",\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    abstract: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const identifier = assertNodeType(\"Identifier\");\n          return function (parent, key, node) {\n            if (!is(\"ExportDefaultDeclaration\", parent)) {\n              identifier(node, \"id\", node.id);\n            }\n          };\n        })(),\n});\n\nexport const importAttributes = {\n  attributes: {\n    optional: true,\n    validate: arrayOfType(\"ImportAttribute\"),\n  },\n  assertions: {\n    deprecated: true,\n    optional: true,\n    validate: arrayOfType(\"ImportAttribute\"),\n  },\n};\n\ndefineType(\"ExportAllDeclaration\", {\n  builder: [\"source\"],\n  visitor: [\"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: validateType(\n      \"TSDeclareFunction\",\n      \"FunctionDeclaration\",\n      \"ClassDeclaration\",\n      \"Expression\",\n    ),\n    exportKind: validateOptional(assertOneOf(\"value\")),\n  },\n});\n\ndefineType(\"ExportNamedDeclaration\", {\n  builder: [\"declaration\", \"specifiers\", \"source\"],\n  visitor: process.env\n    ? [\"declaration\", \"specifiers\", \"source\", \"attributes\"]\n    : [\"declaration\", \"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      optional: true,\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"Declaration\"),\n              Object.assign(\n                function (node: t.ExportNamedDeclaration, key, val) {\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (val && node.specifiers.length) {\n                    throw new TypeError(\n                      \"Only declaration or specifiers is allowed on ExportNamedDeclaration\",\n                    );\n                  }\n\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (val && node.source) {\n                    throw new TypeError(\n                      \"Cannot export a declaration from a source\",\n                    );\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"Declaration\"] },\n              ),\n            )\n          : assertNodeType(\"Declaration\"),\n    },\n    ...importAttributes,\n    specifiers: {\n      default: [],\n      validate: arrayOf(\n        (function () {\n          const sourced = assertNodeType(\n            \"ExportSpecifier\",\n            \"ExportDefaultSpecifier\",\n            \"ExportNamespaceSpecifier\",\n          );\n          const sourceless = assertNodeType(\"ExportSpecifier\");\n\n          if (\n            !process.env.BABEL_8_BREAKING &&\n            !process.env.BABEL_TYPES_8_BREAKING\n          )\n            return sourced;\n\n          return Object.assign(\n            function (node: t.ExportNamedDeclaration, key, val) {\n              const validator = node.source ? sourced : sourceless;\n              validator(node, key, val);\n            } as Validator,\n            {\n              oneOfNodeTypes: [\n                \"ExportSpecifier\",\n                \"ExportDefaultSpecifier\",\n                \"ExportNamespaceSpecifier\",\n              ],\n            },\n          );\n        })(),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n      optional: true,\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    exported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    exportKind: {\n      // And TypeScript's \"export { type foo } from\"\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: (function () {\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          !process.env.BABEL_TYPES_8_BREAKING\n        ) {\n          return assertNodeType(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = assertNodeType(\"VariableDeclaration\");\n        const lval = assertNodeType(\n          \"Identifier\",\n          \"MemberExpression\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n          \"TSAsExpression\",\n          \"TSSatisfiesExpression\",\n          \"TSTypeAssertion\",\n          \"TSNonNullExpression\",\n        );\n\n        return Object.assign(\n          function (node, key, val) {\n            if (is(\"VariableDeclaration\", val)) {\n              declaration(node, key, val);\n            } else {\n              lval(node, key, val);\n            }\n          } as Validator,\n          {\n            oneOfNodeTypes: [\n              \"VariableDeclaration\",\n              \"Identifier\",\n              \"MemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ],\n          },\n        );\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    await: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ImportDeclaration\", {\n  builder: [\"specifiers\", \"source\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"specifiers\", \"source\", \"attributes\"]\n    : [\"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\"Statement\", \"Declaration\", \"ImportOrExportDeclaration\"],\n  fields: {\n    ...importAttributes,\n    module: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    specifiers: validateArrayOfType(\n      \"ImportSpecifier\",\n      \"ImportDefaultSpecifier\",\n      \"ImportNamespaceSpecifier\",\n    ),\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    importKind: {\n      // Handle TypeScript/Flowtype's extension \"import type foo from\"\n      // TypeScript doesn't support typeof\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"imported\", \"local\"],\n  builder: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    imported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    importKind: {\n      // Handle Flowtype's extension \"import {typeof foo} from\"\n      // And TypeScript's \"import { type foo } from\"\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportExpression\", {\n  visitor: [\"source\", \"options\"],\n  aliases: [\"Expression\"],\n  fields: {\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    source: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    options: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"Identifier\"),\n              Object.assign(\n                function (node: t.MetaProperty, key, val) {\n                  let property;\n                  switch (val.name) {\n                    case \"function\":\n                      property = \"sent\";\n                      break;\n                    case \"new\":\n                      property = \"target\";\n                      break;\n                    case \"import\":\n                      property = \"meta\";\n                      break;\n                  }\n                  if (!is(\"Identifier\", node.property, { name: property })) {\n                    throw new TypeError(\"Unrecognised MetaProperty\");\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"Identifier\"] },\n              ),\n            )\n          : assertNodeType(\"Identifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\nexport const classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  accessibility: {\n    validate: assertOneOf(\"public\", \"private\", \"protected\"),\n    optional: true,\n  },\n  static: {\n    default: false,\n  },\n  override: {\n    default: false,\n  },\n  computed: {\n    default: false,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  key: {\n    validate: chain(\n      (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        return function (node: any, key: string, val: any) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      })(),\n      assertNodeType(\n        \"Identifier\",\n        \"StringLiteral\",\n        \"NumericLiteral\",\n        \"BigIntLiteral\",\n        \"Expression\",\n      ),\n    ),\n  },\n});\n\nexport const classMethodOrDeclareMethodCommon = () => ({\n  ...functionCommon(),\n  ...classMethodOrPropertyCommon(),\n  params: validateArrayOfType(\n    \"Identifier\",\n    \"Pattern\",\n    \"RestElement\",\n    \"TSParameterProperty\",\n  ),\n  kind: {\n    validate: assertOneOf(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\",\n  },\n  access: {\n    validate: chain(\n      assertValueType(\"string\"),\n      assertOneOf(\"public\", \"private\", \"protected\"),\n    ),\n    optional: true,\n  },\n  decorators: {\n    validate: arrayOfType(\"Decorator\"),\n    optional: true,\n  },\n});\n\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\n    \"kind\",\n    \"key\",\n    \"params\",\n    \"body\",\n    \"computed\",\n    \"static\",\n    \"generator\",\n    \"async\",\n  ],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"ObjectPattern\", {\n  visitor: [\n    \"properties\",\n    \"typeAnnotation\",\n    \"decorators\" /* for legacy param decorators */,\n  ],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    properties: validateArrayOfType(\"RestElement\", \"ObjectProperty\"),\n  },\n});\n\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\n  \"Super\",\n  process.env.BABEL_8_BREAKING\n    ? undefined\n    : {\n        aliases: [\"Expression\"],\n      },\n);\n\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"tag\", \"typeArguments\", \"quasi\"]\n    : [\"tag\", \"typeParameters\", \"quasi\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    quasi: {\n      validate: assertNodeType(\"TemplateLiteral\"),\n    },\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: chain(\n        assertShape({\n          raw: {\n            validate: assertValueType(\"string\"),\n          },\n          cooked: {\n            validate: assertValueType(\"string\"),\n            optional: true,\n          },\n        }),\n        function templateElementCookedValidator(node: t.TemplateElement) {\n          const raw = node.value.raw;\n\n          let unterminatedCalled = false;\n\n          const error = () => {\n            // unreachable\n            throw new Error(\"Internal @babel/types error.\");\n          };\n          const { str, firstInvalidLoc } = readStringContents(\n            \"template\",\n            raw,\n            0,\n            0,\n            0,\n            {\n              unterminated() {\n                unterminatedCalled = true;\n              },\n              strictNumericEscape: error,\n              invalidEscapeSequence: error,\n              numericSeparatorInEscapeSequence: error,\n              unexpectedNumericSeparator: error,\n              invalidDigit: error,\n              invalidCodePoint: error,\n            },\n          );\n          if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n\n          node.value.cooked = firstInvalidLoc ? null : str;\n        },\n      ),\n    },\n    tail: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: validateArrayOfType(\"TemplateElement\"),\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            // For TypeScript template literal types\n            \"TSType\",\n          ),\n        ),\n        function (node: t.TemplateLiteral, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of expressions.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"boolean\"),\n              Object.assign(\n                function (node: t.YieldExpression, key, val) {\n                  if (val && !node.argument) {\n                    throw new TypeError(\n                      \"Property delegate of YieldExpression cannot be true if there is no argument\",\n                    );\n                  }\n                } as Validator,\n                { type: \"boolean\" },\n              ),\n            )\n          : assertValueType(\"boolean\"),\n      default: false,\n    },\n    argument: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2017 ---\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2019 ---\ndefineType(\"Import\", {\n  aliases: [\"Expression\"],\n});\n\n// --- ES2020 ---\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.OptionalMemberExpression, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `computed` property\n          { oneOfNodeTypes: [\"Expression\", \"Identifier\"] },\n        );\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    optional: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"boolean\")\n          : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n  },\n});\n\ndefineType(\"OptionalCallExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"callee\", \"arguments\", \"typeArguments\"]\n    : [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    arguments: validateArrayOfType(\n      \"Expression\",\n      \"SpreadElement\",\n      \"ArgumentPlaceholder\",\n    ),\n    optional: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"boolean\")\n          : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\n// --- ES2022 ---\ndefineType(\"ClassProperty\", {\n  visitor: [\"decorators\", \"variance\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"decorators\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    key: {\n      validate: chain(\n        (function () {\n          const normal = assertNodeType(\n            \"Identifier\",\n            \"StringLiteral\",\n            \"NumericLiteral\",\n            \"BigIntLiteral\",\n            \"PrivateName\",\n          );\n          const computed = assertNodeType(\"Expression\");\n\n          return function (node: any, key: string, val: any) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          };\n        })(),\n        assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"Expression\",\n          \"PrivateName\",\n        ),\n      ),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"decorators\", \"variance\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    static: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    optional: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  aliases: [\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"Private\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\", \"method\"),\n      default: \"method\",\n    },\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"],\n});\n\n// --- ES2025 ---\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/is.js":{"lineLengths":[13,0,46,13,3,21,56,37,59,48,31,26,56,17,84,70,5,17,3,27,16,10,50,3,1,0,30,0],"data":{"version":3,"names":["_shallowEqual","require","_isType","_isPlaceholderType","_index","is","type","node","opts","matches","isType","FLIPPED_ALIAS_KEYS","isPlaceholderType","expectedNode","undefined","shallowEqual"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/is.ts"],"sourcesContent":["import shallowEqual from \"../utils/shallowEqual.ts\";\nimport isType from \"./isType.ts\";\nimport isPlaceholderType from \"./isPlaceholderType.ts\";\nimport { FLIPPED_ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function is<T extends t.Node[\"type\"]>(\n  type: T,\n  node: t.Node | null | undefined,\n  opts?: undefined,\n): node is Extract<t.Node, { type: T }>;\n\nexport default function is<\n  T extends t.Node[\"type\"],\n  P extends Extract<t.Node, { type: T }>,\n>(type: T, n: t.Node | null | undefined, required: Partial<P>): n is P;\n\nexport default function is<P extends t.Node>(\n  type: string,\n  node: t.Node | null | undefined,\n  opts: Partial<P>,\n): node is P;\n\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node;\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n */\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node {\n  if (!node) return false;\n\n  const matches = isType(node.type, type);\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in FLIPPED_ALIAS_KEYS) {\n      // We can only return true if the placeholder doesn't replace a real node,\n      // but it replaces a category of nodes (an alias).\n      //\n      // t.is(\"Identifier\", node) gives some guarantees about node's shape, so we\n      // can't say that Placeholder(expectedNode: \"Identifier\") is an identifier\n      // because it doesn't have the same properties.\n      // On the other hand, t.is(\"Expression\", node) doesn't say anything about\n      // the shape of node because Expression can be many different nodes: we can,\n      // and should, safely report expression placeholders as Expressions.\n      return isPlaceholderType(node.expectedNode, type);\n    }\n    return false;\n  }\n\n  if (opts === undefined) {\n    return true;\n  } else {\n    return shallowEqual(node, opts);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AA8Be,SAASI,EAAEA,CACxBC,IAAY,EACZC,IAA+B,EAC/BC,IAAsB,EACN;EAChB,IAAI,CAACD,IAAI,EAAE,OAAO,KAAK;EAEvB,MAAME,OAAO,GAAG,IAAAC,eAAM,EAACH,IAAI,CAACD,IAAI,EAAEA,IAAI,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,IAAI,CAACD,IAAI,IAAID,IAAI,CAACD,IAAI,KAAK,aAAa,IAAIA,IAAI,IAAIK,yBAAkB,EAAE;MAUtE,OAAO,IAAAC,0BAAiB,EAACL,IAAI,CAACM,YAAY,EAAEP,IAAI,CAAC;IACnD;IACA,OAAO,KAAK;EACd;EAEA,IAAIE,IAAI,KAAKM,SAAS,EAAE;IACtB,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,IAAAC,qBAAY,EAACR,IAAI,EAAEC,IAAI,CAAC;EACjC;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isType.js":{"lineLengths":[13,0,46,13,3,25,48,39,43,37,50,56,65,15,1,0,34,0],"data":{"version":3,"names":["_index","require","isType","nodeType","targetType","ALIAS_KEYS","aliases","FLIPPED_ALIAS_KEYS","includes"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isType.ts"],"sourcesContent":["import { FLIPPED_ALIAS_KEYS, ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isType<T extends t.Node[\"type\"]>(\n  nodeType: string,\n  targetType: T,\n): nodeType is T;\n\nexport default function isType(\n  nodeType: string | null | undefined,\n  targetType: string,\n): boolean;\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\nexport default function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) return true;\n\n  // If nodeType is nullish, it can't be an alias of targetType.\n  if (nodeType == null) return false;\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  // @ts-expect-error targetType may not index ALIAS_KEYS\n  if (ALIAS_KEYS[targetType]) return false;\n\n  const aliases: Array<string> | undefined = FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases?.includes(nodeType)) return true;\n\n  return false;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAgBe,SAASC,MAAMA,CAACC,QAAgB,EAAEC,UAAkB,EAAW;EAC5E,IAAID,QAAQ,KAAKC,UAAU,EAAE,OAAO,IAAI;EAGxC,IAAID,QAAQ,IAAI,IAAI,EAAE,OAAO,KAAK;EAKlC,IAAIE,iBAAU,CAACD,UAAU,CAAC,EAAE,OAAO,KAAK;EAExC,MAAME,OAAkC,GAAGC,yBAAkB,CAACH,UAAU,CAAC;EACzE,IAAIE,OAAO,YAAPA,OAAO,CAAEE,QAAQ,CAACL,QAAQ,CAAC,EAAE,OAAO,IAAI;EAE5C,OAAO,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isPlaceholderType.js":{"lineLengths":[13,0,46,13,3,36,48,57,50,61,67,15,1,0,45,0],"data":{"version":3,"names":["_index","require","isPlaceholderType","placeholderType","targetType","aliases","PLACEHOLDERS_ALIAS","includes"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isPlaceholderType.ts"],"sourcesContent":["import { PLACEHOLDERS_ALIAS } from \"../definitions/index.ts\";\n\n/**\n * Test if a `placeholderType` is a `targetType` or if `targetType` is an alias of `placeholderType`.\n */\nexport default function isPlaceholderType(\n  placeholderType: string,\n  targetType: string,\n): boolean {\n  if (placeholderType === targetType) return true;\n\n  const aliases: Array<string> | undefined =\n    PLACEHOLDERS_ALIAS[placeholderType];\n  if (aliases?.includes(targetType)) return true;\n\n  return false;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAKe,SAASC,iBAAiBA,CACvCC,eAAuB,EACvBC,UAAkB,EACT;EACT,IAAID,eAAe,KAAKC,UAAU,EAAE,OAAO,IAAI;EAE/C,MAAMC,OAAkC,GACtCC,yBAAkB,CAACH,eAAe,CAAC;EACrC,IAAIE,OAAO,YAAPA,OAAO,CAAEE,QAAQ,CAACH,UAAU,CAAC,EAAE,OAAO,IAAI;EAE9C,OAAO,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isValidIdentifier.js":{"lineLengths":[13,0,46,13,3,36,79,51,45,17,126,19,5,3,64,1,0,45,0],"data":{"version":3,"names":["_helperValidatorIdentifier","require","isValidIdentifier","name","reserved","isKeyword","isStrictReservedWord","isIdentifierName"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isValidIdentifier.ts"],"sourcesContent":["import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,0BAAA,GAAAC,OAAA;AAUe,SAASC,iBAAiBA,CACvCC,IAAY,EACZC,QAAiB,GAAG,IAAI,EACf;EACT,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK;EAE1C,IAAIC,QAAQ,EAAE;IAEZ,IAAI,IAAAC,oCAAS,EAACF,IAAI,CAAC,IAAI,IAAAG,+CAAoB,EAACH,IAAI,EAAE,IAAI,CAAC,EAAE;MACvD,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAAI,2CAAgB,EAACJ,IAAI,CAAC;AAC/B","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/index.js":{"lineLengths":[13,0,46,13,3,52,19,20,40,3,3,52,19,20,40,3,3,53,19,20,41,3,3,45,19,20,30,3,3,50,19,20,35,3,3,64,19,20,49,3,3,60,19,20,45,3,3,56,19,20,41,3,3,45,39,0,33,0],"data":{"version":3,"names":["_identifier","require","_keyword"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/src/index.ts"],"sourcesContent":["export {\n  isIdentifierName,\n  isIdentifierChar,\n  isIdentifierStart,\n} from \"./identifier.ts\";\nexport {\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"./keyword.ts\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AAKA,IAAAC,QAAA,GAAAD,OAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/identifier.js":{"lineLengths":[13,0,46,13,3,44,44,46,4306,2670,85,106,62,2199,1165,35,20,60,18,33,22,33,3,15,1,34,36,30,36,31,23,83,3,57,1,33,36,29,30,30,36,31,23,78,3,103,1,33,21,41,32,58,41,40,62,7,5,18,22,35,21,7,39,19,5,3,18,1,0,38,0],"data":{"version":3,"names":["nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","isIdentifierName","name","isFirst","cp","charCodeAt","trail"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/src/identifier.ts"],"sourcesContent":["// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.cjs`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.cjs`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,4,51,13,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,39,27,10,22,251,41,7,1,17,2,60,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,31,9,2,0,3,0,2,37,2,0,26,0,2,0,45,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,200,32,32,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,26,3994,6,582,6842,29,1763,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,433,44,212,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,42,9,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,229,29,3,0,496,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,7,9,32,4,318,1,80,3,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,68,8,2,0,3,0,2,3,2,4,2,0,15,1,83,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,7,19,58,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,343,9,54,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,10,5350,0,7,14,11465,27,2343,9,87,9,39,4,60,6,26,9,535,9,470,0,2,54,8,3,82,0,12,1,19628,1,4178,9,519,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,245,1,2,9,726,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n"],"mappings":";;;;;;;;AAaA,IAAIA,4BAA4B,GAAG,8qIAA8qI;AAEjtI,IAAIC,uBAAuB,GAAG,+kFAA+kF;AAE7mF,MAAMC,uBAAuB,GAAG,IAAIC,MAAM,CACxC,GAAG,GAAGH,4BAA4B,GAAG,GACvC,CAAC;AACD,MAAMI,kBAAkB,GAAG,IAAID,MAAM,CACnC,GAAG,GAAGH,4BAA4B,GAAGC,uBAAuB,GAAG,GACjE,CAAC;AAEDD,4BAA4B,GAAGC,uBAAuB,GAAG,IAAI;AAQ7D,MAAMI,0BAA0B,GAAG,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,CAAC;AAEjkD,MAAMC,qBAAqB,GAAG,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAA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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/lib/keyword.js":{"lineLengths":[13,0,46,13,3,30,40,68,60,52,23,329,109,35,2,48,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,28,1,0,35,0],"data":{"version":3,"names":["reservedWords","keyword","strict","strictBind","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-validator-identifier/src/keyword.ts"],"sourcesContent":["const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n"],"mappings":";;;;;;;;;;AAAA,MAAMA,aAAa,GAAG;EACpBC,OAAO,EAAE,CACP,OAAO,EACP,MAAM,EACN,OAAO,EACP,UAAU,EACV,UAAU,EACV,SAAS,EACT,IAAI,EACJ,MAAM,EACN,SAAS,EACT,KAAK,EACL,UAAU,EACV,IAAI,EACJ,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,KAAK,EACL,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,KAAK,EACL,MAAM,EACN,OAAO,EACP,OAAO,EACP,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,MAAM,EACN,OAAO,EACP,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,MAAM,EACN,QAAQ,CACT;EACDC,MAAM,EAAE,CACN,YAAY,EACZ,WAAW,EACX,KAAK,EACL,SAAS,EACT,SAAS,EACT,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,OAAO,CACR;EACDC,UAAU,EAAE,CAAC,MAAM,EAAE,WAAW;AAClC,CAAC;AACD,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACL,aAAa,CAACC,OAAO,CAAC;AAC/C,MAAMK,sBAAsB,GAAG,IAAID,GAAG,CAACL,aAAa,CAACE,MAAM,CAAC;AAC5D,MAAMK,0BAA0B,GAAG,IAAIF,GAAG,CAACL,aAAa,CAACG,UAAU,CAAC;AAK7D,SAASK,cAAcA,CAACC,IAAY,EAAEC,QAAiB,EAAW;EACvE,OAAQA,QAAQ,IAAID,IAAI,KAAK,OAAO,IAAKA,IAAI,KAAK,MAAM;AAC1D;AAOO,SAASE,oBAAoBA,CAACF,IAAY,EAAEC,QAAiB,EAAW;EAC7E,OAAOF,cAAc,CAACC,IAAI,EAAEC,QAAQ,CAAC,IAAIJ,sBAAsB,CAACM,GAAG,CAACH,IAAI,CAAC;AAC3E;AAMO,SAASI,4BAA4BA,CAACJ,IAAY,EAAW;EAClE,OAAOF,0BAA0B,CAACK,GAAG,CAACH,IAAI,CAAC;AAC7C;AAOO,SAASK,wBAAwBA,CACtCL,IAAY,EACZC,QAAiB,EACR;EACT,OACEC,oBAAoB,CAACF,IAAI,EAAEC,QAAQ,CAAC,IAAIG,4BAA4B,CAACJ,IAAI,CAAC;AAE9E;AAEO,SAASM,SAASA,CAACN,IAAY,EAAW;EAC/C,OAAOL,QAAQ,CAACQ,GAAG,CAACH,IAAI,CAAC;AAC3B","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-string-parser/lib/index.js":{"lineLengths":[13,0,46,13,3,38,26,48,39,34,2,43,57,33,2,42,36,34,34,82,2,75,25,37,33,15,29,23,9,10,12,12,24,72,42,12,5,37,44,42,12,5,20,42,95,48,27,14,20,17,10,14,22,7,8,12,18,15,15,23,44,12,16,22,40,32,51,14,56,16,9,18,37,14,74,7,12,12,5,3,10,8,13,20,14,12,38,4,1,44,28,71,3,46,1,78,37,8,22,8,7,14,11,5,37,15,13,23,13,23,13,7,17,10,15,13,91,69,7,13,7,17,10,15,13,83,70,7,13,23,12,23,13,27,13,23,12,41,14,7,12,22,16,14,14,21,12,12,23,25,14,64,7,12,33,33,69,32,42,26,43,40,9,35,43,61,27,29,18,69,11,9,47,7,42,3,1,93,25,8,4,6,7,98,19,25,67,12,27,5,3,10,12,7,4,1,112,20,127,225,22,16,65,39,12,54,45,45,31,33,18,13,10,73,127,33,18,13,10,67,7,12,15,5,21,27,28,27,32,22,12,21,5,23,36,16,18,13,10,83,16,28,16,23,14,14,7,5,10,32,3,71,12,14,9,6,3,10,13,7,4,1,80,35,11,19,10,6,11,9,114,10,43,27,57,14,16,21,13,10,7,5,10,6,11,9,87,3,10,9,7,4,1,0,33,0],"data":{"version":3,"names":["isDigit","code","forbiddenNumericSeparatorSiblings","decBinOct","Set","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","type","input","pos","lineStart","curLine","errors","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","length","unterminated","slice","charCodeAt","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","String","fromCharCode","readCodePoint","fromCodePoint","strictNumericEscape","startPos","match","exec","octalStr","octal","parseInt","next","len","forceLen","n","readInt","invalidEscapeSequence","radix","allowNumSeparator","bailOnError","start","forbiddenSiblings","isAllowedSibling","invalid","total","i","e","Infinity","val","prev","numericSeparatorInEscapeSequence","Number","isNaN","has","unexpectedNumericSeparator","_isDigit","invalidDigit","indexOf","invalidCodePoint"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/helper-string-parser/src/index.ts"],"sourcesContent":["// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = /^[0-7]+/.exec(input.slice(startPos, pos + 2));\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n"],"mappings":";;;;;;;;eAAA,SAASA,OAAOA,CAACC,IAAI,EAAE;EACrB,OAAOA,IAAI,MAAU,IAAIA,IAAI,MAAU;AACzC,CAAC;AAID,MAAMC,iCAAiC,GAAG;EACxCC,SAAS,EAAE,IAAIC,GAAG,CAAS,kCAS1B,CAAC;EACFC,GAAG,EAAE,IAAID,GAAG,CAAS,iBAKpB;AACH,CAAC;AAED,MAAME,gCAAgC,GAAG;EAEvCC,GAAG,EAAGC,EAAU,IAAKA,EAAE,OAAqB,IAAIA,EAAE,OAAqB;EAGvEC,GAAG,EAAGD,EAAU,IAAKA,EAAE,MAAoB,IAAIA,EAAE,MAAoB;EAGrEE,GAAG,EAAGF,EAAU,IAAKA,EAAE,MAAoB,IAAIA,EAAE,MAAoB;EAGrEH,GAAG,EAAGG,EAAU,IACbA,EAAE,MAAoB,IAAIA,EAAE,MAAoB,IAChDA,EAAE,MAAwB,IAAIA,EAAE,MAAyB,IACzDA,EAAE,MAAwB,IAAIA,EAAE;AACrC,CAAC;AAUM,SAASG,kBAAkBA,CAChCC,IAAsC,EACtCC,KAAa,EACbC,GAAW,EACXC,SAAiB,EACjBC,OAAe,EACfC,MAAmC,EACnC;EACA,MAAMC,UAAU,GAAGJ,GAAG;EACtB,MAAMK,gBAAgB,GAAGJ,SAAS;EAClC,MAAMK,cAAc,GAAGJ,OAAO;EAE9B,IAAIK,GAAG,GAAG,EAAE;EACZ,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,UAAU,GAAGT,GAAG;EACpB,MAAM;IAAEU;EAAO,CAAC,GAAGX,KAAK;EACxB,SAAS;IACP,IAAIC,GAAG,IAAIU,MAAM,EAAE;MACjBP,MAAM,CAACQ,YAAY,CAACP,UAAU,EAAEC,gBAAgB,EAAEC,cAAc,CAAC;MACjEC,GAAG,IAAIR,KAAK,CAACa,KAAK,CAACH,UAAU,EAAET,GAAG,CAAC;MACnC;IACF;IACA,MAAMN,EAAE,GAAGK,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC;IAChC,IAAIc,WAAW,CAAChB,IAAI,EAAEJ,EAAE,EAAEK,KAAK,EAAEC,GAAG,CAAC,EAAE;MACrCO,GAAG,IAAIR,KAAK,CAACa,KAAK,CAACH,UAAU,EAAET,GAAG,CAAC;MACnC;IACF;IACA,IAAIN,EAAE,OAAwB,EAAE;MAC9Ba,GAAG,IAAIR,KAAK,CAACa,KAAK,CAACH,UAAU,EAAET,GAAG,CAAC;MACnC,MAAMe,GAAG,GAAGC,eAAe,CACzBjB,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACPJ,IAAI,KAAK,UAAU,EACnBK,MACF,CAAC;MACD,IAAIY,GAAG,CAACrB,EAAE,KAAK,IAAI,IAAI,CAACc,eAAe,EAAE;QACvCA,eAAe,GAAG;UAAER,GAAG;UAAEC,SAAS;UAAEC;QAAQ,CAAC;MAC/C,CAAC,MAAM;QACLK,GAAG,IAAIQ,GAAG,CAACrB,EAAE;MACf;MACA,CAAC;QAAEM,GAAG;QAAEC,SAAS;QAAEC;MAAQ,CAAC,GAAGa,GAAG;MAClCN,UAAU,GAAGT,GAAG;IAClB,CAAC,MAAM,IACLN,EAAE,SAA4B,IAC9BA,EAAE,SAAiC,EACnC;MACA,EAAEM,GAAG;MACL,EAAEE,OAAO;MACTD,SAAS,GAAGD,GAAG;IACjB,CAAC,MAAM,IAAIN,EAAE,OAAuB,IAAIA,EAAE,OAA6B,EAAE;MACvE,IAAII,IAAI,KAAK,UAAU,EAAE;QACvBS,GAAG,IAAIR,KAAK,CAACa,KAAK,CAACH,UAAU,EAAET,GAAG,CAAC,GAAG,IAAI;QAC1C,EAAEA,GAAG;QACL,IACEN,EAAE,OAA6B,IAC/BK,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC,OAAuB,EAC5C;UACA,EAAEA,GAAG;QACP;QACA,EAAEE,OAAO;QACTO,UAAU,GAAGR,SAAS,GAAGD,GAAG;MAC9B,CAAC,MAAM;QACLG,MAAM,CAACQ,YAAY,CAACP,UAAU,EAAEC,gBAAgB,EAAEC,cAAc,CAAC;MACnE;IACF,CAAC,MAAM;MACL,EAAEN,GAAG;IACP;EACF;EACA,OAEI;IACEA,GAAG;IACHiB,GAAG,EAAEV,GAAG;IACRC,eAAe;IACfP,SAAS;IACTC,OAAO;IACPgB,eAAe,EAAE,CAAC,CAACV;EACrB,CAAC;AACP;AAEA,SAASM,WAAWA,CAClBhB,IAAsC,EACtCJ,EAAU,EACVK,KAAa,EACbC,GAAW,EACX;EACA,IAAIF,IAAI,KAAK,UAAU,EAAE;IACvB,OACEJ,EAAE,OAA0B,IAC3BA,EAAE,OAAyB,IAC1BK,KAAK,CAACc,UAAU,CAACb,GAAG,GAAG,CAAC,CAAC,QAA8B;EAE7D;EACA,OACEN,EAAE,MAAMI,IAAI,KAAK,QAAQ,UAAiD,CAAC;AAE/E;AAOA,SAASkB,eAAeA,CACtBjB,KAAa,EACbC,GAAW,EACXC,SAAiB,EACjBC,OAAe,EACfiB,UAAmB,EACnBhB,MAAgC,EAChC;EACA,MAAMiB,cAAc,GAAG,CAACD,UAAU;EAClCnB,GAAG,EAAE;EAEL,MAAMe,GAAG,GAAIrB,EAAiB,KAAM;IAAEM,GAAG;IAAEN,EAAE;IAAEO,SAAS;IAAEC;EAAQ,CAAC,CAAC;EAEpE,MAAMR,EAAE,GAAGK,KAAK,CAACc,UAAU,CAACb,GAAG,EAAE,CAAC;EAClC,QAAQN,EAAE;IACR;MACE,OAAOqB,GAAG,CAAC,IAAI,CAAC;IAClB;MACE,OAAOA,GAAG,CAAC,IAAI,CAAC;IAClB;MAA2B;QACzB,IAAI5B,IAAI;QACR,CAAC;UAAEA,IAAI;UAAEa;QAAI,CAAC,GAAGqB,WAAW,CAC1BtB,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACP,CAAC,EACD,KAAK,EACLkB,cAAc,EACdjB,MACF,CAAC;QACD,OAAOY,GAAG,CAAC5B,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGmC,MAAM,CAACC,YAAY,CAACpC,IAAI,CAAC,CAAC;MAC9D;IACA;MAA2B;QACzB,IAAIA,IAAI;QACR,CAAC;UAAEA,IAAI;UAAEa;QAAI,CAAC,GAAGwB,aAAa,CAC5BzB,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACPkB,cAAc,EACdjB,MACF,CAAC;QACD,OAAOY,GAAG,CAAC5B,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGmC,MAAM,CAACG,aAAa,CAACtC,IAAI,CAAC,CAAC;MAC/D;IACA;MACE,OAAO4B,GAAG,CAAC,IAAI,CAAC;IAClB;MACE,OAAOA,GAAG,CAAC,IAAI,CAAC;IAClB;MACE,OAAOA,GAAG,CAAC,QAAQ,CAAC;IACtB;MACE,OAAOA,GAAG,CAAC,IAAI,CAAC;IAClB;MACE,IAAIhB,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC,OAAuB,EAAE;QAChD,EAAEA,GAAG;MACP;IAEF;MACEC,SAAS,GAAGD,GAAG;MACf,EAAEE,OAAO;IAEX;IACA;MACE,OAAOa,GAAG,CAAC,EAAE,CAAC;IAChB;IACA;MACE,IAAII,UAAU,EAAE;QACd,OAAOJ,GAAG,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLZ,MAAM,CAACuB,mBAAmB,CAAC1B,GAAG,GAAG,CAAC,EAAEC,SAAS,EAAEC,OAAO,CAAC;MACzD;IAEF;MACE,IAAIR,EAAE,MAAoB,IAAIA,EAAE,MAAoB,EAAE;QACpD,MAAMiC,QAAQ,GAAG3B,GAAG,GAAG,CAAC;QACxB,MAAM4B,KAAK,GAAG,SAAS,CAACC,IAAI,CAAC9B,KAAK,CAACa,KAAK,CAACe,QAAQ,EAAE3B,GAAG,GAAG,CAAC,CAAC,CAAC;QAE5D,IAAI8B,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;QAEvB,IAAIG,KAAK,GAAGC,QAAQ,CAACF,QAAQ,EAAE,CAAC,CAAC;QACjC,IAAIC,KAAK,GAAG,GAAG,EAAE;UACfD,QAAQ,GAAGA,QAAQ,CAAClB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAChCmB,KAAK,GAAGC,QAAQ,CAACF,QAAQ,EAAE,CAAC,CAAC;QAC/B;QACA9B,GAAG,IAAI8B,QAAQ,CAACpB,MAAM,GAAG,CAAC;QAC1B,MAAMuB,IAAI,GAAGlC,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC;QAClC,IACE8B,QAAQ,KAAK,GAAG,IAChBG,IAAI,OAAqB,IACzBA,IAAI,OAAqB,EACzB;UACA,IAAId,UAAU,EAAE;YACd,OAAOJ,GAAG,CAAC,IAAI,CAAC;UAClB,CAAC,MAAM;YACLZ,MAAM,CAACuB,mBAAmB,CAACC,QAAQ,EAAE1B,SAAS,EAAEC,OAAO,CAAC;UAC1D;QACF;QAEA,OAAOa,GAAG,CAACO,MAAM,CAACC,YAAY,CAACQ,KAAK,CAAC,CAAC;MACxC;MAEA,OAAOhB,GAAG,CAACO,MAAM,CAACC,YAAY,CAAC7B,EAAE,CAAC,CAAC;EACvC;AACF;AAOA,SAAS2B,WAAWA,CAClBtB,KAAa,EACbC,GAAW,EACXC,SAAiB,EACjBC,OAAe,EACfgC,GAAW,EACXC,QAAiB,EACjBf,cAAuB,EACvBjB,MAA4B,EAC5B;EACA,MAAMC,UAAU,GAAGJ,GAAG;EACtB,IAAIoC,CAAC;EACL,CAAC;IAAEA,CAAC;IAAEpC;EAAI,CAAC,GAAGqC,OAAO,CACnBtC,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACP,EAAE,EACFgC,GAAG,EACHC,QAAQ,EACR,KAAK,EACLhC,MAAM,EACY,CAACiB,cACrB,CAAC;EACD,IAAIgB,CAAC,KAAK,IAAI,EAAE;IACd,IAAIhB,cAAc,EAAE;MAClBjB,MAAM,CAACmC,qBAAqB,CAAClC,UAAU,EAAEH,SAAS,EAAEC,OAAO,CAAC;IAC9D,CAAC,MAAM;MACLF,GAAG,GAAGI,UAAU,GAAG,CAAC;IACtB;EACF;EACA,OAAO;IAAEjB,IAAI,EAAEiD,CAAC;IAAEpC;EAAI,CAAC;AACzB;AAuBO,SAASqC,OAAOA,CACrBtC,KAAa,EACbC,GAAW,EACXC,SAAiB,EACjBC,OAAe,EACfqC,KAAa,EACbL,GAAuB,EACvBC,QAAiB,EACjBK,iBAAmC,EACnCrC,MAAwB,EACxBsC,WAAoB,EACpB;EACA,MAAMC,KAAK,GAAG1C,GAAG;EACjB,MAAM2C,iBAAiB,GACrBJ,KAAK,KAAK,EAAE,GACRnD,iCAAiC,CAACG,GAAG,GACrCH,iCAAiC,CAACC,SAAS;EACjD,MAAMuD,gBAAgB,GACpBL,KAAK,KAAK,EAAE,GACR/C,gCAAgC,CAACD,GAAG,GACpCgD,KAAK,KAAK,EAAE,GACV/C,gCAAgC,CAACI,GAAG,GACpC2C,KAAK,KAAK,CAAC,GACT/C,gCAAgC,CAACG,GAAG,GACpCH,gCAAgC,CAACC,GAAG;EAE9C,IAAIoD,OAAO,GAAG,KAAK;EACnB,IAAIC,KAAK,GAAG,CAAC;EAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGd,GAAG,IAAI,IAAI,GAAGe,QAAQ,GAAGf,GAAG,EAAEa,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;IAC5D,MAAM5D,IAAI,GAAGY,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC;IAClC,IAAIkD,GAAG;IAEP,IAAI/D,IAAI,OAAyB,IAAIqD,iBAAiB,KAAK,MAAM,EAAE;MACjE,MAAMW,IAAI,GAAGpD,KAAK,CAACc,UAAU,CAACb,GAAG,GAAG,CAAC,CAAC;MACtC,MAAMiC,IAAI,GAAGlC,KAAK,CAACc,UAAU,CAACb,GAAG,GAAG,CAAC,CAAC;MAEtC,IAAI,CAACwC,iBAAiB,EAAE;QACtB,IAAIC,WAAW,EAAE,OAAO;UAAEL,CAAC,EAAE,IAAI;UAAEpC;QAAI,CAAC;QACxCG,MAAM,CAACiD,gCAAgC,CAACpD,GAAG,EAAEC,SAAS,EAAEC,OAAO,CAAC;MAClE,CAAC,MAAM,IACLmD,MAAM,CAACC,KAAK,CAACrB,IAAI,CAAC,IAClB,CAACW,gBAAgB,CAACX,IAAI,CAAC,IACvBU,iBAAiB,CAACY,GAAG,CAACJ,IAAI,CAAC,IAC3BR,iBAAiB,CAACY,GAAG,CAACtB,IAAI,CAAC,EAC3B;QACA,IAAIQ,WAAW,EAAE,OAAO;UAAEL,CAAC,EAAE,IAAI;UAAEpC;QAAI,CAAC;QACxCG,MAAM,CAACqD,0BAA0B,CAACxD,GAAG,EAAEC,SAAS,EAAEC,OAAO,CAAC;MAC5D;MAGA,EAAEF,GAAG;MACL;IACF;IAEA,IAAIb,IAAI,MAAwB,EAAE;MAChC+D,GAAG,GAAG/D,IAAI,KAAuB,KAAqB;IACxD,CAAC,MAAM,IAAIA,IAAI,MAAwB,EAAE;MACvC+D,GAAG,GAAG/D,IAAI,KAAuB,KAAqB;IACxD,CAAC,MAAM,IAAIsE,QAAA,CAAkBtE,IAAI,CAAC,EAAE;MAClC+D,GAAG,GAAG/D,IAAI,KAAmB;IAC/B,CAAC,MAAM;MACL+D,GAAG,GAAGD,QAAQ;IAChB;IACA,IAAIC,GAAG,IAAIX,KAAK,EAAE;MAGhB,IAAIW,GAAG,IAAI,CAAC,IAAIT,WAAW,EAAE;QAC3B,OAAO;UAAEL,CAAC,EAAE,IAAI;UAAEpC;QAAI,CAAC;MACzB,CAAC,MAAM,IACLkD,GAAG,IAAI,CAAC,IACR/C,MAAM,CAACuD,YAAY,CAAC1D,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEqC,KAAK,CAAC,EACnD;QACAW,GAAG,GAAG,CAAC;MACT,CAAC,MAAM,IAAIf,QAAQ,EAAE;QACnBe,GAAG,GAAG,CAAC;QACPL,OAAO,GAAG,IAAI;MAChB,CAAC,MAAM;QACL;MACF;IACF;IACA,EAAE7C,GAAG;IACL8C,KAAK,GAAGA,KAAK,GAAGP,KAAK,GAAGW,GAAG;EAC7B;EACA,IAAIlD,GAAG,KAAK0C,KAAK,IAAKR,GAAG,IAAI,IAAI,IAAIlC,GAAG,GAAG0C,KAAK,KAAKR,GAAI,IAAIW,OAAO,EAAE;IACpE,OAAO;MAAET,CAAC,EAAE,IAAI;MAAEpC;IAAI,CAAC;EACzB;EAEA,OAAO;IAAEoC,CAAC,EAAEU,KAAK;IAAE9C;EAAI,CAAC;AAC1B;AAMO,SAASwB,aAAaA,CAC3BzB,KAAa,EACbC,GAAW,EACXC,SAAiB,EACjBC,OAAe,EACfkB,cAAuB,EACvBjB,MAA8B,EAC9B;EACA,MAAMT,EAAE,GAAGK,KAAK,CAACc,UAAU,CAACb,GAAG,CAAC;EAChC,IAAIb,IAAI;EAER,IAAIO,EAAE,QAA6B,EAAE;IACnC,EAAEM,GAAG;IACL,CAAC;MAAEb,IAAI;MAAEa;IAAI,CAAC,GAAGqB,WAAW,CAC1BtB,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACPH,KAAK,CAAC4D,OAAO,CAAC,GAAG,EAAE3D,GAAG,CAAC,GAAGA,GAAG,EAC7B,IAAI,EACJoB,cAAc,EACdjB,MACF,CAAC;IACD,EAAEH,GAAG;IACL,IAAIb,IAAI,KAAK,IAAI,IAAIA,IAAI,GAAG,QAAQ,EAAE;MACpC,IAAIiC,cAAc,EAAE;QAClBjB,MAAM,CAACyD,gBAAgB,CAAC5D,GAAG,EAAEC,SAAS,EAAEC,OAAO,CAAC;MAClD,CAAC,MAAM;QACL,OAAO;UAAEf,IAAI,EAAE,IAAI;UAAEa;QAAI,CAAC;MAC5B;IACF;EACF,CAAC,MAAM;IACL,CAAC;MAAEb,IAAI;MAAEa;IAAI,CAAC,GAAGqB,WAAW,CAC1BtB,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,OAAO,EACP,CAAC,EACD,KAAK,EACLkB,cAAc,EACdjB,MACF,CAAC;EACH;EACA,OAAO;IAAEhB,IAAI;IAAEa;EAAI,CAAC;AACtB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/constants/index.js":{"lineLengths":[13,0,46,13,3,562,102,76,63,101,73,65,105,97,125,137,127,121,162,82,80,75,150,45,63,32,2,1,74,85,1,0,33,0],"data":{"version":3,"names":["STATEMENT_OR_BLOCK_KEYS","exports","FLATTENABLE_KEYS","FOR_INIT_KEYS","COMMENT_KEYS","LOGICAL_OPERATORS","UPDATE_OPERATORS","BOOLEAN_NUMBER_BINARY_OPERATORS","EQUALITY_BINARY_OPERATORS","COMPARISON_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","NUMBER_BINARY_OPERATORS","BINARY_OPERATORS","ASSIGNMENT_OPERATORS","map","op","BOOLEAN_UNARY_OPERATORS","NUMBER_UNARY_OPERATORS","STRING_UNARY_OPERATORS","UNARY_OPERATORS","INHERIT_KEYS","optional","force","BLOCK_SCOPED_SYMBOL","Symbol","for","NOT_LOCAL_BINDING"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/constants/index.ts"],"sourcesContent":["export const STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexport const FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexport const FOR_INIT_KEYS = [\"left\", \"init\"];\nexport const COMMENT_KEYS = [\n  \"leadingComments\",\n  \"trailingComments\",\n  \"innerComments\",\n] as const;\n\nexport const LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexport const UPDATE_OPERATORS = [\"++\", \"--\"];\n\nexport const BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexport const EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexport const COMPARISON_BINARY_OPERATORS = [\n  ...EQUALITY_BINARY_OPERATORS,\n  \"in\",\n  \"instanceof\",\n];\nexport const BOOLEAN_BINARY_OPERATORS = [\n  ...COMPARISON_BINARY_OPERATORS,\n  ...BOOLEAN_NUMBER_BINARY_OPERATORS,\n];\nexport const NUMBER_BINARY_OPERATORS = [\n  \"-\",\n  \"/\",\n  \"%\",\n  \"*\",\n  \"**\",\n  \"&\",\n  \"|\",\n  \">>\",\n  \">>>\",\n  \"<<\",\n  \"^\",\n];\nexport const BINARY_OPERATORS = [\n  \"+\",\n  ...NUMBER_BINARY_OPERATORS,\n  ...BOOLEAN_BINARY_OPERATORS,\n  \"|>\",\n];\n\nexport const ASSIGNMENT_OPERATORS = [\n  \"=\",\n  \"+=\",\n  ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"),\n  ...LOGICAL_OPERATORS.map(op => op + \"=\"),\n];\n\nexport const BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexport const NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexport const STRING_UNARY_OPERATORS = [\"typeof\"];\nexport const UNARY_OPERATORS = [\n  \"void\",\n  \"throw\",\n  ...BOOLEAN_UNARY_OPERATORS,\n  ...NUMBER_UNARY_OPERATORS,\n  ...STRING_UNARY_OPERATORS,\n];\n\nexport const INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"],\n} as const;\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  // eslint-disable-next-line no-restricted-globals\n  exports.BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\n  // eslint-disable-next-line no-restricted-globals\n  exports.NOT_LOCAL_BINDING = Symbol.for(\n    \"should not be considered a local binding\",\n  );\n}\n"],"mappings":";;;;;;AAAO,MAAMA,uBAAuB,GAAAC,OAAA,CAAAD,uBAAA,GAAG,CAAC,YAAY,EAAE,MAAM,EAAE,WAAW,CAAC;AACnE,MAAME,gBAAgB,GAAAD,OAAA,CAAAC,gBAAA,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC;AAChD,MAAMC,aAAa,GAAAF,OAAA,CAAAE,aAAA,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AACtC,MAAMC,YAAY,GAAAH,OAAA,CAAAG,YAAA,GAAG,CAC1B,iBAAiB,EACjB,kBAAkB,EAClB,eAAe,CACP;AAEH,MAAMC,iBAAiB,GAAAJ,OAAA,CAAAI,iBAAA,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5C,MAAMC,gBAAgB,GAAAL,OAAA,CAAAK,gBAAA,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAErC,MAAMC,+BAA+B,GAAAN,OAAA,CAAAM,+BAAA,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;AAC9D,MAAMC,yBAAyB,GAAAP,OAAA,CAAAO,yBAAA,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AAC5D,MAAMC,2BAA2B,GAAAR,OAAA,CAAAQ,2BAAA,GAAG,CACzC,GAAGD,yBAAyB,EAC5B,IAAI,EACJ,YAAY,CACb;AACM,MAAME,wBAAwB,GAAAT,OAAA,CAAAS,wBAAA,GAAG,CACtC,GAAGD,2BAA2B,EAC9B,GAAGF,+BAA+B,CACnC;AACM,MAAMI,uBAAuB,GAAAV,OAAA,CAAAU,uBAAA,GAAG,CACrC,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAG,EACH,GAAG,EACH,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,GAAG,CACJ;AACM,MAAMC,gBAAgB,GAAAX,OAAA,CAAAW,gBAAA,GAAG,CAC9B,GAAG,EACH,GAAGD,uBAAuB,EAC1B,GAAGD,wBAAwB,EAC3B,IAAI,CACL;AAEM,MAAMG,oBAAoB,GAAAZ,OAAA,CAAAY,oBAAA,GAAG,CAClC,GAAG,EACH,IAAI,EACJ,GAAGF,uBAAuB,CAACG,GAAG,CAACC,EAAE,IAAIA,EAAE,GAAG,GAAG,CAAC,EAC9C,GAAGV,iBAAiB,CAACS,GAAG,CAACC,EAAE,IAAIA,EAAE,GAAG,GAAG,CAAC,CACzC;AAEM,MAAMC,uBAAuB,GAAAf,OAAA,CAAAe,uBAAA,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;AAC/C,MAAMC,sBAAsB,GAAAhB,OAAA,CAAAgB,sBAAA,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC9C,MAAMC,sBAAsB,GAAAjB,OAAA,CAAAiB,sBAAA,GAAG,CAAC,QAAQ,CAAC;AACzC,MAAMC,eAAe,GAAAlB,OAAA,CAAAkB,eAAA,GAAG,CAC7B,MAAM,EACN,OAAO,EACP,GAAGH,uBAAuB,EAC1B,GAAGC,sBAAsB,EACzB,GAAGC,sBAAsB,CAC1B;AAEM,MAAME,YAAY,GAAAnB,OAAA,CAAAmB,YAAA,GAAG;EAC1BC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,CAAC;EAC5DC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK;AAC/B,CAAU;AAEqC;EAE7CrB,OAAO,CAACsB,mBAAmB,GAAGC,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAEvExB,OAAO,CAACyB,iBAAiB,GAAGF,MAAM,CAACC,GAAG,CACpC,0CACF,CAAC;AACH","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/utils.js":{"lineLengths":[13,0,46,13,3,212,26,34,32,54,40,34,60,34,42,22,29,46,28,50,44,52,36,41,53,47,43,59,45,47,53,69,23,27,19,28,18,10,22,3,1,29,10,12,4,1,37,48,1,37,10,13,18,4,1,45,10,43,18,4,1,31,66,1,36,47,1,44,45,1,31,97,38,36,14,20,18,30,7,6,33,23,32,38,5,3,28,19,1,33,37,32,130,5,3,26,18,1,55,35,34,25,10,22,5,37,52,26,39,53,15,7,38,35,44,57,19,11,9,7,5,157,3,34,18,1,42,37,39,31,66,53,15,7,5,181,3,41,18,1,32,37,32,13,5,92,3,23,18,1,29,34,37,22,34,11,85,23,41,37,19,9,20,7,5,24,115,5,3,27,18,1,37,27,17,23,18,13,12,18,46,37,33,17,7,48,37,33,17,7,12,5,207,3,18,1,24,30,27,18,5,3,25,94,115,3,18,1,118,82,17,40,31,31,19,32,139,47,29,5,65,35,27,4,1,38,63,27,16,16,26,63,31,43,34,83,93,9,23,49,35,39,34,10,7,5,3,57,57,73,38,32,63,5,3,29,49,3,46,36,3,42,30,64,28,5,38,27,58,63,5,41,35,70,7,5,3,46,46,43,44,28,64,41,5,22,50,3,21,1,0,33,0],"data":{"version":3,"names":["_is","require","_validate","VISITOR_KEYS","exports","ALIAS_KEYS","FLIPPED_ALIAS_KEYS","NODE_FIELDS","BUILDER_KEYS","DEPRECATED_KEYS","NODE_PARENT_VALIDATIONS","getType","val","Array","isArray","validate","validateType","typeNames","assertNodeType","validateOptional","optional","validateOptionalType","arrayOf","elementType","chain","assertValueType","assertEach","arrayOfType","validateArrayOfType","callback","childValidator","process","env","BABEL_TYPES_8_BREAKING","validateChild","validator","node","key","i","subKey","toString","length","v","each","assertOneOf","values","includes","TypeError","JSON","stringify","oneOf","allExpandedTypes","types","expandedTypes","Set","push","set","valType","type","has","is","oneOfNodeTypes","assertNodeOrValueType","primitiveType","oneOfNodeOrValueTypes","assertShape","shape","keys","Object","errors","property","validateField","error","message","join","shapeOf","assertOptionalChainStart","_current","current","callee","object","fns","args","fn","chainOf","Error","validTypeOpts","validFieldKeys","store","defineAliasedType","aliases","opts","defined","_store$opts$inherits$","inherits","slice","additional","filter","a","unshift","defineType","fields","getOwnPropertyNames","field","def","default","deprecated","visitor","builder","k","deprecatedAlias","concat","undefined","forEach","alias"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/utils.ts"],"sourcesContent":["import is from \"../validators/is.ts\";\nimport { validateField, validateChild } from \"../validators/validate.ts\";\nimport type * as t from \"../index.ts\";\n\nexport const VISITOR_KEYS: Record<string, string[]> = {};\nexport const ALIAS_KEYS: Partial<Record<NodeTypesWithoutComment, string[]>> =\n  {};\nexport const FLIPPED_ALIAS_KEYS: Record<string, NodeTypesWithoutComment[]> = {};\nexport const NODE_FIELDS: Record<string, FieldDefinitions> = {};\nexport const BUILDER_KEYS: Record<string, string[]> = {};\nexport const DEPRECATED_KEYS: Record<string, NodeTypesWithoutComment> = {};\nexport const NODE_PARENT_VALIDATIONS: Record<string, Validator> = {};\n\nfunction getType(val: any) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\ntype NodeTypesWithoutComment = t.Node[\"type\"] | keyof t.Aliases;\n\ntype NodeTypes = NodeTypesWithoutComment | t.Comment[\"type\"];\n\ntype PrimitiveTypes = ReturnType<typeof getType>;\n\ntype FieldDefinitions = {\n  [x: string]: FieldOptions;\n};\n\ntype DefineTypeOpts = {\n  fields?: FieldDefinitions;\n  visitor?: Array<string>;\n  aliases?: Array<string>;\n  builder?: Array<string>;\n  inherits?: NodeTypes;\n  deprecatedAlias?: string;\n  validate?: Validator;\n};\n\nexport type Validator = (\n  | { type: PrimitiveTypes }\n  | { each: Validator }\n  | { chainOf: Validator[] }\n  | { oneOf: any[] }\n  | { oneOfNodeTypes: NodeTypes[] }\n  | { oneOfNodeOrValueTypes: (NodeTypes | PrimitiveTypes)[] }\n  | { shapeOf: { [x: string]: FieldOptions } }\n  | object\n) &\n  ((node: t.Node, key: string | { toString(): string }, val: any) => void);\n\nexport type FieldOptions = {\n  default?: string | number | boolean | [];\n  optional?: boolean;\n  deprecated?: boolean;\n  validate?: Validator;\n};\n\nexport function validate(validate: Validator): FieldOptions {\n  return { validate };\n}\n\nexport function validateType(...typeNames: NodeTypes[]) {\n  return validate(assertNodeType(...typeNames));\n}\n\nexport function validateOptional(validate: Validator): FieldOptions {\n  return { validate, optional: true };\n}\n\nexport function validateOptionalType(...typeNames: NodeTypes[]): FieldOptions {\n  return { validate: assertNodeType(...typeNames), optional: true };\n}\n\nexport function arrayOf(elementType: Validator): Validator {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nexport function arrayOfType(...typeNames: NodeTypes[]) {\n  return arrayOf(assertNodeType(...typeNames));\n}\n\nexport function validateArrayOfType(...typeNames: NodeTypes[]) {\n  return validate(arrayOfType(...typeNames));\n}\n\nexport function assertEach(callback: Validator): Validator {\n  const childValidator = process.env.BABEL_TYPES_8_BREAKING\n    ? validateChild\n    : () => {};\n\n  function validator(node: t.Node, key: string, val: any) {\n    if (!Array.isArray(val)) return;\n\n    let i = 0;\n    // We lazily concatenate strings here for performance reasons.\n    // Concatenating the strings is expensive because we are actually concatenating a string and a number,\n    // so V8 cannot just create a \"rope string\" but has to allocate memory for the string resulting from the number\n    // This string is very rarely used, only in error paths, so we can skip the concatenation cost in most cases\n    const subKey = {\n      toString() {\n        return `${key}[${i}]`;\n      },\n    };\n\n    for (; i < val.length; i++) {\n      const v = val[i];\n      callback(node, subKey, v);\n      childValidator(node, subKey, v);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nexport function assertOneOf(...values: Array<any>): Validator {\n  function validate(node: any, key: string, val: any) {\n    if (!values.includes(val)) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          values,\n        )} but got ${JSON.stringify(val)}`,\n      );\n    }\n  }\n\n  validate.oneOf = values;\n\n  return validate;\n}\n\nexport const allExpandedTypes: {\n  types: NodeTypes[];\n  set: Set<string>;\n}[] = [];\n\nexport function assertNodeType(...types: NodeTypes[]): Validator {\n  const expandedTypes = new Set<string>();\n\n  allExpandedTypes.push({ types, set: expandedTypes });\n\n  function validate(node: t.Node, key: string, val: any) {\n    const valType = val?.type;\n    if (valType != null) {\n      if (expandedTypes.has(valType)) {\n        validateChild(node, key, val);\n        return;\n      }\n      if (valType === \"Placeholder\") {\n        for (const type of types) {\n          if (is(type, val)) {\n            validateChild(node, key, val);\n            return;\n          }\n        }\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(valType)}`,\n    );\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(\n  ...types: (NodeTypes | PrimitiveTypes)[]\n): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const primitiveType = getType(val);\n    for (const type of types) {\n      if (primitiveType === type || is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nexport function assertValueType(type: PrimitiveTypes): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    if (getType(val) === type) {\n      return;\n    }\n\n    throw new TypeError(\n      `Property ${key} expected type of ${type} but got ${getType(val)}`,\n    );\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nexport function assertShape(shape: { [x: string]: FieldOptions }): Validator {\n  const keys = Object.keys(shape);\n  function validate(node: t.Node, key: string, val: any) {\n    const errors = [];\n    for (const property of keys) {\n      try {\n        validateField(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n        throw error;\n      }\n    }\n    if (errors.length) {\n      throw new TypeError(\n        `Property ${key} of ${\n          node.type\n        } expected to have the following:\\n${errors.join(\"\\n\")}`,\n      );\n    }\n  }\n\n  validate.shapeOf = shape;\n\n  return validate;\n}\n\nexport function assertOptionalChainStart(): Validator {\n  function validate(node: t.Node) {\n    let current = node;\n    while (node) {\n      const { type } = current;\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(\n      `Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${current?.type}`,\n    );\n  }\n\n  return validate;\n}\n\nexport function chain(...fns: Array<Validator>): Validator {\n  function validate(...args: Parameters<Validator>) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n  validate.chainOf = fns;\n\n  if (\n    fns.length >= 2 &&\n    \"type\" in fns[0] &&\n    fns[0].type === \"array\" &&\n    !(\"each\" in fns[1])\n  ) {\n    throw new Error(\n      `An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`,\n    );\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = new Set([\n  \"aliases\",\n  \"builder\",\n  \"deprecatedAlias\",\n  \"fields\",\n  \"inherits\",\n  \"visitor\",\n  \"validate\",\n]);\nconst validFieldKeys = new Set([\n  \"default\",\n  \"optional\",\n  \"deprecated\",\n  \"validate\",\n]);\n\nconst store = {} as Record<string, DefineTypeOpts>;\n\n// Wraps defineType to ensure these aliases are included.\nexport function defineAliasedType(...aliases: string[]) {\n  return (type: string, opts: DefineTypeOpts = {}) => {\n    let defined = opts.aliases;\n    if (!defined) {\n      if (opts.inherits) defined = store[opts.inherits].aliases?.slice();\n      defined ??= [];\n      opts.aliases = defined;\n    }\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    defineType(type, opts);\n  };\n}\n\nexport default function defineType(type: string, opts: DefineTypeOpts = {}) {\n  const inherits = (opts.inherits && store[opts.inherits]) || {};\n\n  let fields = opts.fields;\n  if (!fields) {\n    fields = {};\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n        if (\n          Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\"\n        ) {\n          throw new Error(\n            \"field defaults can only be primitives or empty arrays currently\",\n          );\n        }\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          deprecated: field.deprecated,\n          validate: field.validate,\n        };\n      }\n    }\n  }\n\n  const visitor: Array<string> = opts.visitor || inherits.visitor || [];\n  const aliases: Array<string> = opts.aliases || inherits.aliases || [];\n  const builder: Array<string> =\n    opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (!validTypeOpts.has(k)) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type as NodeTypesWithoutComment;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && !builder.includes(key)) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (!validFieldKeys.has(k)) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type as NodeTypesWithoutComment] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type as NodeTypesWithoutComment);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/flow.js":{"lineLengths":[13,0,33,35,57,40,49,20,57,110,61,27,49,83,88,25,88,90,13,60,6,5,2,33,45,3,35,27,24,11,53,3,3,37,45,3,44,21,24,11,71,3,3,41,45,3,31,36,11,47,82,3,3,39,31,18,31,59,11,47,68,3,3,43,29,34,26,59,11,64,53,81,3,3,36,30,59,11,62,3,3,32,45,59,11,47,81,47,3,3,33,49,59,11,47,81,60,58,3,3,31,18,59,11,46,3,3,40,65,59,25,58,117,62,81,28,3,43,36,59,25,54,86,28,3,33,21,29,11,43,3,3,36,23,3,38,62,70,24,11,81,65,64,64,52,3,3,33,38,11,57,57,82,3,3,37,36,24,11,74,82,3,3,33,28,3,32,36,11,74,82,3,3,47,39,31,24,11,87,58,3,3,42,21,24,11,68,3,3,35,45,3,35,45,3,38,30,24,11,56,3,3,43,21,24,11,70,3,3,36,45,3,36,73,24,82,11,112,15,61,21,17,6,21,66,21,17,6,20,66,21,17,6,12,55,20,6,81,3,3,38,27,59,33,11,47,48,75,73,72,3,3,38,21,33,11,48,72,3,3,33,46,46,33,11,55,46,48,73,58,3,3,34,40,33,11,65,48,78,73,72,75,59,72,3,3,40,24,33,11,50,3,3,26,61,59,11,47,81,60,50,3,3,39,35,35,11,47,84,3,3,43,21,24,11,70,3,3,36,45,3,36,45,3,34,45,3,35,21,24,11,68,3,3,36,24,24,11,50,3,3,25,45,59,11,47,81,47,3,3,30,30,11,56,3,3,34,44,47,11,55,62,3,3,29,44,11,70,62,58,58,3,3,40,22,11,74,3,3,42,22,11,69,3,3,35,21,24,11,68,3,3,24,20,11,72,3,3,34,45,3,31,40,26,11,47,107,3,3,31,24,23,11,79,66,83,3,3,30,24,23,11,79,65,83,3,3,30,24,23,11,79,88,83,3,3,30,24,23,11,68,83,3,3,33,26,18,26,11,47,52,3,3,32,26,26,11,47,52,3,3,32,26,26,11,47,51,3,3,35,26,18,11,46,3,3,33,39,24,11,53,51,3,3,41,39,24,11,53,52,74,3,3,0,32,0],"data":{"version":3,"names":["_core","require","_utils","defineType","defineAliasedType","defineInterfaceishType","name","isDeclareClass","builder","visitor","aliases","fields","Object","assign","id","validateType","typeParameters","validateOptionalType","extends","validateOptional","arrayOfType","mixins","implements","body","elementType","value","validate","assertValueType","predicate","kind","assertOneOf","typeAnnotation","right","supertype","impltype","declaration","specifiers","source","default","importAttributes","exportKind","params","validateArrayOfType","rest","this","returnType","optional","types","properties","indexers","callProperties","internalSlots","exact","inexact","static","method","key","variance","proto","argument","qualification","expression","bound","explicitType","members","hasUnknownMembers","init","objectType","indexType"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/flow.ts"],"sourcesContent":["import { importAttributes } from \"./core.ts\";\nimport {\n  defineAliasedType,\n  arrayOfType,\n  assertOneOf,\n  assertValueType,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Flow\");\n\nconst defineInterfaceishType = (\n  name: \"DeclareClass\" | \"DeclareInterface\" | \"InterfaceDeclaration\",\n) => {\n  const isDeclareClass = name === \"DeclareClass\";\n\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\n      \"id\",\n      \"typeParameters\",\n      \"extends\",\n      ...(isDeclareClass ? [\"mixins\", \"implements\"] : []),\n      \"body\",\n    ],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: validateType(\"Identifier\"),\n      typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n      extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      ...(isDeclareClass\n        ? {\n            mixins: validateOptional(arrayOfType(\"InterfaceExtends\")),\n            implements: validateOptional(arrayOfType(\"ClassImplements\")),\n          }\n        : {}),\n      body: validateType(\"ObjectTypeAnnotation\"),\n    },\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareClass\");\n\ndefineType(\"DeclareFunction\", {\n  builder: [\"id\"],\n  visitor: [\"id\", \"predicate\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    predicate: validateOptionalType(\"DeclaredPredicate\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareInterface\");\n\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\", \"StringLiteral\"),\n    body: validateType(\"BlockStatement\"),\n    kind: validateOptional(assertOneOf(\"CommonJS\", \"ES\")),\n  },\n});\n\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateOptionalType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\", \"attributes\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: validateOptionalType(\"Flow\"),\n    specifiers: validateOptional(\n      arrayOfType(\"ExportSpecifier\", \"ExportNamespaceSpecifier\"),\n    ),\n    source: validateOptionalType(\"StringLiteral\"),\n    default: validateOptional(assertValueType(\"boolean\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\", \"attributes\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: validateType(\"StringLiteral\"),\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: validateType(\"Flow\"),\n  },\n});\n\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"],\n});\n\ndefineType(\"FunctionTypeAnnotation\", {\n  builder: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  visitor: [\"typeParameters\", \"this\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    params: validateArrayOfType(\"FunctionTypeParam\"),\n    rest: validateOptionalType(\"FunctionTypeParam\"),\n    this: validateOptionalType(\"FunctionTypeParam\"),\n    returnType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: validateOptionalType(\"Identifier\"),\n    typeAnnotation: validateType(\"FlowType\"),\n    optional: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"],\n});\n\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"InterfaceDeclaration\");\n\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n    body: validateType(\"ObjectTypeAnnotation\"),\n  },\n});\n\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"number\")),\n  },\n});\n\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\n    \"properties\",\n    \"indexers\",\n    \"callProperties\",\n    \"internalSlots\",\n    \"exact\",\n  ],\n  fields: {\n    properties: validate(\n      arrayOfType(\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"),\n    ),\n    indexers: {\n      validate: arrayOfType(\"ObjectTypeIndexer\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    callProperties: {\n      validate: arrayOfType(\"ObjectTypeCallProperty\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    internalSlots: {\n      validate: arrayOfType(\"ObjectTypeInternalSlot\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    exact: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    // If the inexact flag is present then this is an object type, and not a\n    // declare class, declare interface, or interface. If it is true, the\n    // object uses ... to express that it is inexact.\n    inexact: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\"],\n  builder: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    value: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n    static: validate(assertValueType(\"boolean\")),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"variance\", \"id\", \"key\", \"value\"],\n  builder: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateOptionalType(\"Identifier\"),\n    key: validateType(\"FlowType\"),\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: validateType(\"Identifier\", \"StringLiteral\"),\n    value: validateType(\"FlowType\"),\n    kind: validate(assertOneOf(\"init\", \"get\", \"set\")),\n    static: validate(assertValueType(\"boolean\")),\n    proto: validate(assertValueType(\"boolean\")),\n    optional: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"qualification\", \"id\"],\n  builder: [\"id\", \"qualification\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    qualification: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n  },\n});\n\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"string\")),\n  },\n});\n\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: validate(assertValueType(\"string\")),\n    bound: validateOptionalType(\"TypeAnnotation\"),\n    default: validateOptionalType(\"FlowType\"),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"TypeParameter\")),\n  },\n});\n\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: validate(assertOneOf(\"minus\", \"plus\")),\n  },\n});\n\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\n// Enums\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    body: validateType(\n      \"EnumBooleanBody\",\n      \"EnumNumberBody\",\n      \"EnumStringBody\",\n      \"EnumSymbolBody\",\n    ),\n  },\n});\n\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumBooleanMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumNumberMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumStringMember\", \"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  builder: [\"id\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"BooleanLiteral\"),\n  },\n});\n\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"NumericLiteral\"),\n  },\n});\n\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n  },\n});\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/jsx.js":{"lineLengths":[13,0,35,56,28,29,25,11,11,80,6,12,21,114,5,3,3,33,20,25,11,11,103,5,3,3,26,75,60,39,25,21,63,6,21,21,63,6,129,6,18,55,20,5,4,3,37,38,26,25,11,17,78,5,3,3,30,26,25,11,17,56,5,3,3,29,20,11,11,53,5,3,3,35,34,11,13,82,6,15,59,5,3,3,33,33,11,16,59,6,11,59,5,3,3,33,49,69,25,25,11,103,6,18,20,6,86,20,73,20,5,6,21,75,20,5,4,3,34,24,11,15,56,5,3,3,23,25,21,11,12,53,5,3,3,27,62,62,39,11,22,64,6,22,64,6,129,3,3,34,24,3,34,24,3,0,31,0],"data":{"version":3,"names":["_utils","require","defineType","defineAliasedType","visitor","aliases","fields","name","validate","assertNodeType","value","optional","builder","Object","assign","openingElement","closingElement","children","validateArrayOfType","selfClosing","assertValueType","expression","object","property","namespace","default","attributes","typeArguments","typeParameters","argument","openingFragment","closingFragment"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/jsx.ts"],"sourcesContent":["import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  validateArrayOfType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: validateArrayOfType(\n      \"JSXText\",\n      \"JSXExpressionContainer\",\n      \"JSXSpreadChild\",\n      \"JSXElement\",\n      \"JSXFragment\",\n    ),\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"name\", \"typeArguments\", \"attributes\"]\n    : [\"name\", \"typeParameters\", \"typeArguments\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: validateArrayOfType(\"JSXAttribute\", \"JSXSpreadAttribute\"),\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: validateArrayOfType(\n      \"JSXText\",\n      \"JSXExpressionContainer\",\n      \"JSXSpreadChild\",\n      \"JSXElement\",\n      \"JSXFragment\",\n    ),\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/misc.js":{"lineLengths":[13,0,35,49,33,66,1,22,15,5,1,27,14,36,25,11,56,6,19,70,5,36,3,37,20,11,11,53,5,3,3,0,32,0],"data":{"version":3,"names":["_utils","require","_placeholders","_core","defineType","defineAliasedType","visitor","builder","fields","Object","assign","name","validate","assertNodeType","expectedNode","assertOneOf","PLACEHOLDERS","patternLikeCommon","assertValueType"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/misc.ts"],"sourcesContent":["import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils.ts\";\nimport { PLACEHOLDERS } from \"./placeholders.ts\";\nimport { patternLikeCommon } from \"./core.ts\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n    ...patternLikeCommon(),\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAEA,MAAMG,UAAU,GAAG,IAAAC,wBAAiB,EAAC,eAAe,CAAC;AAElB;EACjCD,UAAU,CAAC,MAAM,EAAE;IACjBE,OAAO,EAAE;EACX,CAAC,CAAC;AACJ;AAEAF,UAAU,CAAC,aAAa,EAAE;EACxBE,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,CAAC,cAAc,EAAE,MAAM,CAAC;EAEjCC,MAAM,EAAAC,MAAA,CAAAC,MAAA;IACJC,IAAI,EAAE;MACJC,QAAQ,EAAE,IAAAC,qBAAc,EAAC,YAAY;IACvC,CAAC;IACDC,YAAY,EAAE;MACZF,QAAQ,EAAE,IAAAG,kBAAW,EAAC,GAAGC,0BAAY;IACvC;EAAC,GACE,IAAAC,uBAAiB,EAAC,CAAC;AAE1B,CAAC,CAAC;AAEFb,UAAU,CAAC,uBAAuB,EAAE;EAClCG,OAAO,EAAE,CAAC,MAAM,CAAC;EACjBC,MAAM,EAAE;IACNG,IAAI,EAAE;MACJC,QAAQ,EAAE,IAAAM,sBAAe,EAAC,QAAQ;IACpC;EACF;AACF,CAAC,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/placeholders.js":{"lineLengths":[13,0,46,13,3,96,35,160,57,29,34,2,34,40,70,1,75,49,45,66,45,5,49,5,3,0,40,0],"data":{"version":3,"names":["_utils","require","PLACEHOLDERS","exports","PLACEHOLDERS_ALIAS","Declaration","Pattern","type","alias","ALIAS_KEYS","length","PLACEHOLDERS_FLIPPED_ALIAS","Object","keys","forEach","hasOwnProperty","call","push"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/placeholders.ts"],"sourcesContent":["import { ALIAS_KEYS } from \"./utils.ts\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwn(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEO,MAAMC,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAG,CAC1B,YAAY,EACZ,eAAe,EACf,YAAY,EACZ,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,WAAW,EACX,SAAS,CACD;AAEH,MAAME,kBAA4C,GAAAD,OAAA,CAAAC,kBAAA,GAAG;EAC1DC,WAAW,EAAE,CAAC,WAAW,CAAC;EAC1BC,OAAO,EAAE,CAAC,aAAa,EAAE,MAAM;AACjC,CAAC;AAED,KAAK,MAAMC,IAAI,IAAIL,YAAY,EAAE;EAC/B,MAAMM,KAAK,GAAGC,iBAAU,CAACF,IAAI,CAAC;EAC9B,IAAIC,KAAK,YAALA,KAAK,CAAEE,MAAM,EAAEN,kBAAkB,CAACG,IAAI,CAAC,GAAGC,KAAK;AACrD;AAEO,MAAMG,0BAAoD,GAAAR,OAAA,CAAAQ,0BAAA,GAAG,CAAC,CAAC;AAEtEC,MAAM,CAACC,IAAI,CAACT,kBAAkB,CAAC,CAACU,OAAO,CAACP,IAAI,IAAI;EAC9CH,kBAAkB,CAACG,IAAI,CAAC,CAACO,OAAO,CAACN,KAAK,IAAI;IACxC,IAAI,CAACO,cAAA,CAAAC,IAAA,CAAcL,0BAA0B,EAAEH,KAAK,CAAC,EAAE;MACrDG,0BAA0B,CAACH,KAAK,CAAC,GAAG,EAAE;IACxC;IACAG,0BAA0B,CAACH,KAAK,CAAC,CAACS,IAAI,CAACV,IAAI,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/experimental.js":{"lineLengths":[13,0,35,47,39,32,26,49,13,41,38,8,6,13,41,38,8,5,7,13,56,6,13,56,5,3,3,34,26,11,17,56,5,3,3,37,20,29,26,11,11,60,6,12,55,20,5,3,3,47,24,31,11,15,56,5,3,3,41,26,26,11,82,3,3,40,11,15,71,17,5,4,24,25,3,1,41,23,13,14,55,7,6,62,5,1,41,20,11,11,53,5,4,25,3,39,25,3,48,26,26,11,17,56,5,4,25,3,45,22,22,11,13,56,5,4,25,3,54,25,3,0,40,0],"data":{"version":3,"names":["_utils","require","defineType","visitor","aliases","fields","process","env","BABEL_TYPES_8_BREAKING","object","validate","Object","assign","oneOfNodeTypes","callee","assertNodeType","expression","builder","body","async","assertValueType","default","exported","properties","validateArrayOfType","elements","arrayOfType","value"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/experimental.ts"],"sourcesContent":["import defineType, {\n  arrayOfType,\n  assertNodeType,\n  assertValueType,\n  validateArrayOfType,\n} from \"./utils.ts\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          object: {\n            validate: Object.assign(() => {}, {\n              oneOfNodeTypes: [\"Expression\"],\n            }),\n          },\n          callee: {\n            validate: Object.assign(() => {}, {\n              oneOfNodeTypes: [\"Expression\"],\n            }),\n          },\n        }\n      : {\n          object: {\n            validate: assertNodeType(\"Expression\"),\n          },\n          callee: {\n            validate: assertNodeType(\"Expression\"),\n          },\n        },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: validateArrayOfType(\"ObjectProperty\", \"SpreadElement\"),\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: arrayOfType(\"Expression\", \"SpreadElement\"),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"DecimalLiteral\", {\n    builder: [\"value\"],\n    fields: {\n      value: {\n        validate: assertValueType(\"string\"),\n      },\n    },\n    aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n  });\n}\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/typescript.js":{"lineLengths":[13,0,35,33,41,63,52,47,15,69,18,4,19,79,18,3,3,35,20,25,11,20,74,20,6,15,55,20,6,16,77,6,15,55,20,6,17,53,20,5,3,3,33,40,60,101,3,31,75,108,3,31,28,29,11,51,49,3,3,43,81,112,74,3,43,29,62,38,2,76,81,39,46,13,18,4,46,3,35,29,37,55,49,73,11,21,53,5,4,3,33,29,69,85,11,63,5,4,3,32,29,44,11,49,47,62,72,3,3,271,36,20,38,16,14,5,1,26,36,14,12,3,21,22,61,2,61,38,4,64,59,48,4,4,31,22,42,11,55,88,3,3,31,22,47,58,11,72,73,47,3,3,27,22,42,11,71,88,3,3,29,22,23,11,61,3,3,27,22,27,11,51,3,3,27,22,28,11,81,3,3,30,22,30,11,54,3,3,26,22,30,11,54,3,3,34,36,48,11,50,15,21,20,6,51,3,3,29,22,21,11,52,3,2,47,54,33,22,65,11,50,52,49,49,3,3,27,22,29,11,62,3,3,35,22,30,11,54,3,3,30,22,30,11,74,54,3,3,35,22,39,11,51,49,3,3,28,22,59,59,29,62,6,91,91,63,56,4,3,37,36,31,11,63,12,161,52,181,9,8,5,3,3,29,36,23,11,14,29,94,59,140,47,58,59,61,18,39,11,9,144,25,9,5,3,3,1,47,24,46,13,59,86,5,5,1,38,40,55,11,48,47,83,100,53,3,3,31,20,11,58,3,3,38,40,54,11,48,47,83,54,3,3,41,26,44,11,55,88,3,3,26,49,44,11,55,54,3,2,47,54,31,49,44,11,55,54,3,3,26,23,11,60,3,3,1,35,42,31,13,50,48,49,63,66,58,5,5,1,28,33,11,64,63,3,3,35,40,26,25,11,72,6,47,6,46,6,64,74,4,3,29,66,20,11,54,3,3,28,22,55,66,11,56,64,89,14,63,20,5,3,3,41,40,37,29,40,6,47,91,17,57,20,5,4,3,41,26,11,57,3,3,35,49,26,11,54,3,3,34,25,26,11,54,3,3,44,25,18,11,46,3,3,32,30,11,21,52,5,3,3,44,22,11,53,3,3,42,22,11,62,3,3,31,45,37,11,11,53,6,9,55,20,6,10,55,20,6,12,55,20,6,17,53,20,6,14,53,20,5,3,3,0,38,0],"data":{"version":3,"names":["_utils","require","_core","_is","defineType","defineAliasedType","bool","assertValueType","tSFunctionTypeAnnotationCommon","returnType","validate","assertNodeType","optional","typeParameters","aliases","visitor","fields","accessibility","assertOneOf","readonly","parameter","override","decorators","arrayOfType","Object","assign","functionDeclarationCommon","classMethodOrDeclareMethodCommon","left","validateType","right","signatureDeclarationCommon","validateOptionalType","validateArrayOfType","callConstructSignatureDeclaration","namedTypeElementCommon","key","computed","default","validateOptional","typeAnnotation","kind","static","parameters","tsKeywordTypes","type","fnOrCtrBase","abstract","typeName","builder","parameterName","asserts","exprName","members","elementType","elementTypes","label","unionOrIntersection","types","checkType","extendsType","trueType","falseType","typeParameter","operator","objectType","indexType","nameType","quasis","chain","assertEach","node","val","length","TypeError","literal","unaryExpression","unaryOperator","validator","parent","is","argument","oneOfNodeTypes","expression","declare","id","extends","body","TSTypeExpression","const","initializer","global","qualifier","options","isExport","moduleReference","importKind","params","name","in","out","constraint"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/typescript.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\nimport {\n  defineAliasedType,\n  arrayOfType,\n  assertEach,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n  chain,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n  type Validator,\n} from \"./utils.ts\";\nimport {\n  functionDeclarationCommon,\n  classMethodOrDeclareMethodCommon,\n} from \"./core.ts\";\nimport is from \"../validators/is.ts\";\n\nconst defineType = defineAliasedType(\"TypeScript\");\n\nconst bool = assertValueType(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeAnnotation\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeParameterDeclaration\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true,\n  },\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"], // TODO: This isn't usable in general as an LVal. Should have a \"Parameter\" alias.\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: assertOneOf(\"public\", \"private\", \"protected\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    parameter: {\n      validate: assertNodeType(\"Identifier\", \"AssignmentPattern\"),\n    },\n    override: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: validateType(\"TSEntityName\"),\n    right: validateType(\"Identifier\"),\n  },\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n  [process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\"]: validateArrayOfType(\n    \"ArrayPattern\",\n    \"Identifier\",\n    \"ObjectPattern\",\n    \"RestElement\",\n  ),\n  [process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\"]:\n    validateOptionalType(\"TSTypeAnnotation\"),\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: signatureDeclarationCommon(),\n};\n\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\n  \"TSConstructSignatureDeclaration\",\n  callConstructSignatureDeclaration,\n);\n\nconst namedTypeElementCommon = () => ({\n  key: validateType(\"Expression\"),\n  computed: { default: false },\n  optional: validateOptional(bool),\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\"],\n  fields: {\n    ...namedTypeElementCommon(),\n    readonly: validateOptional(bool),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    kind: {\n      optional: true,\n      validate: assertOneOf(\"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"key\",\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: {\n    ...signatureDeclarationCommon(),\n    ...namedTypeElementCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: validateOptional(bool),\n    static: validateOptional(bool),\n    parameters: validateArrayOfType(\"Identifier\"), // Length must be 1\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n  },\n});\n\nconst tsKeywordTypes = [\n  \"TSAnyKeyword\",\n  \"TSBooleanKeyword\",\n  \"TSBigIntKeyword\",\n  \"TSIntrinsicKeyword\",\n  \"TSNeverKeyword\",\n  \"TSNullKeyword\",\n  \"TSNumberKeyword\",\n  \"TSObjectKeyword\",\n  \"TSStringKeyword\",\n  \"TSSymbolKeyword\",\n  \"TSUndefinedKeyword\",\n  \"TSUnknownKeyword\",\n  \"TSVoidKeyword\",\n] as const;\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {},\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {},\n});\n\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n};\n\ndefineType(\"TSFunctionType\", {\n  ...fnOrCtrBase,\n  fields: signatureDeclarationCommon(),\n});\ndefineType(\"TSConstructorType\", {\n  ...fnOrCtrBase,\n  fields: {\n    ...signatureDeclarationCommon(),\n    abstract: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeName\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    typeName: validateType(\"TSEntityName\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: validateType(\"Identifier\", \"TSThisType\"),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    asserts: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"exprName\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    exprName: validateType(\"TSEntityName\", \"TSImportType\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: validateArrayOfType(\"TSType\", \"TSNamedTupleMember\"),\n  },\n});\n\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: validateType(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false,\n    },\n    elementType: validateType(\"TSType\"),\n  },\n});\n\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: validateArrayOfType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\n\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: validateType(\"TSType\"),\n    extendsType: validateType(\"TSType\"),\n    trueType: validateType(\"TSType\"),\n    falseType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: validateType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: validate(assertValueType(\"string\")),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: validateType(\"TSType\"),\n    indexType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"key\", \"constraint\", \"nameType\", \"typeAnnotation\"]\n    : [\"typeParameter\", \"nameType\", \"typeAnnotation\"],\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"key\", \"constraint\", \"nameType\", \"typeAnnotation\"]\n    : [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    ...(process.env.BABEL_8_BREAKING\n      ? {\n          key: validateType(\"Identifier\"),\n          constraint: validateType(\"TSType\"),\n        }\n      : {\n          typeParameter: validateType(\"TSTypeParameter\"),\n        }),\n    readonly: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    optional: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeAnnotation: validateOptionalType(\"TSType\"),\n    nameType: validateOptionalType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTemplateLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"quasis\", \"types\"],\n  fields: {\n    quasis: validateArrayOfType(\"TemplateElement\"),\n    types: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSType\")),\n        function (node: t.TSTemplateLiteralType, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of types.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: (function () {\n        const unaryExpression = assertNodeType(\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const unaryOperator = assertOneOf(\"-\");\n\n        const literal = assertNodeType(\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n        );\n        function validator(parent: any, key: string, node: any) {\n          // type A = -1 | 1;\n          if (is(\"UnaryExpression\", node)) {\n            // check operator first\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            // type A = 'foo' | 'bar' | false | 1;\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n          \"UnaryExpression\",\n        ];\n\n        return validator;\n      })(),\n    },\n  },\n});\n\nif (process.env.BABEL_8_BREAKING) {\n  defineType(\"TSClassImplements\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeArguments\"],\n    fields: {\n      expression: validateType(\"Expression\"),\n      typeArguments: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n  defineType(\"TSInterfaceHeritage\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeArguments\"],\n    fields: {\n      expression: validateType(\"Expression\"),\n      typeArguments: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n} else {\n  defineType(\"TSExpressionWithTypeArguments\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeParameters\"],\n    fields: {\n      expression: validateType(\"TSEntityName\"),\n      typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n}\n\ndefineType(\"TSInterfaceDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    extends: validateOptional(\n      arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n      ),\n    ),\n    body: validateType(\"TSInterfaceBody\"),\n  },\n});\n\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"expression\", \"typeArguments\"]\n    : [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\nconst TSTypeExpression = {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSAsExpression\", TSTypeExpression);\ndefineType(\"TSSatisfiesExpression\", TSTypeExpression);\n\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumBody\", {\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSEnumMember\"),\n  },\n});\n\nif (process.env.BABEL_8_BREAKING) {\n  defineType(\"TSEnumDeclaration\", {\n    // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n    aliases: [\"Statement\", \"Declaration\"],\n    visitor: [\"id\", \"body\"],\n    fields: {\n      declare: validateOptional(bool),\n      const: validateOptional(bool),\n      id: validateType(\"Identifier\"),\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      body: validateType(\"TSEnumBody\"),\n    },\n  });\n} else {\n  defineType(\"TSEnumDeclaration\", {\n    // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n    aliases: [\"Statement\", \"Declaration\"],\n    visitor: [\"id\", \"members\"],\n    fields: {\n      declare: validateOptional(bool),\n      const: validateOptional(bool),\n      id: validateType(\"Identifier\"),\n      members: validateArrayOfType(\"TSEnumMember\"),\n      initializer: validateOptionalType(\"Expression\"),\n      body: validateOptionalType(\"TSEnumBody\"),\n    },\n  });\n}\n\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: validateType(\"Identifier\", \"StringLiteral\"),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    kind: {\n      validate: assertOneOf(\"global\", \"module\", \"namespace\"),\n    },\n    declare: validateOptional(bool),\n    ...(!process.env.BABEL_8_BREAKING && { global: validateOptional(bool) }),\n    id: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSEntityName\", \"StringLiteral\")\n      : validateType(\"Identifier\", \"StringLiteral\"),\n    body: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSModuleBlock\")\n      : validateType(\"TSModuleBlock\", \"TSModuleDeclaration\"),\n  },\n});\n\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\", \"FunctionParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  builder: [\n    \"argument\",\n    \"qualifier\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  visitor: [\n    \"argument\",\n    \"options\",\n    \"qualifier\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    argument: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSLiteralType\")\n      : validateType(\"StringLiteral\"),\n    qualifier: validateOptionalType(\"TSEntityName\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n    options: {\n      validate: assertNodeType(\"ObjectExpression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    ...(process.env.BABEL_8_BREAKING ? {} : { isExport: validate(bool) }),\n    id: validateType(\"Identifier\"),\n    moduleReference: validateType(\"TSEntityName\", \"TSExternalModuleReference\"),\n    importKind: {\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: assertNodeType(\"TSType\"),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validateArrayOfType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validateArrayOfType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"name\", \"constraint\", \"default\"]\n    : [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: !process.env.BABEL_8_BREAKING\n        ? assertValueType(\"string\")\n        : assertNodeType(\"Identifier\"),\n    },\n    in: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    out: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    const: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    constraint: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n    default: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/definitions/deprecated-aliases.js":{"lineLengths":[13,0,46,13,3,36,57,48,2,0,46,0],"data":{"version":3,"names":["DEPRECATED_ALIASES","exports","ModuleDeclaration"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/definitions/deprecated-aliases.ts"],"sourcesContent":["export const DEPRECATED_ALIASES = {\n  ModuleDeclaration: \"ImportOrExportDeclaration\",\n};\n"],"mappings":";;;;;;AAAO,MAAMA,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,GAAG;EAChCE,iBAAiB,EAAE;AACrB,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/generated/uppercase.js":{"lineLengths":[13,0,46,13,3,2760,2791,1535,34,71,27,3,24,3,1,75,86,74,86,53,74,68,68,68,59,89,77,77,74,68,83,38,68,62,83,80,56,59,74,65,68,59,68,65,77,74,65,47,74,62,68,59,71,80,95,56,71,68,68,62,71,74,83,80,68,65,77,62,95,53,71,74,86,98,92,71,68,77,92,98,71,74,62,59,65,65,41,98,71,71,71,71,44,65,98,98,92,65,89,86,80,59,59,71,77,83,89,110,101,71,62,71,74,65,86,74,77,71,98,107,77,86,92,77,89,77,74,86,95,104,83,83,92,107,86,86,92,92,77,80,98,56,95,107,86,86,80,83,86,53,68,80,65,98,104,83,50,80,71,71,68,68,68,77,74,74,83,77,101,62,77,56,80,92,68,65,83,77,77,80,47,59,80,80,38,59,89,83,68,53,62,92,74,71,68,74,68,95,86,113,83,77,71,71,104,119,83,77,74,62,74,71,80,68,65,71,71,71,71,80,74,65,56,68,77,71,71,59,65,59,59,68,56,80,59,80,77,59,83,68,83,62,89,65,113,92,71,92,101,68,89,71,56,77,62,83,65,62,101,101,83,80,110,74,110,104,71,62,55,55,61,0,37,0],"data":{"version":3,"names":["b","require","_deprecationWarning","alias","lowercase","ArrayExpression","exports","AssignmentExpression","BinaryExpression","InterpreterDirective","Directive","DirectiveLiteral","BlockStatement","BreakStatement","CallExpression","CatchClause","ConditionalExpression","ContinueStatement","DebuggerStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","File","ForInStatement","ForStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","LabeledStatement","StringLiteral","NumericLiteral","NullLiteral","BooleanLiteral","RegExpLiteral","LogicalExpression","MemberExpression","NewExpression","Program","ObjectExpression","ObjectMethod","ObjectProperty","RestElement","ReturnStatement","SequenceExpression","ParenthesizedExpression","SwitchCase","SwitchStatement","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","AssignmentPattern","ArrayPattern","ArrowFunctionExpression","ClassBody","ClassExpression","ClassDeclaration","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ForOfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","ImportExpression","MetaProperty","ClassMethod","ObjectPattern","SpreadElement","Super","TaggedTemplateExpression","TemplateElement","TemplateLiteral","YieldExpression","AwaitExpression","Import","BigIntLiteral","ExportNamespaceSpecifier","OptionalMemberExpression","OptionalCallExpression","ClassProperty","ClassAccessorProperty","ClassPrivateProperty","ClassPrivateMethod","PrivateName","StaticBlock","ImportAttribute","AnyTypeAnnotation","ArrayTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","NullLiteralTypeAnnotation","ClassImplements","DeclareClass","DeclareFunction","DeclareInterface","DeclareModule","DeclareModuleExports","DeclareTypeAlias","DeclareOpaqueType","DeclareVariable","DeclareExportDeclaration","DeclareExportAllDeclaration","DeclaredPredicate","ExistsTypeAnnotation","FunctionTypeAnnotation","FunctionTypeParam","GenericTypeAnnotation","InferredPredicate","InterfaceExtends","InterfaceDeclaration","InterfaceTypeAnnotation","IntersectionTypeAnnotation","MixedTypeAnnotation","EmptyTypeAnnotation","NullableTypeAnnotation","NumberLiteralTypeAnnotation","NumberTypeAnnotation","ObjectTypeAnnotation","ObjectTypeInternalSlot","ObjectTypeCallProperty","ObjectTypeIndexer","ObjectTypeProperty","ObjectTypeSpreadProperty","OpaqueType","QualifiedTypeIdentifier","StringLiteralTypeAnnotation","StringTypeAnnotation","SymbolTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","TypeAlias","TypeAnnotation","TypeCastExpression","TypeParameter","TypeParameterDeclaration","TypeParameterInstantiation","UnionTypeAnnotation","Variance","VoidTypeAnnotation","EnumDeclaration","EnumBooleanBody","EnumNumberBody","EnumStringBody","EnumSymbolBody","EnumBooleanMember","EnumNumberMember","EnumStringMember","EnumDefaultedMember","IndexedAccessType","OptionalIndexedAccessType","JSXAttribute","JSXClosingElement","JSXElement","JSXEmptyExpression","JSXExpressionContainer","JSXSpreadChild","JSXIdentifier","JSXMemberExpression","JSXNamespacedName","JSXOpeningElement","JSXSpreadAttribute","JSXText","JSXFragment","JSXOpeningFragment","JSXClosingFragment","Noop","Placeholder","V8IntrinsicIdentifier","ArgumentPlaceholder","BindExpression","Decorator","DoExpression","ExportDefaultSpecifier","RecordExpression","TupleExpression","DecimalLiteral","ModuleExpression","TopicReference","PipelineTopicExpression","PipelineBareFunction","PipelinePrimaryTopicReference","TSParameterProperty","TSDeclareFunction","TSDeclareMethod","TSQualifiedName","TSCallSignatureDeclaration","TSConstructSignatureDeclaration","TSPropertySignature","TSMethodSignature","TSIndexSignature","TSAnyKeyword","TSBooleanKeyword","TSBigIntKeyword","TSIntrinsicKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword","TSThisType","TSFunctionType","TSConstructorType","TSTypeReference","TSTypePredicate","TSTypeQuery","TSTypeLiteral","TSArrayType","TSTupleType","TSOptionalType","TSRestType","TSNamedTupleMember","TSUnionType","TSIntersectionType","TSConditionalType","TSInferType","TSParenthesizedType","TSTypeOperator","TSIndexedAccessType","TSMappedType","TSTemplateLiteralType","TSLiteralType","TSExpressionWithTypeArguments","TSInterfaceDeclaration","TSInterfaceBody","TSTypeAliasDeclaration","TSInstantiationExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","TSEnumBody","TSEnumDeclaration","TSEnumMember","TSModuleDeclaration","TSModuleBlock","TSImportType","TSImportEqualsDeclaration","TSExternalModuleReference","TSNonNullExpression","TSExportAssignment","TSNamespaceExportDeclaration","TSTypeAnnotation","TSTypeParameterInstantiation","TSTypeParameterDeclaration","TSTypeParameter","NumberLiteral","numberLiteral","RegexLiteral","regexLiteral","RestProperty","restProperty","SpreadProperty","spreadProperty"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/generated/uppercase.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\nimport * as b from \"./lowercase.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\nfunction alias<const N extends keyof typeof b>(lowercase: N): (typeof b)[N] {\n  if (process.env.BABEL_8_BREAKING) {\n    return function () {\n      deprecationWarning(\n        lowercase.replace(/^(?:ts|jsx|[a-z])/, x => x.toUpperCase()),\n        lowercase,\n        \"Usage of builders starting with an uppercase letter such as \",\n        \"uppercase builders\",\n      );\n      return (b[lowercase] as any)(...arguments);\n    } as any;\n  } else {\n    return b[lowercase];\n  }\n}\n\nexport const ArrayExpression = alias(\"arrayExpression\"),\n  AssignmentExpression = alias(\"assignmentExpression\"),\n  BinaryExpression = alias(\"binaryExpression\"),\n  InterpreterDirective = alias(\"interpreterDirective\"),\n  Directive = alias(\"directive\"),\n  DirectiveLiteral = alias(\"directiveLiteral\"),\n  BlockStatement = alias(\"blockStatement\"),\n  BreakStatement = alias(\"breakStatement\"),\n  CallExpression = alias(\"callExpression\"),\n  CatchClause = alias(\"catchClause\"),\n  ConditionalExpression = alias(\"conditionalExpression\"),\n  ContinueStatement = alias(\"continueStatement\"),\n  DebuggerStatement = alias(\"debuggerStatement\"),\n  DoWhileStatement = alias(\"doWhileStatement\"),\n  EmptyStatement = alias(\"emptyStatement\"),\n  ExpressionStatement = alias(\"expressionStatement\"),\n  File = alias(\"file\"),\n  ForInStatement = alias(\"forInStatement\"),\n  ForStatement = alias(\"forStatement\"),\n  FunctionDeclaration = alias(\"functionDeclaration\"),\n  FunctionExpression = alias(\"functionExpression\"),\n  Identifier = alias(\"identifier\"),\n  IfStatement = alias(\"ifStatement\"),\n  LabeledStatement = alias(\"labeledStatement\"),\n  StringLiteral = alias(\"stringLiteral\"),\n  NumericLiteral = alias(\"numericLiteral\"),\n  NullLiteral = alias(\"nullLiteral\"),\n  BooleanLiteral = alias(\"booleanLiteral\"),\n  RegExpLiteral = alias(\"regExpLiteral\"),\n  LogicalExpression = alias(\"logicalExpression\"),\n  MemberExpression = alias(\"memberExpression\"),\n  NewExpression = alias(\"newExpression\"),\n  Program = alias(\"program\"),\n  ObjectExpression = alias(\"objectExpression\"),\n  ObjectMethod = alias(\"objectMethod\"),\n  ObjectProperty = alias(\"objectProperty\"),\n  RestElement = alias(\"restElement\"),\n  ReturnStatement = alias(\"returnStatement\"),\n  SequenceExpression = alias(\"sequenceExpression\"),\n  ParenthesizedExpression = alias(\"parenthesizedExpression\"),\n  SwitchCase = alias(\"switchCase\"),\n  SwitchStatement = alias(\"switchStatement\"),\n  ThisExpression = alias(\"thisExpression\"),\n  ThrowStatement = alias(\"throwStatement\"),\n  TryStatement = alias(\"tryStatement\"),\n  UnaryExpression = alias(\"unaryExpression\"),\n  UpdateExpression = alias(\"updateExpression\"),\n  VariableDeclaration = alias(\"variableDeclaration\"),\n  VariableDeclarator = alias(\"variableDeclarator\"),\n  WhileStatement = alias(\"whileStatement\"),\n  WithStatement = alias(\"withStatement\"),\n  AssignmentPattern = alias(\"assignmentPattern\"),\n  ArrayPattern = alias(\"arrayPattern\"),\n  ArrowFunctionExpression = alias(\"arrowFunctionExpression\"),\n  ClassBody = alias(\"classBody\"),\n  ClassExpression = alias(\"classExpression\"),\n  ClassDeclaration = alias(\"classDeclaration\"),\n  ExportAllDeclaration = alias(\"exportAllDeclaration\"),\n  ExportDefaultDeclaration = alias(\"exportDefaultDeclaration\"),\n  ExportNamedDeclaration = alias(\"exportNamedDeclaration\"),\n  ExportSpecifier = alias(\"exportSpecifier\"),\n  ForOfStatement = alias(\"forOfStatement\"),\n  ImportDeclaration = alias(\"importDeclaration\"),\n  ImportDefaultSpecifier = alias(\"importDefaultSpecifier\"),\n  ImportNamespaceSpecifier = alias(\"importNamespaceSpecifier\"),\n  ImportSpecifier = alias(\"importSpecifier\"),\n  ImportExpression = alias(\"importExpression\"),\n  MetaProperty = alias(\"metaProperty\"),\n  ClassMethod = alias(\"classMethod\"),\n  ObjectPattern = alias(\"objectPattern\"),\n  SpreadElement = alias(\"spreadElement\"),\n  Super = alias(\"super\"),\n  TaggedTemplateExpression = alias(\"taggedTemplateExpression\"),\n  TemplateElement = alias(\"templateElement\"),\n  TemplateLiteral = alias(\"templateLiteral\"),\n  YieldExpression = alias(\"yieldExpression\"),\n  AwaitExpression = alias(\"awaitExpression\"),\n  Import = alias(\"import\"),\n  BigIntLiteral = alias(\"bigIntLiteral\"),\n  ExportNamespaceSpecifier = alias(\"exportNamespaceSpecifier\"),\n  OptionalMemberExpression = alias(\"optionalMemberExpression\"),\n  OptionalCallExpression = alias(\"optionalCallExpression\"),\n  ClassProperty = alias(\"classProperty\"),\n  ClassAccessorProperty = alias(\"classAccessorProperty\"),\n  ClassPrivateProperty = alias(\"classPrivateProperty\"),\n  ClassPrivateMethod = alias(\"classPrivateMethod\"),\n  PrivateName = alias(\"privateName\"),\n  StaticBlock = alias(\"staticBlock\"),\n  ImportAttribute = alias(\"importAttribute\"),\n  AnyTypeAnnotation = alias(\"anyTypeAnnotation\"),\n  ArrayTypeAnnotation = alias(\"arrayTypeAnnotation\"),\n  BooleanTypeAnnotation = alias(\"booleanTypeAnnotation\"),\n  BooleanLiteralTypeAnnotation = alias(\"booleanLiteralTypeAnnotation\"),\n  NullLiteralTypeAnnotation = alias(\"nullLiteralTypeAnnotation\"),\n  ClassImplements = alias(\"classImplements\"),\n  DeclareClass = alias(\"declareClass\"),\n  DeclareFunction = alias(\"declareFunction\"),\n  DeclareInterface = alias(\"declareInterface\"),\n  DeclareModule = alias(\"declareModule\"),\n  DeclareModuleExports = alias(\"declareModuleExports\"),\n  DeclareTypeAlias = alias(\"declareTypeAlias\"),\n  DeclareOpaqueType = alias(\"declareOpaqueType\"),\n  DeclareVariable = alias(\"declareVariable\"),\n  DeclareExportDeclaration = alias(\"declareExportDeclaration\"),\n  DeclareExportAllDeclaration = alias(\"declareExportAllDeclaration\"),\n  DeclaredPredicate = alias(\"declaredPredicate\"),\n  ExistsTypeAnnotation = alias(\"existsTypeAnnotation\"),\n  FunctionTypeAnnotation = alias(\"functionTypeAnnotation\"),\n  FunctionTypeParam = alias(\"functionTypeParam\"),\n  GenericTypeAnnotation = alias(\"genericTypeAnnotation\"),\n  InferredPredicate = alias(\"inferredPredicate\"),\n  InterfaceExtends = alias(\"interfaceExtends\"),\n  InterfaceDeclaration = alias(\"interfaceDeclaration\"),\n  InterfaceTypeAnnotation = alias(\"interfaceTypeAnnotation\"),\n  IntersectionTypeAnnotation = alias(\"intersectionTypeAnnotation\"),\n  MixedTypeAnnotation = alias(\"mixedTypeAnnotation\"),\n  EmptyTypeAnnotation = alias(\"emptyTypeAnnotation\"),\n  NullableTypeAnnotation = alias(\"nullableTypeAnnotation\"),\n  NumberLiteralTypeAnnotation = alias(\"numberLiteralTypeAnnotation\"),\n  NumberTypeAnnotation = alias(\"numberTypeAnnotation\"),\n  ObjectTypeAnnotation = alias(\"objectTypeAnnotation\"),\n  ObjectTypeInternalSlot = alias(\"objectTypeInternalSlot\"),\n  ObjectTypeCallProperty = alias(\"objectTypeCallProperty\"),\n  ObjectTypeIndexer = alias(\"objectTypeIndexer\"),\n  ObjectTypeProperty = alias(\"objectTypeProperty\"),\n  ObjectTypeSpreadProperty = alias(\"objectTypeSpreadProperty\"),\n  OpaqueType = alias(\"opaqueType\"),\n  QualifiedTypeIdentifier = alias(\"qualifiedTypeIdentifier\"),\n  StringLiteralTypeAnnotation = alias(\"stringLiteralTypeAnnotation\"),\n  StringTypeAnnotation = alias(\"stringTypeAnnotation\"),\n  SymbolTypeAnnotation = alias(\"symbolTypeAnnotation\"),\n  ThisTypeAnnotation = alias(\"thisTypeAnnotation\"),\n  TupleTypeAnnotation = alias(\"tupleTypeAnnotation\"),\n  TypeofTypeAnnotation = alias(\"typeofTypeAnnotation\"),\n  TypeAlias = alias(\"typeAlias\"),\n  TypeAnnotation = alias(\"typeAnnotation\"),\n  TypeCastExpression = alias(\"typeCastExpression\"),\n  TypeParameter = alias(\"typeParameter\"),\n  TypeParameterDeclaration = alias(\"typeParameterDeclaration\"),\n  TypeParameterInstantiation = alias(\"typeParameterInstantiation\"),\n  UnionTypeAnnotation = alias(\"unionTypeAnnotation\"),\n  Variance = alias(\"variance\"),\n  VoidTypeAnnotation = alias(\"voidTypeAnnotation\"),\n  EnumDeclaration = alias(\"enumDeclaration\"),\n  EnumBooleanBody = alias(\"enumBooleanBody\"),\n  EnumNumberBody = alias(\"enumNumberBody\"),\n  EnumStringBody = alias(\"enumStringBody\"),\n  EnumSymbolBody = alias(\"enumSymbolBody\"),\n  EnumBooleanMember = alias(\"enumBooleanMember\"),\n  EnumNumberMember = alias(\"enumNumberMember\"),\n  EnumStringMember = alias(\"enumStringMember\"),\n  EnumDefaultedMember = alias(\"enumDefaultedMember\"),\n  IndexedAccessType = alias(\"indexedAccessType\"),\n  OptionalIndexedAccessType = alias(\"optionalIndexedAccessType\"),\n  JSXAttribute = alias(\"jsxAttribute\"),\n  JSXClosingElement = alias(\"jsxClosingElement\"),\n  JSXElement = alias(\"jsxElement\"),\n  JSXEmptyExpression = alias(\"jsxEmptyExpression\"),\n  JSXExpressionContainer = alias(\"jsxExpressionContainer\"),\n  JSXSpreadChild = alias(\"jsxSpreadChild\"),\n  JSXIdentifier = alias(\"jsxIdentifier\"),\n  JSXMemberExpression = alias(\"jsxMemberExpression\"),\n  JSXNamespacedName = alias(\"jsxNamespacedName\"),\n  JSXOpeningElement = alias(\"jsxOpeningElement\"),\n  JSXSpreadAttribute = alias(\"jsxSpreadAttribute\"),\n  JSXText = alias(\"jsxText\"),\n  JSXFragment = alias(\"jsxFragment\"),\n  JSXOpeningFragment = alias(\"jsxOpeningFragment\"),\n  JSXClosingFragment = alias(\"jsxClosingFragment\"),\n  Noop = alias(\"noop\"),\n  Placeholder = alias(\"placeholder\"),\n  V8IntrinsicIdentifier = alias(\"v8IntrinsicIdentifier\"),\n  ArgumentPlaceholder = alias(\"argumentPlaceholder\"),\n  BindExpression = alias(\"bindExpression\"),\n  Decorator = alias(\"decorator\"),\n  DoExpression = alias(\"doExpression\"),\n  ExportDefaultSpecifier = alias(\"exportDefaultSpecifier\"),\n  RecordExpression = alias(\"recordExpression\"),\n  TupleExpression = alias(\"tupleExpression\"),\n  DecimalLiteral = alias(\"decimalLiteral\"),\n  ModuleExpression = alias(\"moduleExpression\"),\n  TopicReference = alias(\"topicReference\"),\n  PipelineTopicExpression = alias(\"pipelineTopicExpression\"),\n  PipelineBareFunction = alias(\"pipelineBareFunction\"),\n  PipelinePrimaryTopicReference = alias(\"pipelinePrimaryTopicReference\"),\n  TSParameterProperty = alias(\"tsParameterProperty\"),\n  TSDeclareFunction = alias(\"tsDeclareFunction\"),\n  TSDeclareMethod = alias(\"tsDeclareMethod\"),\n  TSQualifiedName = alias(\"tsQualifiedName\"),\n  TSCallSignatureDeclaration = alias(\"tsCallSignatureDeclaration\"),\n  TSConstructSignatureDeclaration = alias(\"tsConstructSignatureDeclaration\"),\n  TSPropertySignature = alias(\"tsPropertySignature\"),\n  TSMethodSignature = alias(\"tsMethodSignature\"),\n  TSIndexSignature = alias(\"tsIndexSignature\"),\n  TSAnyKeyword = alias(\"tsAnyKeyword\"),\n  TSBooleanKeyword = alias(\"tsBooleanKeyword\"),\n  TSBigIntKeyword = alias(\"tsBigIntKeyword\"),\n  TSIntrinsicKeyword = alias(\"tsIntrinsicKeyword\"),\n  TSNeverKeyword = alias(\"tsNeverKeyword\"),\n  TSNullKeyword = alias(\"tsNullKeyword\"),\n  TSNumberKeyword = alias(\"tsNumberKeyword\"),\n  TSObjectKeyword = alias(\"tsObjectKeyword\"),\n  TSStringKeyword = alias(\"tsStringKeyword\"),\n  TSSymbolKeyword = alias(\"tsSymbolKeyword\"),\n  TSUndefinedKeyword = alias(\"tsUndefinedKeyword\"),\n  TSUnknownKeyword = alias(\"tsUnknownKeyword\"),\n  TSVoidKeyword = alias(\"tsVoidKeyword\"),\n  TSThisType = alias(\"tsThisType\"),\n  TSFunctionType = alias(\"tsFunctionType\"),\n  TSConstructorType = alias(\"tsConstructorType\"),\n  TSTypeReference = alias(\"tsTypeReference\"),\n  TSTypePredicate = alias(\"tsTypePredicate\"),\n  TSTypeQuery = alias(\"tsTypeQuery\"),\n  TSTypeLiteral = alias(\"tsTypeLiteral\"),\n  TSArrayType = alias(\"tsArrayType\"),\n  TSTupleType = alias(\"tsTupleType\"),\n  TSOptionalType = alias(\"tsOptionalType\"),\n  TSRestType = alias(\"tsRestType\"),\n  TSNamedTupleMember = alias(\"tsNamedTupleMember\"),\n  TSUnionType = alias(\"tsUnionType\"),\n  TSIntersectionType = alias(\"tsIntersectionType\"),\n  TSConditionalType = alias(\"tsConditionalType\"),\n  TSInferType = alias(\"tsInferType\"),\n  TSParenthesizedType = alias(\"tsParenthesizedType\"),\n  TSTypeOperator = alias(\"tsTypeOperator\"),\n  TSIndexedAccessType = alias(\"tsIndexedAccessType\"),\n  TSMappedType = alias(\"tsMappedType\"),\n  TSTemplateLiteralType = alias(\"tsTemplateLiteralType\"),\n  TSLiteralType = alias(\"tsLiteralType\"),\n  TSExpressionWithTypeArguments = alias(\"tsExpressionWithTypeArguments\"),\n  TSInterfaceDeclaration = alias(\"tsInterfaceDeclaration\"),\n  TSInterfaceBody = alias(\"tsInterfaceBody\"),\n  TSTypeAliasDeclaration = alias(\"tsTypeAliasDeclaration\"),\n  TSInstantiationExpression = alias(\"tsInstantiationExpression\"),\n  TSAsExpression = alias(\"tsAsExpression\"),\n  TSSatisfiesExpression = alias(\"tsSatisfiesExpression\"),\n  TSTypeAssertion = alias(\"tsTypeAssertion\"),\n  TSEnumBody = alias(\"tsEnumBody\"),\n  TSEnumDeclaration = alias(\"tsEnumDeclaration\"),\n  TSEnumMember = alias(\"tsEnumMember\"),\n  TSModuleDeclaration = alias(\"tsModuleDeclaration\"),\n  TSModuleBlock = alias(\"tsModuleBlock\"),\n  TSImportType = alias(\"tsImportType\"),\n  TSImportEqualsDeclaration = alias(\"tsImportEqualsDeclaration\"),\n  TSExternalModuleReference = alias(\"tsExternalModuleReference\"),\n  TSNonNullExpression = alias(\"tsNonNullExpression\"),\n  TSExportAssignment = alias(\"tsExportAssignment\"),\n  TSNamespaceExportDeclaration = alias(\"tsNamespaceExportDeclaration\"),\n  TSTypeAnnotation = alias(\"tsTypeAnnotation\"),\n  TSTypeParameterInstantiation = alias(\"tsTypeParameterInstantiation\"),\n  TSTypeParameterDeclaration = alias(\"tsTypeParameterDeclaration\"),\n  TSTypeParameter = alias(\"tsTypeParameter\");\nexport const NumberLiteral = b.numberLiteral,\n  RegexLiteral = b.regexLiteral,\n  RestProperty = b.restProperty,\n  SpreadProperty = b.spreadProperty;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/asserts/assertNode.js":{"lineLengths":[13,0,46,13,3,29,49,27,36,19,110,62,3,1,0,38,0],"data":{"version":3,"names":["_isNode","require","assertNode","node","isNode","_node$type","type","JSON","stringify","TypeError"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/asserts/assertNode.ts"],"sourcesContent":["import isNode from \"../validators/isNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAGe,SAASC,UAAUA,CAACC,IAAU,EAA0B;EACrE,IAAI,CAAC,IAAAC,eAAM,EAACD,IAAI,CAAC,EAAE;IAAA,IAAAE,UAAA;IACjB,MAAMC,IAAI,IAAAD,UAAA,GAAGF,IAAI,oBAAJA,IAAI,CAAEG,IAAI,YAAAD,UAAA,GAAIE,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC/C,MAAM,IAAIM,SAAS,CAAC,6BAA6BH,IAAI,GAAG,CAAC;EAC3D;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isNode.js":{"lineLengths":[13,0,46,13,3,25,48,23,52,1,0,34,0],"data":{"version":3,"names":["_index","require","isNode","node","VISITOR_KEYS","type"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isNode.ts"],"sourcesContent":["import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isNode(node: any): node is t.Node {\n  return !!(node && VISITOR_KEYS[node.type]);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGe,SAASC,MAAMA,CAACC,IAAS,EAAkB;EACxD,OAAO,CAAC,EAAEA,IAAI,IAAIC,mBAAY,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC;AAC5C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/asserts/generated/index.js":{"lineLengths":[13,0,46,13,3,40,58,62,54,48,62,70,64,58,54,50,36,56,52,34,46,52,52,80,66,52,52,46,34,66,42,56,54,54,46,60,64,50,62,46,66,58,58,52,46,48,78,72,54,56,50,64,58,56,54,58,42,42,56,48,56,52,62,40,54,58,54,62,44,52,56,52,56,52,64,64,58,72,68,68,72,54,44,62,58,32,32,60,54,50,40,30,52,52,48,50,40,62,60,52,68,58,66,44,46,42,36,54,58,68,56,72,74,54,58,58,64,56,70,64,76,30,48,58,60,44,60,68,46,50,62,58,58,60,60,52,38,32,56,38,58,32,56,48,36,50,62,58,56,54,50,32,46,74,68,50,78,64,52,56,48,48,50,52,64,68,58,68,60,72,44,68,74,72,70,38,46,64,82,70,46,38,46,38,40,38,70,56,50,48,46,48,54,40,60,50,52,48,42,46,50,78,64,34,44,54,64,48,46,52,44,54,56,76,58,86,58,58,54,48,44,58,48,60,82,74,52,74,48,56,62,46,74,54,68,60,60,50,48,58,50,62,60,80,52,62,50,54,54,52,62,62,62,54,44,66,54,54,66,44,46,36,68,56,54,50,50,52,54,76,80,54,46,54,60,46,56,50,72,54,54,52,52,60,52,52,48,54,62,42,52,60,50,72,76,44,64,54,42,62,56,58,66,62,60,40,60,34,52,50,54,44,71,35,44,121,3,1,44,40,1,49,45,1,45,41,1,49,45,1,38,34,1,45,41,1,43,39,1,43,39,1,43,39,1,40,36,1,50,46,1,46,42,1,46,42,1,45,41,1,43,39,1,48,44,1,33,29,1,43,39,1,41,37,1,48,44,1,47,43,1,39,35,1,40,36,1,45,41,1,42,38,1,43,39,1,40,36,1,43,39,1,42,38,1,46,42,1,45,41,1,42,38,1,36,32,1,45,41,1,41,37,1,43,39,1,40,36,1,44,40,1,47,43,1,52,48,1,39,35,1,44,40,1,43,39,1,43,39,1,41,37,1,44,40,1,45,41,1,48,44,1,47,43,1,43,39,1,42,38,1,46,42,1,41,37,1,52,48,1,38,34,1,44,40,1,45,41,1,49,45,1,53,49,1,51,47,1,44,40,1,43,39,1,46,42,1,51,47,1,53,49,1,44,40,1,45,41,1,41,37,1,40,36,1,42,38,1,42,38,1,34,30,1,53,49,1,44,40,1,44,40,1,44,40,1,44,40,1,35,31,1,42,38,1,53,49,1,53,49,1,51,47,1,42,38,1,50,46,1,49,45,1,47,43,1,40,36,1,40,36,1,44,40,1,46,42,1,48,44,1,50,46,1,57,53,1,54,50,1,44,40,1,41,37,1,44,40,1,45,41,1,42,38,1,49,45,1,45,41,1,46,42,1,44,40,1,53,49,1,56,52,1,46,42,1,49,45,1,51,47,1,46,42,1,50,46,1,46,42,1,45,41,1,49,45,1,52,48,1,55,51,1,48,44,1,48,44,1,51,47,1,56,52,1,49,45,1,49,45,1,51,47,1,51,47,1,46,42,1,47,43,1,53,49,1,39,35,1,52,48,1,56,52,1,49,45,1,49,45,1,47,43,1,48,44,1,49,45,1,38,34,1,43,39,1,47,43,1,42,38,1,53,49,1,55,51,1,48,44,1,37,33,1,47,43,1,44,40,1,44,40,1,43,39,1,43,39,1,43,39,1,46,42,1,45,41,1,45,41,1,48,44,1,46,42,1,54,50,1,41,37,1,46,42,1,39,35,1,47,43,1,51,47,1,43,39,1,42,38,1,48,44,1,46,42,1,46,42,1,47,43,1,36,32,1,40,36,1,47,43,1,47,43,1,33,29,1,40,36,1,50,46,1,48,44,1,43,39,1,38,34,1,41,37,1,51,47,1,45,41,1,44,40,1,43,39,1,45,41,1,43,39,1,52,48,1,49,45,1,58,54,1,48,44,1,46,42,1,44,40,1,44,40,1,55,51,1,60,56,1,48,44,1,46,42,1,45,41,1,41,37,1,45,41,1,44,40,1,47,43,1,43,39,1,42,38,1,44,40,1,44,40,1,44,40,1,44,40,1,47,43,1,45,41,1,42,38,1,39,35,1,43,39,1,46,42,1,44,40,1,44,40,1,40,36,1,42,38,1,40,36,1,40,36,1,43,39,1,39,35,1,47,43,1,40,36,1,47,43,1,46,42,1,40,36,1,48,44,1,43,39,1,48,44,1,41,37,1,50,46,1,42,38,1,58,54,1,51,47,1,44,40,1,51,47,1,54,50,1,43,39,1,50,46,1,44,40,1,39,35,1,46,42,1,41,37,1,48,44,1,42,38,1,41,37,1,54,50,1,54,50,1,48,44,1,47,43,1,57,53,1,45,41,1,57,53,1,55,51,1,44,40,1,41,37,1,39,35,1,35,31,1,37,33,1,40,36,1,34,30,1,38,34,1,43,39,1,48,44,1,40,36,1,33,29,1,34,30,1,46,42,1,32,28,1,42,38,1,37,33,1,43,39,1,36,32,1,40,36,1,40,36,1,33,29,1,41,37,1,36,32,1,38,34,1,46,42,1,35,31,1,41,37,1,37,33,1,38,34,1,36,32,1,34,30,1,54,50,1,46,42,1,44,40,1,37,33,1,36,32,1,33,29,1,37,33,1,47,43,1,44,40,1,42,38,1,37,33,1,39,35,1,32,28,1,42,38,1,39,35,1,42,38,1,35,31,1,39,35,1,42,82,38,1,41,80,37,1,41,78,37,1,43,82,39,1,46,97,42,1,0,33,0],"data":{"version":3,"names":["_is","require","_deprecationWarning","assert","type","node","opts","is","Error","JSON","stringify","assertArrayExpression","assertAssignmentExpression","assertBinaryExpression","assertInterpreterDirective","assertDirective","assertDirectiveLiteral","assertBlockStatement","assertBreakStatement","assertCallExpression","assertCatchClause","assertConditionalExpression","assertContinueStatement","assertDebuggerStatement","assertDoWhileStatement","assertEmptyStatement","assertExpressionStatement","assertFile","assertForInStatement","assertForStatement","assertFunctionDeclaration","assertFunctionExpression","assertIdentifier","assertIfStatement","assertLabeledStatement","assertStringLiteral","assertNumericLiteral","assertNullLiteral","assertBooleanLiteral","assertRegExpLiteral","assertLogicalExpression","assertMemberExpression","assertNewExpression","assertProgram","assertObjectExpression","assertObjectMethod","assertObjectProperty","assertRestElement","assertReturnStatement","assertSequenceExpression","assertParenthesizedExpression","assertSwitchCase","assertSwitchStatement","assertThisExpression","assertThrowStatement","assertTryStatement","assertUnaryExpression","assertUpdateExpression","assertVariableDeclaration","assertVariableDeclarator","assertWhileStatement","assertWithStatement","assertAssignmentPattern","assertArrayPattern","assertArrowFunctionExpression","assertClassBody","assertClassExpression","assertClassDeclaration","assertExportAllDeclaration","assertExportDefaultDeclaration","assertExportNamedDeclaration","assertExportSpecifier","assertForOfStatement","assertImportDeclaration","assertImportDefaultSpecifier","assertImportNamespaceSpecifier","assertImportSpecifier","assertImportExpression","assertMetaProperty","assertClassMethod","assertObjectPattern","assertSpreadElement","assertSuper","assertTaggedTemplateExpression","assertTemplateElement","assertTemplateLiteral","assertYieldExpression","assertAwaitExpression","assertImport","assertBigIntLiteral","assertExportNamespaceSpecifier","assertOptionalMemberExpression","assertOptionalCallExpression","assertClassProperty","assertClassAccessorProperty","assertClassPrivateProperty","assertClassPrivateMethod","assertPrivateName","assertStaticBlock","assertImportAttribute","assertAnyTypeAnnotation","assertArrayTypeAnnotation","assertBooleanTypeAnnotation","assertBooleanLiteralTypeAnnotation","assertNullLiteralTypeAnnotation","assertClassImplements","assertDeclareClass","assertDeclareFunction","assertDeclareInterface","assertDeclareModule","assertDeclareModuleExports","assertDeclareTypeAlias","assertDeclareOpaqueType","assertDeclareVariable","assertDeclareExportDeclaration","assertDeclareExportAllDeclaration","assertDeclaredPredicate","assertExistsTypeAnnotation","assertFunctionTypeAnnotation","assertFunctionTypeParam","assertGenericTypeAnnotation","assertInferredPredicate","assertInterfaceExtends","assertInterfaceDeclaration","assertInterfaceTypeAnnotation","assertIntersectionTypeAnnotation","assertMixedTypeAnnotation","assertEmptyTypeAnnotation","assertNullableTypeAnnotation","assertNumberLiteralTypeAnnotation","assertNumberTypeAnnotation","assertObjectTypeAnnotation","assertObjectTypeInternalSlot","assertObjectTypeCallProperty","assertObjectTypeIndexer","assertObjectTypeProperty","assertObjectTypeSpreadProperty","assertOpaqueType","assertQualifiedTypeIdentifier","assertStringLiteralTypeAnnotation","assertStringTypeAnnotation","assertSymbolTypeAnnotation","assertThisTypeAnnotation","assertTupleTypeAnnotation","assertTypeofTypeAnnotation","assertTypeAlias","assertTypeAnnotation","assertTypeCastExpression","assertTypeParameter","assertTypeParameterDeclaration","assertTypeParameterInstantiation","assertUnionTypeAnnotation","assertVariance","assertVoidTypeAnnotation","assertEnumDeclaration","assertEnumBooleanBody","assertEnumNumberBody","assertEnumStringBody","assertEnumSymbolBody","assertEnumBooleanMember","assertEnumNumberMember","assertEnumStringMember","assertEnumDefaultedMember","assertIndexedAccessType","assertOptionalIndexedAccessType","assertJSXAttribute","assertJSXClosingElement","assertJSXElement","assertJSXEmptyExpression","assertJSXExpressionContainer","assertJSXSpreadChild","assertJSXIdentifier","assertJSXMemberExpression","assertJSXNamespacedName","assertJSXOpeningElement","assertJSXSpreadAttribute","assertJSXText","assertJSXFragment","assertJSXOpeningFragment","assertJSXClosingFragment","assertNoop","assertPlaceholder","assertV8IntrinsicIdentifier","assertArgumentPlaceholder","assertBindExpression","assertDecorator","assertDoExpression","assertExportDefaultSpecifier","assertRecordExpression","assertTupleExpression","assertDecimalLiteral","assertModuleExpression","assertTopicReference","assertPipelineTopicExpression","assertPipelineBareFunction","assertPipelinePrimaryTopicReference","assertTSParameterProperty","assertTSDeclareFunction","assertTSDeclareMethod","assertTSQualifiedName","assertTSCallSignatureDeclaration","assertTSConstructSignatureDeclaration","assertTSPropertySignature","assertTSMethodSignature","assertTSIndexSignature","assertTSAnyKeyword","assertTSBooleanKeyword","assertTSBigIntKeyword","assertTSIntrinsicKeyword","assertTSNeverKeyword","assertTSNullKeyword","assertTSNumberKeyword","assertTSObjectKeyword","assertTSStringKeyword","assertTSSymbolKeyword","assertTSUndefinedKeyword","assertTSUnknownKeyword","assertTSVoidKeyword","assertTSThisType","assertTSFunctionType","assertTSConstructorType","assertTSTypeReference","assertTSTypePredicate","assertTSTypeQuery","assertTSTypeLiteral","assertTSArrayType","assertTSTupleType","assertTSOptionalType","assertTSRestType","assertTSNamedTupleMember","assertTSUnionType","assertTSIntersectionType","assertTSConditionalType","assertTSInferType","assertTSParenthesizedType","assertTSTypeOperator","assertTSIndexedAccessType","assertTSMappedType","assertTSTemplateLiteralType","assertTSLiteralType","assertTSExpressionWithTypeArguments","assertTSInterfaceDeclaration","assertTSInterfaceBody","assertTSTypeAliasDeclaration","assertTSInstantiationExpression","assertTSAsExpression","assertTSSatisfiesExpression","assertTSTypeAssertion","assertTSEnumBody","assertTSEnumDeclaration","assertTSEnumMember","assertTSModuleDeclaration","assertTSModuleBlock","assertTSImportType","assertTSImportEqualsDeclaration","assertTSExternalModuleReference","assertTSNonNullExpression","assertTSExportAssignment","assertTSNamespaceExportDeclaration","assertTSTypeAnnotation","assertTSTypeParameterInstantiation","assertTSTypeParameterDeclaration","assertTSTypeParameter","assertStandardized","assertExpression","assertBinary","assertScopable","assertBlockParent","assertBlock","assertStatement","assertTerminatorless","assertCompletionStatement","assertConditional","assertLoop","assertWhile","assertExpressionWrapper","assertFor","assertForXStatement","assertFunction","assertFunctionParent","assertPureish","assertDeclaration","assertPatternLike","assertLVal","assertTSEntityName","assertLiteral","assertImmutable","assertUserWhitespacable","assertMethod","assertObjectMember","assertProperty","assertUnaryLike","assertPattern","assertClass","assertImportOrExportDeclaration","assertExportDeclaration","assertModuleSpecifier","assertAccessor","assertPrivate","assertFlow","assertFlowType","assertFlowBaseAnnotation","assertFlowDeclaration","assertFlowPredicate","assertEnumBody","assertEnumMember","assertJSX","assertMiscellaneous","assertTypeScript","assertTSTypeElement","assertTSType","assertTSBaseType","assertNumberLiteral","deprecationWarning","assertRegexLiteral","assertRestProperty","assertSpreadProperty","assertModuleDeclaration"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/asserts/generated/index.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../../validators/is.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\nfunction assert(type: string, node: any, opts?: any): void {\n  if (!is(type, node, opts)) {\n    throw new Error(\n      `Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` +\n        `but instead got \"${node.type}\".`,\n    );\n  }\n}\n\nexport function assertArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayExpression {\n  assert(\"ArrayExpression\", node, opts);\n}\nexport function assertAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentExpression {\n  assert(\"AssignmentExpression\", node, opts);\n}\nexport function assertBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BinaryExpression {\n  assert(\"BinaryExpression\", node, opts);\n}\nexport function assertInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterpreterDirective {\n  assert(\"InterpreterDirective\", node, opts);\n}\nexport function assertDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Directive {\n  assert(\"Directive\", node, opts);\n}\nexport function assertDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DirectiveLiteral {\n  assert(\"DirectiveLiteral\", node, opts);\n}\nexport function assertBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockStatement {\n  assert(\"BlockStatement\", node, opts);\n}\nexport function assertBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BreakStatement {\n  assert(\"BreakStatement\", node, opts);\n}\nexport function assertCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CallExpression {\n  assert(\"CallExpression\", node, opts);\n}\nexport function assertCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CatchClause {\n  assert(\"CatchClause\", node, opts);\n}\nexport function assertConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ConditionalExpression {\n  assert(\"ConditionalExpression\", node, opts);\n}\nexport function assertContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ContinueStatement {\n  assert(\"ContinueStatement\", node, opts);\n}\nexport function assertDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DebuggerStatement {\n  assert(\"DebuggerStatement\", node, opts);\n}\nexport function assertDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoWhileStatement {\n  assert(\"DoWhileStatement\", node, opts);\n}\nexport function assertEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyStatement {\n  assert(\"EmptyStatement\", node, opts);\n}\nexport function assertExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionStatement {\n  assert(\"ExpressionStatement\", node, opts);\n}\nexport function assertFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.File {\n  assert(\"File\", node, opts);\n}\nexport function assertForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForInStatement {\n  assert(\"ForInStatement\", node, opts);\n}\nexport function assertForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForStatement {\n  assert(\"ForStatement\", node, opts);\n}\nexport function assertFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionDeclaration {\n  assert(\"FunctionDeclaration\", node, opts);\n}\nexport function assertFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionExpression {\n  assert(\"FunctionExpression\", node, opts);\n}\nexport function assertIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Identifier {\n  assert(\"Identifier\", node, opts);\n}\nexport function assertIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IfStatement {\n  assert(\"IfStatement\", node, opts);\n}\nexport function assertLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LabeledStatement {\n  assert(\"LabeledStatement\", node, opts);\n}\nexport function assertStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteral {\n  assert(\"StringLiteral\", node, opts);\n}\nexport function assertNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumericLiteral {\n  assert(\"NumericLiteral\", node, opts);\n}\nexport function assertNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteral {\n  assert(\"NullLiteral\", node, opts);\n}\nexport function assertBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteral {\n  assert(\"BooleanLiteral\", node, opts);\n}\nexport function assertRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RegExpLiteral {\n  assert(\"RegExpLiteral\", node, opts);\n}\nexport function assertLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LogicalExpression {\n  assert(\"LogicalExpression\", node, opts);\n}\nexport function assertMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MemberExpression {\n  assert(\"MemberExpression\", node, opts);\n}\nexport function assertNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NewExpression {\n  assert(\"NewExpression\", node, opts);\n}\nexport function assertProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Program {\n  assert(\"Program\", node, opts);\n}\nexport function assertObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectExpression {\n  assert(\"ObjectExpression\", node, opts);\n}\nexport function assertObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMethod {\n  assert(\"ObjectMethod\", node, opts);\n}\nexport function assertObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectProperty {\n  assert(\"ObjectProperty\", node, opts);\n}\nexport function assertRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RestElement {\n  assert(\"RestElement\", node, opts);\n}\nexport function assertReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ReturnStatement {\n  assert(\"ReturnStatement\", node, opts);\n}\nexport function assertSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SequenceExpression {\n  assert(\"SequenceExpression\", node, opts);\n}\nexport function assertParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ParenthesizedExpression {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\nexport function assertSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchCase {\n  assert(\"SwitchCase\", node, opts);\n}\nexport function assertSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchStatement {\n  assert(\"SwitchStatement\", node, opts);\n}\nexport function assertThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisExpression {\n  assert(\"ThisExpression\", node, opts);\n}\nexport function assertThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThrowStatement {\n  assert(\"ThrowStatement\", node, opts);\n}\nexport function assertTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TryStatement {\n  assert(\"TryStatement\", node, opts);\n}\nexport function assertUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryExpression {\n  assert(\"UnaryExpression\", node, opts);\n}\nexport function assertUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UpdateExpression {\n  assert(\"UpdateExpression\", node, opts);\n}\nexport function assertVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclaration {\n  assert(\"VariableDeclaration\", node, opts);\n}\nexport function assertVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclarator {\n  assert(\"VariableDeclarator\", node, opts);\n}\nexport function assertWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WhileStatement {\n  assert(\"WhileStatement\", node, opts);\n}\nexport function assertWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WithStatement {\n  assert(\"WithStatement\", node, opts);\n}\nexport function assertAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentPattern {\n  assert(\"AssignmentPattern\", node, opts);\n}\nexport function assertArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayPattern {\n  assert(\"ArrayPattern\", node, opts);\n}\nexport function assertArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrowFunctionExpression {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\nexport function assertClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassBody {\n  assert(\"ClassBody\", node, opts);\n}\nexport function assertClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassExpression {\n  assert(\"ClassExpression\", node, opts);\n}\nexport function assertClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassDeclaration {\n  assert(\"ClassDeclaration\", node, opts);\n}\nexport function assertExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportAllDeclaration {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\nexport function assertExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultDeclaration {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\nexport function assertExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamedDeclaration {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\nexport function assertExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportSpecifier {\n  assert(\"ExportSpecifier\", node, opts);\n}\nexport function assertForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForOfStatement {\n  assert(\"ForOfStatement\", node, opts);\n}\nexport function assertImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDeclaration {\n  assert(\"ImportDeclaration\", node, opts);\n}\nexport function assertImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDefaultSpecifier {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\nexport function assertImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportNamespaceSpecifier {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\nexport function assertImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportSpecifier {\n  assert(\"ImportSpecifier\", node, opts);\n}\nexport function assertImportExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportExpression {\n  assert(\"ImportExpression\", node, opts);\n}\nexport function assertMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MetaProperty {\n  assert(\"MetaProperty\", node, opts);\n}\nexport function assertClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassMethod {\n  assert(\"ClassMethod\", node, opts);\n}\nexport function assertObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectPattern {\n  assert(\"ObjectPattern\", node, opts);\n}\nexport function assertSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SpreadElement {\n  assert(\"SpreadElement\", node, opts);\n}\nexport function assertSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Super {\n  assert(\"Super\", node, opts);\n}\nexport function assertTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TaggedTemplateExpression {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\nexport function assertTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateElement {\n  assert(\"TemplateElement\", node, opts);\n}\nexport function assertTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateLiteral {\n  assert(\"TemplateLiteral\", node, opts);\n}\nexport function assertYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.YieldExpression {\n  assert(\"YieldExpression\", node, opts);\n}\nexport function assertAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AwaitExpression {\n  assert(\"AwaitExpression\", node, opts);\n}\nexport function assertImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Import {\n  assert(\"Import\", node, opts);\n}\nexport function assertBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BigIntLiteral {\n  assert(\"BigIntLiteral\", node, opts);\n}\nexport function assertExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamespaceSpecifier {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\nexport function assertOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalMemberExpression {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\nexport function assertOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalCallExpression {\n  assert(\"OptionalCallExpression\", node, opts);\n}\nexport function assertClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassProperty {\n  assert(\"ClassProperty\", node, opts);\n}\nexport function assertClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassAccessorProperty {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\nexport function assertClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateProperty {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\nexport function assertClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateMethod {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\nexport function assertPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PrivateName {\n  assert(\"PrivateName\", node, opts);\n}\nexport function assertStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StaticBlock {\n  assert(\"StaticBlock\", node, opts);\n}\nexport function assertImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportAttribute {\n  assert(\"ImportAttribute\", node, opts);\n}\nexport function assertAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AnyTypeAnnotation {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\nexport function assertArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayTypeAnnotation {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\nexport function assertBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanTypeAnnotation {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\nexport function assertBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteralTypeAnnotation {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteralTypeAnnotation {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\nexport function assertClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassImplements {\n  assert(\"ClassImplements\", node, opts);\n}\nexport function assertDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareClass {\n  assert(\"DeclareClass\", node, opts);\n}\nexport function assertDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareFunction {\n  assert(\"DeclareFunction\", node, opts);\n}\nexport function assertDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareInterface {\n  assert(\"DeclareInterface\", node, opts);\n}\nexport function assertDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModule {\n  assert(\"DeclareModule\", node, opts);\n}\nexport function assertDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModuleExports {\n  assert(\"DeclareModuleExports\", node, opts);\n}\nexport function assertDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareTypeAlias {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\nexport function assertDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareOpaqueType {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\nexport function assertDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareVariable {\n  assert(\"DeclareVariable\", node, opts);\n}\nexport function assertDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportDeclaration {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\nexport function assertDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportAllDeclaration {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\nexport function assertDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclaredPredicate {\n  assert(\"DeclaredPredicate\", node, opts);\n}\nexport function assertExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExistsTypeAnnotation {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeAnnotation {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeParam {\n  assert(\"FunctionTypeParam\", node, opts);\n}\nexport function assertGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.GenericTypeAnnotation {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\nexport function assertInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InferredPredicate {\n  assert(\"InferredPredicate\", node, opts);\n}\nexport function assertInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceExtends {\n  assert(\"InterfaceExtends\", node, opts);\n}\nexport function assertInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceDeclaration {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\nexport function assertInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceTypeAnnotation {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\nexport function assertIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IntersectionTypeAnnotation {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\nexport function assertMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MixedTypeAnnotation {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\nexport function assertEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyTypeAnnotation {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\nexport function assertNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullableTypeAnnotation {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\nexport function assertNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberLiteralTypeAnnotation {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberTypeAnnotation {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeAnnotation {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeInternalSlot {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\nexport function assertObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeCallProperty {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\nexport function assertObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeIndexer {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\nexport function assertObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeProperty {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\nexport function assertObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeSpreadProperty {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\nexport function assertOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OpaqueType {\n  assert(\"OpaqueType\", node, opts);\n}\nexport function assertQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.QualifiedTypeIdentifier {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\nexport function assertStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteralTypeAnnotation {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\nexport function assertStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringTypeAnnotation {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\nexport function assertSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SymbolTypeAnnotation {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\nexport function assertThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisTypeAnnotation {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\nexport function assertTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleTypeAnnotation {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\nexport function assertTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeofTypeAnnotation {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\nexport function assertTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAlias {\n  assert(\"TypeAlias\", node, opts);\n}\nexport function assertTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAnnotation {\n  assert(\"TypeAnnotation\", node, opts);\n}\nexport function assertTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeCastExpression {\n  assert(\"TypeCastExpression\", node, opts);\n}\nexport function assertTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameter {\n  assert(\"TypeParameter\", node, opts);\n}\nexport function assertTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterDeclaration {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\nexport function assertTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterInstantiation {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\nexport function assertUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnionTypeAnnotation {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\nexport function assertVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Variance {\n  assert(\"Variance\", node, opts);\n}\nexport function assertVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VoidTypeAnnotation {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\nexport function assertEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDeclaration {\n  assert(\"EnumDeclaration\", node, opts);\n}\nexport function assertEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanBody {\n  assert(\"EnumBooleanBody\", node, opts);\n}\nexport function assertEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberBody {\n  assert(\"EnumNumberBody\", node, opts);\n}\nexport function assertEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringBody {\n  assert(\"EnumStringBody\", node, opts);\n}\nexport function assertEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumSymbolBody {\n  assert(\"EnumSymbolBody\", node, opts);\n}\nexport function assertEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanMember {\n  assert(\"EnumBooleanMember\", node, opts);\n}\nexport function assertEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberMember {\n  assert(\"EnumNumberMember\", node, opts);\n}\nexport function assertEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringMember {\n  assert(\"EnumStringMember\", node, opts);\n}\nexport function assertEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDefaultedMember {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\nexport function assertIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IndexedAccessType {\n  assert(\"IndexedAccessType\", node, opts);\n}\nexport function assertOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalIndexedAccessType {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\nexport function assertJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXAttribute {\n  assert(\"JSXAttribute\", node, opts);\n}\nexport function assertJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingElement {\n  assert(\"JSXClosingElement\", node, opts);\n}\nexport function assertJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXElement {\n  assert(\"JSXElement\", node, opts);\n}\nexport function assertJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXEmptyExpression {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\nexport function assertJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXExpressionContainer {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\nexport function assertJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadChild {\n  assert(\"JSXSpreadChild\", node, opts);\n}\nexport function assertJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXIdentifier {\n  assert(\"JSXIdentifier\", node, opts);\n}\nexport function assertJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXMemberExpression {\n  assert(\"JSXMemberExpression\", node, opts);\n}\nexport function assertJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXNamespacedName {\n  assert(\"JSXNamespacedName\", node, opts);\n}\nexport function assertJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningElement {\n  assert(\"JSXOpeningElement\", node, opts);\n}\nexport function assertJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadAttribute {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\nexport function assertJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXText {\n  assert(\"JSXText\", node, opts);\n}\nexport function assertJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXFragment {\n  assert(\"JSXFragment\", node, opts);\n}\nexport function assertJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningFragment {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\nexport function assertJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingFragment {\n  assert(\"JSXClosingFragment\", node, opts);\n}\nexport function assertNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Noop {\n  assert(\"Noop\", node, opts);\n}\nexport function assertPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Placeholder {\n  assert(\"Placeholder\", node, opts);\n}\nexport function assertV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.V8IntrinsicIdentifier {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\nexport function assertArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArgumentPlaceholder {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\nexport function assertBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BindExpression {\n  assert(\"BindExpression\", node, opts);\n}\nexport function assertDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Decorator {\n  assert(\"Decorator\", node, opts);\n}\nexport function assertDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoExpression {\n  assert(\"DoExpression\", node, opts);\n}\nexport function assertExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultSpecifier {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\nexport function assertRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RecordExpression {\n  assert(\"RecordExpression\", node, opts);\n}\nexport function assertTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleExpression {\n  assert(\"TupleExpression\", node, opts);\n}\nexport function assertDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DecimalLiteral {\n  assert(\"DecimalLiteral\", node, opts);\n}\nexport function assertModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleExpression {\n  assert(\"ModuleExpression\", node, opts);\n}\nexport function assertTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TopicReference {\n  assert(\"TopicReference\", node, opts);\n}\nexport function assertPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineTopicExpression {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\nexport function assertPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineBareFunction {\n  assert(\"PipelineBareFunction\", node, opts);\n}\nexport function assertPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelinePrimaryTopicReference {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\nexport function assertTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParameterProperty {\n  assert(\"TSParameterProperty\", node, opts);\n}\nexport function assertTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareFunction {\n  assert(\"TSDeclareFunction\", node, opts);\n}\nexport function assertTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareMethod {\n  assert(\"TSDeclareMethod\", node, opts);\n}\nexport function assertTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSQualifiedName {\n  assert(\"TSQualifiedName\", node, opts);\n}\nexport function assertTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSCallSignatureDeclaration {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\nexport function assertTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructSignatureDeclaration {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\nexport function assertTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSPropertySignature {\n  assert(\"TSPropertySignature\", node, opts);\n}\nexport function assertTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMethodSignature {\n  assert(\"TSMethodSignature\", node, opts);\n}\nexport function assertTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexSignature {\n  assert(\"TSIndexSignature\", node, opts);\n}\nexport function assertTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAnyKeyword {\n  assert(\"TSAnyKeyword\", node, opts);\n}\nexport function assertTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBooleanKeyword {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\nexport function assertTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBigIntKeyword {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\nexport function assertTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntrinsicKeyword {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\nexport function assertTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNeverKeyword {\n  assert(\"TSNeverKeyword\", node, opts);\n}\nexport function assertTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNullKeyword {\n  assert(\"TSNullKeyword\", node, opts);\n}\nexport function assertTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNumberKeyword {\n  assert(\"TSNumberKeyword\", node, opts);\n}\nexport function assertTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSObjectKeyword {\n  assert(\"TSObjectKeyword\", node, opts);\n}\nexport function assertTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSStringKeyword {\n  assert(\"TSStringKeyword\", node, opts);\n}\nexport function assertTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSymbolKeyword {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\nexport function assertTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUndefinedKeyword {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\nexport function assertTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnknownKeyword {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\nexport function assertTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSVoidKeyword {\n  assert(\"TSVoidKeyword\", node, opts);\n}\nexport function assertTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSThisType {\n  assert(\"TSThisType\", node, opts);\n}\nexport function assertTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSFunctionType {\n  assert(\"TSFunctionType\", node, opts);\n}\nexport function assertTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructorType {\n  assert(\"TSConstructorType\", node, opts);\n}\nexport function assertTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeReference {\n  assert(\"TSTypeReference\", node, opts);\n}\nexport function assertTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypePredicate {\n  assert(\"TSTypePredicate\", node, opts);\n}\nexport function assertTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeQuery {\n  assert(\"TSTypeQuery\", node, opts);\n}\nexport function assertTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeLiteral {\n  assert(\"TSTypeLiteral\", node, opts);\n}\nexport function assertTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSArrayType {\n  assert(\"TSArrayType\", node, opts);\n}\nexport function assertTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTupleType {\n  assert(\"TSTupleType\", node, opts);\n}\nexport function assertTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSOptionalType {\n  assert(\"TSOptionalType\", node, opts);\n}\nexport function assertTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSRestType {\n  assert(\"TSRestType\", node, opts);\n}\nexport function assertTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamedTupleMember {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\nexport function assertTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnionType {\n  assert(\"TSUnionType\", node, opts);\n}\nexport function assertTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntersectionType {\n  assert(\"TSIntersectionType\", node, opts);\n}\nexport function assertTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConditionalType {\n  assert(\"TSConditionalType\", node, opts);\n}\nexport function assertTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInferType {\n  assert(\"TSInferType\", node, opts);\n}\nexport function assertTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParenthesizedType {\n  assert(\"TSParenthesizedType\", node, opts);\n}\nexport function assertTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeOperator {\n  assert(\"TSTypeOperator\", node, opts);\n}\nexport function assertTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexedAccessType {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\nexport function assertTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMappedType {\n  assert(\"TSMappedType\", node, opts);\n}\nexport function assertTSTemplateLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTemplateLiteralType {\n  assert(\"TSTemplateLiteralType\", node, opts);\n}\nexport function assertTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSLiteralType {\n  assert(\"TSLiteralType\", node, opts);\n}\nexport function assertTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExpressionWithTypeArguments {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\nexport function assertTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceDeclaration {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\nexport function assertTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceBody {\n  assert(\"TSInterfaceBody\", node, opts);\n}\nexport function assertTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAliasDeclaration {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\nexport function assertTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInstantiationExpression {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\nexport function assertTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAsExpression {\n  assert(\"TSAsExpression\", node, opts);\n}\nexport function assertTSSatisfiesExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSatisfiesExpression {\n  assert(\"TSSatisfiesExpression\", node, opts);\n}\nexport function assertTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAssertion {\n  assert(\"TSTypeAssertion\", node, opts);\n}\nexport function assertTSEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumBody {\n  assert(\"TSEnumBody\", node, opts);\n}\nexport function assertTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumDeclaration {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\nexport function assertTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumMember {\n  assert(\"TSEnumMember\", node, opts);\n}\nexport function assertTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleDeclaration {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\nexport function assertTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleBlock {\n  assert(\"TSModuleBlock\", node, opts);\n}\nexport function assertTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportType {\n  assert(\"TSImportType\", node, opts);\n}\nexport function assertTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportEqualsDeclaration {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\nexport function assertTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExternalModuleReference {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\nexport function assertTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNonNullExpression {\n  assert(\"TSNonNullExpression\", node, opts);\n}\nexport function assertTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExportAssignment {\n  assert(\"TSExportAssignment\", node, opts);\n}\nexport function assertTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamespaceExportDeclaration {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\nexport function assertTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAnnotation {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\nexport function assertTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterInstantiation {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\nexport function assertTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterDeclaration {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\nexport function assertTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameter {\n  assert(\"TSTypeParameter\", node, opts);\n}\nexport function assertStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Standardized {\n  assert(\"Standardized\", node, opts);\n}\nexport function assertExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Expression {\n  assert(\"Expression\", node, opts);\n}\nexport function assertBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Binary {\n  assert(\"Binary\", node, opts);\n}\nexport function assertScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Scopable {\n  assert(\"Scopable\", node, opts);\n}\nexport function assertBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockParent {\n  assert(\"BlockParent\", node, opts);\n}\nexport function assertBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Block {\n  assert(\"Block\", node, opts);\n}\nexport function assertStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Statement {\n  assert(\"Statement\", node, opts);\n}\nexport function assertTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Terminatorless {\n  assert(\"Terminatorless\", node, opts);\n}\nexport function assertCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CompletionStatement {\n  assert(\"CompletionStatement\", node, opts);\n}\nexport function assertConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Conditional {\n  assert(\"Conditional\", node, opts);\n}\nexport function assertLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Loop {\n  assert(\"Loop\", node, opts);\n}\nexport function assertWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.While {\n  assert(\"While\", node, opts);\n}\nexport function assertExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionWrapper {\n  assert(\"ExpressionWrapper\", node, opts);\n}\nexport function assertFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.For {\n  assert(\"For\", node, opts);\n}\nexport function assertForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForXStatement {\n  assert(\"ForXStatement\", node, opts);\n}\nexport function assertFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Function {\n  assert(\"Function\", node, opts);\n}\nexport function assertFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionParent {\n  assert(\"FunctionParent\", node, opts);\n}\nexport function assertPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pureish {\n  assert(\"Pureish\", node, opts);\n}\nexport function assertDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Declaration {\n  assert(\"Declaration\", node, opts);\n}\nexport function assertPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PatternLike {\n  assert(\"PatternLike\", node, opts);\n}\nexport function assertLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LVal {\n  assert(\"LVal\", node, opts);\n}\nexport function assertTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEntityName {\n  assert(\"TSEntityName\", node, opts);\n}\nexport function assertLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Literal {\n  assert(\"Literal\", node, opts);\n}\nexport function assertImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Immutable {\n  assert(\"Immutable\", node, opts);\n}\nexport function assertUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UserWhitespacable {\n  assert(\"UserWhitespacable\", node, opts);\n}\nexport function assertMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Method {\n  assert(\"Method\", node, opts);\n}\nexport function assertObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMember {\n  assert(\"ObjectMember\", node, opts);\n}\nexport function assertProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Property {\n  assert(\"Property\", node, opts);\n}\nexport function assertUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryLike {\n  assert(\"UnaryLike\", node, opts);\n}\nexport function assertPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pattern {\n  assert(\"Pattern\", node, opts);\n}\nexport function assertClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Class {\n  assert(\"Class\", node, opts);\n}\nexport function assertImportOrExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportOrExportDeclaration {\n  assert(\"ImportOrExportDeclaration\", node, opts);\n}\nexport function assertExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDeclaration {\n  assert(\"ExportDeclaration\", node, opts);\n}\nexport function assertModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleSpecifier {\n  assert(\"ModuleSpecifier\", node, opts);\n}\nexport function assertAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Accessor {\n  assert(\"Accessor\", node, opts);\n}\nexport function assertPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Private {\n  assert(\"Private\", node, opts);\n}\nexport function assertFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Flow {\n  assert(\"Flow\", node, opts);\n}\nexport function assertFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowType {\n  assert(\"FlowType\", node, opts);\n}\nexport function assertFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowBaseAnnotation {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\nexport function assertFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowDeclaration {\n  assert(\"FlowDeclaration\", node, opts);\n}\nexport function assertFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowPredicate {\n  assert(\"FlowPredicate\", node, opts);\n}\nexport function assertEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBody {\n  assert(\"EnumBody\", node, opts);\n}\nexport function assertEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumMember {\n  assert(\"EnumMember\", node, opts);\n}\nexport function assertJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSX {\n  assert(\"JSX\", node, opts);\n}\nexport function assertMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Miscellaneous {\n  assert(\"Miscellaneous\", node, opts);\n}\nexport function assertTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeScript {\n  assert(\"TypeScript\", node, opts);\n}\nexport function assertTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeElement {\n  assert(\"TSTypeElement\", node, opts);\n}\nexport function assertTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSType {\n  assert(\"TSType\", node, opts);\n}\nexport function assertTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBaseType {\n  assert(\"TSBaseType\", node, opts);\n}\nexport function assertNumberLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertNumberLiteral\", \"assertNumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\nexport function assertRegexLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertRegexLiteral\", \"assertRegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\nexport function assertRestProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertRestProperty\", \"assertRestElement\");\n  assert(\"RestProperty\", node, opts);\n}\nexport function assertSpreadProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertSpreadProperty\", \"assertSpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}\nexport function assertModuleDeclaration(node: any, opts: any): void {\n  deprecationWarning(\n    \"assertModuleDeclaration\",\n    \"assertImportOrExportDeclaration\",\n  );\n  assert(\"ModuleDeclaration\", node, opts);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js":{"lineLengths":[13,0,46,13,3,25,46,67,50,17,18,48,18,48,21,46,19,49,20,83,18,81,18,81,18,45,3,51,1,0,61,0],"data":{"version":3,"names":["_index","require","_default","exports","default","createTypeAnnotationBasedOnTypeof","type","stringTypeAnnotation","numberTypeAnnotation","voidTypeAnnotation","booleanTypeAnnotation","genericTypeAnnotation","identifier","anyTypeAnnotation","Error"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/flow/createTypeAnnotationBasedOnTypeof.ts"],"sourcesContent":["import {\n  anyTypeAnnotation,\n  stringTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation,\n  booleanTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n} from \"../generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nexport default createTypeAnnotationBasedOnTypeof as {\n  (type: \"string\"): t.StringTypeAnnotation;\n  (type: \"number\"): t.NumberTypeAnnotation;\n  (type: \"undefined\"): t.VoidTypeAnnotation;\n  (type: \"boolean\"): t.BooleanTypeAnnotation;\n  (type: \"function\"): t.GenericTypeAnnotation;\n  (type: \"object\"): t.GenericTypeAnnotation;\n  (type: \"symbol\"): t.GenericTypeAnnotation;\n  (type: \"bigint\"): t.AnyTypeAnnotation;\n};\n\n/**\n * Create a type annotation based on typeof expression.\n */\nfunction createTypeAnnotationBasedOnTypeof(type: string): t.FlowType {\n  switch (type) {\n    case \"string\":\n      return stringTypeAnnotation();\n    case \"number\":\n      return numberTypeAnnotation();\n    case \"undefined\":\n      return voidTypeAnnotation();\n    case \"boolean\":\n      return booleanTypeAnnotation();\n    case \"function\":\n      return genericTypeAnnotation(identifier(\"Function\"));\n    case \"object\":\n      return genericTypeAnnotation(identifier(\"Object\"));\n    case \"symbol\":\n      return genericTypeAnnotation(identifier(\"Symbol\"));\n    case \"bigint\":\n      // todo: use BigInt annotation when Flow supports BigInt\n      // https://github.com/facebook/flow/issues/6639\n      return anyTypeAnnotation();\n  }\n  throw new Error(\"Invalid typeof value: \" + type);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAQ+B,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGhBC,iCAAiC;AAchD,SAASA,iCAAiCA,CAACC,IAAY,EAAc;EACnE,QAAQA,IAAI;IACV,KAAK,QAAQ;MACX,OAAO,IAAAC,2BAAoB,EAAC,CAAC;IAC/B,KAAK,QAAQ;MACX,OAAO,IAAAC,2BAAoB,EAAC,CAAC;IAC/B,KAAK,WAAW;MACd,OAAO,IAAAC,yBAAkB,EAAC,CAAC;IAC7B,KAAK,SAAS;MACZ,OAAO,IAAAC,4BAAqB,EAAC,CAAC;IAChC,KAAK,UAAU;MACb,OAAO,IAAAC,4BAAqB,EAAC,IAAAC,iBAAU,EAAC,UAAU,CAAC,CAAC;IACtD,KAAK,QAAQ;MACX,OAAO,IAAAD,4BAAqB,EAAC,IAAAC,iBAAU,EAAC,QAAQ,CAAC,CAAC;IACpD,KAAK,QAAQ;MACX,OAAO,IAAAD,4BAAqB,EAAC,IAAAC,iBAAU,EAAC,QAAQ,CAAC,CAAC;IACpD,KAAK,QAAQ;MAGX,OAAO,IAAAC,wBAAiB,EAAC,CAAC;EAC9B;EACA,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAGR,IAAI,CAAC;AAClD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js":{"lineLengths":[13,0,46,13,3,38,46,88,37,62,31,24,10,54,3,1,0,47,0],"data":{"version":3,"names":["_index","require","_removeTypeDuplicates","createFlowUnionType","types","flattened","removeTypeDuplicates","length","unionTypeAnnotation"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/flow/createFlowUnionType.ts"],"sourcesContent":["import { unionTypeAnnotation } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/flow/removeTypeDuplicates.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createFlowUnionType<T extends t.FlowType>(\n  types: [T] | Array<T>,\n): T | t.UnionTypeAnnotation {\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0] as T;\n  } else {\n    return unionTypeAnnotation(flattened);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAOe,SAASE,mBAAmBA,CACzCC,KAAqB,EACM;EAC3B,MAAMC,SAAS,GAAG,IAAAC,6BAAoB,EAACF,KAAK,CAAC;EAE7C,IAAIC,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOF,SAAS,CAAC,CAAC,CAAC;EACrB,CAAC,MAAM;IACL,OAAO,IAAAG,0BAAmB,EAACH,SAAS,CAAC;EACvC;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js":{"lineLengths":[13,0,46,13,3,39,60,33,112,1,40,36,29,26,31,19,42,26,24,31,15,5,48,20,5,49,33,15,5,50,40,34,35,7,15,5,52,45,31,42,38,36,79,98,11,16,41,9,14,33,7,15,5,21,3,37,25,3,43,28,3,15,1,0,48,0],"data":{"version":3,"names":["_index","require","getQualifiedName","node","isIdentifier","name","id","qualification","removeTypeDuplicates","nodesIn","nodes","Array","from","generics","Map","bases","typeGroups","Set","types","i","length","includes","isAnyTypeAnnotation","isFlowBaseAnnotation","set","type","isUnionTypeAnnotation","has","push","add","isGenericTypeAnnotation","existing","get","typeParameters","params","baseType","genericName"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/flow/removeTypeDuplicates.ts"],"sourcesContent":["import {\n  isAnyTypeAnnotation,\n  isGenericTypeAnnotation,\n  isUnionTypeAnnotation,\n  isFlowBaseAnnotation,\n  isIdentifier,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.GenericTypeAnnotation[\"id\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.FlowType | false | null | undefined>,\n): t.FlowType[] {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.GenericTypeAnnotation>();\n  const bases = new Map<t.FlowBaseAnnotation[\"type\"], t.FlowBaseAnnotation>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.FlowType[]>();\n\n  const types: t.FlowType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.includes(node)) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (isFlowBaseAnnotation(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isUnionTypeAnnotation(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (isGenericTypeAnnotation(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing: t.Flow = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AASA,SAASC,gBAAgBA,CAACC,IAAmC,EAAU;EACrE,OAAO,IAAAC,mBAAY,EAACD,IAAI,CAAC,GACrBA,IAAI,CAACE,IAAI,GACT,GAAGF,IAAI,CAACG,EAAE,CAACD,IAAI,IAAIH,gBAAgB,CAACC,IAAI,CAACI,aAAa,CAAC,EAAE;AAC/D;AAKe,SAASC,oBAAoBA,CAC1CC,OAA6D,EAC/C;EACd,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC;EAEjC,MAAMI,QAAQ,GAAG,IAAIC,GAAG,CAAkC,CAAC;EAC3D,MAAMC,KAAK,GAAG,IAAID,GAAG,CAAqD,CAAC;EAG3E,MAAME,UAAU,GAAG,IAAIC,GAAG,CAAe,CAAC;EAE1C,MAAMC,KAAmB,GAAG,EAAE;EAE9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAMhB,IAAI,GAAGO,KAAK,CAACS,CAAC,CAAC;IACrB,IAAI,CAAChB,IAAI,EAAE;IAGX,IAAIe,KAAK,CAACG,QAAQ,CAAClB,IAAI,CAAC,EAAE;MACxB;IACF;IAGA,IAAI,IAAAmB,0BAAmB,EAACnB,IAAI,CAAC,EAAE;MAC7B,OAAO,CAACA,IAAI,CAAC;IACf;IAEA,IAAI,IAAAoB,2BAAoB,EAACpB,IAAI,CAAC,EAAE;MAC9BY,KAAK,CAACS,GAAG,CAACrB,IAAI,CAACsB,IAAI,EAAEtB,IAAI,CAAC;MAC1B;IACF;IAEA,IAAI,IAAAuB,4BAAqB,EAACvB,IAAI,CAAC,EAAE;MAC/B,IAAI,CAACa,UAAU,CAACW,GAAG,CAACxB,IAAI,CAACe,KAAK,CAAC,EAAE;QAC/BR,KAAK,CAACkB,IAAI,CAAC,GAAGzB,IAAI,CAACe,KAAK,CAAC;QACzBF,UAAU,CAACa,GAAG,CAAC1B,IAAI,CAACe,KAAK,CAAC;MAC5B;MACA;IACF;IAGA,IAAI,IAAAY,8BAAuB,EAAC3B,IAAI,CAAC,EAAE;MACjC,MAAME,IAAI,GAAGH,gBAAgB,CAACC,IAAI,CAACG,EAAE,CAAC;MAEtC,IAAIO,QAAQ,CAACc,GAAG,CAACtB,IAAI,CAAC,EAAE;QACtB,IAAI0B,QAAgB,GAAGlB,QAAQ,CAACmB,GAAG,CAAC3B,IAAI,CAAC;QACzC,IAAI0B,QAAQ,CAACE,cAAc,EAAE;UAC3B,IAAI9B,IAAI,CAAC8B,cAAc,EAAE;YACvBF,QAAQ,CAACE,cAAc,CAACC,MAAM,CAACN,IAAI,CAAC,GAAGzB,IAAI,CAAC8B,cAAc,CAACC,MAAM,CAAC;YAClEH,QAAQ,CAACE,cAAc,CAACC,MAAM,GAAG1B,oBAAoB,CACnDuB,QAAQ,CAACE,cAAc,CAACC,MAC1B,CAAC;UACH;QACF,CAAC,MAAM;UACLH,QAAQ,GAAG5B,IAAI,CAAC8B,cAAc;QAChC;MACF,CAAC,MAAM;QACLpB,QAAQ,CAACW,GAAG,CAACnB,IAAI,EAAEF,IAAI,CAAC;MAC1B;MAEA;IACF;IAEAe,KAAK,CAACU,IAAI,CAACzB,IAAI,CAAC;EAClB;EAGA,KAAK,MAAM,GAAGgC,QAAQ,CAAC,IAAIpB,KAAK,EAAE;IAChCG,KAAK,CAACU,IAAI,CAACO,QAAQ,CAAC;EACtB;EAGA,KAAK,MAAM,GAAGC,WAAW,CAAC,IAAIvB,QAAQ,EAAE;IACtCK,KAAK,CAACU,IAAI,CAACQ,WAAW,CAAC;EACzB;EAEA,OAAOlB,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js":{"lineLengths":[13,0,46,13,3,36,46,94,61,45,45,78,5,62,31,24,10,46,3,1,0,45,0],"data":{"version":3,"names":["_index","require","_removeTypeDuplicates","_index2","createTSUnionType","typeAnnotations","types","map","type","isTSTypeAnnotation","typeAnnotation","flattened","removeTypeDuplicates","length","tsUnionType"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/typescript/createTSUnionType.ts"],"sourcesContent":["import { tsUnionType } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates.ts\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAOe,SAASG,iBAAiBA,CACvCC,eAAqD,EAC3C;EACV,MAAMC,KAAK,GAAGD,eAAe,CAACE,GAAG,CAACC,IAAI,IAAI;IACxC,OAAO,IAAAC,0BAAkB,EAACD,IAAI,CAAC,GAAGA,IAAI,CAACE,cAAc,GAAGF,IAAI;EAC9D,CAAC,CAAC;EACF,MAAMG,SAAS,GAAG,IAAAC,6BAAoB,EAACN,KAAK,CAAC;EAE7C,IAAIK,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOF,SAAS,CAAC,CAAC,CAAC;EACrB,CAAC,MAAM;IACL,OAAO,IAAAG,kBAAW,EAACH,SAAS,CAAC;EAC/B;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js":{"lineLengths":[13,0,46,13,3,39,60,33,152,1,40,36,29,26,31,19,42,26,24,31,15,5,43,20,5,41,33,15,5,42,40,34,35,7,15,5,46,72,51,51,31,42,65,36,69,92,16,35,9,14,33,7,15,5,21,3,37,25,3,43,28,3,15,1,0,48,0],"data":{"version":3,"names":["_index","require","getQualifiedName","node","isIdentifier","name","isThisExpression","right","left","removeTypeDuplicates","nodesIn","nodes","Array","from","generics","Map","bases","typeGroups","Set","types","i","length","includes","isTSAnyKeyword","isTSBaseType","set","type","isTSUnionType","has","push","add","typeArgumentsKey","isTSTypeReference","typeArguments","typeName","existing","get","existingTypeArguments","params","baseType","genericName"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/typescript/removeTypeDuplicates.ts"],"sourcesContent":["import {\n  isIdentifier,\n  isThisExpression,\n  isTSAnyKeyword,\n  isTSTypeReference,\n  isTSUnionType,\n  isTSBaseType,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.TSTypeReference[\"typeName\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : isThisExpression(node)\n      ? \"this\"\n      : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.TSType>,\n): Array<t.TSType> {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.TSTypeReference>();\n  const bases = new Map<t.TSBaseType[\"type\"], t.TSBaseType>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.TSType[]>();\n\n  const types: t.TSType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.includes(node)) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isTSAnyKeyword(node)) {\n      return [node];\n    }\n\n    // Analogue of FlowBaseAnnotation\n    if (isTSBaseType(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isTSUnionType(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // todo: support merging tuples: number[]\n    const typeArgumentsKey = process.env.BABEL_8_BREAKING\n      ? \"typeArguments\"\n      : \"typeParameters\";\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    if (isTSTypeReference(node) && node[typeArgumentsKey]) {\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      const typeArguments = node[typeArgumentsKey];\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing: t.TypeScript = generics.get(name);\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n        const existingTypeArguments = existing[typeArgumentsKey];\n        if (existingTypeArguments) {\n          existingTypeArguments.params.push(...typeArguments.params);\n          existingTypeArguments.params = removeTypeDuplicates(\n            existingTypeArguments.params,\n          );\n        } else {\n          existing = typeArguments;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/builders/productions.js":{"lineLengths":[13,0,46,13,3,48,45,31,82,1,0,39,0],"data":{"version":3,"names":["_index","require","buildUndefinedNode","unaryExpression","numericLiteral"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/builders/productions.ts"],"sourcesContent":["import { numericLiteral, unaryExpression } from \"./generated/index.ts\";\n\nexport function buildUndefinedNode() {\n  return unaryExpression(\"void\", numericLiteral(0), true);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEO,SAASC,kBAAkBA,CAAA,EAAG;EACnC,OAAO,IAAAC,sBAAe,EAAC,MAAM,EAAE,IAAAC,qBAAc,EAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACzD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneNode.js":{"lineLengths":[13,0,46,13,3,28,48,58,7,8,5,61,2,60,44,67,3,13,1,67,27,79,3,59,1,59,62,1,82,25,9,8,11,19,19,4,40,29,73,39,5,41,133,5,37,121,5,49,52,10,64,32,19,213,16,39,9,7,5,3,28,21,25,12,29,5,3,40,104,3,38,100,3,41,106,3,30,50,3,17,1,72,27,20,3,34,45,28,11,11,12,9,16,17,11,12,9,6,21,21,5,36,15,5,1,0,37,0],"data":{"version":3,"names":["_index","require","_index2","hasOwn","Function","call","bind","Object","prototype","hasOwnProperty","cloneIfNode","obj","deep","withoutLoc","commentsCache","type","cloneNodeInternal","cloneIfNodeOrArray","Array","isArray","map","node","cloneNode","Map","newNode","isIdentifier","name","optional","typeAnnotation","decorators","NODE_FIELDS","Error","field","keys","isFile","maybeCloneComments","comments","loc","leadingComments","innerComments","trailingComments","extra","assign","comment","cache","get","value","ret","set"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/clone/cloneNode.ts"],"sourcesContent":["import { NODE_FIELDS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\nimport { isFile, isIdentifier } from \"../validators/generated/index.ts\";\n\nconst { hasOwn } = process.env.BABEL_8_BREAKING\n  ? Object\n  : { hasOwn: Function.call.bind(Object.prototype.hasOwnProperty) };\n\ntype CommentCache = Map<t.Comment, t.Comment>;\n\n// This function will never be called for comments, only for real nodes.\nfunction cloneIfNode(\n  obj: t.Node | undefined | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(\n  obj: t.Node | undefined | null | (t.Node | undefined | null)[],\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\n/**\n * Create a clone of a `node` including only properties belonging to the node.\n * If the second parameter is `false`, cloneNode performs a shallow clone.\n * If the third parameter is true, the cloned nodes exclude location properties.\n */\nexport default function cloneNode<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n): T {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n  commentsCache: CommentCache,\n): T {\n  if (!node) return node;\n\n  const { type } = node;\n  const newNode: any = { type: node.type };\n\n  // Special-case identifiers since they are the most cloned nodes.\n  if (isIdentifier(node)) {\n    newNode.name = node.name;\n\n    if (hasOwn(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (hasOwn(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep\n        ? cloneIfNodeOrArray(\n            node.typeAnnotation,\n            true,\n            withoutLoc,\n            commentsCache,\n          )\n        : node.typeAnnotation;\n    }\n\n    if (hasOwn(node, \"decorators\")) {\n      newNode.decorators = deep\n        ? cloneIfNodeOrArray(node.decorators, true, withoutLoc, commentsCache)\n        : node.decorators;\n    }\n  } else if (!hasOwn(NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(NODE_FIELDS[type])) {\n      if (hasOwn(node, field)) {\n        if (deep) {\n          newNode[field] =\n            isFile(node) && field === \"comments\"\n              ? maybeCloneComments(\n                  node.comments,\n                  deep,\n                  withoutLoc,\n                  commentsCache,\n                )\n              : cloneIfNodeOrArray(\n                  // @ts-expect-error node[field] has been guarded by has check\n                  node[field],\n                  true,\n                  withoutLoc,\n                  commentsCache,\n                );\n        } else {\n          newNode[field] =\n            // @ts-expect-error node[field] has been guarded by has check\n            node[field];\n        }\n      }\n    }\n  }\n\n  if (hasOwn(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n  if (hasOwn(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(\n      node.leadingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(\n      node.innerComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(\n      node.trailingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"extra\")) {\n    newNode.extra = {\n      ...node.extra,\n    };\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments<T extends t.Comment>(\n  comments: ReadonlyArray<T> | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: Map<T, T>,\n): ReadonlyArray<T> | null {\n  if (!comments || !deep) {\n    return comments;\n  }\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n\n    const { type, value, loc } = comment;\n\n    const ret = { type, value, loc } as T;\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n\n    return ret;\n  });\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/clone.js":{"lineLengths":[13,0,46,13,3,24,43,22,46,1,0,33,0],"data":{"version":3,"names":["_cloneNode","require","clone","node","cloneNode"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/clone/clone.ts"],"sourcesContent":["import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node`, including only\n * properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function clone<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAQe,SAASC,KAAKA,CAAmBC,IAAO,EAAK;EAC1D,OAAO,IAAAC,kBAAS,EAACD,IAAI,EAAa,KAAK,CAAC;AAC1C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneDeep.js":{"lineLengths":[13,0,46,13,3,28,43,26,39,1,0,37,0],"data":{"version":3,"names":["_cloneNode","require","cloneDeep","node","cloneNode"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/clone/cloneDeep.ts"],"sourcesContent":["import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function cloneDeep<T extends t.Node>(node: T): T {\n  return cloneNode(node);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAQe,SAASC,SAASA,CAAmBC,IAAO,EAAK;EAC9D,OAAO,IAAAC,kBAAS,EAACD,IAAI,CAAC;AACxB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js":{"lineLengths":[13,0,46,13,3,38,43,36,51,1,0,47,0],"data":{"version":3,"names":["_cloneNode","require","cloneDeepWithoutLoc","node","cloneNode"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/clone/cloneDeepWithoutLoc.ts"],"sourcesContent":["import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * excluding `_private` and location properties.\n */\nexport default function cloneDeepWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ true, /* withoutLoc */ true);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAOe,SAASC,mBAAmBA,CAAmBC,IAAO,EAAK;EACxE,OAAO,IAAAC,kBAAS,EAACD,IAAI,EAAa,IAAI,EAAmB,IAAI,CAAC;AAChE","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js":{"lineLengths":[13,0,46,13,3,34,43,32,52,1,0,43,0],"data":{"version":3,"names":["_cloneNode","require","cloneWithoutLoc","node","cloneNode"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/clone/cloneWithoutLoc.ts"],"sourcesContent":["import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node` excluding `_private` and location properties.\n */\nexport default function cloneWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false, /* withoutLoc */ true);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAMe,SAASC,eAAeA,CAAmBC,IAAO,EAAK;EACpE,OAAO,IAAAC,kBAAS,EAACD,IAAI,EAAa,KAAK,EAAmB,IAAI,CAAC;AACjE","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/addComment.js":{"lineLengths":[13,0,46,13,3,29,47,48,49,48,18,6,1,0,38,0],"data":{"version":3,"names":["_addComments","require","addComment","node","type","content","line","addComments","value"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/addComment.ts"],"sourcesContent":["import addComments from \"./addComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Add comment of certain type to a node.\n */\nexport default function addComment<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  content: string,\n  line?: boolean,\n): T {\n  return addComments(node, type, [\n    {\n      type: line ? \"CommentLine\" : \"CommentBlock\",\n      value: content,\n    } as t.Comment,\n  ]);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAMe,SAASC,UAAUA,CAChCC,IAAO,EACPC,IAA4B,EAC5BC,OAAe,EACfC,IAAc,EACX;EACH,OAAO,IAAAC,oBAAW,EAACJ,IAAI,EAAEC,IAAI,EAAE,CAC7B;IACEA,IAAI,EAAEE,IAAI,GAAG,aAAa,GAAG,cAAc;IAC3CE,KAAK,EAAEH;EACT,CAAC,CACF,CAAC;AACJ","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/addComments.js":{"lineLengths":[13,0,46,13,3,30,44,38,32,18,29,45,12,34,5,10,25,3,14,1,0,39,0],"data":{"version":3,"names":["addComments","node","type","comments","key","concat","push"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/addComments.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\n\n/**\n * Add comments of certain type to a node.\n */\nexport default function addComments<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  comments: Array<t.Comment>,\n): T {\n  if (!comments || !node) return node;\n\n  const key = `${type}Comments` as const;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}\n"],"mappings":";;;;;;AAKe,SAASA,WAAWA,CACjCC,IAAO,EACPC,IAA4B,EAC5BC,QAA0B,EACvB;EACH,IAAI,CAACA,QAAQ,IAAI,CAACF,IAAI,EAAE,OAAOA,IAAI;EAEnC,MAAMG,GAAG,GAAG,GAAGF,IAAI,UAAmB;EAEtC,IAAID,IAAI,CAACG,GAAG,CAAC,EAAE;IACb,IAAIF,IAAI,KAAK,SAAS,EAAE;MACtBD,IAAI,CAACG,GAAG,CAAC,GAAGD,QAAQ,CAACE,MAAM,CAACJ,IAAI,CAACG,GAAG,CAAC,CAAC;IACxC,CAAC,MAAM;MACLH,IAAI,CAACG,GAAG,CAAC,CAACE,IAAI,CAAC,GAAGH,QAAQ,CAAC;IAC7B;EACF,CAAC,MAAM;IACLF,IAAI,CAACG,GAAG,CAAC,GAAGD,QAAQ;EACtB;EAEA,OAAOF,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritInnerComments.js":{"lineLengths":[13,0,46,13,3,39,46,46,56,1,0,48,0],"data":{"version":3,"names":["_inherit","require","inheritInnerComments","child","parent","inherit"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/inheritInnerComments.ts"],"sourcesContent":["import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritInnerComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"innerComments\", child, parent);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAGe,SAASC,oBAAoBA,CAC1CC,KAAa,EACbC,MAAc,EACR;EACN,IAAAC,gBAAO,EAAC,eAAe,EAAEF,KAAK,EAAEC,MAAM,CAAC;AACzC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/utils/inherit.js":{"lineLengths":[13,0,46,13,3,26,38,24,89,3,1,0,35,0],"data":{"version":3,"names":["inherit","key","child","parent","Array","from","Set","concat","filter","Boolean"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/utils/inherit.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\n\nexport default function inherit<\n  C extends t.Node | undefined,\n  P extends t.Node | undefined,\n>(key: keyof C & keyof P, child: C, parent: P): void {\n  if (child && parent) {\n    // @ts-expect-error Could further refine key definitions\n    child[key] = Array.from(\n      new Set([].concat(child[key], parent[key]).filter(Boolean)),\n    );\n  }\n}\n"],"mappings":";;;;;;AAEe,SAASA,OAAOA,CAG7BC,GAAsB,EAAEC,KAAQ,EAAEC,MAAS,EAAQ;EACnD,IAAID,KAAK,IAAIC,MAAM,EAAE;IAEnBD,KAAK,CAACD,GAAG,CAAC,GAAGG,KAAK,CAACC,IAAI,CACrB,IAAIC,GAAG,CAAC,EAAE,CAACC,MAAM,CAACL,KAAK,CAACD,GAAG,CAAC,EAAEE,MAAM,CAACF,GAAG,CAAC,CAAC,CAACO,MAAM,CAACC,OAAO,CAAC,CAC5D,CAAC;EACH;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritLeadingComments.js":{"lineLengths":[13,0,46,13,3,41,46,48,58,1,0,50,0],"data":{"version":3,"names":["_inherit","require","inheritLeadingComments","child","parent","inherit"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/inheritLeadingComments.ts"],"sourcesContent":["import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritLeadingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"leadingComments\", child, parent);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAGe,SAASC,sBAAsBA,CAC5CC,KAAa,EACbC,MAAc,EACR;EACN,IAAAC,gBAAO,EAAC,iBAAiB,EAAEF,KAAK,EAAEC,MAAM,CAAC;AAC3C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritsComments.js":{"lineLengths":[13,0,46,13,3,35,71,69,65,42,55,54,52,15,1,0,44,0],"data":{"version":3,"names":["_inheritTrailingComments","require","_inheritLeadingComments","_inheritInnerComments","inheritsComments","child","parent","inheritTrailingComments","inheritLeadingComments","inheritInnerComments"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/inheritsComments.ts"],"sourcesContent":["import inheritTrailingComments from \"./inheritTrailingComments.ts\";\nimport inheritLeadingComments from \"./inheritLeadingComments.ts\";\nimport inheritInnerComments from \"./inheritInnerComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all unique comments from `parent` node to `child` node.\n */\nexport default function inheritsComments<T extends t.Node>(\n  child: T,\n  parent: t.Node,\n): T {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n\n  return child;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,wBAAA,GAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AACA,IAAAE,qBAAA,GAAAF,OAAA;AAMe,SAASG,gBAAgBA,CACtCC,KAAQ,EACRC,MAAc,EACX;EACH,IAAAC,gCAAuB,EAACF,KAAK,EAAEC,MAAM,CAAC;EACtC,IAAAE,+BAAsB,EAACH,KAAK,EAAEC,MAAM,CAAC;EACrC,IAAAG,6BAAoB,EAACJ,KAAK,EAAEC,MAAM,CAAC;EAEnC,OAAOD,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/inheritTrailingComments.js":{"lineLengths":[13,0,46,13,3,42,46,49,59,1,0,51,0],"data":{"version":3,"names":["_inherit","require","inheritTrailingComments","child","parent","inherit"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/inheritTrailingComments.ts"],"sourcesContent":["import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritTrailingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"trailingComments\", child, parent);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAGe,SAASC,uBAAuBA,CAC7CC,KAAa,EACbC,MAAc,EACR;EACN,IAAAC,gBAAO,EAAC,kBAAkB,EAAEF,KAAK,EAAEC,MAAM,CAAC;AAC5C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/comments/removeComments.js":{"lineLengths":[13,0,46,13,3,33,46,31,38,21,5,14,1,0,42,0],"data":{"version":3,"names":["_index","require","removeComments","node","COMMENT_KEYS","forEach","key"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/comments/removeComments.ts"],"sourcesContent":["import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Remove comment properties from a node.\n */\nexport default function removeComments<T extends t.Node>(node: T): T {\n  COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMe,SAASC,cAAcA,CAAmBC,IAAO,EAAK;EACnEC,mBAAY,CAACC,OAAO,CAACC,GAAG,IAAI;IAC1BH,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI;EAClB,CAAC,CAAC;EAEF,OAAOH,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/constants/generated/index.js":{"lineLengths":[13,0,46,13,3,1371,51,98,92,80,86,95,77,89,104,119,95,74,77,113,71,101,86,104,83,95,95,74,98,83,89,113,80,98,86,89,83,77,137,113,107,86,83,74,86,116,107,101,86,92,71,101,92,101,80,92,98,0,33,0],"data":{"version":3,"names":["_index","require","STANDARDIZED_TYPES","exports","FLIPPED_ALIAS_KEYS","EXPRESSION_TYPES","BINARY_TYPES","SCOPABLE_TYPES","BLOCKPARENT_TYPES","BLOCK_TYPES","STATEMENT_TYPES","TERMINATORLESS_TYPES","COMPLETIONSTATEMENT_TYPES","CONDITIONAL_TYPES","LOOP_TYPES","WHILE_TYPES","EXPRESSIONWRAPPER_TYPES","FOR_TYPES","FORXSTATEMENT_TYPES","FUNCTION_TYPES","FUNCTIONPARENT_TYPES","PUREISH_TYPES","DECLARATION_TYPES","PATTERNLIKE_TYPES","LVAL_TYPES","TSENTITYNAME_TYPES","LITERAL_TYPES","IMMUTABLE_TYPES","USERWHITESPACABLE_TYPES","METHOD_TYPES","OBJECTMEMBER_TYPES","PROPERTY_TYPES","UNARYLIKE_TYPES","PATTERN_TYPES","CLASS_TYPES","IMPORTOREXPORTDECLARATION_TYPES","EXPORTDECLARATION_TYPES","MODULESPECIFIER_TYPES","ACCESSOR_TYPES","PRIVATE_TYPES","FLOW_TYPES","FLOWTYPE_TYPES","FLOWBASEANNOTATION_TYPES","FLOWDECLARATION_TYPES","FLOWPREDICATE_TYPES","ENUMBODY_TYPES","ENUMMEMBER_TYPES","JSX_TYPES","MISCELLANEOUS_TYPES","TYPESCRIPT_TYPES","TSTYPEELEMENT_TYPES","TSTYPE_TYPES","TSBASETYPE_TYPES","MODULEDECLARATION_TYPES"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/constants/generated/index.ts"],"sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions/index.ts\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const IMPORTOREXPORTDECLARATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n/**\n * @deprecated migrate to IMPORTOREXPORTDECLARATION_TYPES.\n */\nexport const MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/ensureBlock.js":{"lineLengths":[13,0,46,13,3,30,39,42,56,21,16,1,0,39,0],"data":{"version":3,"names":["_toBlock","require","ensureBlock","node","key","result","toBlock"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/ensureBlock.ts"],"sourcesContent":["import toBlock from \"./toBlock.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AASe,SAASC,WAAWA,CACjCC,IAAY,EACZC,GAAW,GAAG,MAAM,EACF;EAElB,MAAMC,MAAM,GAAG,IAAAC,gBAAO,EAACH,IAAI,CAACC,GAAG,CAAC,EAAED,IAAI,CAAC;EAEvCA,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM;EAClB,OAAOA,MAAM;AACf","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toBlock.js":{"lineLengths":[13,0,46,13,3,26,57,56,32,43,16,3,22,43,20,10,41,43,50,14,54,7,5,24,3,49,1,0,35,0],"data":{"version":3,"names":["_index","require","_index2","toBlock","node","parent","isBlockStatement","blockNodes","isEmptyStatement","isStatement","isFunction","returnStatement","expressionStatement","blockStatement"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toBlock.ts"],"sourcesContent":["import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMA,IAAAC,OAAA,GAAAD,OAAA;AAOe,SAASE,OAAOA,CAC7BC,IAAgC,EAChCC,MAAe,EACG;EAClB,IAAI,IAAAC,uBAAgB,EAACF,IAAI,CAAC,EAAE;IAC1B,OAAOA,IAAI;EACb;EAEA,IAAIG,UAAyB,GAAG,EAAE;EAElC,IAAI,IAAAC,uBAAgB,EAACJ,IAAI,CAAC,EAAE;IAC1BG,UAAU,GAAG,EAAE;EACjB,CAAC,MAAM;IACL,IAAI,CAAC,IAAAE,kBAAW,EAACL,IAAI,CAAC,EAAE;MACtB,IAAI,IAAAM,iBAAU,EAACL,MAAM,CAAC,EAAE;QACtBD,IAAI,GAAG,IAAAO,uBAAe,EAACP,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLA,IAAI,GAAG,IAAAQ,2BAAmB,EAACR,IAAI,CAAC;MAClC;IACF;IAEAG,UAAU,GAAG,CAACH,IAAI,CAAC;EACrB;EAEA,OAAO,IAAAS,sBAAc,EAACN,UAAU,CAAC;AACnC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js":{"lineLengths":[13,0,46,13,3,42,49,40,42,65,14,1,0,51,0],"data":{"version":3,"names":["_toIdentifier","require","toBindingIdentifierName","name","toIdentifier"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toBindingIdentifierName.ts"],"sourcesContent":["import toIdentifier from \"./toIdentifier.ts\";\n\nexport default function toBindingIdentifierName(name: string): string {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n\n  return name;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AAEe,SAASC,uBAAuBA,CAACC,IAAY,EAAU;EACpEA,IAAI,GAAG,IAAAC,qBAAY,EAACD,IAAI,CAAC;EACzB,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,WAAW,EAAEA,IAAI,GAAG,GAAG,GAAGA,IAAI;EAE9D,OAAOA,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toIdentifier.js":{"lineLengths":[13,0,46,13,3,31,71,79,30,21,16,26,89,3,38,58,36,5,47,22,3,21,1,0,40,0],"data":{"version":3,"names":["_isValidIdentifier","require","_helperValidatorIdentifier","toIdentifier","input","name","c","isIdentifierChar","codePointAt","replace","match","toUpperCase","isValidIdentifier"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toIdentifier.ts"],"sourcesContent":["import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,0BAAA,GAAAD,OAAA;AAEe,SAASE,YAAYA,CAACC,KAAa,EAAU;EAC1DA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAGlB,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,MAAMC,CAAC,IAAIF,KAAK,EAAE;IACrBC,IAAI,IAAI,IAAAE,2CAAgB,EAACD,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGF,CAAC,GAAG,GAAG;EACtD;EAGAD,IAAI,GAAGA,IAAI,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;EAGnCJ,IAAI,GAAGA,IAAI,CAACI,OAAO,CAAC,aAAa,EAAE,UAAUC,KAAK,EAAEJ,CAAC,EAAE;IACrD,OAAOA,CAAC,GAAGA,CAAC,CAACK,WAAW,CAAC,CAAC,GAAG,EAAE;EACjC,CAAC,CAAC;EAEF,IAAI,CAAC,IAAAC,0BAAiB,EAACP,IAAI,CAAC,EAAE;IAC5BA,IAAI,GAAG,IAAIA,IAAI,EAAE;EACnB;EAEA,OAAOA,IAAI,IAAI,GAAG;AACpB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toComputedKey.js":{"lineLengths":[13,0,46,13,3,32,57,56,63,98,13,1,0,41,0],"data":{"version":3,"names":["_index","require","_index2","toComputedKey","node","key","property","computed","isIdentifier","stringLiteral","name"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toComputedKey.ts"],"sourcesContent":["import { isIdentifier } from \"../validators/generated/index.ts\";\nimport { stringLiteral } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAGe,SAASE,aAAaA,CACnCC,IAO8B,EAE9BC,GAAiC,GAAGD,IAAI,CAACC,GAAG,IAAID,IAAI,CAACE,QAAQ,EAC7D;EACA,IAAI,CAACF,IAAI,CAACG,QAAQ,IAAI,IAAAC,mBAAY,EAACH,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAAI,qBAAa,EAACJ,GAAG,CAACK,IAAI,CAAC;EAEtE,OAAOL,GAAG;AACZ","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toExpression.js":{"lineLengths":[13,0,46,13,3,25,57,46,29,48,27,3,39,16,3,34,34,26,44,37,3,40,65,3,14,1,0,40,0],"data":{"version":3,"names":["_index","require","_default","exports","default","toExpression","node","isExpressionStatement","expression","isExpression","isClass","type","abstract","isFunction","Error"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toExpression.ts"],"sourcesContent":["import {\n  isExpression,\n  isFunction,\n  isClass,\n  isExpressionStatement,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toExpression as {\n  (node: t.Function): t.FunctionExpression;\n  (node: t.Class): t.ClassExpression;\n  (\n    node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n  ): t.Expression;\n};\n\nfunction toExpression(\n  node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n): t.Expression {\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionExpression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isExpression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassExpression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionExpression\n  if (isClass(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassExpression\";\n    // abstract modifiers are only allowed on class declarations\n    node.abstract = false;\n  } else if (isFunction(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionExpression\";\n  }\n\n  // if it's still not an expression\n  if (!isExpression(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAK0C,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAG3BC,YAAY;AAQ3B,SAASA,YAAYA,CACnBC,IAAiE,EACnD;EACd,IAAI,IAAAC,4BAAqB,EAACD,IAAI,CAAC,EAAE;IAC/BA,IAAI,GAAGA,IAAI,CAACE,UAAU;EACxB;EAQA,IAAI,IAAAC,mBAAY,EAACH,IAAI,CAAC,EAAE;IACtB,OAAOA,IAAI;EACb;EAKA,IAAI,IAAAI,cAAO,EAACJ,IAAI,CAAC,EAAE;IAEjBA,IAAI,CAACK,IAAI,GAAG,iBAAiB;IAE7BL,IAAI,CAACM,QAAQ,GAAG,KAAK;EACvB,CAAC,MAAM,IAAI,IAAAC,iBAAU,EAACP,IAAI,CAAC,EAAE;IAE3BA,IAAI,CAACK,IAAI,GAAG,oBAAoB;EAClC;EAGA,IAAI,CAAC,IAAAF,mBAAY,EAACH,IAAI,CAAC,EAAE;IACvB,MAAM,IAAIQ,KAAK,CAAC,eAAeR,IAAI,CAACK,IAAI,mBAAmB,CAAC;EAC9D;EAEA,OAAOL,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toKeyAlias.js":{"lineLengths":[13,0,46,13,3,29,57,50,80,43,12,31,39,45,21,48,38,10,93,3,22,25,3,20,30,3,15,1,19,36,50,30,10,28,3,2,0,38,0],"data":{"version":3,"names":["_index","require","_cloneNode","_removePropertiesDeep","toKeyAlias","node","key","alias","kind","increment","isIdentifier","name","isStringLiteral","JSON","stringify","value","removePropertiesDeep","cloneNode","computed","static","uid","Number","MAX_SAFE_INTEGER"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toKeyAlias.ts"],"sourcesContent":["import {\n  isIdentifier,\n  isStringLiteral,\n} from \"../validators/generated/index.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport removePropertiesDeep from \"../modifications/removePropertiesDeep.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toKeyAlias(\n  node: t.Method | t.Property,\n  key: t.Node = node.key,\n): string {\n  let alias;\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.kind`\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (isIdentifier(key)) {\n    alias = key.name;\n  } else if (isStringLiteral(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify(removePropertiesDeep(cloneNode(key)));\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.computed`\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.static`\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return (toKeyAlias.uid = 0);\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,qBAAA,GAAAF,OAAA;AAGe,SAASG,UAAUA,CAChCC,IAA2B,EAC3BC,GAAW,GAAGD,IAAI,CAACC,GAAG,EACd;EACR,IAAIC,KAAK;EAGT,IAAIF,IAAI,CAACG,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAOJ,UAAU,CAACK,SAAS,CAAC,CAAC,GAAG,EAAE;EACpC,CAAC,MAAM,IAAI,IAAAC,mBAAY,EAACJ,GAAG,CAAC,EAAE;IAC5BC,KAAK,GAAGD,GAAG,CAACK,IAAI;EAClB,CAAC,MAAM,IAAI,IAAAC,sBAAe,EAACN,GAAG,CAAC,EAAE;IAC/BC,KAAK,GAAGM,IAAI,CAACC,SAAS,CAACR,GAAG,CAACS,KAAK,CAAC;EACnC,CAAC,MAAM;IACLR,KAAK,GAAGM,IAAI,CAACC,SAAS,CAAC,IAAAE,6BAAoB,EAAC,IAAAC,kBAAS,EAACX,GAAG,CAAC,CAAC,CAAC;EAC9D;EAGA,IAAID,IAAI,CAACa,QAAQ,EAAE;IACjBX,KAAK,GAAG,IAAIA,KAAK,GAAG;EACtB;EAGA,IAAIF,IAAI,CAACc,MAAM,EAAE;IACfZ,KAAK,GAAG,UAAUA,KAAK,EAAE;EAC3B;EAEA,OAAOA,KAAK;AACd;AAEAH,UAAU,CAACgB,GAAG,GAAG,CAAC;AAElBhB,UAAU,CAACK,SAAS,GAAG,YAAY;EACjC,IAAIL,UAAU,CAACgB,GAAG,IAAIC,MAAM,CAACC,gBAAgB,EAAE;IAC7C,OAAQlB,UAAU,CAACgB,GAAG,GAAG,CAAC;EAC5B,CAAC,MAAM;IACL,OAAOhB,UAAU,CAACgB,GAAG,EAAE;EACzB;AACF,CAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js":{"lineLengths":[13,0,46,13,3,39,59,57,43,68,14,1,0,48,0],"data":{"version":3,"names":["_traverseFast","require","_removeProperties","removePropertiesDeep","tree","opts","traverseFast","removeProperties"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/removePropertiesDeep.ts"],"sourcesContent":["import traverseFast from \"../traverse/traverseFast.ts\";\nimport removeProperties from \"./removeProperties.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function removePropertiesDeep<T extends t.Node>(\n  tree: T,\n  opts?: { preserveComments: boolean } | null,\n): T {\n  traverseFast(tree, removeProperties, opts);\n\n  return tree;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AAGe,SAASE,oBAAoBA,CAC1CC,IAAO,EACPC,IAA2C,EACxC;EACH,IAAAC,qBAAY,EAACF,IAAI,EAAEG,yBAAgB,EAAEF,IAAI,CAAC;EAE1C,OAAOD,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/traverse/traverseFast.js":{"lineLengths":[13,0,46,13,3,31,48,23,23,42,26,46,26,20,32,26,18,17,21,17,20,5,3,27,30,27,33,35,57,7,12,58,5,3,15,1,26,26,0,40,0],"data":{"version":3,"names":["_index","require","_skip","Symbol","_stop","traverseFast","node","enter","opts","keys","VISITOR_KEYS","type","ret","undefined","key","subNode","Array","isArray","skip","stop"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/traverse/traverseFast.ts"],"sourcesContent":["import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nconst _skip = Symbol();\nconst _stop = Symbol();\n\n/**\n * A prefix AST traversal implementation meant for simple searching and processing.\n * @param enter The callback can return `traverseFast.skip` to skip the subtree of the current node, or `traverseFast.stop` to stop the traversal.\n * @returns `true` if the traversal was stopped by callback, `false` otherwise.\n */\nexport default function traverseFast<Options = object>(\n  node: t.Node | null | undefined,\n  enter: (\n    node: t.Node,\n    opts?: Options,\n  ) => void | typeof traverseFast.skip | typeof traverseFast.stop,\n  opts?: Options,\n): boolean {\n  if (!node) return false;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return false;\n\n  opts = opts || ({} as Options);\n  const ret = enter(node, opts);\n  if (ret !== undefined) {\n    switch (ret) {\n      case _skip:\n        return false;\n      case _stop:\n        return true;\n    }\n  }\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (!subNode) continue;\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        if (traverseFast(node, enter, opts)) return true;\n      }\n    } else {\n      if (traverseFast(subNode, enter, opts)) return true;\n    }\n  }\n  return false;\n}\n\ntraverseFast.skip = _skip;\ntraverseFast.stop = _stop;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGA,MAAMC,KAAK,GAAGC,MAAM,CAAC,CAAC;AACtB,MAAMC,KAAK,GAAGD,MAAM,CAAC,CAAC;AAOP,SAASE,YAAYA,CAClCC,IAA+B,EAC/BC,KAG+D,EAC/DC,IAAc,EACL;EACT,IAAI,CAACF,IAAI,EAAE,OAAO,KAAK;EAEvB,MAAMG,IAAI,GAAGC,mBAAY,CAACJ,IAAI,CAACK,IAAI,CAAC;EACpC,IAAI,CAACF,IAAI,EAAE,OAAO,KAAK;EAEvBD,IAAI,GAAGA,IAAI,IAAK,CAAC,CAAa;EAC9B,MAAMI,GAAG,GAAGL,KAAK,CAACD,IAAI,EAAEE,IAAI,CAAC;EAC7B,IAAII,GAAG,KAAKC,SAAS,EAAE;IACrB,QAAQD,GAAG;MACT,KAAKV,KAAK;QACR,OAAO,KAAK;MACd,KAAKE,KAAK;QACR,OAAO,IAAI;IACf;EACF;EAEA,KAAK,MAAMU,GAAG,IAAIL,IAAI,EAAE;IACtB,MAAMM,OAAkC,GAEtCT,IAAI,CAACQ,GAAG,CAAC;IAEX,IAAI,CAACC,OAAO,EAAE;IAEd,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;MAC1B,KAAK,MAAMT,IAAI,IAAIS,OAAO,EAAE;QAC1B,IAAIV,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,CAAC,EAAE,OAAO,IAAI;MAClD;IACF,CAAC,MAAM;MACL,IAAIH,YAAY,CAACU,OAAO,EAAER,KAAK,EAAEC,IAAI,CAAC,EAAE,OAAO,IAAI;IACrD;EACF;EACA,OAAO,KAAK;AACd;AAEAH,YAAY,CAACa,IAAI,GAAGhB,KAAK;AACzBG,YAAY,CAACc,IAAI,GAAGf,KAAK","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/removeProperties.js":{"lineLengths":[13,0,46,13,3,35,46,72,85,44,76,26,49,3,40,67,3,53,30,21,3,1,0,44,0],"data":{"version":3,"names":["_index","require","CLEAR_KEYS","CLEAR_KEYS_PLUS_COMMENTS","COMMENT_KEYS","removeProperties","node","opts","map","preserveComments","key","undefined","Object","keys","symbols","getOwnPropertySymbols","sym"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/removeProperties.ts"],"sourcesContent":["import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\nconst CLEAR_KEYS = [\n  \"tokens\", // only exist in t.File\n  \"start\",\n  \"end\",\n  \"loc\",\n  // Fixme: should be extra.raw / extra.rawValue?\n  \"raw\",\n  \"rawValue\",\n] as const;\n\nconst CLEAR_KEYS_PLUS_COMMENTS = [\n  ...COMMENT_KEYS,\n  \"comments\",\n  ...CLEAR_KEYS,\n] as const;\n\nexport type Options = { preserveComments?: boolean };\n/**\n * Remove all of the _* properties from a node along with the additional metadata\n * properties like location data and raw token data.\n */\nexport default function removeProperties(\n  node: t.Node,\n  opts: Options = {},\n): void {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (const key of map) {\n    // @ts-expect-error tokens only exist in t.File\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    // @ts-expect-error string can not index node\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols: Array<symbol> = Object.getOwnPropertySymbols(node);\n  for (const sym of symbols) {\n    // @ts-expect-error Fixme: document symbol properties\n    node[sym] = null;\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGA,MAAMC,UAAU,GAAG,CACjB,QAAQ,EACR,OAAO,EACP,KAAK,EACL,KAAK,EAEL,KAAK,EACL,UAAU,CACF;AAEV,MAAMC,wBAAwB,GAAG,CAC/B,GAAGC,mBAAY,EACf,UAAU,EACV,GAAGF,UAAU,CACL;AAOK,SAASG,gBAAgBA,CACtCC,IAAY,EACZC,IAAa,GAAG,CAAC,CAAC,EACZ;EACN,MAAMC,GAAG,GAAGD,IAAI,CAACE,gBAAgB,GAAGP,UAAU,GAAGC,wBAAwB;EACzE,KAAK,MAAMO,GAAG,IAAIF,GAAG,EAAE;IAErB,IAAIF,IAAI,CAACI,GAAG,CAAC,IAAI,IAAI,EAAEJ,IAAI,CAACI,GAAG,CAAC,GAAGC,SAAS;EAC9C;EAEA,KAAK,MAAMD,GAAG,IAAIE,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,EAAE;IAEnC,IAAII,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIJ,IAAI,CAACI,GAAG,CAAC,IAAI,IAAI,EAAEJ,IAAI,CAACI,GAAG,CAAC,GAAGC,SAAS;EAChE;EAEA,MAAMG,OAAsB,GAAGF,MAAM,CAACG,qBAAqB,CAACT,IAAI,CAAC;EACjE,KAAK,MAAMU,GAAG,IAAIF,OAAO,EAAE;IAEzBR,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI;EAClB;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toStatement.js":{"lineLengths":[13,0,46,13,3,25,57,56,45,36,38,16,3,25,14,34,22,33,44,22,36,56,50,3,31,20,3,17,17,19,12,65,5,3,22,14,1,0,39,0],"data":{"version":3,"names":["_index","require","_index2","_default","exports","default","toStatement","node","ignore","isStatement","mustHaveId","newType","isClass","isFunction","isAssignmentExpression","expressionStatement","id","Error","type"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toStatement.ts"],"sourcesContent":["import {\n  isStatement,\n  isFunction,\n  isClass,\n  isAssignmentExpression,\n} from \"../validators/generated/index.ts\";\nimport { expressionStatement } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toStatement as {\n  (node: t.AssignmentExpression, ignore?: boolean): t.ExpressionStatement;\n\n  <T extends t.Statement>(node: T, ignore: false): T;\n  <T extends t.Statement>(node: T, ignore?: boolean): T | false;\n\n  (node: t.Class, ignore: false): t.ClassDeclaration;\n  (node: t.Class, ignore?: boolean): t.ClassDeclaration | false;\n\n  (node: t.Function, ignore: false): t.FunctionDeclaration;\n  (node: t.Function, ignore?: boolean): t.FunctionDeclaration | false;\n\n  (node: t.Node, ignore: false): t.Statement;\n  (node: t.Node, ignore?: boolean): t.Statement | false;\n};\n\nfunction toStatement(node: t.Node, ignore?: boolean): t.Statement | false {\n  if (isStatement(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if (isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\" as const;\n  } else if (isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\" as const;\n  } else if (isAssignmentExpression(node)) {\n    return expressionStatement(node);\n  }\n\n  // @ts-expect-error todo(flow->ts): node.id might be missing\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  // @ts-expect-error manipulating node.type\n  node.type = newType;\n\n  // @ts-expect-error todo(flow->ts) refactor to avoid type unsafe mutations like reassigning node type above\n  return node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMA,IAAAC,OAAA,GAAAD,OAAA;AAAqE,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGtDC,WAAW;AAgB1B,SAASA,WAAWA,CAACC,IAAY,EAAEC,MAAgB,EAAuB;EACxE,IAAI,IAAAC,kBAAW,EAACF,IAAI,CAAC,EAAE;IACrB,OAAOA,IAAI;EACb;EAEA,IAAIG,UAAU,GAAG,KAAK;EACtB,IAAIC,OAAO;EAEX,IAAI,IAAAC,cAAO,EAACL,IAAI,CAAC,EAAE;IACjBG,UAAU,GAAG,IAAI;IACjBC,OAAO,GAAG,kBAA2B;EACvC,CAAC,MAAM,IAAI,IAAAE,iBAAU,EAACN,IAAI,CAAC,EAAE;IAC3BG,UAAU,GAAG,IAAI;IACjBC,OAAO,GAAG,qBAA8B;EAC1C,CAAC,MAAM,IAAI,IAAAG,6BAAsB,EAACP,IAAI,CAAC,EAAE;IACvC,OAAO,IAAAQ,2BAAmB,EAACR,IAAI,CAAC;EAClC;EAGA,IAAIG,UAAU,IAAI,CAACH,IAAI,CAACS,EAAE,EAAE;IAC1BL,OAAO,GAAG,KAAK;EACjB;EAEA,IAAI,CAACA,OAAO,EAAE;IACZ,IAAIH,MAAM,EAAE;MACV,OAAO,KAAK;IACd,CAAC,MAAM;MACL,MAAM,IAAIS,KAAK,CAAC,eAAeV,IAAI,CAACW,IAAI,iBAAiB,CAAC;IAC5D;EACF;EAGAX,IAAI,CAACW,IAAI,GAAGP,OAAO;EAGnB,OAAOJ,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/valueToNode.js":{"lineLengths":[13,0,46,13,3,25,71,55,45,69,26,53,1,31,115,17,3,45,65,1,29,28,47,3,42,45,3,23,37,3,34,44,3,34,15,33,59,12,20,32,50,14,50,7,91,5,44,56,5,18,3,34,55,3,24,33,58,53,3,29,63,3,29,21,43,18,25,49,34,26,51,16,48,9,14,49,7,89,5,47,3,67,1,0,39,0],"data":{"version":3,"names":["_isValidIdentifier","require","_index","_default","exports","default","valueToNode","objectToString","Function","call","bind","Object","prototype","toString","isRegExp","value","isPlainObject","proto","getPrototypeOf","undefined","identifier","booleanLiteral","nullLiteral","stringLiteral","result","Number","isFinite","numericLiteral","Math","abs","numerator","isNaN","binaryExpression","is","unaryExpression","bigIntLiteral","pattern","source","flags","exec","regExpLiteral","Array","isArray","arrayExpression","map","props","key","keys","nodeKey","computed","isValidIdentifier","push","objectProperty","objectExpression","Error"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/valueToNode.ts"],"sourcesContent":["import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  bigIntLiteral,\n  regExpLiteral,\n  arrayExpression,\n  objectProperty,\n  objectExpression,\n  unaryExpression,\n  binaryExpression,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryExpression; negative values must be wrapped in UnaryExpression\n  (value: number): t.NumericLiteral | t.BinaryExpression | t.UnaryExpression;\n  (value: bigint): t.BigIntLiteral;\n  (value: RegExp): t.RegExpLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayExpression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectExpression;\n\n  (value: unknown): t.Expression;\n};\n\n// @ts-expect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.Expression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryExpression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryExpression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // bigints\n  if (typeof value === \"bigint\") {\n    return bigIntLiteral(value.toString());\n  }\n\n  // regexes\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = /\\/([a-z]*)$/.exec(value.toString())[1];\n    return regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayExpression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey,\n        computed = false;\n      if (isValidIdentifier(key)) {\n        if (key === \"__proto__\") {\n          computed = true;\n          nodeKey = stringLiteral(key);\n        } else {\n          nodeKey = identifier(key);\n        }\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-expect-error key must present in value\n            value[key],\n          ),\n          computed,\n        ),\n      );\n    }\n    return objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAawC,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGzBC,WAAW;AAmB1B,MAAMC,cAA0C,GAAGC,QAAQ,CAACC,IAAI,CAACC,IAAI,CACnEC,MAAM,CAACC,SAAS,CAACC,QACnB,CAAC;AAED,SAASC,QAAQA,CAACC,KAAc,EAAmB;EACjD,OAAOR,cAAc,CAACQ,KAAK,CAAC,KAAK,iBAAiB;AACpD;AAEA,SAASC,aAAaA,CAACD,KAAc,EAAmB;EACtD,IACE,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACdJ,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACJ,IAAI,CAACM,KAAK,CAAC,KAAK,iBAAiB,EAC3D;IACA,OAAO,KAAK;EACd;EACA,MAAME,KAAK,GAAGN,MAAM,CAACO,cAAc,CAACH,KAAK,CAAC;EAI1C,OAAOE,KAAK,KAAK,IAAI,IAAIN,MAAM,CAACO,cAAc,CAACD,KAAK,CAAC,KAAK,IAAI;AAChE;AAEA,SAASX,WAAWA,CAACS,KAAc,EAAgB;EAEjD,IAAIA,KAAK,KAAKI,SAAS,EAAE;IACvB,OAAO,IAAAC,iBAAU,EAAC,WAAW,CAAC;EAChC;EAGA,IAAIL,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,EAAE;IACrC,OAAO,IAAAM,qBAAc,EAACN,KAAK,CAAC;EAC9B;EAGA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAAO,kBAAW,EAAC,CAAC;EACtB;EAGA,IAAI,OAAOP,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAAQ,oBAAa,EAACR,KAAK,CAAC;EAC7B;EAGA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAIS,MAAM;IACV,IAAIC,MAAM,CAACC,QAAQ,CAACX,KAAK,CAAC,EAAE;MAC1BS,MAAM,GAAG,IAAAG,qBAAc,EAACC,IAAI,CAACC,GAAG,CAACd,KAAK,CAAC,CAAC;IAC1C,CAAC,MAAM;MACL,IAAIe,SAAS;MACb,IAAIL,MAAM,CAACM,KAAK,CAAChB,KAAK,CAAC,EAAE;QAEvBe,SAAS,GAAG,IAAAH,qBAAc,EAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QAELG,SAAS,GAAG,IAAAH,qBAAc,EAAC,CAAC,CAAC;MAC/B;MAEAH,MAAM,GAAG,IAAAQ,uBAAgB,EAAC,GAAG,EAAEF,SAAS,EAAE,IAAAH,qBAAc,EAAC,CAAC,CAAC,CAAC;IAC9D;IAEA,IAAIZ,KAAK,GAAG,CAAC,IAAIJ,MAAM,CAACsB,EAAE,CAAClB,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;MACrCS,MAAM,GAAG,IAAAU,sBAAe,EAAC,GAAG,EAAEV,MAAM,CAAC;IACvC;IAEA,OAAOA,MAAM;EACf;EAGA,IAAI,OAAOT,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAAoB,oBAAa,EAACpB,KAAK,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC;EAGA,IAAIC,QAAQ,CAACC,KAAK,CAAC,EAAE;IACnB,MAAMqB,OAAO,GAAGrB,KAAK,CAACsB,MAAM;IAC5B,MAAMC,KAAK,GAAG,aAAa,CAACC,IAAI,CAACxB,KAAK,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAO,IAAA2B,oBAAa,EAACJ,OAAO,EAAEE,KAAK,CAAC;EACtC;EAGA,IAAIG,KAAK,CAACC,OAAO,CAAC3B,KAAK,CAAC,EAAE;IACxB,OAAO,IAAA4B,sBAAe,EAAC5B,KAAK,CAAC6B,GAAG,CAACtC,WAAW,CAAC,CAAC;EAChD;EAGA,IAAIU,aAAa,CAACD,KAAK,CAAC,EAAE;IACxB,MAAM8B,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMC,GAAG,IAAInC,MAAM,CAACoC,IAAI,CAAChC,KAAK,CAAC,EAAE;MACpC,IAAIiC,OAAO;QACTC,QAAQ,GAAG,KAAK;MAClB,IAAI,IAAAC,0BAAiB,EAACJ,GAAG,CAAC,EAAE;QAC1B,IAAIA,GAAG,KAAK,WAAW,EAAE;UACvBG,QAAQ,GAAG,IAAI;UACfD,OAAO,GAAG,IAAAzB,oBAAa,EAACuB,GAAG,CAAC;QAC9B,CAAC,MAAM;UACLE,OAAO,GAAG,IAAA5B,iBAAU,EAAC0B,GAAG,CAAC;QAC3B;MACF,CAAC,MAAM;QACLE,OAAO,GAAG,IAAAzB,oBAAa,EAACuB,GAAG,CAAC;MAC9B;MACAD,KAAK,CAACM,IAAI,CACR,IAAAC,qBAAc,EACZJ,OAAO,EACP1C,WAAW,CAETS,KAAK,CAAC+B,GAAG,CACX,CAAC,EACDG,QACF,CACF,CAAC;IACH;IACA,OAAO,IAAAI,uBAAgB,EAACR,KAAK,CAAC;EAChC;EAEA,MAAM,IAAIS,KAAK,CAAC,+CAA+C,CAAC;AAClE","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js":{"lineLengths":[13,0,46,13,3,43,55,69,96,27,31,16,1,0,52,0],"data":{"version":3,"names":["_index","require","appendToMemberExpression","member","append","computed","object","memberExpression","property"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/appendToMemberExpression.ts"],"sourcesContent":["import { memberExpression } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMe,SAASC,wBAAwBA,CAC9CC,MAA0B,EAC1BC,MAAsC,EACtCC,QAAiB,GAAG,KAAK,EACL;EACpBF,MAAM,CAACG,MAAM,GAAG,IAAAC,uBAAgB,EAC9BJ,MAAM,CAACG,MAAM,EACbH,MAAM,CAACK,QAAQ,EACfL,MAAM,CAACE,QACT,CAAC;EACDF,MAAM,CAACK,QAAQ,GAAGJ,MAAM;EACxBD,MAAM,CAACE,QAAQ,GAAG,CAAC,CAACA,QAAQ;EAE5B,OAAOF,MAAM;AACf","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/inherits.js":{"lineLengths":[13,0,46,13,3,27,46,67,34,38,51,29,31,5,3,42,46,31,5,3,48,29,3,48,15,1,0,36,0],"data":{"version":3,"names":["_index","require","_inheritsComments","inherits","child","parent","key","INHERIT_KEYS","optional","Object","keys","force","inheritsComments"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/inherits.ts"],"sourcesContent":["import { INHERIT_KEYS } from \"../constants/index.ts\";\nimport inheritsComments from \"../comments/inheritsComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all contextual properties from `parent` node to `child` node.\n */\nexport default function inherits<T extends t.Node | null | undefined>(\n  child: T,\n  parent: t.Node | null | undefined,\n): T {\n  if (!child || !parent) return child;\n\n  // optionally inherit specific properties if not null\n  for (const key of INHERIT_KEYS.optional) {\n    // @ts-expect-error Fixme: refine parent types\n    if (child[key] == null) {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit \"private\" properties\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit select properties\n  for (const key of INHERIT_KEYS.force) {\n    // @ts-expect-error Fixme: refine parent types\n    child[key] = parent[key];\n  }\n\n  inheritsComments(child, parent);\n\n  return child;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AAMe,SAASE,QAAQA,CAC9BC,KAAQ,EACRC,MAAiC,EAC9B;EACH,IAAI,CAACD,KAAK,IAAI,CAACC,MAAM,EAAE,OAAOD,KAAK;EAGnC,KAAK,MAAME,GAAG,IAAIC,mBAAY,CAACC,QAAQ,EAAE;IAEvC,IAAIJ,KAAK,CAACE,GAAG,CAAC,IAAI,IAAI,EAAE;MAEtBF,KAAK,CAACE,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;IAC1B;EACF;EAGA,KAAK,MAAMA,GAAG,IAAIG,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,EAAE;IACrC,IAAIC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,KAAK,SAAS,EAAE;MAEvCF,KAAK,CAACE,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;IAC1B;EACF;EAGA,KAAK,MAAMA,GAAG,IAAIC,mBAAY,CAACI,KAAK,EAAE;IAEpCP,KAAK,CAACE,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;EAC1B;EAEA,IAAAM,yBAAgB,EAACR,KAAK,EAAEC,MAAM,CAAC;EAE/B,OAAOD,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js":{"lineLengths":[13,0,46,13,3,44,55,37,53,44,83,3,71,16,1,0,53,0],"data":{"version":3,"names":["_index","require","_index2","prependToMemberExpression","member","prepend","isSuper","object","Error","memberExpression"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/modifications/prependToMemberExpression.ts"],"sourcesContent":["import { memberExpression } from \"../builders/generated/index.ts\";\nimport { isSuper } from \"../index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAMe,SAASE,yBAAyBA,CAE/CC,MAAS,EAAEC,OAAqC,EAAK;EACrD,IAAI,IAAAC,eAAO,EAACF,MAAM,CAACG,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CACb,6DACF,CAAC;EACH;EACAJ,MAAM,CAACG,MAAM,GAAG,IAAAE,uBAAgB,EAACJ,OAAO,EAAED,MAAM,CAACG,MAAM,CAAC;EAExD,OAAOH,MAAM;AACf","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getAssignmentIdentifiers.js":{"lineLengths":[13,0,46,13,3,43,41,33,34,25,28,22,22,26,36,14,34,31,28,28,29,14,27,38,14,28,30,14,25,30,33,14,29,39,35,9,14,24,26,14,14,14,5,3,13,1,0,52,0],"data":{"version":3,"names":["getAssignmentIdentifiers","node","search","concat","ids","Object","create","length","id","pop","type","push","elements","left","properties","value","argument","operator","name"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/retrievers/getAssignmentIdentifiers.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\n\n/**\n * For the given node, generate a map from assignment id names to the identifier node.\n * Unlike getBindingIdentifiers, this function does not handle declarations and imports.\n * @param node the assignment expression or forXstatement\n * @returns an object map\n * @see getBindingIdentifiers\n */\nexport default function getAssignmentIdentifiers(\n  node: t.Node | t.Node[],\n): Record<string, t.Identifier> {\n  // null represents holes in an array pattern\n  const search: (t.Node | null)[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.pop();\n    if (!id) continue;\n\n    switch (id.type) {\n      case \"ArrayPattern\":\n        search.push(...id.elements);\n        break;\n\n      case \"AssignmentExpression\":\n      case \"AssignmentPattern\":\n      case \"ForInStatement\":\n      case \"ForOfStatement\":\n        search.push(id.left);\n        break;\n\n      case \"ObjectPattern\":\n        search.push(...id.properties);\n        break;\n\n      case \"ObjectProperty\":\n        search.push(id.value);\n        break;\n\n      case \"RestElement\":\n      case \"UpdateExpression\":\n        search.push(id.argument);\n        break;\n\n      case \"UnaryExpression\":\n        if (id.operator === \"delete\") {\n          search.push(id.argument);\n        }\n        break;\n\n      case \"Identifier\":\n        ids[id.name] = id;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return ids;\n}\n"],"mappings":";;;;;;AASe,SAASA,wBAAwBA,CAC9CC,IAAuB,EACO;EAE9B,MAAMC,MAAyB,GAAG,EAAE,CAACC,MAAM,CAACF,IAAI,CAAC;EACjD,MAAMG,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAE/B,OAAOJ,MAAM,CAACK,MAAM,EAAE;IACpB,MAAMC,EAAE,GAAGN,MAAM,CAACO,GAAG,CAAC,CAAC;IACvB,IAAI,CAACD,EAAE,EAAE;IAET,QAAQA,EAAE,CAACE,IAAI;MACb,KAAK,cAAc;QACjBR,MAAM,CAACS,IAAI,CAAC,GAAGH,EAAE,CAACI,QAAQ,CAAC;QAC3B;MAEF,KAAK,sBAAsB;MAC3B,KAAK,mBAAmB;MACxB,KAAK,gBAAgB;MACrB,KAAK,gBAAgB;QACnBV,MAAM,CAACS,IAAI,CAACH,EAAE,CAACK,IAAI,CAAC;QACpB;MAEF,KAAK,eAAe;QAClBX,MAAM,CAACS,IAAI,CAAC,GAAGH,EAAE,CAACM,UAAU,CAAC;QAC7B;MAEF,KAAK,gBAAgB;QACnBZ,MAAM,CAACS,IAAI,CAACH,EAAE,CAACO,KAAK,CAAC;QACrB;MAEF,KAAK,aAAa;MAClB,KAAK,kBAAkB;QACrBb,MAAM,CAACS,IAAI,CAACH,EAAE,CAACQ,QAAQ,CAAC;QACxB;MAEF,KAAK,iBAAiB;QACpB,IAAIR,EAAE,CAACS,QAAQ,KAAK,QAAQ,EAAE;UAC5Bf,MAAM,CAACS,IAAI,CAACH,EAAE,CAACQ,QAAQ,CAAC;QAC1B;QACA;MAEF,KAAK,YAAY;QACfZ,GAAG,CAACI,EAAE,CAACU,IAAI,CAAC,GAAGV,EAAE;QACjB;MAEF;QACE;IACJ;EACF;EAEA,OAAOJ,GAAG;AACZ","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js":{"lineLengths":[13,0,46,13,3,40,57,78,33,34,25,30,22,145,15,5,39,23,55,22,14,26,7,15,5,89,54,36,7,15,5,20,50,27,17,7,49,17,7,5,53,15,45,28,30,20,37,34,18,31,11,9,7,5,3,13,1,14,23,26,24,26,27,27,28,31,20,21,25,30,32,33,29,38,36,36,36,32,41,39,40,39,38,27,26,33,27,27,27,26,28,33,28,30,29,32,40,28,2,34,0,49,0],"data":{"version":3,"names":["_index","require","getBindingIdentifiers","node","duplicates","outerOnly","newBindingsOnly","search","concat","ids","Object","create","length","id","shift","isAssignmentExpression","isUnaryExpression","isUpdateExpression","isIdentifier","_ids","name","push","isExportDeclaration","isExportAllDeclaration","isDeclaration","declaration","isFunctionDeclaration","isFunctionExpression","keys","type","i","key","nodes","Array","isArray","DeclareClass","DeclareFunction","DeclareModule","DeclareVariable","DeclareInterface","DeclareTypeAlias","DeclareOpaqueType","InterfaceDeclaration","TypeAlias","OpaqueType","CatchClause","LabeledStatement","UnaryExpression","AssignmentExpression","ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier","ImportDeclaration","TSImportEqualsDeclaration","ExportSpecifier","ExportNamespaceSpecifier","ExportDefaultSpecifier","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","ObjectMethod","ClassMethod","ClassPrivateMethod","ForInStatement","ForOfStatement","ClassDeclaration","ClassExpression","RestElement","UpdateExpression","ObjectProperty","AssignmentPattern","ArrayPattern","ObjectPattern","VariableDeclaration","VariableDeclarator"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/retrievers/getBindingIdentifiers.ts"],"sourcesContent":["import {\n  isExportDeclaration,\n  isIdentifier,\n  isClassExpression,\n  isDeclaration,\n  isFunctionDeclaration,\n  isFunctionExpression,\n  isExportAllDeclaration,\n  isAssignmentExpression,\n  isUnaryExpression,\n  isUpdateExpression,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport { getBindingIdentifiers as default };\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates: true,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, Array<t.Identifier>>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: false,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n\n/**\n * Return a list of binding identifiers associated with the input `node`.\n */\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  const search: t.Node[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n\n    if (\n      newBindingsOnly &&\n      // These nodes do not introduce _new_ bindings, but they are included\n      // in getBindingIdentifiers.keys for backwards compatibility.\n      // TODO(@nicolo-ribaudo): Check if we can remove them from .keys in a\n      // backward-compatible way, and if not what we need to do to remove them\n      // in Babel 8.\n      (isAssignmentExpression(id) ||\n        isUnaryExpression(id) ||\n        isUpdateExpression(id))\n    ) {\n      continue;\n    }\n\n    if (isIdentifier(id)) {\n      if (duplicates) {\n        const _ids = (ids[id.name] = ids[id.name] || []);\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (isExportDeclaration(id) && !isExportAllDeclaration(id)) {\n      if (isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (\n        isFunctionExpression(id) ||\n        (process.env.BABEL_8_BREAKING && isClassExpression(id))\n      ) {\n        continue;\n      }\n    }\n\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes =\n          // @ts-expect-error key must present in id\n          id[key] as t.Node[] | t.Node | undefined | null;\n        if (nodes) {\n          if (Array.isArray(nodes)) {\n            search.push(...nodes);\n          } else {\n            search.push(nodes);\n          }\n        }\n      }\n    }\n  }\n  return ids;\n}\n\n/**\n * Mapping of types to their identifier keys.\n */\ntype KeysMap = {\n  [N in t.Node as N[\"type\"]]?: (keyof N)[];\n};\n\nconst keys: KeysMap = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  TSImportEqualsDeclaration: [\"id\"],\n\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n\n  ObjectProperty: [\"value\"],\n\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"],\n};\n\ngetBindingIdentifiers.keys = keys;\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js":{"lineLengths":[13,0,46,13,3,25,67,60,55,69,1,0,54,0],"data":{"version":3,"names":["_getBindingIdentifiers","require","_default","exports","default","getOuterBindingIdentifiers","node","duplicates","getBindingIdentifiers"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/retrievers/getOuterBindingIdentifiers.ts"],"sourcesContent":["import getBindingIdentifiers from \"./getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default getOuterBindingIdentifiers as {\n  (node: t.Node, duplicates: true): Record<string, Array<t.Identifier>>;\n  (node: t.Node, duplicates?: false): Record<string, t.Identifier>;\n  (\n    node: t.Node,\n    duplicates?: boolean,\n  ): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n};\n\nfunction getOuterBindingIdentifiers(\n  node: t.Node,\n  duplicates: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAA+D,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGhDC,0BAA0B;AASzC,SAASA,0BAA0BA,CACjCC,IAAY,EACZC,UAAmB,EACiD;EACpE,OAAO,IAAAC,8BAAqB,EAACF,IAAI,EAAEC,UAAU,EAAE,IAAI,CAAC;AACtD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/retrievers/getFunctionName.js":{"lineLengths":[13,0,46,13,3,34,57,35,38,18,3,40,40,3,42,60,3,31,28,3,14,1,35,58,20,3,1,40,32,12,25,27,6,3,18,9,44,15,7,36,83,34,91,55,14,7,19,57,18,15,7,21,3,23,161,32,10,24,20,4,1,0,43,0],"data":{"version":3,"names":["_index","require","getNameFromLiteralId","id","isNullLiteral","isRegExpLiteral","pattern","flags","isTemplateLiteral","quasis","map","quasi","value","raw","join","undefined","String","getObjectMemberKey","node","computed","isLiteral","key","getFunctionName","parent","name","originalNode","prefix","isObjectProperty","isObjectMethod","isClassMethod","kind","isVariableDeclarator","init","isAssignmentExpression","operator","right","left","isIdentifier","isPrivateName"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/retrievers/getFunctionName.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\n\nimport {\n  isAssignmentExpression,\n  isClassMethod,\n  isIdentifier,\n  isLiteral,\n  isNullLiteral,\n  isObjectMethod,\n  isObjectProperty,\n  isPrivateName,\n  isRegExpLiteral,\n  isTemplateLiteral,\n  isVariableDeclarator,\n} from \"../validators/generated/index.ts\";\n\nfunction getNameFromLiteralId(id: t.Literal): string {\n  if (isNullLiteral(id)) {\n    return \"null\";\n  }\n\n  if (isRegExpLiteral(id)) {\n    return `/${id.pattern}/${id.flags}`;\n  }\n\n  if (isTemplateLiteral(id)) {\n    return id.quasis.map(quasi => quasi.value.raw).join(\"\");\n  }\n\n  if (id.value !== undefined) {\n    return String(id.value);\n  }\n\n  return null;\n}\n\nfunction getObjectMemberKey(\n  node: t.ObjectProperty | t.ObjectMethod | t.ClassProperty | t.ClassMethod,\n): t.Expression | t.PrivateName {\n  if (!node.computed || isLiteral(node.key)) {\n    return node.key;\n  }\n}\n\ntype GetFunctionNameResult = {\n  name: string;\n  originalNode: t.Node;\n} | null;\n\nexport default function getFunctionName(\n  node: t.ObjectMethod | t.ClassMethod,\n): GetFunctionNameResult;\nexport default function getFunctionName(\n  node: t.Function | t.Class,\n  parent: t.Node,\n): GetFunctionNameResult;\nexport default function getFunctionName(\n  node: t.Function | t.Class,\n  parent?: t.Node,\n): GetFunctionNameResult {\n  if (\"id\" in node && node.id) {\n    return {\n      name: node.id.name,\n      originalNode: node.id,\n    };\n  }\n\n  let prefix = \"\";\n\n  let id;\n  if (isObjectProperty(parent, { value: node })) {\n    // { foo: () => {} };\n    id = getObjectMemberKey(parent);\n  } else if (isObjectMethod(node) || isClassMethod(node)) {\n    // { foo() {} };\n    id = getObjectMemberKey(node);\n    if (node.kind === \"get\") prefix = \"get \";\n    else if (node.kind === \"set\") prefix = \"set \";\n  } else if (isVariableDeclarator(parent, { init: node })) {\n    // let foo = function () {};\n    id = parent.id;\n  } else if (isAssignmentExpression(parent, { operator: \"=\", right: node })) {\n    // foo = function () {};\n    id = parent.left;\n  }\n\n  if (!id) return null;\n\n  const name = isLiteral(id)\n    ? getNameFromLiteralId(id)\n    : isIdentifier(id)\n      ? id.name\n      : isPrivateName(id)\n        ? id.id.name\n        : null;\n  if (name == null) return null;\n\n  return { name: prefix + name, originalNode: id };\n}\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAcA,SAASC,oBAAoBA,CAACC,EAAa,EAAU;EACnD,IAAI,IAAAC,oBAAa,EAACD,EAAE,CAAC,EAAE;IACrB,OAAO,MAAM;EACf;EAEA,IAAI,IAAAE,sBAAe,EAACF,EAAE,CAAC,EAAE;IACvB,OAAO,IAAIA,EAAE,CAACG,OAAO,IAAIH,EAAE,CAACI,KAAK,EAAE;EACrC;EAEA,IAAI,IAAAC,wBAAiB,EAACL,EAAE,CAAC,EAAE;IACzB,OAAOA,EAAE,CAACM,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACzD;EAEA,IAAIX,EAAE,CAACS,KAAK,KAAKG,SAAS,EAAE;IAC1B,OAAOC,MAAM,CAACb,EAAE,CAACS,KAAK,CAAC;EACzB;EAEA,OAAO,IAAI;AACb;AAEA,SAASK,kBAAkBA,CACzBC,IAAyE,EAC3C;EAC9B,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAI,IAAAC,gBAAS,EAACF,IAAI,CAACG,GAAG,CAAC,EAAE;IACzC,OAAOH,IAAI,CAACG,GAAG;EACjB;AACF;AAce,SAASC,eAAeA,CACrCJ,IAA0B,EAC1BK,MAAe,EACQ;EACvB,IAAI,IAAI,IAAIL,IAAI,IAAIA,IAAI,CAACf,EAAE,EAAE;IAC3B,OAAO;MACLqB,IAAI,EAAEN,IAAI,CAACf,EAAE,CAACqB,IAAI;MAClBC,YAAY,EAAEP,IAAI,CAACf;IACrB,CAAC;EACH;EAEA,IAAIuB,MAAM,GAAG,EAAE;EAEf,IAAIvB,EAAE;EACN,IAAI,IAAAwB,uBAAgB,EAACJ,MAAM,EAAE;IAAEX,KAAK,EAAEM;EAAK,CAAC,CAAC,EAAE;IAE7Cf,EAAE,GAAGc,kBAAkB,CAACM,MAAM,CAAC;EACjC,CAAC,MAAM,IAAI,IAAAK,qBAAc,EAACV,IAAI,CAAC,IAAI,IAAAW,oBAAa,EAACX,IAAI,CAAC,EAAE;IAEtDf,EAAE,GAAGc,kBAAkB,CAACC,IAAI,CAAC;IAC7B,IAAIA,IAAI,CAACY,IAAI,KAAK,KAAK,EAAEJ,MAAM,GAAG,MAAM,CAAC,KACpC,IAAIR,IAAI,CAACY,IAAI,KAAK,KAAK,EAAEJ,MAAM,GAAG,MAAM;EAC/C,CAAC,MAAM,IAAI,IAAAK,2BAAoB,EAACR,MAAM,EAAE;IAAES,IAAI,EAAEd;EAAK,CAAC,CAAC,EAAE;IAEvDf,EAAE,GAAGoB,MAAM,CAACpB,EAAE;EAChB,CAAC,MAAM,IAAI,IAAA8B,6BAAsB,EAACV,MAAM,EAAE;IAAEW,QAAQ,EAAE,GAAG;IAAEC,KAAK,EAAEjB;EAAK,CAAC,CAAC,EAAE;IAEzEf,EAAE,GAAGoB,MAAM,CAACa,IAAI;EAClB;EAEA,IAAI,CAACjC,EAAE,EAAE,OAAO,IAAI;EAEpB,MAAMqB,IAAI,GAAG,IAAAJ,gBAAS,EAACjB,EAAE,CAAC,GACtBD,oBAAoB,CAACC,EAAE,CAAC,GACxB,IAAAkC,mBAAY,EAAClC,EAAE,CAAC,GACdA,EAAE,CAACqB,IAAI,GACP,IAAAc,oBAAa,EAACnC,EAAE,CAAC,GACfA,EAAE,CAACA,EAAE,CAACqB,IAAI,GACV,IAAI;EACZ,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI;EAE7B,OAAO;IAAEA,IAAI,EAAEE,MAAM,GAAGF,IAAI;IAAEC,YAAY,EAAEtB;EAAG,CAAC;AAClD","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/traverse/traverse.js":{"lineLengths":[13,0,46,13,3,27,48,42,39,16,21,6,3,9,10,8,15,51,1,66,46,20,43,27,30,33,48,33,29,24,15,14,18,11,65,24,7,25,22,13,11,9,65,22,5,3,41,1,0,36,0],"data":{"version":3,"names":["_index","require","traverse","node","handlers","state","enter","exit","traverseSimpleImpl","ancestors","keys","VISITOR_KEYS","type","key","subNode","Array","isArray","i","length","child","push","index","pop"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/traverse/traverse.ts"],"sourcesContent":["import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport type TraversalAncestors = Array<{\n  node: t.Node;\n  key: string;\n  index?: number;\n}>;\n\nexport type TraversalHandler<T> = (\n  this: undefined,\n  node: t.Node,\n  parent: TraversalAncestors,\n  state: T,\n) => void;\n\nexport type TraversalHandlers<T> = {\n  enter?: TraversalHandler<T>;\n  exit?: TraversalHandler<T>;\n};\n\n/**\n * A general AST traversal with both prefix and postfix handlers, and a\n * state object. Exposes ancestry data to each handler so that more complex\n * AST data can be taken into account.\n */\nexport default function traverse<T>(\n  node: t.Node,\n  handlers: TraversalHandler<T> | TraversalHandlers<T>,\n  state?: T,\n): void {\n  if (typeof handlers === \"function\") {\n    handlers = { enter: handlers };\n  }\n\n  const { enter, exit } = handlers;\n\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl<T>(\n  node: any,\n  enter: Function | undefined,\n  exit: Function | undefined,\n  state: T | undefined,\n  ancestors: TraversalAncestors,\n) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n\n        ancestors.push({\n          node,\n          key,\n          index: i,\n        });\n\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key,\n      });\n\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AA0Be,SAASC,QAAQA,CAC9BC,IAAY,EACZC,QAAoD,EACpDC,KAAS,EACH;EACN,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAClCA,QAAQ,GAAG;MAAEE,KAAK,EAAEF;IAAS,CAAC;EAChC;EAEA,MAAM;IAAEE,KAAK;IAAEC;EAAK,CAAC,GAAGH,QAAQ;EAEhCI,kBAAkB,CAACL,IAAI,EAAEG,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAE,EAAE,CAAC;AAClD;AAEA,SAASG,kBAAkBA,CACzBL,IAAS,EACTG,KAA2B,EAC3BC,IAA0B,EAC1BF,KAAoB,EACpBI,SAA6B,EAC7B;EACA,MAAMC,IAAI,GAAGC,mBAAY,CAACR,IAAI,CAACS,IAAI,CAAC;EACpC,IAAI,CAACF,IAAI,EAAE;EAEX,IAAIJ,KAAK,EAAEA,KAAK,CAACH,IAAI,EAAEM,SAAS,EAAEJ,KAAK,CAAC;EAExC,KAAK,MAAMQ,GAAG,IAAIH,IAAI,EAAE;IACtB,MAAMI,OAAO,GAAGX,IAAI,CAACU,GAAG,CAAC;IAEzB,IAAIE,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;MAC1B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,MAAME,KAAK,GAAGL,OAAO,CAACG,CAAC,CAAC;QACxB,IAAI,CAACE,KAAK,EAAE;QAEZV,SAAS,CAACW,IAAI,CAAC;UACbjB,IAAI;UACJU,GAAG;UACHQ,KAAK,EAAEJ;QACT,CAAC,CAAC;QAEFT,kBAAkB,CAACW,KAAK,EAAEb,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAEI,SAAS,CAAC;QAExDA,SAAS,CAACa,GAAG,CAAC,CAAC;MACjB;IACF,CAAC,MAAM,IAAIR,OAAO,EAAE;MAClBL,SAAS,CAACW,IAAI,CAAC;QACbjB,IAAI;QACJU;MACF,CAAC,CAAC;MAEFL,kBAAkB,CAACM,OAAO,EAAER,KAAK,EAAEC,IAAI,EAAEF,KAAK,EAAEI,SAAS,CAAC;MAE1DA,SAAS,CAACa,GAAG,CAAC,CAAC;IACjB;EACF;EAEA,IAAIf,IAAI,EAAEA,IAAI,CAACJ,IAAI,EAAEM,SAAS,EAAEJ,KAAK,CAAC;AACxC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isBinding.js":{"lineLengths":[13,0,46,13,3,28,79,47,129,17,3,64,13,43,26,30,31,44,14,38,7,5,3,15,1,0,37,0],"data":{"version":3,"names":["_getBindingIdentifiers","require","isBinding","node","parent","grandparent","type","keys","getBindingIdentifiers","i","length","key","val","Array","isArray","includes"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isBinding.ts"],"sourcesContent":["import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Check if the input `node` is a binding identifier.\n */\nexport default function isBinding(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  if (\n    grandparent &&\n    node.type === \"Identifier\" &&\n    parent.type === \"ObjectProperty\" &&\n    grandparent.type === \"ObjectExpression\"\n  ) {\n    // We need to special-case this, because getBindingIdentifiers\n    // has an ObjectProperty->value entry for destructuring patterns.\n    return false;\n  }\n\n  const keys = getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val =\n        // @ts-expect-error key must present in parent\n        parent[key];\n      if (Array.isArray(val)) {\n        if (val.includes(node)) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAKe,SAASC,SAASA,CAC/BC,IAAY,EACZC,MAAc,EACdC,WAAoB,EACX;EACT,IACEA,WAAW,IACXF,IAAI,CAACG,IAAI,KAAK,YAAY,IAC1BF,MAAM,CAACE,IAAI,KAAK,gBAAgB,IAChCD,WAAW,CAACC,IAAI,KAAK,kBAAkB,EACvC;IAGA,OAAO,KAAK;EACd;EAEA,MAAMC,IAAI,GAAGC,8BAAqB,CAACD,IAAI,CAACH,MAAM,CAACE,IAAI,CAAC;EACpD,IAAIC,IAAI,EAAE;IACR,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,MAAME,GAAG,GAAGJ,IAAI,CAACE,CAAC,CAAC;MACnB,MAAMG,GAAG,GAEPR,MAAM,CAACO,GAAG,CAAC;MACb,IAAIE,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;QACtB,IAAIA,GAAG,CAACG,QAAQ,CAACZ,IAAI,CAAC,EAAE,OAAO,IAAI;MACrC,CAAC,MAAM;QACL,IAAIS,GAAG,KAAKT,IAAI,EAAE,OAAO,IAAI;MAC/B;IACF;EACF;EAEA,OAAO,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isBlockScoped.js":{"lineLengths":[13,0,46,13,3,32,45,35,30,118,1,0,41,0],"data":{"version":3,"names":["_index","require","_isLet","isBlockScoped","node","isFunctionDeclaration","isClassDeclaration","isLet"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isBlockScoped.ts"],"sourcesContent":["import {\n  isClassDeclaration,\n  isFunctionDeclaration,\n} from \"./generated/index.ts\";\nimport isLet from \"./isLet.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIA,IAAAC,MAAA,GAAAD,OAAA;AAMe,SAASE,aAAaA,CAACC,IAAY,EAAW;EAC3D,OAAO,IAAAC,4BAAqB,EAACD,IAAI,CAAC,IAAI,IAAAE,yBAAkB,EAACF,IAAI,CAAC,IAAI,IAAAG,cAAK,EAACH,IAAI,CAAC;AAC/E","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isLet.js":{"lineLengths":[13,0,46,13,3,24,45,1,70,1,22,3,105,3,1,0,33,0],"data":{"version":3,"names":["_index","require","BLOCK_SCOPED_SYMBOL","Symbol","for","isLet","node","isVariableDeclaration","kind"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isLet.ts"],"sourcesContent":["import { isVariableDeclaration } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nif (!process.env.BABEL_8_BREAKING) {\n  // eslint-disable-next-line no-var\n  var BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\n}\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  if (process.env.BABEL_8_BREAKING) {\n    return isVariableDeclaration(node) && node.kind !== \"var\";\n  } else {\n    return (\n      isVariableDeclaration(node) &&\n      (node.kind !== \"var\" ||\n        // @ts-expect-error Fixme: document private properties\n        node[BLOCK_SCOPED_SYMBOL])\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGmC;EAEjC,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAC;AACrE;AAKe,SAASC,KAAKA,CAACC,IAAY,EAAW;EAG5C;IACL,OACE,IAAAC,4BAAqB,EAACD,IAAI,CAAC,KAC1BA,IAAI,CAACE,IAAI,KAAK,KAAK,IAElBF,IAAI,CAACJ,mBAAmB,CAAC,CAAC;EAEhC;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isImmutable.js":{"lineLengths":[13,0,46,13,3,30,37,45,28,64,39,36,18,12,19,5,3,15,1,0,39,0],"data":{"version":3,"names":["_isType","require","_index","isImmutable","node","isType","type","isIdentifier","name"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isImmutable.ts"],"sourcesContent":["import isType from \"./isType.ts\";\nimport { isIdentifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAMe,SAASE,WAAWA,CAACC,IAAY,EAAW;EACzD,IAAI,IAAAC,eAAM,EAACD,IAAI,CAACE,IAAI,EAAE,WAAW,CAAC,EAAE,OAAO,IAAI;EAE/C,IAAI,IAAAC,mBAAY,EAACH,IAAI,CAAC,EAAE;IACtB,IAAIA,IAAI,CAACI,IAAI,KAAK,WAAW,EAAE;MAE7B,OAAO,IAAI;IACb,CAAC,MAAM;MAEL,OAAO,KAAK;IACd;EACF;EAEA,OAAO,KAAK;AACd","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isNodesEquivalent.js":{"lineLengths":[13,0,46,13,3,36,48,34,81,19,3,26,17,3,67,50,31,27,27,40,19,5,41,15,48,19,5,31,34,21,7,42,21,7,46,53,23,9,7,15,5,93,45,40,23,9,7,15,5,43,19,5,3,14,1,0,45,0],"data":{"version":3,"names":["_index","require","isNodesEquivalent","a","b","type","fields","Object","keys","NODE_FIELDS","visitorKeys","VISITOR_KEYS","field","val_a","val_b","Array","isArray","length","i","includes","key"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isNodesEquivalent.ts"],"sourcesContent":["import { NODE_FIELDS, VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if two nodes are equivalent\n */\nexport default function isNodesEquivalent<T extends Partial<t.Node>>(\n  a: T,\n  b: any,\n): b is T {\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a == null ||\n    b == null\n  ) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a =\n      // @ts-expect-error field must present in a\n      a[field];\n    const val_b = b[field];\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !visitorKeys?.includes(field)) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMe,SAASC,iBAAiBA,CACvCC,CAAI,EACJC,CAAM,EACE;EACR,IACE,OAAOD,CAAC,KAAK,QAAQ,IACrB,OAAOC,CAAC,KAAK,QAAQ,IACrBD,CAAC,IAAI,IAAI,IACTC,CAAC,IAAI,IAAI,EACT;IACA,OAAOD,CAAC,KAAKC,CAAC;EAChB;EAEA,IAAID,CAAC,CAACE,IAAI,KAAKD,CAAC,CAACC,IAAI,EAAE;IACrB,OAAO,KAAK;EACd;EAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACC,kBAAW,CAACN,CAAC,CAACE,IAAI,CAAC,IAAIF,CAAC,CAACE,IAAI,CAAC;EACzD,MAAMK,WAAW,GAAGC,mBAAY,CAACR,CAAC,CAACE,IAAI,CAAC;EAExC,KAAK,MAAMO,KAAK,IAAIN,MAAM,EAAE;IAC1B,MAAMO,KAAK,GAETV,CAAC,CAACS,KAAK,CAAC;IACV,MAAME,KAAK,GAAGV,CAAC,CAACQ,KAAK,CAAC;IACtB,IAAI,OAAOC,KAAK,KAAK,OAAOC,KAAK,EAAE;MACjC,OAAO,KAAK;IACd;IACA,IAAID,KAAK,IAAI,IAAI,IAAIC,KAAK,IAAI,IAAI,EAAE;MAClC;IACF,CAAC,MAAM,IAAID,KAAK,IAAI,IAAI,IAAIC,KAAK,IAAI,IAAI,EAAE;MACzC,OAAO,KAAK;IACd;IAEA,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACxB,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QACzB,OAAO,KAAK;MACd;MACA,IAAID,KAAK,CAACI,MAAM,KAAKH,KAAK,CAACG,MAAM,EAAE;QACjC,OAAO,KAAK;MACd;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;QACrC,IAAI,CAAChB,iBAAiB,CAACW,KAAK,CAACK,CAAC,CAAC,EAAEJ,KAAK,CAACI,CAAC,CAAC,CAAC,EAAE;UAC1C,OAAO,KAAK;QACd;MACF;MACA;IACF;IAEA,IAAI,OAAOL,KAAK,KAAK,QAAQ,IAAI,EAACH,WAAW,YAAXA,WAAW,CAAES,QAAQ,CAACP,KAAK,CAAC,GAAE;MAC9D,KAAK,MAAMQ,GAAG,IAAIb,MAAM,CAACC,IAAI,CAACK,KAAK,CAAC,EAAE;QACpC,IAAIA,KAAK,CAACO,GAAG,CAAC,KAAKN,KAAK,CAACM,GAAG,CAAC,EAAE;UAC7B,OAAO,KAAK;QACd;MACF;MACA;IACF;IAEA,IAAI,CAAClB,iBAAiB,CAACW,KAAK,EAAEC,KAAK,CAAC,EAAE;MACpC,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isReferenced.js":{"lineLengths":[13,0,46,13,3,31,50,24,28,36,37,33,7,36,31,36,30,34,35,34,23,19,23,30,24,32,33,7,19,26,32,33,7,66,25,33,32,33,7,18,32,33,28,27,40,32,35,29,35,28,19,23,19,23,19,26,29,19,31,30,19,36,34,19,27,54,21,7,35,34,36,27,19,27,19,24,19,25,24,19,24,19,30,33,24,32,31,32,33,7,18,3,14,1,0,40,0],"data":{"version":3,"names":["isReferenced","node","parent","grandparent","type","property","computed","object","init","body","key","superClass","right","source","local","id"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isReferenced.ts"],"sourcesContent":["import type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\nexport default function isReferenced(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      // @ts-expect-error todo(flow->ts): Property 'source' does not exist on type 'AnyTypeAnnotation'.\n      if (grandparent?.source) {\n        return false;\n      }\n      return parent.local === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}\n"],"mappings":";;;;;;AAKe,SAASA,YAAYA,CAClCC,IAAY,EACZC,MAAc,EACdC,WAAoB,EACX;EACT,QAAQD,MAAM,CAACE,IAAI;IAIjB,KAAK,kBAAkB;IACvB,KAAK,0BAA0B;MAC7B,IAAIF,MAAM,CAACG,QAAQ,KAAKJ,IAAI,EAAE;QAC5B,OAAO,CAAC,CAACC,MAAM,CAACI,QAAQ;MAC1B;MACA,OAAOJ,MAAM,CAACK,MAAM,KAAKN,IAAI;IAE/B,KAAK,qBAAqB;MACxB,OAAOC,MAAM,CAACK,MAAM,KAAKN,IAAI;IAG/B,KAAK,oBAAoB;MACvB,OAAOC,MAAM,CAACM,IAAI,KAAKP,IAAI;IAI7B,KAAK,yBAAyB;MAC5B,OAAOC,MAAM,CAACO,IAAI,KAAKR,IAAI;IAM7B,KAAK,aAAa;MAChB,OAAO,KAAK;IAKd,KAAK,aAAa;IAClB,KAAK,oBAAoB;IACzB,KAAK,cAAc;MACjB,IAAIC,MAAM,CAACQ,GAAG,KAAKT,IAAI,EAAE;QACvB,OAAO,CAAC,CAACC,MAAM,CAACI,QAAQ;MAC1B;MACA,OAAO,KAAK;IAMd,KAAK,gBAAgB;MACnB,IAAIJ,MAAM,CAACQ,GAAG,KAAKT,IAAI,EAAE;QACvB,OAAO,CAAC,CAACC,MAAM,CAACI,QAAQ;MAC1B;MAEA,OAAO,CAACH,WAAW,IAAIA,WAAW,CAACC,IAAI,KAAK,eAAe;IAI7D,KAAK,eAAe;IACpB,KAAK,uBAAuB;MAC1B,IAAIF,MAAM,CAACQ,GAAG,KAAKT,IAAI,EAAE;QACvB,OAAO,CAAC,CAACC,MAAM,CAACI,QAAQ;MAC1B;MACA,OAAO,IAAI;IACb,KAAK,sBAAsB;MACzB,OAAOJ,MAAM,CAACQ,GAAG,KAAKT,IAAI;IAI5B,KAAK,kBAAkB;IACvB,KAAK,iBAAiB;MACpB,OAAOC,MAAM,CAACS,UAAU,KAAKV,IAAI;IAInC,KAAK,sBAAsB;MACzB,OAAOC,MAAM,CAACU,KAAK,KAAKX,IAAI;IAI9B,KAAK,mBAAmB;MACtB,OAAOC,MAAM,CAACU,KAAK,KAAKX,IAAI;IAG9B,KAAK,kBAAkB;MACrB,OAAO,KAAK;IAGd,KAAK,aAAa;MAChB,OAAO,KAAK;IAGd,KAAK,aAAa;MAChB,OAAO,KAAK;IAEd,KAAK,gBAAgB;IACrB,KAAK,mBAAmB;MACtB,OAAO,KAAK;IAId,KAAK,qBAAqB;IAC1B,KAAK,oBAAoB;MACvB,OAAO,KAAK;IAId,KAAK,0BAA0B;IAC/B,KAAK,wBAAwB;MAC3B,OAAO,KAAK;IAKd,KAAK,iBAAiB;MAEpB,IAAIE,WAAW,YAAXA,WAAW,CAAEU,MAAM,EAAE;QACvB,OAAO,KAAK;MACd;MACA,OAAOX,MAAM,CAACY,KAAK,KAAKb,IAAI;IAO9B,KAAK,wBAAwB;IAC7B,KAAK,0BAA0B;IAC/B,KAAK,iBAAiB;MACpB,OAAO,KAAK;IAGd,KAAK,iBAAiB;MACpB,OAAO,KAAK;IAGd,KAAK,cAAc;MACjB,OAAO,KAAK;IAId,KAAK,eAAe;IACpB,KAAK,cAAc;MACjB,OAAO,KAAK;IAId,KAAK,cAAc;MACjB,OAAO,KAAK;IAId,KAAK,oBAAoB;MACvB,OAAOC,MAAM,CAACQ,GAAG,KAAKT,IAAI;IAI5B,KAAK,cAAc;MACjB,OAAOC,MAAM,CAACa,EAAE,KAAKd,IAAI;IAI3B,KAAK,qBAAqB;MACxB,IAAIC,MAAM,CAACQ,GAAG,KAAKT,IAAI,EAAE;QACvB,OAAO,CAAC,CAACC,MAAM,CAACI,QAAQ;MAC1B;MAEA,OAAO,IAAI;EACf;EAEA,OAAO,IAAI;AACb","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isScope.js":{"lineLengths":[13,0,46,13,3,26,45,32,116,17,3,109,16,3,38,1,0,35,0],"data":{"version":3,"names":["_index","require","isScope","node","parent","isBlockStatement","isFunction","isCatchClause","isPattern","isScopable"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isScope.ts"],"sourcesContent":["import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAYe,SAASC,OAAOA,CAACC,IAAY,EAAEC,MAAc,EAAW;EAGrE,IAAI,IAAAC,uBAAgB,EAACF,IAAI,CAAC,KAAK,IAAAG,iBAAU,EAACF,MAAM,CAAC,IAAI,IAAAG,oBAAa,EAACH,MAAM,CAAC,CAAC,EAAE;IAC3E,OAAO,KAAK;EACd;EAIA,IAAI,IAAAI,gBAAS,EAACL,IAAI,CAAC,KAAK,IAAAG,iBAAU,EAACF,MAAM,CAAC,IAAI,IAAAG,oBAAa,EAACH,MAAM,CAAC,CAAC,EAAE;IACpE,OAAO,IAAI;EACb;EAEA,OAAO,IAAAK,iBAAU,EAACN,IAAI,CAAC;AACzB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isSpecifierDefault.js":{"lineLengths":[13,0,46,13,3,37,45,40,128,19,5,1,0,46,0],"data":{"version":3,"names":["_index","require","isSpecifierDefault","specifier","isImportDefaultSpecifier","isIdentifier","imported","exported","name"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isSpecifierDefault.ts"],"sourcesContent":["import { isIdentifier, isImportDefaultSpecifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMe,SAASC,kBAAkBA,CACxCC,SAA4B,EACnB;EACT,OACE,IAAAC,+BAAwB,EAACD,SAAS,CAAC,IAEnC,IAAAE,mBAAY,EAACF,SAAS,CAACG,QAAQ,IAAIH,SAAS,CAACI,QAAQ,EAAE;IACrDC,IAAI,EAAE;EACR,CAAC,CAAC;AAEN","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isValidES3Identifier.js":{"lineLengths":[13,0,46,13,3,39,59,292,37,85,1,0,48,0],"data":{"version":3,"names":["_isValidIdentifier","require","RESERVED_WORDS_ES3_ONLY","Set","isValidES3Identifier","name","isValidIdentifier","has"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isValidES3Identifier.ts"],"sourcesContent":["import isValidIdentifier from \"./isValidIdentifier.ts\";\n\nconst RESERVED_WORDS_ES3_ONLY: Set<string> = new Set([\n  \"abstract\",\n  \"boolean\",\n  \"byte\",\n  \"char\",\n  \"double\",\n  \"enum\",\n  \"final\",\n  \"float\",\n  \"goto\",\n  \"implements\",\n  \"int\",\n  \"interface\",\n  \"long\",\n  \"native\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"short\",\n  \"static\",\n  \"synchronized\",\n  \"throws\",\n  \"transient\",\n  \"volatile\",\n]);\n\n/**\n * Check if the input `name` is a valid identifier name according to the ES3 specification.\n *\n * Additional ES3 reserved words are\n */\nexport default function isValidES3Identifier(name: string): boolean {\n  return isValidIdentifier(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAEA,MAAMC,uBAAoC,GAAG,IAAIC,GAAG,CAAC,CACnD,UAAU,EACV,SAAS,EACT,MAAM,EACN,MAAM,EACN,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,YAAY,EACZ,KAAK,EACL,WAAW,EACX,MAAM,EACN,QAAQ,EACR,SAAS,EACT,SAAS,EACT,WAAW,EACX,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,WAAW,EACX,UAAU,CACX,CAAC;AAOa,SAASC,oBAAoBA,CAACC,IAAY,EAAW;EAClE,OAAO,IAAAC,0BAAiB,EAACD,IAAI,CAAC,IAAI,CAACH,uBAAuB,CAACK,GAAG,CAACF,IAAI,CAAC;AACtE","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/validators/isVar.js":{"lineLengths":[13,0,46,13,3,24,45,1,70,1,22,3,52,17,37,3,1,0,33,0],"data":{"version":3,"names":["_index","require","BLOCK_SCOPED_SYMBOL","Symbol","for","isVar","node","isVariableDeclaration","kind"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/validators/isVar.ts"],"sourcesContent":["import { isVariableDeclaration } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nif (!process.env.BABEL_8_BREAKING) {\n  // eslint-disable-next-line no-var\n  var BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\n}\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  if (process.env.BABEL_8_BREAKING) {\n    return isVariableDeclaration(node) && node.kind === \"var\";\n  } else {\n    return (\n      isVariableDeclaration(node, { kind: \"var\" }) &&\n      !(\n        // @ts-expect-error document private properties\n        node[BLOCK_SCOPED_SYMBOL]\n      )\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGmC;EAEjC,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,GAAG,CAAC,6BAA6B,CAAC;AACrE;AAKe,SAASC,KAAKA,CAACC,IAAY,EAAW;EAG5C;IACL,OACE,IAAAC,4BAAqB,EAACD,IAAI,EAAE;MAAEE,IAAI,EAAE;IAAM,CAAC,CAAC,IAC5C,CAEEF,IAAI,CAACJ,mBAAmB,CACzB;EAEL;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/toSequenceExpression.js":{"lineLengths":[13,0,46,13,3,39,75,1,45,47,21,73,22,33,23,3,16,1,0,48,0],"data":{"version":3,"names":["_gatherSequenceExpressions","require","toSequenceExpression","nodes","scope","length","declars","result","gatherSequenceExpressions","declar","push"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/toSequenceExpression.ts"],"sourcesContent":["// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport gatherSequenceExpressions from \"./gatherSequenceExpressions.ts\";\nimport type * as t from \"../index.ts\";\nimport type { DeclarationInfo } from \"./gatherSequenceExpressions.ts\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\nexport default function toSequenceExpression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceExpression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceExpressions(nodes, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-expect-error fixme: gatherSequenceExpressions will return an Expression when there are only one element\n  return result;\n}\n"],"mappings":";;;;;;AAOA,IAAAA,0BAAA,GAAAC,OAAA;AAAuE;AAYxD,SAASC,oBAAoBA,CAC1CC,KAA4B,EAC5BC,KAAU,EACwB;EAClC,IAAI,EAACD,KAAK,YAALA,KAAK,CAAEE,MAAM,GAAE;EAEpB,MAAMC,OAA0B,GAAG,EAAE;EACrC,MAAMC,MAAM,GAAG,IAAAC,kCAAyB,EAACL,KAAK,EAAEG,OAAO,CAAC;EACxD,IAAI,CAACC,MAAM,EAAE;EAEb,KAAK,MAAME,MAAM,IAAIH,OAAO,EAAE;IAC5BF,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EACpB;EAGA,OAAOF,MAAM;AACf","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js":{"lineLengths":[13,0,46,13,3,44,79,57,56,57,50,1,52,19,33,29,46,34,5,41,23,57,34,57,38,47,69,50,24,28,54,13,9,26,85,9,7,33,49,138,135,44,87,52,65,24,23,52,38,35,7,12,13,5,3,28,55,3,27,20,10,50,3,1,0,53,0],"data":{"version":3,"names":["_getBindingIdentifiers","require","_index","_index2","_productions","_cloneNode","gatherSequenceExpressions","nodes","declars","exprs","ensureLastUndefined","node","isEmptyStatement","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","declar","declarations","bindings","getBindingIdentifiers","key","Object","keys","id","cloneNode","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","indexOf","length","sequenceExpression"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/types/src/converters/gatherSequenceExpressions.ts"],"sourcesContent":["// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport {\n  isExpression,\n  isExpressionStatement,\n  isVariableDeclaration,\n  isIfStatement,\n  isBlockStatement,\n  isEmptyStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  sequenceExpression,\n  assignmentExpression,\n  conditionalExpression,\n} from \"../builders/generated/index.ts\";\nimport { buildUndefinedNode } from \"../builders/productions.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport type DeclarationInfo = {\n  kind: t.VariableDeclaration[\"kind\"];\n  id: t.Identifier;\n};\n\nexport default function gatherSequenceExpressions(\n  nodes: ReadonlyArray<t.Node>,\n  declars: Array<DeclarationInfo>,\n) {\n  const exprs: t.Expression[] = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    // if we encounter emptyStatement before a non-emptyStatement\n    // we want to disregard that\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return; // bailed\n\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: cloneNode(bindings[key]),\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent\n        ? gatherSequenceExpressions([node.consequent], declars)\n        : buildUndefinedNode();\n      const alternate = node.alternate\n        ? gatherSequenceExpressions([node.alternate], declars)\n        : buildUndefinedNode();\n      if (!consequent || !alternate) return; // bailed\n\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, declars);\n      if (!body) return; // bailed\n\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      // empty statement so ensure the last item is undefined if we're last\n      // checks if emptyStatement is first\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      // bailed, we can't turn this statement into an expression\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/node/parentheses.js":{"lineLengths":[13,0,46,13,3,52,24,44,42,88,36,48,56,32,46,56,44,62,93,48,72,46,68,34,62,48,56,40,34,87,44,68,33,35,7,24,21,19,19,22,21,18,29,20,13,7,317,46,76,41,3,78,32,3,1,39,113,1,48,33,111,2,42,33,364,2,47,39,1,61,33,200,4,1,41,76,1,56,107,1,55,55,1,51,88,1,31,33,132,32,3,43,16,3,143,16,3,60,26,57,117,18,5,3,19,1,44,33,176,1,50,67,1,39,112,16,3,123,16,3,30,1,42,33,213,16,3,106,16,3,105,16,3,15,1,36,33,217,1,43,33,178,1,36,33,142,16,3,38,108,18,5,3,15,1,39,33,143,1,50,33,193,1,39,33,349,1,55,105,1,43,33,262,17,3,42,16,3,40,33,3,50,16,3,30,1,40,33,384,1,54,111,1,34,158,1,57,111,1,46,33,286,16,3,33,1,49,116,1,59,84,16,10,47,3,1,42,33,50,55,26,14,66,14,38,14,38,3,1,67,18,33,137,40,109,18,5,3,65,17,3,28,60,19,20,46,19,21,21,7,156,18,5,65,3,60,15,16,5,1,0,39,0],"data":{"version":3,"names":["_t","require","_index","isArrayTypeAnnotation","isBinaryExpression","isCallExpression","isForOfStatement","isIndexedAccessType","isMemberExpression","isObjectPattern","isOptionalMemberExpression","isYieldExpression","isStatement","PRECEDENCE","Map","getBinaryPrecedence","node","nodeType","get","operator","isTSTypeExpression","isClassExtendsClause","parent","parentType","type","superClass","hasPostfixPart","object","callee","tag","NullableTypeAnnotation","FunctionTypeAnnotation","tokenContext","Boolean","TokenContext","arrowFlowReturnType","UpdateExpression","needsParenBeforeExpressionBrace","expressionStatement","arrowBody","ObjectExpression","DoExpression","async","Binary","left","parentPos","nodePos","right","undefined","UnionTypeAnnotation","OptionalIndexedAccessType","objectType","TSAsExpression","TSConditionalType","types","checkType","extendsType","TSUnionType","TSIntersectionType","TSInferType","typeParameter","constraint","TSTypeOperator","TSInstantiationExpression","typeParameters","TSFunctionType","BinaryExpression","forInOrInitHeadAccumulate","SequenceExpression","property","YieldExpression","test","ClassExpression","exportDefault","UnaryLike","FunctionExpression","ConditionalExpression","OptionalMemberExpression","AssignmentExpression","LogicalExpression","Identifier","getRawIdentifier","_node$extra","extra","parenthesized","rightType","id","name","isFollowedByBracket","computed","optional","forInitHead","forInHead","forOfHead","await"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/node/parentheses.ts"],"sourcesContent":["import {\n  isArrayTypeAnnotation,\n  isBinaryExpression,\n  isCallExpression,\n  isForOfStatement,\n  isIndexedAccessType,\n  isMemberExpression,\n  isObjectPattern,\n  isOptionalMemberExpression,\n  isYieldExpression,\n  isStatement,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nimport { TokenContext } from \"./index.ts\";\n\nconst PRECEDENCE = new Map([\n  [\"||\", 0],\n  [\"??\", 0],\n  [\"|>\", 0],\n  [\"&&\", 1],\n  [\"|\", 2],\n  [\"^\", 3],\n  [\"&\", 4],\n  [\"==\", 5],\n  [\"===\", 5],\n  [\"!=\", 5],\n  [\"!==\", 5],\n  [\"<\", 6],\n  [\">\", 6],\n  [\"<=\", 6],\n  [\">=\", 6],\n  [\"in\", 6],\n  [\"instanceof\", 6],\n  [\">>\", 7],\n  [\"<<\", 7],\n  [\">>>\", 7],\n  [\"+\", 8],\n  [\"-\", 8],\n  [\"*\", 9],\n  [\"/\", 9],\n  [\"%\", 9],\n  [\"**\", 10],\n]);\n\nfunction getBinaryPrecedence(\n  node: t.Binary | t.TSAsExpression | t.TSSatisfiesExpression,\n  nodeType: string,\n): number;\nfunction getBinaryPrecedence(\n  node: t.Node,\n  nodeType: string,\n): number | undefined;\nfunction getBinaryPrecedence(node: t.Node, nodeType: string) {\n  if (nodeType === \"BinaryExpression\" || nodeType === \"LogicalExpression\") {\n    return PRECEDENCE.get((node as t.Binary).operator);\n  }\n  if (nodeType === \"TSAsExpression\" || nodeType === \"TSSatisfiesExpression\") {\n    return PRECEDENCE.get(\"in\");\n  }\n}\n\nfunction isTSTypeExpression(nodeType: string) {\n  return (\n    nodeType === \"TSAsExpression\" ||\n    nodeType === \"TSSatisfiesExpression\" ||\n    nodeType === \"TSTypeAssertion\"\n  );\n}\n\nconst isClassExtendsClause = (\n  node: t.Node,\n  parent: t.Node,\n): parent is t.Class => {\n  const parentType = parent.type;\n  return (\n    (parentType === \"ClassDeclaration\" || parentType === \"ClassExpression\") &&\n    parent.superClass === node\n  );\n};\n\nconst hasPostfixPart = (node: t.Node, parent: t.Node) => {\n  const parentType = parent.type;\n  return (\n    ((parentType === \"MemberExpression\" ||\n      parentType === \"OptionalMemberExpression\") &&\n      parent.object === node) ||\n    ((parentType === \"CallExpression\" ||\n      parentType === \"OptionalCallExpression\" ||\n      parentType === \"NewExpression\") &&\n      parent.callee === node) ||\n    (parentType === \"TaggedTemplateExpression\" && parent.tag === node) ||\n    parentType === \"TSNonNullExpression\"\n  );\n};\n\nexport function NullableTypeAnnotation(\n  node: t.NullableTypeAnnotation,\n  parent: t.Node,\n): boolean {\n  return isArrayTypeAnnotation(parent);\n}\n\nexport function FunctionTypeAnnotation(\n  node: t.FunctionTypeAnnotation,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  const parentType = parent.type;\n  return (\n    // (() => A) | (() => B)\n    parentType === \"UnionTypeAnnotation\" ||\n    // (() => A) & (() => B)\n    parentType === \"IntersectionTypeAnnotation\" ||\n    // (() => A)[]\n    parentType === \"ArrayTypeAnnotation\" ||\n    Boolean(tokenContext & TokenContext.arrowFlowReturnType)\n  );\n}\n\nexport function UpdateExpression(\n  node: t.UpdateExpression,\n  parent: t.Node,\n): boolean {\n  return hasPostfixPart(node, parent) || isClassExtendsClause(node, parent);\n}\n\nfunction needsParenBeforeExpressionBrace(tokenContext: number) {\n  return Boolean(\n    tokenContext & (TokenContext.expressionStatement | TokenContext.arrowBody),\n  );\n}\n\nexport function ObjectExpression(\n  node: t.ObjectExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  return needsParenBeforeExpressionBrace(tokenContext);\n}\n\nexport function DoExpression(\n  node: t.DoExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  // `async do` can start an expression statement\n  return (\n    !node.async && Boolean(tokenContext & TokenContext.expressionStatement)\n  );\n}\n\nexport function Binary(\n  node: t.Binary | t.TSAsExpression | t.TSSatisfiesExpression,\n  parent: t.Node,\n): boolean | undefined {\n  const parentType = parent.type;\n  if (\n    node.type === \"BinaryExpression\" &&\n    node.operator === \"**\" &&\n    parentType === \"BinaryExpression\" &&\n    parent.operator === \"**\"\n  ) {\n    return parent.left === node;\n  }\n\n  if (isClassExtendsClause(node, parent)) {\n    return true;\n  }\n\n  if (\n    hasPostfixPart(node, parent) ||\n    parentType === \"UnaryExpression\" ||\n    parentType === \"SpreadElement\" ||\n    parentType === \"AwaitExpression\"\n  ) {\n    return true;\n  }\n\n  const parentPos = getBinaryPrecedence(parent, parentType);\n  if (parentPos != null) {\n    const nodePos = getBinaryPrecedence(node, node.type);\n    if (\n      // Logical expressions with the same precedence don't need parens.\n      (parentPos === nodePos &&\n        parentType === \"BinaryExpression\" &&\n        parent.right === node) ||\n      parentPos > nodePos\n    ) {\n      return true;\n    }\n  }\n\n  return undefined;\n}\n\nexport function UnionTypeAnnotation(\n  node: t.UnionTypeAnnotation,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"ArrayTypeAnnotation\" ||\n    parentType === \"NullableTypeAnnotation\" ||\n    parentType === \"IntersectionTypeAnnotation\" ||\n    parentType === \"UnionTypeAnnotation\"\n  );\n}\n\nexport { UnionTypeAnnotation as IntersectionTypeAnnotation };\n\nexport function OptionalIndexedAccessType(\n  node: t.OptionalIndexedAccessType,\n  parent: t.Node,\n): boolean {\n  return isIndexedAccessType(parent) && parent.objectType === node;\n}\n\nexport function TSAsExpression(\n  node: t.TSAsExpression | t.TSSatisfiesExpression,\n  parent: t.Node,\n): boolean {\n  if (\n    (parent.type === \"AssignmentExpression\" ||\n      parent.type === \"AssignmentPattern\") &&\n    parent.left === node\n  ) {\n    return true;\n  }\n  if (\n    parent.type === \"BinaryExpression\" &&\n    (parent.operator === \"|\" || parent.operator === \"&\") &&\n    node === parent.left\n  ) {\n    return true;\n  }\n  return Binary(node, parent);\n}\n\nexport { TSAsExpression as TSSatisfiesExpression };\n\nexport { UnaryLike as TSTypeAssertion };\n\nexport function TSConditionalType(\n  node: t.TSConditionalType,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  if (\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    parentType === \"TSOptionalType\" ||\n    parentType === \"TSTypeOperator\" ||\n    // for `infer K extends (L extends M ? M : ...)`\n    parentType === \"TSTypeParameter\"\n  ) {\n    return true;\n  }\n  if (\n    (parentType === \"TSIntersectionType\" || parentType === \"TSUnionType\") &&\n    parent.types[0] === node\n  ) {\n    return true;\n  }\n  if (\n    parentType === \"TSConditionalType\" &&\n    (parent.checkType === node || parent.extendsType === node)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function TSUnionType(node: t.TSUnionType, parent: t.Node): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"TSIntersectionType\" ||\n    parentType === \"TSTypeOperator\" ||\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    parentType === \"TSOptionalType\"\n  );\n}\n\nexport function TSIntersectionType(\n  node: t.TSUnionType,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"TSTypeOperator\" ||\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    parentType === \"TSOptionalType\"\n  );\n}\n\nexport function TSInferType(node: t.TSInferType, parent: t.Node): boolean {\n  const parentType = parent.type;\n  if (\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    parentType === \"TSOptionalType\"\n  ) {\n    return true;\n  }\n  if (node.typeParameter.constraint) {\n    if (\n      (parentType === \"TSIntersectionType\" || parentType === \"TSUnionType\") &&\n      parent.types[0] === node\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function TSTypeOperator(\n  node: t.TSTypeOperator,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    parentType === \"TSOptionalType\"\n  );\n}\n\nexport function TSInstantiationExpression(\n  node: t.TSInstantiationExpression,\n  parent: t.Node,\n) {\n  const parentType = parent.type;\n  return (\n    (parentType === \"CallExpression\" ||\n      parentType === \"OptionalCallExpression\" ||\n      parentType === \"NewExpression\" ||\n      parentType === \"TSInstantiationExpression\") &&\n    !!(process.env.BABEL_8_BREAKING\n      ? // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n        parent.typeArguments\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        parent.typeParameters)\n  );\n}\n\nexport function TSFunctionType(\n  node: t.TSFunctionType,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"TSIntersectionType\" ||\n    parentType === \"TSUnionType\" ||\n    parentType === \"TSTypeOperator\" ||\n    parentType === \"TSOptionalType\" ||\n    parentType === \"TSArrayType\" ||\n    (parentType === \"TSIndexedAccessType\" && parent.objectType === node) ||\n    (parentType === \"TSConditionalType\" &&\n      (parent.checkType === node || parent.extendsType === node))\n  );\n}\n\nexport { TSFunctionType as TSConstructorType };\n\nexport function BinaryExpression(\n  node: t.BinaryExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  // for ((1 in []);;);\n  // for (var x = (1 in []) in 2);\n  return (\n    node.operator === \"in\" &&\n    Boolean(tokenContext & TokenContext.forInOrInitHeadAccumulate)\n  );\n}\n\nexport function SequenceExpression(\n  node: t.SequenceExpression,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  if (\n    parentType === \"SequenceExpression\" ||\n    parentType === \"ParenthesizedExpression\" ||\n    (parentType === \"MemberExpression\" && parent.property === node) ||\n    (parentType === \"OptionalMemberExpression\" && parent.property === node) ||\n    parentType === \"TemplateLiteral\"\n  ) {\n    return false;\n  }\n  if (parentType === \"ClassDeclaration\") {\n    return true;\n  }\n  if (parentType === \"ForOfStatement\") {\n    return parent.right === node;\n  }\n  if (parentType === \"ExportDefaultDeclaration\") {\n    return true;\n  }\n\n  return !isStatement(parent);\n}\n\nexport function YieldExpression(\n  node: t.YieldExpression,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  return (\n    parentType === \"BinaryExpression\" ||\n    parentType === \"LogicalExpression\" ||\n    parentType === \"UnaryExpression\" ||\n    parentType === \"SpreadElement\" ||\n    hasPostfixPart(node, parent) ||\n    (parentType === \"AwaitExpression\" && isYieldExpression(node)) ||\n    (parentType === \"ConditionalExpression\" && node === parent.test) ||\n    isClassExtendsClause(node, parent) ||\n    isTSTypeExpression(parentType)\n  );\n}\n\nexport { YieldExpression as AwaitExpression };\n\nexport function ClassExpression(\n  node: t.ClassExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  return Boolean(\n    tokenContext &\n      (TokenContext.expressionStatement | TokenContext.exportDefault),\n  );\n}\n\nexport function UnaryLike(\n  node:\n    | t.UnaryLike\n    | t.TSTypeAssertion\n    | t.ArrowFunctionExpression\n    | t.ConditionalExpression\n    | t.AssignmentExpression,\n  parent: t.Node,\n): boolean {\n  return (\n    hasPostfixPart(node, parent) ||\n    (isBinaryExpression(parent) &&\n      parent.operator === \"**\" &&\n      parent.left === node) ||\n    isClassExtendsClause(node, parent)\n  );\n}\n\nexport function FunctionExpression(\n  node: t.FunctionExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  return Boolean(\n    tokenContext &\n      (TokenContext.expressionStatement | TokenContext.exportDefault),\n  );\n}\n\nexport function ConditionalExpression(\n  node:\n    | t.ConditionalExpression\n    | t.ArrowFunctionExpression\n    | t.AssignmentExpression,\n  parent?: t.Node,\n): boolean {\n  const parentType = parent.type;\n  if (\n    parentType === \"UnaryExpression\" ||\n    parentType === \"SpreadElement\" ||\n    parentType === \"BinaryExpression\" ||\n    parentType === \"LogicalExpression\" ||\n    (parentType === \"ConditionalExpression\" && parent.test === node) ||\n    parentType === \"AwaitExpression\" ||\n    isTSTypeExpression(parentType)\n  ) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nexport { ConditionalExpression as ArrowFunctionExpression };\n\nexport function OptionalMemberExpression(\n  node: t.OptionalMemberExpression,\n  parent: t.Node,\n): boolean {\n  return (\n    (isCallExpression(parent) && parent.callee === node) ||\n    (isMemberExpression(parent) && parent.object === node)\n  );\n}\n\nexport { OptionalMemberExpression as OptionalCallExpression };\n\nexport function AssignmentExpression(\n  node: t.AssignmentExpression,\n  parent: t.Node,\n  tokenContext: number,\n): boolean {\n  if (\n    needsParenBeforeExpressionBrace(tokenContext) &&\n    isObjectPattern(node.left)\n  ) {\n    return true;\n  } else {\n    return ConditionalExpression(node, parent);\n  }\n}\n\nexport function LogicalExpression(\n  node: t.LogicalExpression,\n  parent: t.Node,\n): boolean {\n  const parentType = parent.type;\n  if (isTSTypeExpression(parentType)) return true;\n  if (parentType !== \"LogicalExpression\") return false;\n  switch (node.operator) {\n    case \"||\":\n      return parent.operator === \"??\" || parent.operator === \"&&\";\n    case \"&&\":\n      return parent.operator === \"??\";\n    case \"??\":\n      return parent.operator !== \"??\";\n  }\n}\n\nexport function Identifier(\n  node: t.Identifier,\n  parent: t.Node,\n  tokenContext: number,\n  getRawIdentifier: (node: t.Identifier) => string,\n): boolean {\n  const parentType = parent.type;\n  // 13.15.2 AssignmentExpression RS: Evaluation\n  // (fn) = function () {};\n  if (\n    node.extra?.parenthesized &&\n    parentType === \"AssignmentExpression\" &&\n    parent.left === node\n  ) {\n    const rightType = parent.right.type;\n    if (\n      (rightType === \"FunctionExpression\" || rightType === \"ClassExpression\") &&\n      parent.right.id == null\n    ) {\n      return true;\n    }\n  }\n\n  if (getRawIdentifier && getRawIdentifier(node) !== node.name) {\n    return false;\n  }\n\n  // Non-strict code allows the identifier `let`, but it cannot occur as-is in\n  // certain contexts to avoid ambiguity with contextual keyword `let`.\n  if (node.name === \"let\") {\n    // Some contexts only forbid `let [`, so check if the next token would\n    // be the left bracket of a computed member expression.\n    const isFollowedByBracket =\n      isMemberExpression(parent, {\n        object: node,\n        computed: true,\n      }) ||\n      isOptionalMemberExpression(parent, {\n        object: node,\n        computed: true,\n        optional: false,\n      });\n    if (\n      isFollowedByBracket &&\n      tokenContext &\n        (TokenContext.expressionStatement |\n          TokenContext.forInitHead |\n          TokenContext.forInHead)\n    ) {\n      return true;\n    }\n    return Boolean(tokenContext & TokenContext.forOfHead);\n  }\n\n  // ECMAScript specifically forbids a for-of loop from starting with the\n  // token sequence `for (async of`, because it would be ambiguous with\n  // `for (async of => {};;)`, so we need to add extra parentheses.\n  return (\n    node.name === \"async\" &&\n    isForOfStatement(parent, { left: node, await: false })\n  );\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/token-map.js":{"lineLengths":[13,0,46,13,3,26,33,7,15,14,7,16,36,26,26,42,49,34,26,26,31,57,75,7,29,3,13,47,3,20,47,3,25,56,18,48,33,40,46,7,5,16,3,34,56,18,53,33,40,48,7,5,14,3,49,56,18,16,36,22,65,66,26,45,9,7,39,45,46,38,28,58,21,22,17,17,13,23,11,28,9,7,5,16,3,32,62,57,54,3,28,56,31,41,47,43,3,26,56,31,58,43,43,3,33,58,11,12,10,65,20,44,163,22,5,23,35,34,61,64,34,55,30,5,54,19,3,38,47,30,68,66,33,12,10,7,12,12,10,6,3,43,25,34,44,23,51,22,14,19,7,5,15,3,40,25,34,40,23,47,22,14,19,7,5,16,3,1,28,34,40,25,50,36,27,5,11,3,39,27,28,25,31,19,12,18,5,3,1,0,37,0],"data":{"version":3,"names":["_t","require","traverseFast","VISITOR_KEYS","TokenMap","constructor","ast","tokens","source","_tokens","_source","_nodesToTokenIndexes","Map","_nodesOccurrencesCountCache","_tokensCache","node","indexes","_getTokensIndexesOfNode","length","set","has","getIndexes","get","find","condition","k","index","tok","findLastIndex","findMatching","test","occurrenceCount","i","count","cache","matchesOriginal","token","end","start","value","startsWith","startMatches","endMatches","first","last","_findTokensOfNode","low","children","childrenIterator","type","declaration","next","child","childTok","high","push","cached","_findFirstTokenOfNode","_findLastTokenOfNode","mid","exports","quasis","expressions","keys","key","Array","isArray"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/token-map.ts"],"sourcesContent":["import type * as t from \"@babel/types\";\nimport type { Token } from \"@babel/parser\";\n\nimport { traverseFast, VISITOR_KEYS } from \"@babel/types\";\n\nexport class TokenMap {\n  _tokens: Token[];\n  _source: string;\n\n  _nodesToTokenIndexes: Map<t.Node, number[]> = new Map();\n  _nodesOccurrencesCountCache: Map<\n    t.Node,\n    { test: string; count: number; i: number }\n  > = new Map();\n\n  _tokensCache = new Map<t.Node, { first: number; last: number }>();\n\n  constructor(ast: t.Node, tokens: Token[], source: string) {\n    this._tokens = tokens;\n    this._source = source;\n\n    traverseFast(ast, node => {\n      const indexes = this._getTokensIndexesOfNode(node);\n      if (indexes.length > 0) this._nodesToTokenIndexes.set(node, indexes);\n    });\n\n    this._tokensCache = null;\n  }\n\n  has(node: t.Node): boolean {\n    return this._nodesToTokenIndexes.has(node);\n  }\n\n  getIndexes(node: t.Node): readonly number[] | undefined {\n    return this._nodesToTokenIndexes.get(node);\n  }\n\n  find(\n    node: t.Node,\n    condition: (token: Token, index: number) => boolean,\n  ): Token | null {\n    const indexes = this._nodesToTokenIndexes.get(node);\n    if (indexes) {\n      for (let k = 0; k < indexes.length; k++) {\n        const index = indexes[k];\n        const tok = this._tokens[index];\n        if (condition(tok, index)) return tok;\n      }\n    }\n    return null;\n  }\n\n  findLastIndex(\n    node: t.Node,\n    condition: (token: Token, index: number) => boolean,\n  ): number {\n    const indexes = this._nodesToTokenIndexes.get(node);\n    if (indexes) {\n      for (let k = indexes.length - 1; k >= 0; k--) {\n        const index = indexes[k];\n        const tok = this._tokens[index];\n        if (condition(tok, index)) return index;\n      }\n    }\n    return -1;\n  }\n\n  findMatching(\n    node: t.Node,\n    test: string,\n    occurrenceCount: number = 0,\n  ): Token | null {\n    const indexes = this._nodesToTokenIndexes.get(node);\n    if (indexes) {\n      let i = 0;\n      const count = occurrenceCount;\n\n      // To avoid O(n^2) search when printing lists (such as arrays), we\n      // cache the last index of a given token for a given occurrence count.\n      // If then we are asked to find the next occurrence of the same token,\n      // we start from the index of the previously found token.\n      // This cache only kicks in after 2 tokens of the same type, to avoid\n      // overhead in the simple case of having unique tokens per node.\n      if (count > 1) {\n        const cache = this._nodesOccurrencesCountCache.get(node);\n        if (cache && cache.test === test && cache.count < count) {\n          i = cache.i + 1;\n          occurrenceCount -= cache.count + 1;\n        }\n      }\n\n      for (; i < indexes.length; i++) {\n        const tok = this._tokens[indexes[i]];\n        if (this.matchesOriginal(tok, test)) {\n          if (occurrenceCount === 0) {\n            if (count > 0) {\n              this._nodesOccurrencesCountCache.set(node, { test, count, i });\n            }\n            return tok;\n          }\n          occurrenceCount--;\n        }\n      }\n    }\n    return null;\n  }\n\n  matchesOriginal(token: Token, test: string) {\n    if (token.end - token.start !== test.length) return false;\n    if (token.value != null) return token.value === test;\n    return this._source.startsWith(test, token.start);\n  }\n\n  startMatches(node: t.Node, test: string): boolean {\n    const indexes = this._nodesToTokenIndexes.get(node);\n    if (!indexes) return false;\n    const tok = this._tokens[indexes[0]];\n    if (tok.start !== node.start) return false;\n    return this.matchesOriginal(tok, test);\n  }\n\n  endMatches(node: t.Node, test: string): boolean {\n    const indexes = this._nodesToTokenIndexes.get(node);\n    if (!indexes) return false;\n    const tok = this._tokens[indexes[indexes.length - 1]];\n    if (tok.end !== node.end) return false;\n    return this.matchesOriginal(tok, test);\n  }\n\n  _getTokensIndexesOfNode(node: t.Node): number[] {\n    if (node.start == null || node.end == null) return [];\n\n    const { first, last } = this._findTokensOfNode(\n      node,\n      0,\n      this._tokens.length - 1,\n    );\n\n    let low = first;\n\n    const children = childrenIterator(node);\n\n    if (\n      (node.type === \"ExportNamedDeclaration\" ||\n        node.type === \"ExportDefaultDeclaration\") &&\n      node.declaration &&\n      node.declaration.type === \"ClassDeclaration\"\n    ) {\n      // Exported class declarations can be not properly nested inside\n      // the export declaration that contains them. For example, in\n      // `@dec export class Foo {}` the `export` is covered by the\n      // ClassDeclaration range. Skip the class declaration from the list\n      // of children to skip, so that when looking for `export` we also\n      // traverse its tokens.\n      children.next();\n    }\n\n    const indexes = [];\n\n    for (const child of children) {\n      if (child == null) continue;\n      if (child.start == null || child.end == null) continue;\n\n      const childTok = this._findTokensOfNode(child, low, last);\n\n      const high = childTok.first;\n      for (let k = low; k < high; k++) indexes.push(k);\n\n      low = childTok.last + 1;\n    }\n\n    for (let k = low; k <= last; k++) indexes.push(k);\n\n    return indexes;\n  }\n\n  _findTokensOfNode(node: t.Node, low: number, high: number) {\n    const cached = this._tokensCache.get(node);\n    if (cached) return cached;\n\n    const first = this._findFirstTokenOfNode(node.start, low, high);\n    const last = this._findLastTokenOfNode(node.end, first, high);\n\n    this._tokensCache.set(node, { first, last });\n    return { first, last };\n  }\n\n  _findFirstTokenOfNode(start: number, low: number, high: number): number {\n    while (low <= high) {\n      const mid = (high + low) >> 1;\n      if (start < this._tokens[mid].start) {\n        high = mid - 1;\n      } else if (start > this._tokens[mid].start) {\n        low = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n    return low;\n  }\n\n  _findLastTokenOfNode(end: number, low: number, high: number): number {\n    while (low <= high) {\n      const mid = (high + low) >> 1;\n      if (end < this._tokens[mid].end) {\n        high = mid - 1;\n      } else if (end > this._tokens[mid].end) {\n        low = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n    return high;\n  }\n}\n\nfunction* childrenIterator(node: t.Node) {\n  // We need special handling to iterate TemplateLiteral\n  // children in order, since the two lists are interleaved.\n  if (node.type === \"TemplateLiteral\") {\n    yield node.quasis[0];\n    for (let i = 1; i < node.quasis.length; i++) {\n      yield node.expressions[i - 1];\n      yield node.quasis[i];\n    }\n    return;\n  }\n\n  const keys = VISITOR_KEYS[node.type];\n  for (const key of keys) {\n    const child = (node as any)[key];\n    if (!child) continue;\n    if (Array.isArray(child)) {\n      yield* child;\n    } else {\n      yield child;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/index.js":{"lineLengths":[13,0,46,13,3,58,55,56,72,39,21,22,36,5,5,3,47,50,56,67,39,21,22,31,5,5,3,45,49,56,66,39,21,22,30,5,5,3,39,46,56,63,39,21,22,27,5,5,3,39,46,56,63,39,21,22,27,5,5,3,39,46,56,63,39,21,22,27,5,5,3,35,44,56,61,39,21,22,25,5,5,3,33,43,56,60,39,21,22,24,5,5,3,33,43,56,60,39,21,22,24,5,5,3,31,42,56,59,39,21,22,23,5,5,3,45,49,56,66,39,21,22,30,5,5,3,0,33,0],"data":{"version":3,"names":["_templateLiterals","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get","_expressions","_statements","_classes","_methods","_modules","_types","_flow","_base","_jsx","_typescript"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/index.ts"],"sourcesContent":["export * from \"./template-literals.ts\";\nexport * from \"./expressions.ts\";\nexport * from \"./statements.ts\";\nexport * from \"./classes.ts\";\nexport * from \"./methods.ts\";\nexport * from \"./modules.ts\";\nexport * from \"./types.ts\";\nexport * from \"./flow.ts\";\nexport * from \"./base.ts\";\nexport * from \"./jsx.ts\";\nexport * from \"./typescript.ts\";\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/template-literals.js":{"lineLengths":[13,0,46,13,3,60,42,42,40,41,23,3,36,3,25,1,28,76,1,46,29,20,47,35,37,33,18,24,61,50,5,3,49,34,1,32,46,1,0,45,0],"data":{"version":3,"names":["TaggedTemplateExpression","node","print","tag","typeParameters","quasi","TemplateElement","Error","_printTemplate","substitutions","quasis","partRaw","i","length","value","raw","token","tokenMap","findMatching","_catchUpTo","loc","start","TemplateLiteral","expressions"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/template-literals.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport type * as t from \"@babel/types\";\n\nexport function TaggedTemplateExpression(\n  this: Printer,\n  node: t.TaggedTemplateExpression,\n) {\n  this.print(node.tag);\n  if (process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    this.print(node.typeArguments);\n  } else {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n    this.print(node.typeParameters);\n  }\n  this.print(node.quasi);\n}\n\nexport function TemplateElement(this: Printer) {\n  throw new Error(\"TemplateElement printing is handled in TemplateLiteral\");\n}\n\nexport type TemplateLiteralBase = t.Node & {\n  quasis: t.TemplateElement[];\n};\n\nexport function _printTemplate<T extends t.Node>(\n  this: Printer,\n  node: TemplateLiteralBase,\n  substitutions: T[],\n) {\n  const quasis = node.quasis;\n  let partRaw = \"`\";\n  for (let i = 0; i < quasis.length - 1; i++) {\n    partRaw += quasis[i].value.raw;\n    this.token(partRaw + \"${\", true);\n    this.print(substitutions[i]);\n    partRaw = \"}\";\n\n    // In Babel 7 we have individual tokens for ${ and }, so the automatic\n    // catchup logic does not work. Manually look for those tokens.\n    if (!process.env.BABEL_8_BREAKING && this.tokenMap) {\n      const token = this.tokenMap.findMatching(node, \"}\", i);\n      if (token) this._catchUpTo(token.loc.start);\n    }\n  }\n  partRaw += quasis[quasis.length - 1].value.raw;\n  this.token(partRaw + \"`\", true);\n}\n\nexport function TemplateLiteral(this: Printer, node: t.TemplateLiteral) {\n  this._printTemplate(node, node.expressions);\n}\n"],"mappings":";;;;;;;;;AAGO,SAASA,wBAAwBA,CAEtCC,IAAgC,EAChC;EACA,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAAC;EAIb;IAEL,IAAI,CAACD,KAAK,CAACD,IAAI,CAACG,cAAc,CAAC;EACjC;EACA,IAAI,CAACF,KAAK,CAACD,IAAI,CAACI,KAAK,CAAC;AACxB;AAEO,SAASC,eAAeA,CAAA,EAAgB;EAC7C,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;AAC3E;AAMO,SAASC,cAAcA,CAE5BP,IAAyB,EACzBQ,aAAkB,EAClB;EACA,MAAMC,MAAM,GAAGT,IAAI,CAACS,MAAM;EAC1B,IAAIC,OAAO,GAAG,GAAG;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAC1CD,OAAO,IAAID,MAAM,CAACE,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG;IAC9B,IAAI,CAACC,KAAK,CAACL,OAAO,GAAG,IAAI,EAAE,IAAI,CAAC;IAChC,IAAI,CAACT,KAAK,CAACO,aAAa,CAACG,CAAC,CAAC,CAAC;IAC5BD,OAAO,GAAG,GAAG;IAIb,IAAqC,IAAI,CAACM,QAAQ,EAAE;MAClD,MAAMD,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACC,YAAY,CAACjB,IAAI,EAAE,GAAG,EAAEW,CAAC,CAAC;MACtD,IAAII,KAAK,EAAE,IAAI,CAACG,UAAU,CAACH,KAAK,CAACI,GAAG,CAACC,KAAK,CAAC;IAC7C;EACF;EACAV,OAAO,IAAID,MAAM,CAACA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG;EAC9C,IAAI,CAACC,KAAK,CAACL,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC;AACjC;AAEO,SAASW,eAAeA,CAAgBrB,IAAuB,EAAE;EACtE,IAAI,CAACO,cAAc,CAACP,IAAI,EAAEA,IAAI,CAACsB,WAAW,CAAC;AAC7C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/expressions.js":{"lineLengths":[13,0,46,13,3,107,46,42,40,40,54,30,36,40,50,24,44,36,44,38,56,60,58,34,48,22,40,42,44,54,42,80,33,41,7,19,12,21,18,11,7,32,9,12,11,102,24,17,10,25,3,28,1,29,19,29,17,3,18,15,24,1,40,21,37,30,9,25,1,33,20,30,30,10,36,30,3,1,38,24,15,21,15,30,15,21,15,29,1,38,19,15,26,106,16,66,11,3,33,3,36,3,22,21,3,93,11,3,21,37,69,9,25,1,35,35,1,27,20,1,18,21,1,51,64,46,3,81,1,26,21,30,17,1,41,7,12,11,9,13,12,11,26,50,80,3,66,20,3,17,21,3,17,23,25,23,10,20,25,5,25,3,1,39,26,3,36,3,22,21,3,33,21,37,33,9,25,1,31,26,33,3,36,3,21,37,69,9,25,1,19,22,1,32,21,15,28,1,32,22,29,23,24,19,32,5,29,29,17,30,10,23,3,1,27,23,1,36,63,30,19,1,34,24,64,47,41,3,15,21,15,25,1,37,24,15,65,29,10,30,46,3,15,25,1,31,26,19,26,1,33,26,60,80,3,31,76,20,3,17,39,23,30,23,11,10,23,30,3,1,29,24,21,28,1,28,21,22,1,38,21,23,1,33,28,15,22,16,9,8,11,51,19,3,19,16,24,1,0,39,0],"data":{"version":3,"names":["_t","require","_index","isCallExpression","isLiteral","isMemberExpression","isNewExpression","isPattern","UnaryExpression","node","operator","word","space","token","print","argument","DoExpression","async","body","ParenthesizedExpression","exit","enterDelimited","expression","rightParens","UpdateExpression","prefix","ConditionalExpression","test","consequent","alternate","NewExpression","parent","callee","format","minified","arguments","length","optional","typeArguments","typeParameters","tokenMap","endMatches","printList","shouldPrintTrailingComma","SequenceExpression","expressions","ThisExpression","Super","_shouldPrintDecoratorsBeforeExport","decoratorsBeforeExport","start","declaration","Decorator","newline","OptionalMemberExpression","computed","property","object","TypeError","value","OptionalCallExpression","CallExpression","Import","AwaitExpression","YieldExpression","delegate","EmptyStatement","semicolon","ExpressionStatement","tokenContext","TokenContext","expressionStatement","AssignmentPattern","left","type","typeAnnotation","right","AssignmentExpression","_endsWithDiv","BindExpression","MemberExpression","MetaProperty","meta","PrivateName","id","V8IntrinsicIdentifier","name","ModuleExpression","indent","directives","dedent","rightBrace"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/expressions.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport {\n  isCallExpression,\n  isLiteral,\n  isMemberExpression,\n  isNewExpression,\n  isPattern,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { TokenContext } from \"../node/index.ts\";\n\nexport function UnaryExpression(this: Printer, node: t.UnaryExpression) {\n  const { operator } = node;\n  if (\n    operator === \"void\" ||\n    operator === \"delete\" ||\n    operator === \"typeof\" ||\n    // throwExpressions\n    operator === \"throw\"\n  ) {\n    this.word(operator);\n    this.space();\n  } else {\n    this.token(operator);\n  }\n\n  this.print(node.argument);\n}\n\nexport function DoExpression(this: Printer, node: t.DoExpression) {\n  if (node.async) {\n    this.word(\"async\", true);\n    this.space();\n  }\n  this.word(\"do\");\n  this.space();\n  this.print(node.body);\n}\n\nexport function ParenthesizedExpression(\n  this: Printer,\n  node: t.ParenthesizedExpression,\n) {\n  this.token(\"(\");\n  const exit = this.enterDelimited();\n  this.print(node.expression);\n  exit();\n  this.rightParens(node);\n}\n\nexport function UpdateExpression(this: Printer, node: t.UpdateExpression) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument);\n  } else {\n    this.print(node.argument, true);\n    this.token(node.operator);\n  }\n}\n\nexport function ConditionalExpression(\n  this: Printer,\n  node: t.ConditionalExpression,\n) {\n  this.print(node.test);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.consequent);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.alternate);\n}\n\nexport function NewExpression(\n  this: Printer,\n  node: t.NewExpression,\n  parent: t.Node,\n) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee);\n  if (\n    this.format.minified &&\n    node.arguments.length === 0 &&\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    !node.optional &&\n    !isCallExpression(parent, { callee: node }) &&\n    !isMemberExpression(parent) &&\n    !isNewExpression(parent)\n  ) {\n    return;\n  }\n\n  this.print(node.typeArguments);\n  if (!process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    this.print(node.typeParameters); // Legacy TS AST\n  }\n\n  // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n  if (node.optional) {\n    // TODO: This can never happen\n    this.token(\"?.\");\n  }\n\n  if (\n    node.arguments.length === 0 &&\n    this.tokenMap &&\n    !this.tokenMap.endMatches(node, \")\")\n  ) {\n    return;\n  }\n\n  this.token(\"(\");\n  const exit = this.enterDelimited();\n  this.printList(node.arguments, this.shouldPrintTrailingComma(\")\"));\n  exit();\n  this.rightParens(node);\n}\n\nexport function SequenceExpression(this: Printer, node: t.SequenceExpression) {\n  this.printList(node.expressions);\n}\n\nexport function ThisExpression(this: Printer) {\n  this.word(\"this\");\n}\n\nexport function Super(this: Printer) {\n  this.word(\"super\");\n}\n\nexport function _shouldPrintDecoratorsBeforeExport(\n  this: Printer,\n  node: t.ExportDeclaration & { declaration: t.ClassDeclaration },\n) {\n  if (typeof this.format.decoratorsBeforeExport === \"boolean\") {\n    return this.format.decoratorsBeforeExport;\n  }\n  return (\n    typeof node.start === \"number\" && node.start === node.declaration.start\n  );\n}\n\nexport function Decorator(this: Printer, node: t.Decorator) {\n  this.token(\"@\");\n  this.print(node.expression);\n  this.newline();\n}\n\nexport function OptionalMemberExpression(\n  this: Printer,\n  node: t.OptionalMemberExpression,\n) {\n  let { computed } = node;\n  const { optional, property } = node;\n\n  this.print(node.object);\n\n  if (!computed && isMemberExpression(property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  // @ts-expect-error todo(flow->ts) maybe instead of typeof check specific literal types?\n  if (isLiteral(property) && typeof property.value === \"number\") {\n    computed = true;\n  }\n  if (optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(property);\n    this.token(\"]\");\n  } else {\n    if (!optional) {\n      this.token(\".\");\n    }\n    this.print(property);\n  }\n}\n\nexport function OptionalCallExpression(\n  this: Printer,\n  node: t.OptionalCallExpression,\n) {\n  this.print(node.callee);\n\n  if (!process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    this.print(node.typeParameters); // legacy TS AST\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.print(node.typeArguments);\n\n  this.token(\"(\");\n  const exit = this.enterDelimited();\n  this.printList(node.arguments);\n  exit();\n  this.rightParens(node);\n}\n\nexport function CallExpression(this: Printer, node: t.CallExpression) {\n  this.print(node.callee);\n\n  this.print(node.typeArguments);\n  if (!process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    this.print(node.typeParameters); // legacy TS AST\n  }\n  this.token(\"(\");\n  const exit = this.enterDelimited();\n  this.printList(node.arguments, this.shouldPrintTrailingComma(\")\"));\n  exit();\n  this.rightParens(node);\n}\n\nexport function Import(this: Printer) {\n  this.word(\"import\");\n}\n\nexport function AwaitExpression(this: Printer, node: t.AwaitExpression) {\n  this.word(\"await\");\n  this.space();\n  this.print(node.argument);\n}\n\nexport function YieldExpression(this: Printer, node: t.YieldExpression) {\n  if (node.delegate) {\n    this.word(\"yield\", true);\n    this.token(\"*\");\n    if (node.argument) {\n      this.space();\n      // line terminators are allowed after yield*\n      this.print(node.argument);\n    }\n  } else if (node.argument) {\n    this.word(\"yield\", true);\n    this.space();\n    this.print(node.argument);\n  } else {\n    this.word(\"yield\");\n  }\n}\n\nexport function EmptyStatement(this: Printer) {\n  this.semicolon(true /* force */);\n}\n\nexport function ExpressionStatement(\n  this: Printer,\n  node: t.ExpressionStatement,\n) {\n  this.tokenContext |= TokenContext.expressionStatement;\n  this.print(node.expression);\n  this.semicolon();\n}\n\nexport function AssignmentPattern(this: Printer, node: t.AssignmentPattern) {\n  this.print(node.left);\n  if (node.left.type === \"Identifier\" || isPattern(node.left)) {\n    if (node.left.optional) this.token(\"?\");\n    this.print(node.left.typeAnnotation);\n  }\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right);\n}\n\nexport function AssignmentExpression(\n  this: Printer,\n  node: t.AssignmentExpression | t.BinaryExpression | t.LogicalExpression,\n) {\n  this.print(node.left);\n\n  this.space();\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n    this._endsWithDiv = node.operator === \"/\";\n  }\n  this.space();\n\n  this.print(node.right);\n}\n\nexport function BindExpression(this: Printer, node: t.BindExpression) {\n  this.print(node.object);\n  this.token(\"::\");\n  this.print(node.callee);\n}\n\nexport {\n  AssignmentExpression as BinaryExpression,\n  AssignmentExpression as LogicalExpression,\n};\n\nexport function MemberExpression(this: Printer, node: t.MemberExpression) {\n  this.print(node.object);\n\n  if (!node.computed && isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n  // @ts-expect-error todo(flow->ts) maybe use specific literal types\n  if (isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    const exit = this.enterDelimited();\n    this.token(\"[\");\n    this.print(node.property);\n    this.token(\"]\");\n    exit();\n  } else {\n    this.token(\".\");\n    this.print(node.property);\n  }\n}\n\nexport function MetaProperty(this: Printer, node: t.MetaProperty) {\n  this.print(node.meta);\n  this.token(\".\");\n  this.print(node.property);\n}\n\nexport function PrivateName(this: Printer, node: t.PrivateName) {\n  this.token(\"#\");\n  this.print(node.id);\n}\n\nexport function V8IntrinsicIdentifier(\n  this: Printer,\n  node: t.V8IntrinsicIdentifier,\n) {\n  this.token(\"%\");\n  this.word(node.name);\n}\n\nexport function ModuleExpression(this: Printer, node: t.ModuleExpression) {\n  this.word(\"module\", true);\n  this.space();\n  this.token(\"{\");\n  this.indent();\n  const { body } = node;\n  if (body.body.length || body.directives.length) {\n    this.newline();\n  }\n  this.print(body);\n  this.dedent();\n  this.rightBrace(node);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/statements.js":{"lineLengths":[13,0,46,13,3,40,34,46,46,44,57,36,34,44,42,32,42,40,36,50,48,40,38,33,7,8,17,16,13,7,30,20,15,21,26,21,24,1,28,18,15,21,24,21,15,88,19,24,19,18,3,49,19,18,19,24,3,23,41,22,17,50,3,1,38,9,8,16,36,21,3,32,1,29,19,15,21,3,46,26,11,3,21,18,17,26,3,28,20,17,28,3,21,24,1,31,21,15,21,24,21,24,1,30,19,15,49,30,23,17,3,35,21,3,54,26,27,3,15,35,15,25,21,24,1,62,62,33,18,15,24,15,21,15,21,24,21,19,1,52,13,20,38,3,22,1,31,21,47,1,34,24,47,1,32,22,50,1,31,21,50,1,33,25,21,15,24,1,29,19,15,25,15,22,33,10,29,3,23,17,25,17,31,3,1,28,21,15,19,23,27,42,23,17,3,24,1,32,22,15,21,32,21,15,22,86,73,5,24,1,27,18,22,17,26,23,10,25,23,3,31,19,46,3,1,30,24,19,1,44,21,25,17,3,9,8,11,31,23,17,29,10,38,3,15,23,23,45,24,24,7,5,3,127,44,19,17,22,33,39,12,39,5,3,19,1,35,22,40,37,18,17,23,17,26,3,1,0,38,0],"data":{"version":3,"names":["_t","require","isFor","isForStatement","isIfStatement","isStatement","WithStatement","node","word","space","token","print","object","printBlock","IfStatement","test","needsBlock","alternate","getLastStatement","consequent","newline","indent","printAndIndentOnComments","dedent","endsWith","statement","body","ForStatement","exit","enterForStatementInit","init","update","WhileStatement","ForXStatement","isForOf","type","await","noIndentInnerCommentsHere","enterForXStatementInit","left","right","ForInStatement","exports","ForOfStatement","DoWhileStatement","semicolon","printStatementAfterKeyword","printer","printTerminatorless","BreakStatement","label","ContinueStatement","ReturnStatement","argument","ThrowStatement","LabeledStatement","TryStatement","block","handlers","handler","finalizer","CatchClause","param","typeAnnotation","SwitchStatement","discriminant","printSequence","cases","undefined","addNewlines","leading","cas","length","rightBrace","SwitchCase","DebuggerStatement","VariableDeclaration","parent","declare","kind","hasInits","declar","declarations","printList","occurrenceCount","VariableDeclarator","id","definite"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/statements.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport {\n  isFor,\n  isForStatement,\n  isIfStatement,\n  isStatement,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\n// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\nexport function WithStatement(this: Printer, node: t.WithStatement) {\n  this.word(\"with\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.object);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nexport function IfStatement(this: Printer, node: t.IfStatement) {\n  this.word(\"if\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test);\n  this.token(\")\");\n  this.space();\n\n  const needsBlock =\n    node.alternate && isIfStatement(getLastStatement(node.consequent));\n  if (needsBlock) {\n    this.token(\"{\");\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.token(\"}\");\n  }\n\n  if (node.alternate) {\n    if (this.endsWith(charCodes.rightCurlyBrace)) this.space();\n    this.word(\"else\");\n    this.space();\n    this.printAndIndentOnComments(node.alternate);\n  }\n}\n\n// Recursively get the last statement.\nfunction getLastStatement(statement: t.Statement): t.Statement {\n  // @ts-expect-error: If statement.body is empty or not a Node, isStatement will return false\n  const { body } = statement;\n  if (isStatement(body) === false) {\n    return statement;\n  }\n\n  return getLastStatement(body);\n}\n\nexport function ForStatement(this: Printer, node: t.ForStatement) {\n  this.word(\"for\");\n  this.space();\n  this.token(\"(\");\n\n  {\n    const exit = this.enterForStatementInit();\n    this.print(node.init);\n    exit();\n  }\n\n  this.token(\";\");\n\n  if (node.test) {\n    this.space();\n    this.print(node.test);\n  }\n  this.token(\";\", false, 1);\n\n  if (node.update) {\n    this.space();\n    this.print(node.update);\n  }\n\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nexport function WhileStatement(this: Printer, node: t.WhileStatement) {\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction ForXStatement(this: Printer, node: t.ForXStatement) {\n  this.word(\"for\");\n  this.space();\n  const isForOf = node.type === \"ForOfStatement\";\n  if (isForOf && node.await) {\n    this.word(\"await\");\n    this.space();\n  }\n  this.noIndentInnerCommentsHere();\n  this.token(\"(\");\n  {\n    const exit = this.enterForXStatementInit(isForOf);\n    this.print(node.left);\n    exit?.();\n  }\n  this.space();\n  this.word(isForOf ? \"of\" : \"in\");\n  this.space();\n  this.print(node.right);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nexport const ForInStatement = ForXStatement;\nexport const ForOfStatement = ForXStatement;\n\nexport function DoWhileStatement(this: Printer, node: t.DoWhileStatement) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body);\n  this.space();\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test);\n  this.token(\")\");\n  this.semicolon();\n}\n\nfunction printStatementAfterKeyword(printer: Printer, node: t.Node) {\n  if (node) {\n    printer.space();\n    printer.printTerminatorless(node);\n  }\n\n  printer.semicolon();\n}\n\nexport function BreakStatement(this: Printer, node: t.ContinueStatement) {\n  this.word(\"break\");\n  printStatementAfterKeyword(this, node.label);\n}\n\nexport function ContinueStatement(this: Printer, node: t.ContinueStatement) {\n  this.word(\"continue\");\n  printStatementAfterKeyword(this, node.label);\n}\n\nexport function ReturnStatement(this: Printer, node: t.ReturnStatement) {\n  this.word(\"return\");\n  printStatementAfterKeyword(this, node.argument);\n}\n\nexport function ThrowStatement(this: Printer, node: t.ThrowStatement) {\n  this.word(\"throw\");\n  printStatementAfterKeyword(this, node.argument);\n}\n\nexport function LabeledStatement(this: Printer, node: t.LabeledStatement) {\n  this.print(node.label);\n  this.token(\":\");\n  this.space();\n  this.print(node.body);\n}\n\nexport function TryStatement(this: Printer, node: t.TryStatement) {\n  this.word(\"try\");\n  this.space();\n  this.print(node.block);\n  this.space();\n\n  // Esprima bug puts the catch clause in a `handlers` array.\n  // see https://code.google.com/p/esprima/issues/detail?id=433\n  // We run into this from regenerator generated ast.\n  // @ts-expect-error todo(flow->ts) should ast node type be updated to support this?\n  if (node.handlers) {\n    // @ts-expect-error todo(flow->ts) should ast node type be updated to support this?\n    this.print(node.handlers[0]);\n  } else {\n    this.print(node.handler);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word(\"finally\");\n    this.space();\n    this.print(node.finalizer);\n  }\n}\n\nexport function CatchClause(this: Printer, node: t.CatchClause) {\n  this.word(\"catch\");\n  this.space();\n  if (node.param) {\n    this.token(\"(\");\n    this.print(node.param);\n    this.print(node.param.typeAnnotation);\n    this.token(\")\");\n    this.space();\n  }\n  this.print(node.body);\n}\n\nexport function SwitchStatement(this: Printer, node: t.SwitchStatement) {\n  this.word(\"switch\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.discriminant);\n  this.token(\")\");\n  this.space();\n  this.token(\"{\");\n\n  this.printSequence(\n    node.cases,\n    true,\n    undefined,\n    function addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    },\n  );\n\n  this.rightBrace(node);\n}\n\nexport function SwitchCase(this: Printer, node: t.SwitchCase) {\n  if (node.test) {\n    this.word(\"case\");\n    this.space();\n    this.print(node.test);\n    this.token(\":\");\n  } else {\n    this.word(\"default\");\n    this.token(\":\");\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, true);\n  }\n}\n\nexport function DebuggerStatement(this: Printer) {\n  this.word(\"debugger\");\n  this.semicolon();\n}\n\nexport function VariableDeclaration(\n  this: Printer,\n  node: t.VariableDeclaration,\n  parent: t.Node,\n) {\n  if (node.declare) {\n    // TS\n    this.word(\"declare\");\n    this.space();\n  }\n\n  const { kind } = node;\n  if (kind === \"await using\") {\n    this.word(\"await\");\n    this.space();\n    this.word(\"using\", true);\n  } else {\n    this.word(kind, kind === \"using\");\n  }\n  this.space();\n\n  let hasInits = false;\n  // don't add whitespace to loop heads\n  if (!isFor(parent)) {\n    for (const declar of node.declarations) {\n      if (declar.init) {\n        // has an init so let's split it up over multiple lines\n        hasInits = true;\n      }\n    }\n  }\n\n  //\n  // use a pretty separator when we aren't in compact mode, have initializers and don't have retainLines on\n  // this will format declarations like:\n  //\n  //   let foo = \"bar\", bar = \"foo\";\n  //\n  // into\n  //\n  //   let foo = \"bar\",\n  //       bar = \"foo\";\n  //\n\n  this.printList(\n    node.declarations,\n    undefined,\n    undefined,\n    node.declarations.length > 1,\n    hasInits\n      ? function (this: Printer, occurrenceCount: number) {\n          this.token(\",\", false, occurrenceCount);\n          this.newline();\n        }\n      : undefined,\n  );\n\n  if (isFor(parent)) {\n    // don't give semicolons to these nodes since they'll be inserted in the parent generator\n    if (isForStatement(parent)) {\n      if (parent.init === node) return;\n    } else {\n      if (parent.left === node) return;\n    }\n  }\n\n  this.semicolon();\n}\n\nexport function VariableDeclarator(this: Printer, node: t.VariableDeclarator) {\n  this.print(node.id);\n  if (node.definite) this.token(\"!\"); // TS\n  // @ts-ignore(Babel 7 vs Babel 8) Property 'typeAnnotation' does not exist on type 'MemberExpression'.\n  this.print(node.id.typeAnnotation);\n  if (node.init) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.init);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/classes.js":{"lineLengths":[13,0,46,13,3,54,30,70,34,48,52,38,34,44,33,7,29,26,7,41,90,70,36,3,21,25,17,3,22,26,17,3,21,16,17,24,3,34,24,17,25,17,32,41,3,24,17,28,17,36,3,15,24,1,26,22,31,24,10,19,66,39,39,59,11,43,26,3,1,57,68,16,3,52,28,12,26,23,37,86,21,5,4,24,15,28,27,28,5,93,12,127,55,10,5,4,1,30,34,52,22,136,39,3,41,22,23,25,23,10,25,25,3,22,23,3,22,23,3,34,19,17,23,17,27,3,19,1,38,21,34,138,37,41,30,15,22,23,25,23,10,25,25,3,22,23,3,22,23,3,34,19,17,23,17,27,3,19,1,37,34,41,23,22,23,3,22,23,3,34,19,17,23,17,27,3,19,1,28,30,15,24,1,35,30,15,24,1,33,34,36,23,140,39,3,41,25,1,28,22,15,22,31,24,10,19,40,26,3,1,0,35,0],"data":{"version":3,"names":["_t","require","isExportDefaultDeclaration","isExportNamedDeclaration","ClassDeclaration","node","parent","inExport","_shouldPrintDecoratorsBeforeExport","printJoin","decorators","declare","word","space","abstract","id","print","typeParameters","superClass","superTypeParameters","implements","printList","body","ClassBody","token","length","newline","separator","classBodyEmptySemicolonsPrinter","exit","enterDelimited","endsWith","rightBrace","printer","tokenMap","start","end","indexes","getIndexes","k","occurrenceCount","nextLocIndex","advanceNextLocIndex","i","tok","matchesOriginal","_tokens","undefined","ClassProperty","static","format","preserveFormat","_node$key$loc","endLine","key","loc","line","catchUp","tsPrintClassMemberModifiers","computed","_variance","optional","definite","typeAnnotation","value","semicolon","ClassAccessorProperty","_node$key$loc2","ClassPrivateProperty","ClassMethod","_classMethodHead","ClassPrivateMethod","_node$key$loc3","_methodHead","StaticBlock","printSequence"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/classes.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport {\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\n// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\nexport function ClassDeclaration(\n  this: Printer,\n  node: t.ClassDeclaration,\n  parent: t.Node,\n) {\n  const inExport =\n    isExportDefaultDeclaration(parent) || isExportNamedDeclaration(parent);\n\n  if (\n    !inExport ||\n    !this._shouldPrintDecoratorsBeforeExport(\n      parent as t.ExportDeclaration & { declaration: t.ClassDeclaration },\n    )\n  ) {\n    this.printJoin(node.decorators);\n  }\n\n  if (node.declare) {\n    // TS\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    // TS\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"class\");\n\n  if (node.id) {\n    this.space();\n    this.print(node.id);\n  }\n\n  this.print(node.typeParameters);\n\n  if (node.superClass) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.superClass);\n    this.print(\n      process.env.BABEL_8_BREAKING\n        ? // @ts-ignore(Babel 7 vs Babel 8) Renamed\n          node.superTypeArguments\n        : // @ts-ignore(Babel 7 vs Babel 8) Renamed\n          node.superTypeParameters,\n    );\n  }\n\n  if (node.implements) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements);\n  }\n\n  this.space();\n  this.print(node.body);\n}\n\nexport { ClassDeclaration as ClassExpression };\n\nexport function ClassBody(this: Printer, node: t.ClassBody) {\n  this.token(\"{\");\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n\n    const separator = classBodyEmptySemicolonsPrinter(this, node);\n    separator?.(-1); // print leading semicolons in preserveFormat mode\n\n    const exit = this.enterDelimited();\n    this.printJoin(node.body, true, true, separator, true);\n    exit();\n\n    if (!this.endsWith(charCodes.lineFeed)) this.newline();\n\n    this.rightBrace(node);\n  }\n}\n\nfunction classBodyEmptySemicolonsPrinter(printer: Printer, node: t.ClassBody) {\n  if (!printer.tokenMap || node.start == null || node.end == null) {\n    return null;\n  }\n\n  // \"empty statements\" in class bodies are not represented in the AST.\n  // Print them by checking if there are any ; tokens between the current AST\n  // member and the next one.\n\n  const indexes = printer.tokenMap.getIndexes(node);\n  if (!indexes) return null;\n\n  let k = 1; // start from 1 to skip '{'\n\n  let occurrenceCount = 0;\n\n  let nextLocIndex = 0;\n  const advanceNextLocIndex = () => {\n    while (\n      nextLocIndex < node.body.length &&\n      node.body[nextLocIndex].start == null\n    ) {\n      nextLocIndex++;\n    }\n  };\n  advanceNextLocIndex();\n\n  return (i: number) => {\n    if (nextLocIndex <= i) {\n      nextLocIndex = i + 1;\n      advanceNextLocIndex();\n    }\n\n    const end =\n      nextLocIndex === node.body.length\n        ? node.end\n        : node.body[nextLocIndex].start;\n\n    let tok;\n    while (\n      k < indexes.length &&\n      printer.tokenMap.matchesOriginal(\n        (tok = printer._tokens[indexes[k]]),\n        \";\",\n      ) &&\n      tok.start < end\n    ) {\n      printer.token(\";\", undefined, occurrenceCount++);\n      k++;\n    }\n  };\n}\n\nexport function ClassProperty(this: Printer, node: t.ClassProperty) {\n  this.printJoin(node.decorators);\n\n  if (!node.static && !this.format.preserveFormat) {\n    // catch up to property key, avoid line break\n    // between member TS modifiers and the property key.\n    const endLine = node.key.loc?.end?.line;\n    if (endLine) this.catchUp(endLine);\n  }\n\n  this.tsPrintClassMemberModifiers(node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key);\n    this.token(\"]\");\n  } else {\n    this._variance(node);\n    this.print(node.key);\n  }\n\n  // TS\n  if (node.optional) {\n    this.token(\"?\");\n  }\n  if (node.definite) {\n    this.token(\"!\");\n  }\n\n  this.print(node.typeAnnotation);\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value);\n  }\n  this.semicolon();\n}\n\nexport function ClassAccessorProperty(\n  this: Printer,\n  node: t.ClassAccessorProperty,\n) {\n  this.printJoin(node.decorators);\n\n  // catch up to property key, avoid line break\n  // between member modifiers and the property key.\n  const endLine = node.key.loc?.end?.line;\n  if (endLine) this.catchUp(endLine);\n\n  // TS does not support class accessor property yet\n  this.tsPrintClassMemberModifiers(node);\n\n  this.word(\"accessor\", true);\n  this.space();\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key);\n    this.token(\"]\");\n  } else {\n    // Todo: Flow does not support class accessor property yet.\n    this._variance(node);\n    this.print(node.key);\n  }\n\n  // TS\n  if (node.optional) {\n    this.token(\"?\");\n  }\n  if (node.definite) {\n    this.token(\"!\");\n  }\n\n  this.print(node.typeAnnotation);\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value);\n  }\n  this.semicolon();\n}\n\nexport function ClassPrivateProperty(\n  this: Printer,\n  node: t.ClassPrivateProperty,\n) {\n  this.printJoin(node.decorators);\n  this.tsPrintClassMemberModifiers(node);\n  this.print(node.key);\n  // TS\n  if (node.optional) {\n    this.token(\"?\");\n  }\n  if (node.definite) {\n    this.token(\"!\");\n  }\n  this.print(node.typeAnnotation);\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value);\n  }\n  this.semicolon();\n}\n\nexport function ClassMethod(this: Printer, node: t.ClassMethod) {\n  this._classMethodHead(node);\n  this.space();\n  this.print(node.body);\n}\n\nexport function ClassPrivateMethod(this: Printer, node: t.ClassPrivateMethod) {\n  this._classMethodHead(node);\n  this.space();\n  this.print(node.body);\n}\n\nexport function _classMethodHead(\n  this: Printer,\n  node: t.ClassMethod | t.ClassPrivateMethod | t.TSDeclareMethod,\n) {\n  this.printJoin(node.decorators);\n\n  if (!this.format.preserveFormat) {\n    // catch up to method key, avoid line break\n    // between member modifiers/method heads and the method key.\n    const endLine = node.key.loc?.end?.line;\n    if (endLine) this.catchUp(endLine);\n  }\n\n  this.tsPrintClassMemberModifiers(node);\n  this._methodHead(node);\n}\n\nexport function StaticBlock(this: Printer, node: t.StaticBlock) {\n  this.word(\"static\");\n  this.space();\n  this.token(\"{\");\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.printSequence(node.body, true);\n    this.rightBrace(node);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/methods.js":{"lineLengths":[13,0,46,13,3,58,78,38,34,24,34,26,32,70,33,41,7,14,7,44,34,65,17,59,3,21,37,67,48,44,1,44,37,64,40,41,31,47,31,19,5,3,23,9,1,28,39,24,27,23,3,39,1,28,25,23,41,20,17,3,19,29,17,3,45,25,25,5,3,22,23,20,23,10,20,3,22,23,3,107,1,50,23,27,25,5,17,54,3,1,38,19,23,38,37,5,17,3,24,23,38,37,5,23,3,15,16,24,3,38,42,26,3,1,43,35,15,24,1,48,19,29,17,3,49,42,10,37,3,30,15,28,19,15,53,24,1,46,51,44,65,16,3,36,279,16,3,22,38,68,62,76,61,3,43,15,1,41,18,22,35,46,21,93,23,83,68,24,7,97,22,5,3,18,15,33,26,16,63,87,6,41,17,16,65,28,6,43,17,16,65,20,6,3,18,1,0,35,0],"data":{"version":3,"names":["_t","require","_index","isIdentifier","_params","node","idNode","parentNode","print","typeParameters","nameInfo","_getFuncIdName","call","sourceIdentifierName","name","pos","token","_parameters","params","noLineTerminator","type","returnType","_noLineTerminator","parameters","endToken","exit","enterDelimited","trailingComma","shouldPrintTrailingComma","paramLength","length","i","_param","space","parameter","printJoin","decorators","optional","typeAnnotation","_methodHead","kind","key","word","async","generator","computed","undefined","_predicate","noLineTerminatorAfter","predicate","_functionHead","parent","format","preserveFormat","_endsWithInnerRaw","id","FunctionExpression","body","ArrowFunctionExpression","_shouldPrintArrowParamsParens","printInnerComments","tokenContext","TokenContext","arrowBody","_firstParam$leadingCo","_firstParam$trailingC","firstParam","leadingComments","trailingComments","tokenMap","loc","findMatching","arrowToken","start","line","retainLines","parentType","left","_id$loc","_id$loc2","identifierName","_id$loc3","_id$loc4","value"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/methods.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport type * as t from \"@babel/types\";\nimport { isIdentifier, type ParentMaps } from \"@babel/types\";\nimport { TokenContext } from \"../node/index.ts\";\n\ntype ParentsOf<T extends t.Node> = ParentMaps[T[\"type\"]];\n\nexport function _params(\n  this: Printer,\n  node: t.Function | t.TSDeclareMethod | t.TSDeclareFunction,\n  idNode: t.Expression | t.PrivateName,\n  parentNode: ParentsOf<typeof node>,\n) {\n  this.print(node.typeParameters);\n\n  const nameInfo = _getFuncIdName.call(this, idNode, parentNode);\n  if (nameInfo) {\n    this.sourceIdentifierName(nameInfo.name, nameInfo.pos);\n  }\n\n  this.token(\"(\");\n  this._parameters(node.params, \")\");\n\n  const noLineTerminator = node.type === \"ArrowFunctionExpression\";\n  this.print(node.returnType, noLineTerminator);\n\n  this._noLineTerminator = noLineTerminator;\n}\n\nexport function _parameters(\n  this: Printer,\n  parameters: t.Function[\"params\"],\n  endToken: string,\n) {\n  const exit = this.enterDelimited();\n\n  const trailingComma = this.shouldPrintTrailingComma(endToken);\n\n  const paramLength = parameters.length;\n  for (let i = 0; i < paramLength; i++) {\n    this._param(parameters[i]);\n\n    if (trailingComma || i < paramLength - 1) {\n      this.token(\",\", null, i);\n      this.space();\n    }\n  }\n\n  this.token(endToken);\n  exit();\n}\n\nexport function _param(\n  this: Printer,\n  parameter: t.Identifier | t.RestElement | t.Pattern | t.TSParameterProperty,\n) {\n  this.printJoin(parameter.decorators);\n  this.print(parameter);\n  if (\n    // @ts-expect-error optional is not in TSParameterProperty\n    parameter.optional\n  ) {\n    this.token(\"?\"); // TS / flow\n  }\n\n  this.print(\n    // @ts-expect-error typeAnnotation is not in TSParameterProperty\n    parameter.typeAnnotation,\n  ); // TS / flow\n}\n\nexport function _methodHead(this: Printer, node: t.Method | t.TSDeclareMethod) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this.word(\"async\", true);\n    this.space();\n  }\n\n  if (\n    kind === \"method\" ||\n    // @ts-expect-error Fixme: kind: \"init\" is not defined\n    kind === \"init\"\n  ) {\n    if (node.generator) {\n      this.token(\"*\");\n    }\n  }\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(key);\n    this.token(\"]\");\n  } else {\n    this.print(key);\n  }\n\n  if (\n    // @ts-expect-error optional is not in ObjectMethod\n    node.optional\n  ) {\n    // TS\n    this.token(\"?\");\n  }\n\n  this._params(\n    node,\n    node.computed && node.key.type !== \"StringLiteral\" ? undefined : node.key,\n    undefined,\n  );\n}\n\nexport function _predicate(\n  this: Printer,\n  node:\n    | t.FunctionDeclaration\n    | t.FunctionExpression\n    | t.ArrowFunctionExpression,\n  noLineTerminatorAfter?: boolean,\n) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.token(\":\");\n    }\n    this.space();\n    this.print(node.predicate, noLineTerminatorAfter);\n  }\n}\n\nexport function _functionHead(\n  this: Printer,\n  node: t.FunctionDeclaration | t.FunctionExpression | t.TSDeclareFunction,\n  parent: ParentsOf<typeof node>,\n) {\n  if (node.async) {\n    this.word(\"async\");\n    if (!this.format.preserveFormat) {\n      // We prevent inner comments from being printed here,\n      // so that they are always consistently printed in the\n      // same place regardless of the function type.\n      this._endsWithInnerRaw = false;\n    }\n    this.space();\n  }\n  this.word(\"function\");\n  if (node.generator) {\n    if (!this.format.preserveFormat) {\n      // We prevent inner comments from being printed here,\n      // so that they are always consistently printed in the\n      // same place regardless of the function type.\n      this._endsWithInnerRaw = false;\n    }\n    this.token(\"*\");\n  }\n\n  this.space();\n  if (node.id) {\n    this.print(node.id);\n  }\n\n  this._params(node, node.id, parent);\n  if (node.type !== \"TSDeclareFunction\") {\n    this._predicate(node);\n  }\n}\n\nexport function FunctionExpression(\n  this: Printer,\n  node: t.FunctionExpression,\n  parent: ParentsOf<typeof node>,\n) {\n  this._functionHead(node, parent);\n  this.space();\n  this.print(node.body);\n}\n\nexport { FunctionExpression as FunctionDeclaration };\n\nexport function ArrowFunctionExpression(\n  this: Printer,\n  node: t.ArrowFunctionExpression,\n  parent: ParentsOf<typeof node>,\n) {\n  if (node.async) {\n    this.word(\"async\", true);\n    this.space();\n  }\n\n  if (this._shouldPrintArrowParamsParens(node)) {\n    this._params(node, undefined, parent);\n  } else {\n    this.print(node.params[0], true);\n  }\n\n  this._predicate(node, true);\n  this.space();\n  // When printing (x)/*1*/=>{}, we remove the parentheses\n  // and thus there aren't two contiguous inner tokens.\n  // We forcefully print inner comments here.\n  this.printInnerComments();\n  this.token(\"=>\");\n\n  this.space();\n\n  this.tokenContext |= TokenContext.arrowBody;\n  this.print(node.body);\n}\n\n// Try to avoid printing parens in simple cases, but only if we're pretty\n// sure that they aren't needed by type annotations or potential newlines.\nexport function _shouldPrintArrowParamsParens(\n  this: Printer,\n  node: t.ArrowFunctionExpression,\n): boolean {\n  if (node.params.length !== 1) return true;\n\n  if (node.typeParameters || node.returnType || node.predicate) {\n    return true;\n  }\n\n  const firstParam = node.params[0];\n  if (\n    !isIdentifier(firstParam) ||\n    firstParam.typeAnnotation ||\n    firstParam.optional ||\n    // Flow does not support `foo /*: string*/ => {};`\n    firstParam.leadingComments?.length ||\n    firstParam.trailingComments?.length\n  ) {\n    return true;\n  }\n\n  if (this.tokenMap) {\n    if (node.loc == null) return true;\n    if (this.tokenMap.findMatching(node, \"(\") !== null) return true;\n    const arrowToken = this.tokenMap.findMatching(node, \"=>\");\n    if (arrowToken?.loc == null) return true;\n    return arrowToken.loc.start.line !== node.loc.start.line;\n  }\n\n  if (this.format.retainLines) return true;\n\n  return false;\n}\n\nfunction _getFuncIdName(\n  this: Printer,\n  idNode: t.Expression | t.PrivateName,\n  parent: ParentsOf<t.Function | t.TSDeclareMethod | t.TSDeclareFunction>,\n) {\n  let id: t.Expression | t.PrivateName | t.LVal = idNode;\n\n  if (!id && parent) {\n    const parentType = parent.type;\n\n    if (parentType === \"VariableDeclarator\") {\n      id = parent.id;\n    } else if (\n      parentType === \"AssignmentExpression\" ||\n      parentType === \"AssignmentPattern\"\n    ) {\n      id = parent.left;\n    } else if (\n      parentType === \"ObjectProperty\" ||\n      parentType === \"ClassProperty\"\n    ) {\n      if (!parent.computed || parent.key.type === \"StringLiteral\") {\n        id = parent.key;\n      }\n    } else if (\n      parentType === \"ClassPrivateProperty\" ||\n      parentType === \"ClassAccessorProperty\"\n    ) {\n      id = parent.key;\n    }\n  }\n\n  if (!id) return;\n\n  let nameInfo;\n\n  if (id.type === \"Identifier\") {\n    nameInfo = {\n      pos: id.loc?.start,\n      name: id.loc?.identifierName || id.name,\n    };\n  } else if (id.type === \"PrivateName\") {\n    nameInfo = {\n      pos: id.loc?.start,\n      name: \"#\" + id.id.name,\n    };\n  } else if (id.type === \"StringLiteral\") {\n    nameInfo = {\n      pos: id.loc?.start,\n      name: id.value,\n    };\n  }\n\n  return nameInfo;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/modules.js":{"lineLengths":[13,0,46,13,3,52,60,56,56,60,42,42,46,56,44,60,42,44,33,41,7,21,27,29,27,29,13,7,32,67,31,17,3,28,61,17,20,17,27,3,1,39,25,1,39,28,1,32,35,22,17,3,25,64,17,20,17,30,3,1,41,21,15,18,15,28,1,25,51,18,9,27,18,9,15,14,11,158,24,19,78,89,67,69,63,3,3,106,50,15,181,45,11,3,51,41,15,79,15,41,1,37,41,22,15,35,22,17,3,21,15,20,15,155,34,17,39,10,28,3,19,1,58,97,51,3,1,39,47,22,15,25,36,23,47,10,37,24,19,5,48,27,14,34,81,26,39,32,29,23,9,14,14,7,5,25,65,22,26,30,21,71,21,7,26,5,22,47,19,24,19,163,38,21,46,14,32,7,5,21,3,1,41,47,22,35,15,23,15,57,34,21,45,1,34,43,22,15,80,19,37,31,17,27,37,24,17,26,37,26,17,3,46,44,25,32,79,37,30,27,21,7,12,12,5,3,23,26,20,24,17,67,17,24,44,20,24,24,3,36,17,22,17,3,159,34,17,42,10,28,3,19,1,32,23,21,15,25,1,41,21,15,18,15,25,1,33,22,19,23,26,3,21,70,26,29,23,17,29,3,33,23,3,25,1,0,35,0],"data":{"version":3,"names":["_t","require","_index","isClassDeclaration","isExportDefaultSpecifier","isExportNamespaceSpecifier","isImportDefaultSpecifier","isImportNamespaceSpecifier","isStatement","ImportSpecifier","node","importKind","word","space","print","imported","local","name","ImportDefaultSpecifier","ExportDefaultSpecifier","exported","ExportSpecifier","exportKind","ExportNamespaceSpecifier","token","warningShown","_printAttributes","hasPreviousBrace","_node$extra","importAttributesKeyword","format","attributes","assertions","extra","deprecatedAssertSyntax","deprecatedWithLegacySyntax","console","warn","useAssertKeyword","printList","occurrenceCount","shouldPrintTrailingComma","ExportAllDeclaration","_node$attributes","_node$assertions","length","source","semicolon","maybePrintDecoratorsBeforeExport","printer","declaration","_shouldPrintDecoratorsBeforeExport","printJoin","decorators","ExportNamedDeclaration","declar","specifiers","slice","hasSpecial","first","shift","hasBrace","_node$attributes2","_node$assertions2","ExportDefaultDeclaration","noIndentInnerCommentsHere","tokenContext","TokenContext","exportDefault","ImportDeclaration","_node$attributes3","_node$assertions3","isTypeKind","module","phase","hasSpecifiers","ImportAttribute","key","value","ImportNamespaceSpecifier","ImportExpression","options","rightParens"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/modules.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport {\n  isClassDeclaration,\n  isExportDefaultSpecifier,\n  isExportNamespaceSpecifier,\n  isImportDefaultSpecifier,\n  isImportNamespaceSpecifier,\n  isStatement,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { TokenContext } from \"../node/index.ts\";\n\nexport function ImportSpecifier(this: Printer, node: t.ImportSpecifier) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported);\n  // @ts-expect-error todo(flow-ts) maybe check node type instead of relying on name to be undefined on t.StringLiteral\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local);\n  }\n}\n\nexport function ImportDefaultSpecifier(\n  this: Printer,\n  node: t.ImportDefaultSpecifier,\n) {\n  this.print(node.local);\n}\n\nexport function ExportDefaultSpecifier(\n  this: Printer,\n  node: t.ExportDefaultSpecifier,\n) {\n  this.print(node.exported);\n}\n\nexport function ExportSpecifier(this: Printer, node: t.ExportSpecifier) {\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.print(node.local);\n  // @ts-expect-error todo(flow-ts) maybe check node type instead of relying on name to be undefined on t.StringLiteral\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported);\n  }\n}\n\nexport function ExportNamespaceSpecifier(\n  this: Printer,\n  node: t.ExportNamespaceSpecifier,\n) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported);\n}\n\nlet warningShown = false;\n\nexport function _printAttributes(\n  this: Printer,\n  node: Extract<t.Node, { attributes?: t.ImportAttribute[] }>,\n  hasPreviousBrace: boolean,\n) {\n  const { importAttributesKeyword } = this.format;\n  const { attributes, assertions } = node;\n\n  if (\n    !process.env.BABEL_8_BREAKING &&\n    attributes &&\n    !importAttributesKeyword &&\n    node.extra &&\n    (node.extra.deprecatedAssertSyntax ||\n      node.extra.deprecatedWithLegacySyntax) &&\n    // In the production build only show the warning once.\n    // We want to show it per-usage locally for tests.\n    (!process.env.IS_PUBLISH || !warningShown)\n  ) {\n    warningShown = true;\n    console.warn(`\\\nYou are using import attributes, without specifying the desired output syntax.\nPlease specify the \"importAttributesKeyword\" generator option, whose value can be one of:\n - \"with\"        : \\`import { a } from \"b\" with { type: \"json\" };\\`\n - \"assert\"      : \\`import { a } from \"b\" assert { type: \"json\" };\\`\n - \"with-legacy\" : \\`import { a } from \"b\" with type: \"json\";\\`\n`);\n  }\n\n  const useAssertKeyword =\n    importAttributesKeyword === \"assert\" ||\n    (!importAttributesKeyword && assertions);\n\n  this.word(useAssertKeyword ? \"assert\" : \"with\");\n  this.space();\n\n  if (\n    !process.env.BABEL_8_BREAKING &&\n    !useAssertKeyword &&\n    (importAttributesKeyword === \"with-legacy\" ||\n      (!importAttributesKeyword && node.extra?.deprecatedWithLegacySyntax))\n  ) {\n    // with-legacy\n    this.printList(attributes || assertions);\n    return;\n  }\n\n  const occurrenceCount = hasPreviousBrace ? 1 : 0;\n\n  this.token(\"{\", null, occurrenceCount);\n  this.space();\n  this.printList(attributes || assertions, this.shouldPrintTrailingComma(\"}\"));\n  this.space();\n  this.token(\"}\", null, occurrenceCount);\n}\n\nexport function ExportAllDeclaration(\n  this: Printer,\n  node: t.ExportAllDeclaration | t.DeclareExportAllDeclaration,\n) {\n  this.word(\"export\");\n  this.space();\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n  this.token(\"*\");\n  this.space();\n  this.word(\"from\");\n  this.space();\n  if (node.attributes?.length || node.assertions?.length) {\n    this.print(node.source, true);\n    this.space();\n    this._printAttributes(node, false);\n  } else {\n    this.print(node.source);\n  }\n\n  this.semicolon();\n}\n\nfunction maybePrintDecoratorsBeforeExport(\n  printer: Printer,\n  node: t.ExportNamedDeclaration | t.ExportDefaultDeclaration,\n) {\n  if (\n    isClassDeclaration(node.declaration) &&\n    printer._shouldPrintDecoratorsBeforeExport(\n      node as t.ExportNamedDeclaration & { declaration: t.ClassDeclaration },\n    )\n  ) {\n    printer.printJoin(node.declaration.decorators);\n  }\n}\n\nexport function ExportNamedDeclaration(\n  this: Printer,\n  node: t.ExportNamedDeclaration,\n) {\n  maybePrintDecoratorsBeforeExport(this, node);\n\n  this.word(\"export\");\n  this.space();\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    const specifiers = node.specifiers.slice(0);\n\n    // print \"special\" specifiers first\n    let hasSpecial = false;\n    for (;;) {\n      const first = specifiers[0];\n      if (\n        isExportDefaultSpecifier(first) ||\n        isExportNamespaceSpecifier(first)\n      ) {\n        hasSpecial = true;\n        this.print(specifiers.shift());\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    let hasBrace = false;\n    if (specifiers.length || (!specifiers.length && !hasSpecial)) {\n      hasBrace = true;\n      this.token(\"{\");\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, this.shouldPrintTrailingComma(\"}\"));\n        this.space();\n      }\n      this.token(\"}\");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      if (node.attributes?.length || node.assertions?.length) {\n        this.print(node.source, true);\n        this.space();\n        this._printAttributes(node, hasBrace);\n      } else {\n        this.print(node.source);\n      }\n    }\n\n    this.semicolon();\n  }\n}\n\nexport function ExportDefaultDeclaration(\n  this: Printer,\n  node: t.ExportDefaultDeclaration,\n) {\n  maybePrintDecoratorsBeforeExport(this, node);\n\n  this.word(\"export\");\n  this.noIndentInnerCommentsHere();\n  this.space();\n  this.word(\"default\");\n  this.space();\n  this.tokenContext |= TokenContext.exportDefault;\n  const declar = node.declaration;\n  this.print(declar);\n  if (!isStatement(declar)) this.semicolon();\n}\n\nexport function ImportDeclaration(this: Printer, node: t.ImportDeclaration) {\n  this.word(\"import\");\n  this.space();\n\n  const isTypeKind = node.importKind === \"type\" || node.importKind === \"typeof\";\n  if (isTypeKind) {\n    this.noIndentInnerCommentsHere();\n    this.word(node.importKind);\n    this.space();\n  } else if (node.module) {\n    this.noIndentInnerCommentsHere();\n    this.word(\"module\");\n    this.space();\n  } else if (node.phase) {\n    this.noIndentInnerCommentsHere();\n    this.word(node.phase);\n    this.space();\n  }\n\n  const specifiers = node.specifiers.slice(0);\n  const hasSpecifiers = !!specifiers.length;\n  // print \"special\" specifiers first. The loop condition is constant,\n  // but there is a \"break\" in the body.\n  while (hasSpecifiers) {\n    const first = specifiers[0];\n    if (isImportDefaultSpecifier(first) || isImportNamespaceSpecifier(first)) {\n      this.print(specifiers.shift());\n      if (specifiers.length) {\n        this.token(\",\");\n        this.space();\n      }\n    } else {\n      break;\n    }\n  }\n\n  let hasBrace = false;\n  if (specifiers.length) {\n    hasBrace = true;\n    this.token(\"{\");\n    this.space();\n    this.printList(specifiers, this.shouldPrintTrailingComma(\"}\"));\n    this.space();\n    this.token(\"}\");\n  } else if (isTypeKind && !hasSpecifiers) {\n    hasBrace = true;\n    this.token(\"{\");\n    this.token(\"}\");\n  }\n\n  if (hasSpecifiers || isTypeKind) {\n    this.space();\n    this.word(\"from\");\n    this.space();\n  }\n\n  if (node.attributes?.length || node.assertions?.length) {\n    this.print(node.source, true);\n    this.space();\n    this._printAttributes(node, hasBrace);\n  } else {\n    this.print(node.source);\n  }\n\n  this.semicolon();\n}\n\nexport function ImportAttribute(this: Printer, node: t.ImportAttribute) {\n  this.print(node.key);\n  this.token(\":\");\n  this.space();\n  this.print(node.value);\n}\n\nexport function ImportNamespaceSpecifier(\n  this: Printer,\n  node: t.ImportNamespaceSpecifier,\n) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.local);\n}\n\nexport function ImportExpression(this: Printer, node: t.ImportExpression) {\n  this.word(\"import\");\n  if (node.phase) {\n    this.token(\".\");\n    this.word(node.phase);\n  }\n  this.token(\"(\");\n  const shouldPrintTrailingComma = this.shouldPrintTrailingComma(\")\");\n  this.print(node.source);\n  if (node.options != null) {\n    this.token(\",\");\n    this.space();\n    this.print(node.options);\n  }\n  if (shouldPrintTrailingComma) {\n    this.token(\",\");\n  }\n  this.rightParens(node);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AACA,IAAAA,EAAA,GAAAC,OAAA;AASA,IAAAC,MAAA,GAAAD,OAAA;AAAgD;EAR9CE,kBAAkB;EAClBC,wBAAwB;EACxBC,0BAA0B;EAC1BC,wBAAwB;EACxBC,0BAA0B;EAC1BC;AAAW,IAAAR,EAAA;AAKN,SAASS,eAAeA,CAAgBC,IAAuB,EAAE;EACtE,IAAIA,IAAI,CAACC,UAAU,KAAK,MAAM,IAAID,IAAI,CAACC,UAAU,KAAK,QAAQ,EAAE;IAC9D,IAAI,CAACC,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC;IAC1B,IAAI,CAACE,KAAK,CAAC,CAAC;EACd;EAEA,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACK,QAAQ,CAAC;EAEzB,IAAIL,IAAI,CAACM,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,IAAI,KAAKP,IAAI,CAACK,QAAQ,CAACE,IAAI,EAAE;IACxD,IAAI,CAACJ,KAAK,CAAC,CAAC;IACZ,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC;IACf,IAAI,CAACC,KAAK,CAAC,CAAC;IACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACM,KAAK,CAAC;EACxB;AACF;AAEO,SAASE,sBAAsBA,CAEpCR,IAA8B,EAC9B;EACA,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACM,KAAK,CAAC;AACxB;AAEO,SAASG,sBAAsBA,CAEpCT,IAA8B,EAC9B;EACA,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACU,QAAQ,CAAC;AAC3B;AAEO,SAASC,eAAeA,CAAgBX,IAAuB,EAAE;EACtE,IAAIA,IAAI,CAACY,UAAU,KAAK,MAAM,EAAE;IAC9B,IAAI,CAACV,IAAI,CAAC,MAAM,CAAC;IACjB,IAAI,CAACC,KAAK,CAAC,CAAC;EACd;EAEA,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACM,KAAK,CAAC;EAEtB,IAAIN,IAAI,CAACU,QAAQ,IAAIV,IAAI,CAACM,KAAK,CAACC,IAAI,KAAKP,IAAI,CAACU,QAAQ,CAACH,IAAI,EAAE;IAC3D,IAAI,CAACJ,KAAK,CAAC,CAAC;IACZ,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC;IACf,IAAI,CAACC,KAAK,CAAC,CAAC;IACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACU,QAAQ,CAAC;EAC3B;AACF;AAEO,SAASG,wBAAwBA,CAEtCb,IAAgC,EAChC;EACA,IAAI,CAACc,SAAK,GAAI,CAAC;EACf,IAAI,CAACX,KAAK,CAAC,CAAC;EACZ,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACU,QAAQ,CAAC;AAC3B;AAEA,IAAIK,YAAY,GAAG,KAAK;AAEjB,SAASC,gBAAgBA,CAE9BhB,IAA2D,EAC3DiB,gBAAyB,EACzB;EAAA,IAAAC,WAAA;EACA,MAAM;IAAEC;EAAwB,CAAC,GAAG,IAAI,CAACC,MAAM;EAC/C,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGtB,IAAI;EAEvC,IAEEqB,UAAU,IACV,CAACF,uBAAuB,IACxBnB,IAAI,CAACuB,KAAK,KACTvB,IAAI,CAACuB,KAAK,CAACC,sBAAsB,IAChCxB,IAAI,CAACuB,KAAK,CAACE,0BAA0B,KAGX,CAACV,YAAY,EACzC;IACAA,YAAY,GAAG,IAAI;IACnBW,OAAO,CAACC,IAAI,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;EACA;EAEA,MAAMC,gBAAgB,GACpBT,uBAAuB,KAAK,QAAQ,IACnC,CAACA,uBAAuB,IAAIG,UAAW;EAE1C,IAAI,CAACpB,IAAI,CAAC0B,gBAAgB,GAAG,QAAQ,GAAG,MAAM,CAAC;EAC/C,IAAI,CAACzB,KAAK,CAAC,CAAC;EAEZ,IAEE,CAACyB,gBAAgB,KAChBT,uBAAuB,KAAK,aAAa,IACvC,CAACA,uBAAuB,KAAAD,WAAA,GAAIlB,IAAI,CAACuB,KAAK,aAAVL,WAAA,CAAYO,0BAA2B,GACtE;IAEA,IAAI,CAACI,SAAS,CAACR,UAAU,IAAIC,UAAU,CAAC;IACxC;EACF;EAEA,MAAMQ,eAAe,GAAGb,gBAAgB,GAAG,CAAC,GAAG,CAAC;EAEhD,IAAI,CAACH,KAAK,CAAC,GAAG,EAAE,IAAI,EAAEgB,eAAe,CAAC;EACtC,IAAI,CAAC3B,KAAK,CAAC,CAAC;EACZ,IAAI,CAAC0B,SAAS,CAACR,UAAU,IAAIC,UAAU,EAAE,IAAI,CAACS,wBAAwB,CAAC,GAAG,CAAC,CAAC;EAC5E,IAAI,CAAC5B,KAAK,CAAC,CAAC;EACZ,IAAI,CAACW,KAAK,CAAC,GAAG,EAAE,IAAI,EAAEgB,eAAe,CAAC;AACxC;AAEO,SAASE,oBAAoBA,CAElChC,IAA4D,EAC5D;EAAA,IAAAiC,gBAAA,EAAAC,gBAAA;EACA,IAAI,CAAChC,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAIH,IAAI,CAACY,UAAU,KAAK,MAAM,EAAE;IAC9B,IAAI,CAACV,IAAI,CAAC,MAAM,CAAC;IACjB,IAAI,CAACC,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACW,SAAK,GAAI,CAAC;EACf,IAAI,CAACX,KAAK,CAAC,CAAC;EACZ,IAAI,CAACD,IAAI,CAAC,MAAM,CAAC;EACjB,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAI,CAAA8B,gBAAA,GAAAjC,IAAI,CAACqB,UAAU,aAAfY,gBAAA,CAAiBE,MAAM,KAAAD,gBAAA,GAAIlC,IAAI,CAACsB,UAAU,aAAfY,gBAAA,CAAiBC,MAAM,EAAE;IACtD,IAAI,CAAC/B,KAAK,CAACJ,IAAI,CAACoC,MAAM,EAAE,IAAI,CAAC;IAC7B,IAAI,CAACjC,KAAK,CAAC,CAAC;IACZ,IAAI,CAACa,gBAAgB,CAAChB,IAAI,EAAE,KAAK,CAAC;EACpC,CAAC,MAAM;IACL,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACoC,MAAM,CAAC;EACzB;EAEA,IAAI,CAACC,SAAS,CAAC,CAAC;AAClB;AAEA,SAASC,gCAAgCA,CACvCC,OAAgB,EAChBvC,IAA2D,EAC3D;EACA,IACEP,kBAAkB,CAACO,IAAI,CAACwC,WAAW,CAAC,IACpCD,OAAO,CAACE,kCAAkC,CACxCzC,IACF,CAAC,EACD;IACAuC,OAAO,CAACG,SAAS,CAAC1C,IAAI,CAACwC,WAAW,CAACG,UAAU,CAAC;EAChD;AACF;AAEO,SAASC,sBAAsBA,CAEpC5C,IAA8B,EAC9B;EACAsC,gCAAgC,CAAC,IAAI,EAAEtC,IAAI,CAAC;EAE5C,IAAI,CAACE,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAIH,IAAI,CAACwC,WAAW,EAAE;IACpB,MAAMK,MAAM,GAAG7C,IAAI,CAACwC,WAAW;IAC/B,IAAI,CAACpC,KAAK,CAACyC,MAAM,CAAC;IAClB,IAAI,CAAC/C,WAAW,CAAC+C,MAAM,CAAC,EAAE,IAAI,CAACR,SAAS,CAAC,CAAC;EAC5C,CAAC,MAAM;IACL,IAAIrC,IAAI,CAACY,UAAU,KAAK,MAAM,EAAE;MAC9B,IAAI,CAACV,IAAI,CAAC,MAAM,CAAC;MACjB,IAAI,CAACC,KAAK,CAAC,CAAC;IACd;IAEA,MAAM2C,UAAU,GAAG9C,IAAI,CAAC8C,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC;IAG3C,IAAIC,UAAU,GAAG,KAAK;IACtB,SAAS;MACP,MAAMC,KAAK,GAAGH,UAAU,CAAC,CAAC,CAAC;MAC3B,IACEpD,wBAAwB,CAACuD,KAAK,CAAC,IAC/BtD,0BAA0B,CAACsD,KAAK,CAAC,EACjC;QACAD,UAAU,GAAG,IAAI;QACjB,IAAI,CAAC5C,KAAK,CAAC0C,UAAU,CAACI,KAAK,CAAC,CAAC,CAAC;QAC9B,IAAIJ,UAAU,CAACX,MAAM,EAAE;UACrB,IAAI,CAACrB,SAAK,GAAI,CAAC;UACf,IAAI,CAACX,KAAK,CAAC,CAAC;QACd;MACF,CAAC,MAAM;QACL;MACF;IACF;IAEA,IAAIgD,QAAQ,GAAG,KAAK;IACpB,IAAIL,UAAU,CAACX,MAAM,IAAK,CAACW,UAAU,CAACX,MAAM,IAAI,CAACa,UAAW,EAAE;MAC5DG,QAAQ,GAAG,IAAI;MACf,IAAI,CAACrC,SAAK,IAAI,CAAC;MACf,IAAIgC,UAAU,CAACX,MAAM,EAAE;QACrB,IAAI,CAAChC,KAAK,CAAC,CAAC;QACZ,IAAI,CAAC0B,SAAS,CAACiB,UAAU,EAAE,IAAI,CAACf,wBAAwB,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC5B,KAAK,CAAC,CAAC;MACd;MACA,IAAI,CAACW,SAAK,IAAI,CAAC;IACjB;IAEA,IAAId,IAAI,CAACoC,MAAM,EAAE;MAAA,IAAAgB,iBAAA,EAAAC,iBAAA;MACf,IAAI,CAAClD,KAAK,CAAC,CAAC;MACZ,IAAI,CAACD,IAAI,CAAC,MAAM,CAAC;MACjB,IAAI,CAACC,KAAK,CAAC,CAAC;MACZ,IAAI,CAAAiD,iBAAA,GAAApD,IAAI,CAACqB,UAAU,aAAf+B,iBAAA,CAAiBjB,MAAM,KAAAkB,iBAAA,GAAIrD,IAAI,CAACsB,UAAU,aAAf+B,iBAAA,CAAiBlB,MAAM,EAAE;QACtD,IAAI,CAAC/B,KAAK,CAACJ,IAAI,CAACoC,MAAM,EAAE,IAAI,CAAC;QAC7B,IAAI,CAACjC,KAAK,CAAC,CAAC;QACZ,IAAI,CAACa,gBAAgB,CAAChB,IAAI,EAAEmD,QAAQ,CAAC;MACvC,CAAC,MAAM;QACL,IAAI,CAAC/C,KAAK,CAACJ,IAAI,CAACoC,MAAM,CAAC;MACzB;IACF;IAEA,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB;AACF;AAEO,SAASiB,wBAAwBA,CAEtCtD,IAAgC,EAChC;EACAsC,gCAAgC,CAAC,IAAI,EAAEtC,IAAI,CAAC;EAE5C,IAAI,CAACE,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACqD,yBAAyB,CAAC,CAAC;EAChC,IAAI,CAACpD,KAAK,CAAC,CAAC;EACZ,IAAI,CAACD,IAAI,CAAC,SAAS,CAAC;EACpB,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAI,CAACqD,YAAY,IAAIC,mBAAY,CAACC,aAAa;EAC/C,MAAMb,MAAM,GAAG7C,IAAI,CAACwC,WAAW;EAC/B,IAAI,CAACpC,KAAK,CAACyC,MAAM,CAAC;EAClB,IAAI,CAAC/C,WAAW,CAAC+C,MAAM,CAAC,EAAE,IAAI,CAACR,SAAS,CAAC,CAAC;AAC5C;AAEO,SAASsB,iBAAiBA,CAAgB3D,IAAyB,EAAE;EAAA,IAAA4D,iBAAA,EAAAC,iBAAA;EAC1E,IAAI,CAAC3D,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAI,CAACC,KAAK,CAAC,CAAC;EAEZ,MAAM2D,UAAU,GAAG9D,IAAI,CAACC,UAAU,KAAK,MAAM,IAAID,IAAI,CAACC,UAAU,KAAK,QAAQ;EAC7E,IAAI6D,UAAU,EAAE;IACd,IAAI,CAACP,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACrD,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC;IAC1B,IAAI,CAACE,KAAK,CAAC,CAAC;EACd,CAAC,MAAM,IAAIH,IAAI,CAAC+D,MAAM,EAAE;IACtB,IAAI,CAACR,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACrD,IAAI,CAAC,QAAQ,CAAC;IACnB,IAAI,CAACC,KAAK,CAAC,CAAC;EACd,CAAC,MAAM,IAAIH,IAAI,CAACgE,KAAK,EAAE;IACrB,IAAI,CAACT,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACrD,IAAI,CAACF,IAAI,CAACgE,KAAK,CAAC;IACrB,IAAI,CAAC7D,KAAK,CAAC,CAAC;EACd;EAEA,MAAM2C,UAAU,GAAG9C,IAAI,CAAC8C,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C,MAAMkB,aAAa,GAAG,CAAC,CAACnB,UAAU,CAACX,MAAM;EAGzC,OAAO8B,aAAa,EAAE;IACpB,MAAMhB,KAAK,GAAGH,UAAU,CAAC,CAAC,CAAC;IAC3B,IAAIlD,wBAAwB,CAACqD,KAAK,CAAC,IAAIpD,0BAA0B,CAACoD,KAAK,CAAC,EAAE;MACxE,IAAI,CAAC7C,KAAK,CAAC0C,UAAU,CAACI,KAAK,CAAC,CAAC,CAAC;MAC9B,IAAIJ,UAAU,CAACX,MAAM,EAAE;QACrB,IAAI,CAACrB,SAAK,GAAI,CAAC;QACf,IAAI,CAACX,KAAK,CAAC,CAAC;MACd;IACF,CAAC,MAAM;MACL;IACF;EACF;EAEA,IAAIgD,QAAQ,GAAG,KAAK;EACpB,IAAIL,UAAU,CAACX,MAAM,EAAE;IACrBgB,QAAQ,GAAG,IAAI;IACf,IAAI,CAACrC,SAAK,IAAI,CAAC;IACf,IAAI,CAACX,KAAK,CAAC,CAAC;IACZ,IAAI,CAAC0B,SAAS,CAACiB,UAAU,EAAE,IAAI,CAACf,wBAAwB,CAAC,GAAG,CAAC,CAAC;IAC9D,IAAI,CAAC5B,KAAK,CAAC,CAAC;IACZ,IAAI,CAACW,SAAK,IAAI,CAAC;EACjB,CAAC,MAAM,IAAIgD,UAAU,IAAI,CAACG,aAAa,EAAE;IACvCd,QAAQ,GAAG,IAAI;IACf,IAAI,CAACrC,SAAK,IAAI,CAAC;IACf,IAAI,CAACA,SAAK,IAAI,CAAC;EACjB;EAEA,IAAImD,aAAa,IAAIH,UAAU,EAAE;IAC/B,IAAI,CAAC3D,KAAK,CAAC,CAAC;IACZ,IAAI,CAACD,IAAI,CAAC,MAAM,CAAC;IACjB,IAAI,CAACC,KAAK,CAAC,CAAC;EACd;EAEA,IAAI,CAAAyD,iBAAA,GAAA5D,IAAI,CAACqB,UAAU,aAAfuC,iBAAA,CAAiBzB,MAAM,KAAA0B,iBAAA,GAAI7D,IAAI,CAACsB,UAAU,aAAfuC,iBAAA,CAAiB1B,MAAM,EAAE;IACtD,IAAI,CAAC/B,KAAK,CAACJ,IAAI,CAACoC,MAAM,EAAE,IAAI,CAAC;IAC7B,IAAI,CAACjC,KAAK,CAAC,CAAC;IACZ,IAAI,CAACa,gBAAgB,CAAChB,IAAI,EAAEmD,QAAQ,CAAC;EACvC,CAAC,MAAM;IACL,IAAI,CAAC/C,KAAK,CAACJ,IAAI,CAACoC,MAAM,CAAC;EACzB;EAEA,IAAI,CAACC,SAAS,CAAC,CAAC;AAClB;AAEO,SAAS6B,eAAeA,CAAgBlE,IAAuB,EAAE;EACtE,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACmE,GAAG,CAAC;EACpB,IAAI,CAACrD,SAAK,GAAI,CAAC;EACf,IAAI,CAACX,KAAK,CAAC,CAAC;EACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACoE,KAAK,CAAC;AACxB;AAEO,SAASC,wBAAwBA,CAEtCrE,IAAgC,EAChC;EACA,IAAI,CAACc,SAAK,GAAI,CAAC;EACf,IAAI,CAACX,KAAK,CAAC,CAAC;EACZ,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACC,KAAK,CAAC,CAAC;EACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACM,KAAK,CAAC;AACxB;AAEO,SAASgE,gBAAgBA,CAAgBtE,IAAwB,EAAE;EACxE,IAAI,CAACE,IAAI,CAAC,QAAQ,CAAC;EACnB,IAAIF,IAAI,CAACgE,KAAK,EAAE;IACd,IAAI,CAAClD,SAAK,GAAI,CAAC;IACf,IAAI,CAACZ,IAAI,CAACF,IAAI,CAACgE,KAAK,CAAC;EACvB;EACA,IAAI,CAAClD,SAAK,GAAI,CAAC;EACf,MAAMiB,wBAAwB,GAAG,IAAI,CAACA,wBAAwB,CAAC,GAAG,CAAC;EACnE,IAAI,CAAC3B,KAAK,CAACJ,IAAI,CAACoC,MAAM,CAAC;EACvB,IAAIpC,IAAI,CAACuE,OAAO,IAAI,IAAI,EAAE;IACxB,IAAI,CAACzD,SAAK,GAAI,CAAC;IACf,IAAI,CAACX,KAAK,CAAC,CAAC;IACZ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACuE,OAAO,CAAC;EAC1B;EACA,IAAIxC,wBAAwB,EAAE;IAC5B,IAAI,CAACjB,SAAK,GAAI,CAAC;EACjB;EACA,IAAI,CAAC0D,WAAW,CAACxE,IAAI,CAAC;AACxB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/types.js":{"lineLengths":[13,0,46,13,3,50,65,38,40,32,34,40,68,36,40,52,70,58,44,38,58,38,40,42,46,33,30,7,22,14,7,28,28,34,59,26,9,8,11,68,14,74,30,3,40,1,27,16,111,70,1,32,21,1,28,20,28,1,33,32,22,21,39,17,74,17,11,3,45,22,1,29,34,25,15,24,1,31,34,22,23,25,23,10,110,29,13,5,25,116,13,5,3,21,15,25,1,32,30,27,21,37,42,26,15,30,23,62,34,7,12,32,5,3,9,21,1,33,32,17,15,3,57,24,22,113,165,12,24,21,5,3,25,21,17,79,17,3,23,1,32,30,27,17,15,3,57,24,22,65,24,21,12,107,5,3,25,42,26,15,30,23,67,34,7,5,3,23,1,30,46,1,31,43,1,24,20,1,31,40,39,27,25,21,44,27,28,36,60,10,28,3,1,30,40,51,20,11,3,58,18,1,30,40,51,19,11,3,30,1,64,27,9,14,18,43,27,10,59,79,146,3,1,40,30,1,37,26,1,42,21,1,0,33,0],"data":{"version":3,"names":["_t","require","_jsesc","isAssignmentPattern","isIdentifier","lastRawIdentNode","lastRawIdentResult","_getRawIdentifier","node","name","token","tokenMap","find","tok","value","_originalCode","slice","start","end","Identifier","_node$loc","sourceIdentifierName","loc","identifierName","word","ArgumentPlaceholder","RestElement","print","argument","ObjectExpression","props","properties","length","exit","enterDelimited","space","printList","shouldPrintTrailingComma","sourceWithOffset","ObjectMethod","printJoin","decorators","_methodHead","body","ObjectProperty","computed","key","left","shorthand","ArrayExpression","elems","elements","len","i","elem","RecordExpression","startToken","endToken","format","recordAndTupleSyntaxType","Error","JSON","stringify","TupleExpression","RegExpLiteral","pattern","flags","BooleanLiteral","NullLiteral","NumericLiteral","raw","getPossibleRaw","opts","jsescOption","str","numbers","number","jsesc","minified","StringLiteral","undefined","val","BigIntLiteral","validTopicTokenSet","Set","TopicReference","topicToken","has","givenTopicTokenJSON","validTopics","Array","from","v","join","PipelineTopicExpression","expression","PipelineBareFunction","callee","PipelinePrimaryTopicReference"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/types.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport { isAssignmentPattern, isIdentifier } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport jsesc from \"jsesc\";\n\nlet lastRawIdentNode: t.Identifier | null = null;\nlet lastRawIdentResult: string = \"\";\nexport function _getRawIdentifier(this: Printer, node: t.Identifier) {\n  if (node === lastRawIdentNode) return lastRawIdentResult;\n  lastRawIdentNode = node;\n\n  const { name } = node;\n  const token = this.tokenMap.find(node, tok => tok.value === name);\n  if (token) {\n    lastRawIdentResult = this._originalCode.slice(token.start, token.end);\n    return lastRawIdentResult;\n  }\n  return (lastRawIdentResult = node.name);\n}\n\nexport function Identifier(this: Printer, node: t.Identifier) {\n  this.sourceIdentifierName(node.loc?.identifierName || node.name);\n\n  this.word(this.tokenMap ? this._getRawIdentifier(node) : node.name);\n}\n\nexport function ArgumentPlaceholder(this: Printer) {\n  this.token(\"?\");\n}\n\nexport function RestElement(this: Printer, node: t.RestElement) {\n  this.token(\"...\");\n  this.print(node.argument);\n}\n\nexport { RestElement as SpreadElement };\n\nexport function ObjectExpression(this: Printer, node: t.ObjectExpression) {\n  const props = node.properties;\n\n  this.token(\"{\");\n\n  if (props.length) {\n    const exit = this.enterDelimited();\n    this.space();\n    this.printList(props, this.shouldPrintTrailingComma(\"}\"), true, true);\n    this.space();\n    exit();\n  }\n\n  this.sourceWithOffset(\"end\", node.loc, -1);\n\n  this.token(\"}\");\n}\n\nexport { ObjectExpression as ObjectPattern };\n\nexport function ObjectMethod(this: Printer, node: t.ObjectMethod) {\n  this.printJoin(node.decorators);\n  this._methodHead(node);\n  this.space();\n  this.print(node.body);\n}\n\nexport function ObjectProperty(this: Printer, node: t.ObjectProperty) {\n  this.printJoin(node.decorators);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key);\n    this.token(\"]\");\n  } else {\n    // print `({ foo: foo = 5 } = {})` as `({ foo = 5 } = {});`\n    if (\n      isAssignmentPattern(node.value) &&\n      isIdentifier(node.key) &&\n      // @ts-expect-error todo(flow->ts) `.name` does not exist on some types in union\n      node.key.name === node.value.left.name\n    ) {\n      this.print(node.value);\n      return;\n    }\n\n    this.print(node.key);\n\n    // shorthand!\n    if (\n      node.shorthand &&\n      isIdentifier(node.key) &&\n      isIdentifier(node.value) &&\n      node.key.name === node.value.name\n    ) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value);\n}\n\nexport function ArrayExpression(this: Printer, node: t.ArrayExpression) {\n  const elems = node.elements;\n  const len = elems.length;\n\n  this.token(\"[\");\n\n  const exit = this.enterDelimited();\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem);\n      if (i < len - 1 || this.shouldPrintTrailingComma(\"]\")) {\n        this.token(\",\", false, i);\n      }\n    } else {\n      // If the array expression ends with a hole, that hole\n      // will be ignored by the interpreter, but if it ends with\n      // two (or more) holes, we need to write out two (or more)\n      // commas so that the resulting code is interpreted with\n      // both (all) of the holes.\n      this.token(\",\", false, i);\n    }\n  }\n\n  exit();\n\n  this.token(\"]\");\n}\n\nexport { ArrayExpression as ArrayPattern };\n\nexport function RecordExpression(this: Printer, node: t.RecordExpression) {\n  const props = node.properties;\n\n  let startToken;\n  let endToken;\n  if (process.env.BABEL_8_BREAKING) {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    if (this.format.recordAndTupleSyntaxType === \"bar\") {\n      startToken = \"{|\";\n      endToken = \"|}\";\n    } else if (\n      this.format.recordAndTupleSyntaxType !== \"hash\" &&\n      this.format.recordAndTupleSyntaxType != null\n    ) {\n      throw new Error(\n        `The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(\n          this.format.recordAndTupleSyntaxType,\n        )} received).`,\n      );\n    } else {\n      startToken = \"#{\";\n      endToken = \"}\";\n    }\n  }\n\n  this.token(startToken);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, this.shouldPrintTrailingComma(endToken), true, true);\n    this.space();\n  }\n  this.token(endToken);\n}\n\nexport function TupleExpression(this: Printer, node: t.TupleExpression) {\n  const elems = node.elements;\n  const len = elems.length;\n\n  let startToken;\n  let endToken;\n  if (process.env.BABEL_8_BREAKING) {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    if (this.format.recordAndTupleSyntaxType === \"bar\") {\n      startToken = \"[|\";\n      endToken = \"|]\";\n    } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n      startToken = \"#[\";\n      endToken = \"]\";\n    } else {\n      throw new Error(\n        `${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`,\n      );\n    }\n  }\n\n  this.token(startToken);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem);\n      if (i < len - 1 || this.shouldPrintTrailingComma(endToken)) {\n        this.token(\",\", false, i);\n      }\n    }\n  }\n\n  this.token(endToken);\n}\n\nexport function RegExpLiteral(this: Printer, node: t.RegExpLiteral) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nexport function BooleanLiteral(this: Printer, node: t.BooleanLiteral) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nexport function NullLiteral(this: Printer) {\n  this.word(\"null\");\n}\n\nexport function NumericLiteral(this: Printer, node: t.NumericLiteral) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value;\n  const str = value + \"\";\n  if (opts.numbers) {\n    this.number(jsesc(value, opts), value);\n  } else if (raw == null) {\n    this.number(str, value); // normalize\n  } else if (this.format.minified) {\n    this.number(raw.length < str.length ? raw : str, value);\n  } else {\n    this.number(raw, value);\n  }\n}\n\nexport function StringLiteral(this: Printer, node: t.StringLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const val = jsesc(node.value, this.format.jsescOption);\n\n  this.token(val);\n}\n\nexport function BigIntLiteral(this: Printer, node: t.BigIntLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n  this.word(node.value + \"n\");\n}\n\n// Hack pipe operator\nconst validTopicTokenSet = new Set([\"^^\", \"@@\", \"^\", \"%\", \"#\"]);\nexport function TopicReference(this: Printer) {\n  const { topicToken } = this.format;\n\n  if (validTopicTokenSet.has(topicToken)) {\n    this.token(topicToken);\n  } else {\n    const givenTopicTokenJSON = JSON.stringify(topicToken);\n    const validTopics = Array.from(validTopicTokenSet, v => JSON.stringify(v));\n    throw new Error(\n      `The \"topicToken\" generator option must be one of ` +\n        `${validTopics.join(\", \")} (${givenTopicTokenJSON} received instead).`,\n    );\n  }\n}\n\n// Smart-mix pipe operator\nexport function PipelineTopicExpression(\n  this: Printer,\n  node: t.PipelineTopicExpression,\n) {\n  this.print(node.expression);\n}\n\nexport function PipelineBareFunction(\n  this: Printer,\n  node: t.PipelineBareFunction,\n) {\n  this.print(node.callee);\n}\n\nexport function PipelinePrimaryTopicReference(this: Printer) {\n  this.token(\"#\");\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAAA,EAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAA0B;EAFjBE,mBAAmB;EAAEC;AAAY,IAAAJ,EAAA;AAI1C,IAAIK,gBAAqC,GAAG,IAAI;AAChD,IAAIC,kBAA0B,GAAG,EAAE;AAC5B,SAASC,iBAAiBA,CAAgBC,IAAkB,EAAE;EACnE,IAAIA,IAAI,KAAKH,gBAAgB,EAAE,OAAOC,kBAAkB;EACxDD,gBAAgB,GAAGG,IAAI;EAEvB,MAAM;IAAEC;EAAK,CAAC,GAAGD,IAAI;EACrB,MAAME,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACJ,IAAI,EAAEK,GAAG,IAAIA,GAAG,CAACC,KAAK,KAAKL,IAAI,CAAC;EACjE,IAAIC,KAAK,EAAE;IACTJ,kBAAkB,GAAG,IAAI,CAACS,aAAa,CAACC,KAAK,CAACN,KAAK,CAACO,KAAK,EAAEP,KAAK,CAACQ,GAAG,CAAC;IACrE,OAAOZ,kBAAkB;EAC3B;EACA,OAAQA,kBAAkB,GAAGE,IAAI,CAACC,IAAI;AACxC;AAEO,SAASU,UAAUA,CAAgBX,IAAkB,EAAE;EAAA,IAAAY,SAAA;EAC5D,IAAI,CAACC,oBAAoB,CAAC,EAAAD,SAAA,GAAAZ,IAAI,CAACc,GAAG,qBAARF,SAAA,CAAUG,cAAc,KAAIf,IAAI,CAACC,IAAI,CAAC;EAEhE,IAAI,CAACe,IAAI,CAAC,IAAI,CAACb,QAAQ,GAAG,IAAI,CAACJ,iBAAiB,CAACC,IAAI,CAAC,GAAGA,IAAI,CAACC,IAAI,CAAC;AACrE;AAEO,SAASgB,mBAAmBA,CAAA,EAAgB;EACjD,IAAI,CAACf,SAAK,GAAI,CAAC;AACjB;AAEO,SAASgB,WAAWA,CAAgBlB,IAAmB,EAAE;EAC9D,IAAI,CAACE,KAAK,CAAC,KAAK,CAAC;EACjB,IAAI,CAACiB,KAAK,CAACnB,IAAI,CAACoB,QAAQ,CAAC;AAC3B;AAIO,SAASC,gBAAgBA,CAAgBrB,IAAwB,EAAE;EACxE,MAAMsB,KAAK,GAAGtB,IAAI,CAACuB,UAAU;EAE7B,IAAI,CAACrB,SAAK,IAAI,CAAC;EAEf,IAAIoB,KAAK,CAACE,MAAM,EAAE;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IAClC,IAAI,CAACC,KAAK,CAAC,CAAC;IACZ,IAAI,CAACC,SAAS,CAACN,KAAK,EAAE,IAAI,CAACO,wBAAwB,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACrE,IAAI,CAACF,KAAK,CAAC,CAAC;IACZF,IAAI,CAAC,CAAC;EACR;EAEA,IAAI,CAACK,gBAAgB,CAAC,KAAK,EAAE9B,IAAI,CAACc,GAAG,EAAE,CAAC,CAAC,CAAC;EAE1C,IAAI,CAACZ,SAAK,IAAI,CAAC;AACjB;AAIO,SAAS6B,YAAYA,CAAgB/B,IAAoB,EAAE;EAChE,IAAI,CAACgC,SAAS,CAAChC,IAAI,CAACiC,UAAU,CAAC;EAC/B,IAAI,CAACC,WAAW,CAAClC,IAAI,CAAC;EACtB,IAAI,CAAC2B,KAAK,CAAC,CAAC;EACZ,IAAI,CAACR,KAAK,CAACnB,IAAI,CAACmC,IAAI,CAAC;AACvB;AAEO,SAASC,cAAcA,CAAgBpC,IAAsB,EAAE;EACpE,IAAI,CAACgC,SAAS,CAAChC,IAAI,CAACiC,UAAU,CAAC;EAE/B,IAAIjC,IAAI,CAACqC,QAAQ,EAAE;IACjB,IAAI,CAACnC,SAAK,GAAI,CAAC;IACf,IAAI,CAACiB,KAAK,CAACnB,IAAI,CAACsC,GAAG,CAAC;IACpB,IAAI,CAACpC,SAAK,GAAI,CAAC;EACjB,CAAC,MAAM;IAEL,IACEP,mBAAmB,CAACK,IAAI,CAACM,KAAK,CAAC,IAC/BV,YAAY,CAACI,IAAI,CAACsC,GAAG,CAAC,IAEtBtC,IAAI,CAACsC,GAAG,CAACrC,IAAI,KAAKD,IAAI,CAACM,KAAK,CAACiC,IAAI,CAACtC,IAAI,EACtC;MACA,IAAI,CAACkB,KAAK,CAACnB,IAAI,CAACM,KAAK,CAAC;MACtB;IACF;IAEA,IAAI,CAACa,KAAK,CAACnB,IAAI,CAACsC,GAAG,CAAC;IAGpB,IACEtC,IAAI,CAACwC,SAAS,IACd5C,YAAY,CAACI,IAAI,CAACsC,GAAG,CAAC,IACtB1C,YAAY,CAACI,IAAI,CAACM,KAAK,CAAC,IACxBN,IAAI,CAACsC,GAAG,CAACrC,IAAI,KAAKD,IAAI,CAACM,KAAK,CAACL,IAAI,EACjC;MACA;IACF;EACF;EAEA,IAAI,CAACC,SAAK,GAAI,CAAC;EACf,IAAI,CAACyB,KAAK,CAAC,CAAC;EACZ,IAAI,CAACR,KAAK,CAACnB,IAAI,CAACM,KAAK,CAAC;AACxB;AAEO,SAASmC,eAAeA,CAAgBzC,IAAuB,EAAE;EACtE,MAAM0C,KAAK,GAAG1C,IAAI,CAAC2C,QAAQ;EAC3B,MAAMC,GAAG,GAAGF,KAAK,CAAClB,MAAM;EAExB,IAAI,CAACtB,SAAK,GAAI,CAAC;EAEf,MAAMuB,IAAI,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;EAElC,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAAClB,MAAM,EAAEqB,CAAC,EAAE,EAAE;IACrC,MAAMC,IAAI,GAAGJ,KAAK,CAACG,CAAC,CAAC;IACrB,IAAIC,IAAI,EAAE;MACR,IAAID,CAAC,GAAG,CAAC,EAAE,IAAI,CAAClB,KAAK,CAAC,CAAC;MACvB,IAAI,CAACR,KAAK,CAAC2B,IAAI,CAAC;MAChB,IAAID,CAAC,GAAGD,GAAG,GAAG,CAAC,IAAI,IAAI,CAACf,wBAAwB,CAAC,GAAG,CAAC,EAAE;QACrD,IAAI,CAAC3B,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE2C,CAAC,CAAC;MAC3B;IACF,CAAC,MAAM;MAML,IAAI,CAAC3C,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE2C,CAAC,CAAC;IAC3B;EACF;EAEApB,IAAI,CAAC,CAAC;EAEN,IAAI,CAACvB,SAAK,GAAI,CAAC;AACjB;AAIO,SAAS6C,gBAAgBA,CAAgB/C,IAAwB,EAAE;EACxE,MAAMsB,KAAK,GAAGtB,IAAI,CAACuB,UAAU;EAE7B,IAAIyB,UAAU;EACd,IAAIC,QAAQ;EAIL;IACL,IAAI,IAAI,CAACC,MAAM,CAACC,wBAAwB,KAAK,KAAK,EAAE;MAClDH,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,IAAI;IACjB,CAAC,MAAM,IACL,IAAI,CAACC,MAAM,CAACC,wBAAwB,KAAK,MAAM,IAC/C,IAAI,CAACD,MAAM,CAACC,wBAAwB,IAAI,IAAI,EAC5C;MACA,MAAM,IAAIC,KAAK,CACb,4EAA4EC,IAAI,CAACC,SAAS,CACxF,IAAI,CAACJ,MAAM,CAACC,wBACd,CAAC,aACH,CAAC;IACH,CAAC,MAAM;MACLH,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,GAAG;IAChB;EACF;EAEA,IAAI,CAAC/C,KAAK,CAAC8C,UAAU,CAAC;EAEtB,IAAI1B,KAAK,CAACE,MAAM,EAAE;IAChB,IAAI,CAACG,KAAK,CAAC,CAAC;IACZ,IAAI,CAACC,SAAS,CAACN,KAAK,EAAE,IAAI,CAACO,wBAAwB,CAACoB,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAC1E,IAAI,CAACtB,KAAK,CAAC,CAAC;EACd;EACA,IAAI,CAACzB,KAAK,CAAC+C,QAAQ,CAAC;AACtB;AAEO,SAASM,eAAeA,CAAgBvD,IAAuB,EAAE;EACtE,MAAM0C,KAAK,GAAG1C,IAAI,CAAC2C,QAAQ;EAC3B,MAAMC,GAAG,GAAGF,KAAK,CAAClB,MAAM;EAExB,IAAIwB,UAAU;EACd,IAAIC,QAAQ;EAIL;IACL,IAAI,IAAI,CAACC,MAAM,CAACC,wBAAwB,KAAK,KAAK,EAAE;MAClDH,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,IAAI;IACjB,CAAC,MAAM,IAAI,IAAI,CAACC,MAAM,CAACC,wBAAwB,KAAK,MAAM,EAAE;MAC1DH,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,GAAG;IAChB,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CACb,GAAG,IAAI,CAACF,MAAM,CAACC,wBAAwB,4CACzC,CAAC;IACH;EACF;EAEA,IAAI,CAACjD,KAAK,CAAC8C,UAAU,CAAC;EAEtB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAAClB,MAAM,EAAEqB,CAAC,EAAE,EAAE;IACrC,MAAMC,IAAI,GAAGJ,KAAK,CAACG,CAAC,CAAC;IACrB,IAAIC,IAAI,EAAE;MACR,IAAID,CAAC,GAAG,CAAC,EAAE,IAAI,CAAClB,KAAK,CAAC,CAAC;MACvB,IAAI,CAACR,KAAK,CAAC2B,IAAI,CAAC;MAChB,IAAID,CAAC,GAAGD,GAAG,GAAG,CAAC,IAAI,IAAI,CAACf,wBAAwB,CAACoB,QAAQ,CAAC,EAAE;QAC1D,IAAI,CAAC/C,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE2C,CAAC,CAAC;MAC3B;IACF;EACF;EAEA,IAAI,CAAC3C,KAAK,CAAC+C,QAAQ,CAAC;AACtB;AAEO,SAASO,aAAaA,CAAgBxD,IAAqB,EAAE;EAClE,IAAI,CAACgB,IAAI,CAAC,IAAIhB,IAAI,CAACyD,OAAO,IAAIzD,IAAI,CAAC0D,KAAK,EAAE,CAAC;AAC7C;AAEO,SAASC,cAAcA,CAAgB3D,IAAsB,EAAE;EACpE,IAAI,CAACgB,IAAI,CAAChB,IAAI,CAACM,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC;AAC1C;AAEO,SAASsD,WAAWA,CAAA,EAAgB;EACzC,IAAI,CAAC5C,IAAI,CAAC,MAAM,CAAC;AACnB;AAEO,SAAS6C,cAAcA,CAAgB7D,IAAsB,EAAE;EACpE,MAAM8D,GAAG,GAAG,IAAI,CAACC,cAAc,CAAC/D,IAAI,CAAC;EACrC,MAAMgE,IAAI,GAAG,IAAI,CAACd,MAAM,CAACe,WAAW;EACpC,MAAM3D,KAAK,GAAGN,IAAI,CAACM,KAAK;EACxB,MAAM4D,GAAG,GAAG5D,KAAK,GAAG,EAAE;EACtB,IAAI0D,IAAI,CAACG,OAAO,EAAE;IAChB,IAAI,CAACC,MAAM,CAACC,MAAK,CAAC/D,KAAK,EAAE0D,IAAI,CAAC,EAAE1D,KAAK,CAAC;EACxC,CAAC,MAAM,IAAIwD,GAAG,IAAI,IAAI,EAAE;IACtB,IAAI,CAACM,MAAM,CAACF,GAAG,EAAE5D,KAAK,CAAC;EACzB,CAAC,MAAM,IAAI,IAAI,CAAC4C,MAAM,CAACoB,QAAQ,EAAE;IAC/B,IAAI,CAACF,MAAM,CAACN,GAAG,CAACtC,MAAM,GAAG0C,GAAG,CAAC1C,MAAM,GAAGsC,GAAG,GAAGI,GAAG,EAAE5D,KAAK,CAAC;EACzD,CAAC,MAAM;IACL,IAAI,CAAC8D,MAAM,CAACN,GAAG,EAAExD,KAAK,CAAC;EACzB;AACF;AAEO,SAASiE,aAAaA,CAAgBvE,IAAqB,EAAE;EAClE,MAAM8D,GAAG,GAAG,IAAI,CAACC,cAAc,CAAC/D,IAAI,CAAC;EACrC,IAAI,CAAC,IAAI,CAACkD,MAAM,CAACoB,QAAQ,IAAIR,GAAG,KAAKU,SAAS,EAAE;IAC9C,IAAI,CAACtE,KAAK,CAAC4D,GAAG,CAAC;IACf;EACF;EAEA,MAAMW,GAAG,GAAGJ,MAAK,CAACrE,IAAI,CAACM,KAAK,EAAE,IAAI,CAAC4C,MAAM,CAACe,WAAW,CAAC;EAEtD,IAAI,CAAC/D,KAAK,CAACuE,GAAG,CAAC;AACjB;AAEO,SAASC,aAAaA,CAAgB1E,IAAqB,EAAE;EAClE,MAAM8D,GAAG,GAAG,IAAI,CAACC,cAAc,CAAC/D,IAAI,CAAC;EACrC,IAAI,CAAC,IAAI,CAACkD,MAAM,CAACoB,QAAQ,IAAIR,GAAG,KAAKU,SAAS,EAAE;IAC9C,IAAI,CAACxD,IAAI,CAAC8C,GAAG,CAAC;IACd;EACF;EACA,IAAI,CAAC9C,IAAI,CAAChB,IAAI,CAACM,KAAK,GAAG,GAAG,CAAC;AAC7B;AAGA,MAAMqE,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD,SAASC,cAAcA,CAAA,EAAgB;EAC5C,MAAM;IAAEC;EAAW,CAAC,GAAG,IAAI,CAAC5B,MAAM;EAElC,IAAIyB,kBAAkB,CAACI,GAAG,CAACD,UAAU,CAAC,EAAE;IACtC,IAAI,CAAC5E,KAAK,CAAC4E,UAAU,CAAC;EACxB,CAAC,MAAM;IACL,MAAME,mBAAmB,GAAG3B,IAAI,CAACC,SAAS,CAACwB,UAAU,CAAC;IACtD,MAAMG,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACR,kBAAkB,EAAES,CAAC,IAAI/B,IAAI,CAACC,SAAS,CAAC8B,CAAC,CAAC,CAAC;IAC1E,MAAM,IAAIhC,KAAK,CACb,mDAAmD,GACjD,GAAG6B,WAAW,CAACI,IAAI,CAAC,IAAI,CAAC,KAAKL,mBAAmB,qBACrD,CAAC;EACH;AACF;AAGO,SAASM,uBAAuBA,CAErCtF,IAA+B,EAC/B;EACA,IAAI,CAACmB,KAAK,CAACnB,IAAI,CAACuF,UAAU,CAAC;AAC7B;AAEO,SAASC,oBAAoBA,CAElCxF,IAA4B,EAC5B;EACA,IAAI,CAACmB,KAAK,CAACnB,IAAI,CAACyF,MAAM,CAAC;AACzB;AAEO,SAASC,6BAA6BA,CAAA,EAAgB;EAC3D,IAAI,CAACxF,SAAK,GAAI,CAAC;AACjB","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/flow.js":{"lineLengths":[13,0,46,13,3,46,50,68,54,36,66,60,42,44,38,52,46,44,42,46,50,42,46,42,50,40,44,40,44,40,52,56,46,46,46,52,102,58,64,50,62,56,63,19,20,34,3,3,52,52,56,46,56,48,60,32,62,58,63,19,20,33,3,3,52,52,48,50,30,40,48,38,99,52,50,28,48,38,30,33,39,41,36,7,29,13,7,30,19,1,36,37,21,21,1,34,23,1,45,43,1,38,20,1,37,44,25,17,3,21,15,27,1,40,44,25,17,3,24,15,22,52,23,17,31,3,19,1,30,21,22,1,34,21,22,21,25,21,1,33,23,15,34,1,30,23,15,22,15,22,15,24,1,37,23,15,22,21,23,34,1,33,23,15,23,1,42,44,25,17,3,24,1,40,44,25,17,3,19,15,22,37,19,1,41,23,15,22,15,21,25,17,3,41,1,44,23,15,49,1,32,9,7,8,11,20,15,17,19,1,59,24,20,23,20,23,3,18,1,34,9,11,11,21,19,20,33,26,22,3,31,25,22,3,19,21,1,32,9,16,11,50,23,1,31,9,16,11,49,23,1,31,9,16,11,49,23,1,31,41,23,1,36,9,6,11,17,21,1,47,25,18,21,18,27,21,1,34,36,1,33,36,1,33,36,1,38,25,36,23,47,10,24,33,19,38,19,5,24,22,19,24,19,30,5,21,3,1,33,21,1,47,34,21,18,22,23,17,41,42,25,19,5,3,30,18,29,25,19,5,22,26,3,21,53,177,23,10,17,21,3,15,30,1,34,24,40,18,23,17,3,34,1,33,22,40,1,30,20,22,34,71,17,25,17,33,3,37,39,70,19,26,19,34,5,82,19,30,19,38,5,3,15,24,1,26,21,87,21,26,25,34,25,5,3,1,37,25,15,27,1,40,15,42,15,1,40,21,25,73,17,25,17,33,3,15,24,1,43,65,1,32,21,1,32,21,1,39,21,34,1,33,22,1,33,22,1,31,20,1,36,21,29,21,1,37,22,15,28,1,26,20,15,22,34,15,21,15,25,19,1,39,21,15,50,65,29,23,3,34,1,43,21,30,21,1,30,23,23,19,27,3,21,17,23,17,29,3,1,27,22,15,20,15,22,34,23,23,17,31,3,22,17,23,17,30,3,19,1,37,19,21,10,24,3,126,21,19,17,91,41,14,47,27,21,7,7,17,3,21,18,22,23,21,5,18,3,19,21,10,24,3,1,39,20,24,17,3,21,21,22,21,21,40,21,23,17,3,25,1,39,20,24,17,3,25,1,34,20,24,17,3,23,21,16,24,23,17,3,23,21,21,15,25,1,35,19,23,17,3,20,24,17,3,51,25,17,3,23,23,40,21,23,17,3,25,1,41,20,28,1,40,33,21,22,1,33,22,1,39,15,42,15,1,36,64,1,35,21,30,34,21,1,25,29,23,10,23,3,1,31,20,1,34,36,21,29,21,1,42,30,22,21,3,21,29,21,1,0,32,0],"data":{"version":3,"names":["_t","require","_modules","_index","_types2","isDeclareExportDeclaration","isStatement","AnyTypeAnnotation","word","ArrayTypeAnnotation","node","print","elementType","token","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","value","NullLiteralTypeAnnotation","DeclareClass","parent","space","_interfaceish","DeclareFunction","id","typeAnnotation","predicate","semicolon","InferredPredicate","DeclaredPredicate","DeclareInterface","InterfaceDeclaration","DeclareModule","body","DeclareModuleExports","DeclareTypeAlias","TypeAlias","DeclareOpaqueType","OpaqueType","DeclareVariable","DeclareExportDeclaration","default","FlowExportDeclaration","call","DeclareExportAllDeclaration","ExportAllDeclaration","EnumDeclaration","enumExplicitType","context","name","hasExplicitType","enumBody","members","indent","newline","member","hasUnknownMembers","dedent","EnumBooleanBody","explicitType","EnumNumberBody","EnumStringBody","EnumSymbolBody","EnumDefaultedMember","enumInitializedMember","init","EnumBooleanMember","EnumNumberMember","EnumStringMember","declaration","declar","specifiers","length","printList","source","ExistsTypeAnnotation","FunctionTypeAnnotation","typeParameters","this","params","rest","type","method","returnType","FunctionTypeParam","optional","InterfaceExtends","_node$extends","extends","_node$mixins","_node$implements","mixins","implements","_variance","_node$variance","kind","variance","andSeparator","occurrenceCount","InterfaceTypeAnnotation","_node$extends2","IntersectionTypeAnnotation","printJoin","types","undefined","MixedTypeAnnotation","EmptyTypeAnnotation","NullableTypeAnnotation","NumberTypeAnnotation","StringTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","argument","right","TypeAnnotation","tokenContext","TokenContext","arrowFlowReturnType","TypeParameterInstantiation","TypeParameter","bound","supertype","impltype","ObjectTypeAnnotation","exact","props","properties","callProperties","indexers","internalSlots","addNewlines","leading","inexact","ObjectTypeInternalSlot","static","ObjectTypeCallProperty","ObjectTypeIndexer","key","ObjectTypeProperty","proto","ObjectTypeSpreadProperty","QualifiedTypeIdentifier","qualification","SymbolTypeAnnotation","orSeparator","UnionTypeAnnotation","TypeCastExpression","expression","Variance","VoidTypeAnnotation","IndexedAccessType","objectType","indexType","OptionalIndexedAccessType"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/flow.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport { isDeclareExportDeclaration, isStatement } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { ExportAllDeclaration } from \"./modules.ts\";\nimport { TokenContext } from \"../node/index.ts\";\n\nexport function AnyTypeAnnotation(this: Printer) {\n  this.word(\"any\");\n}\n\nexport function ArrayTypeAnnotation(\n  this: Printer,\n  node: t.ArrayTypeAnnotation,\n) {\n  this.print(node.elementType, true);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nexport function BooleanTypeAnnotation(this: Printer) {\n  this.word(\"boolean\");\n}\n\nexport function BooleanLiteralTypeAnnotation(\n  this: Printer,\n  node: t.BooleanLiteralTypeAnnotation,\n) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nexport function NullLiteralTypeAnnotation(this: Printer) {\n  this.word(\"null\");\n}\n\nexport function DeclareClass(\n  this: Printer,\n  node: t.DeclareClass,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"class\");\n  this.space();\n  this._interfaceish(node);\n}\n\nexport function DeclareFunction(\n  this: Printer,\n  node: t.DeclareFunction,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"function\");\n  this.space();\n  this.print(node.id);\n  // @ts-ignore(Babel 7 vs Babel 8) TODO(Babel 8) Remove this comment, since we'll remove the Noop node\n  this.print(node.id.typeAnnotation.typeAnnotation);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate);\n  }\n\n  this.semicolon();\n}\n\nexport function InferredPredicate(this: Printer) {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nexport function DeclaredPredicate(this: Printer, node: t.DeclaredPredicate) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value);\n  this.token(\")\");\n}\n\nexport function DeclareInterface(this: Printer, node: t.DeclareInterface) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nexport function DeclareModule(this: Printer, node: t.DeclareModule) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id);\n  this.space();\n  this.print(node.body);\n}\n\nexport function DeclareModuleExports(\n  this: Printer,\n  node: t.DeclareModuleExports,\n) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation);\n}\n\nexport function DeclareTypeAlias(this: Printer, node: t.DeclareTypeAlias) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nexport function DeclareOpaqueType(\n  this: Printer,\n  node: t.DeclareOpaqueType,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.OpaqueType(node);\n}\n\nexport function DeclareVariable(\n  this: Printer,\n  node: t.DeclareVariable,\n  parent: t.Node,\n) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"var\");\n  this.space();\n  this.print(node.id);\n  this.print(node.id.typeAnnotation);\n  this.semicolon();\n}\n\nexport function DeclareExportDeclaration(\n  this: Printer,\n  node: t.DeclareExportDeclaration,\n) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.call(this, node);\n}\n\nexport function DeclareExportAllDeclaration(\n  this: Printer,\n  node: t.DeclareExportAllDeclaration,\n) {\n  this.word(\"declare\");\n  this.space();\n  ExportAllDeclaration.call(this, node);\n}\n\nexport function EnumDeclaration(this: Printer, node: t.EnumDeclaration) {\n  const { id, body } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id);\n  this.print(body);\n}\n\nfunction enumExplicitType(\n  context: Printer,\n  name: string,\n  hasExplicitType: boolean,\n) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n  context.space();\n}\n\nfunction enumBody(context: Printer, node: t.EnumBody) {\n  const { members } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n  for (const member of members) {\n    context.print(member);\n    context.newline();\n  }\n  if (node.hasUnknownMembers) {\n    context.token(\"...\");\n    context.newline();\n  }\n  context.dedent();\n  context.token(\"}\");\n}\n\nexport function EnumBooleanBody(this: Printer, node: t.EnumBooleanBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumNumberBody(this: Printer, node: t.EnumNumberBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumStringBody(this: Printer, node: t.EnumStringBody) {\n  const { explicitType } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nexport function EnumSymbolBody(this: Printer, node: t.EnumSymbolBody) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nexport function EnumDefaultedMember(\n  this: Printer,\n  node: t.EnumDefaultedMember,\n) {\n  const { id } = node;\n  this.print(id);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(\n  context: Printer,\n  node: t.EnumBooleanMember | t.EnumNumberMember | t.EnumStringMember,\n) {\n  context.print(node.id);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(node.init);\n  context.token(\",\");\n}\n\nexport function EnumBooleanMember(this: Printer, node: t.EnumBooleanMember) {\n  enumInitializedMember(this, node);\n}\n\nexport function EnumNumberMember(this: Printer, node: t.EnumNumberMember) {\n  enumInitializedMember(this, node);\n}\n\nexport function EnumStringMember(this: Printer, node: t.EnumStringMember) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(\n  this: Printer,\n  node: t.DeclareExportDeclaration,\n) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers);\n      this.space();\n    }\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source);\n    }\n\n    this.semicolon();\n  }\n}\n\nexport function ExistsTypeAnnotation(this: Printer) {\n  this.token(\"*\");\n}\n\nexport function FunctionTypeAnnotation(\n  this: Printer,\n  node: t.FunctionTypeAnnotation,\n  parent?: t.Node,\n) {\n  this.print(node.typeParameters);\n  this.token(\"(\");\n\n  if (node.this) {\n    this.word(\"this\");\n    this.token(\":\");\n    this.space();\n    this.print(node.this.typeAnnotation);\n    if (node.params.length || node.rest) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n\n  this.printList(node.params);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n    this.token(\"...\");\n    this.print(node.rest);\n  }\n\n  this.token(\")\");\n\n  // this node type is overloaded, not sure why but it makes it EXTREMELY annoying\n\n  const type = parent?.type;\n  if (\n    type != null &&\n    (type === \"ObjectTypeCallProperty\" ||\n      type === \"ObjectTypeInternalSlot\" ||\n      type === \"DeclareFunction\" ||\n      (type === \"ObjectTypeProperty\" && parent.method))\n  ) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType);\n}\n\nexport function FunctionTypeParam(this: Printer, node: t.FunctionTypeParam) {\n  this.print(node.name);\n  if (node.optional) this.token(\"?\");\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.typeAnnotation);\n}\n\nexport function InterfaceExtends(this: Printer, node: t.InterfaceExtends) {\n  this.print(node.id);\n  this.print(node.typeParameters, true);\n}\n\nexport {\n  InterfaceExtends as ClassImplements,\n  InterfaceExtends as GenericTypeAnnotation,\n};\n\nexport function _interfaceish(\n  this: Printer,\n  node: t.InterfaceDeclaration | t.DeclareInterface | t.DeclareClass,\n) {\n  this.print(node.id);\n  this.print(node.typeParameters);\n  if (node.extends?.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends);\n  }\n  if (node.type === \"DeclareClass\") {\n    if (node.mixins?.length) {\n      this.space();\n      this.word(\"mixins\");\n      this.space();\n      this.printList(node.mixins);\n    }\n    if (node.implements?.length) {\n      this.space();\n      this.word(\"implements\");\n      this.space();\n      this.printList(node.implements);\n    }\n  }\n  this.space();\n  this.print(node.body);\n}\n\nexport function _variance(\n  this: Printer,\n  node:\n    | t.TypeParameter\n    | t.ObjectTypeIndexer\n    | t.ObjectTypeProperty\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty,\n) {\n  const kind = node.variance?.kind;\n  if (kind != null) {\n    if (kind === \"plus\") {\n      this.token(\"+\");\n    } else if (kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nexport function InterfaceDeclaration(\n  this: Printer,\n  node: t.InterfaceDeclaration | t.DeclareInterface,\n) {\n  this.word(\"interface\");\n  this.space();\n  this._interfaceish(node);\n}\n\nfunction andSeparator(this: Printer, occurrenceCount: number) {\n  this.space();\n  this.token(\"&\", false, occurrenceCount);\n  this.space();\n}\n\nexport function InterfaceTypeAnnotation(\n  this: Printer,\n  node: t.InterfaceTypeAnnotation,\n) {\n  this.word(\"interface\");\n  if (node.extends?.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends);\n  }\n  this.space();\n  this.print(node.body);\n}\n\nexport function IntersectionTypeAnnotation(\n  this: Printer,\n  node: t.IntersectionTypeAnnotation,\n) {\n  this.printJoin(node.types, undefined, undefined, andSeparator);\n}\n\nexport function MixedTypeAnnotation(this: Printer) {\n  this.word(\"mixed\");\n}\n\nexport function EmptyTypeAnnotation(this: Printer) {\n  this.word(\"empty\");\n}\n\nexport function NullableTypeAnnotation(\n  this: Printer,\n  node: t.NullableTypeAnnotation,\n) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation);\n}\n\nexport {\n  NumericLiteral as NumberLiteralTypeAnnotation,\n  StringLiteral as StringLiteralTypeAnnotation,\n} from \"./types.ts\";\n\nexport function NumberTypeAnnotation(this: Printer) {\n  this.word(\"number\");\n}\n\nexport function StringTypeAnnotation(this: Printer) {\n  this.word(\"string\");\n}\n\nexport function ThisTypeAnnotation(this: Printer) {\n  this.word(\"this\");\n}\n\nexport function TupleTypeAnnotation(\n  this: Printer,\n  node: t.TupleTypeAnnotation,\n) {\n  this.token(\"[\");\n  this.printList(node.types);\n  this.token(\"]\");\n}\n\nexport function TypeofTypeAnnotation(\n  this: Printer,\n  node: t.TypeofTypeAnnotation,\n) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument);\n}\n\nexport function TypeAlias(\n  this: Printer,\n  node: t.TypeAlias | t.DeclareTypeAlias,\n) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id);\n  this.print(node.typeParameters);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right);\n  this.semicolon();\n}\n\nexport function TypeAnnotation(\n  this: Printer,\n  node: t.TypeAnnotation,\n  parent: t.Node,\n) {\n  this.token(\":\");\n  this.space();\n  if (parent.type === \"ArrowFunctionExpression\") {\n    this.tokenContext |= TokenContext.arrowFlowReturnType;\n  } else if (\n    // @ts-expect-error todo(flow->ts) can this be removed? `.optional` looks to be not existing property\n    node.optional\n  ) {\n    this.token(\"?\");\n  }\n  this.print(node.typeAnnotation);\n}\n\nexport function TypeParameterInstantiation(\n  this: Printer,\n  node: t.TypeParameterInstantiation,\n): void {\n  this.token(\"<\");\n  this.printList(node.params);\n  this.token(\">\");\n}\n\nexport { TypeParameterInstantiation as TypeParameterDeclaration };\n\nexport function TypeParameter(this: Printer, node: t.TypeParameter) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default);\n  }\n}\n\nexport function OpaqueType(\n  this: Printer,\n  node: t.OpaqueType | t.DeclareOpaqueType,\n) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id);\n  this.print(node.typeParameters);\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype);\n  }\n  this.semicolon();\n}\n\nexport function ObjectTypeAnnotation(\n  this: Printer,\n  node: t.ObjectTypeAnnotation,\n) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  // TODO: remove the array fallbacks and instead enforce the types to require an array\n  const props = [\n    ...node.properties,\n    ...(node.callProperties || []),\n    ...(node.indexers || []),\n    ...(node.internalSlots || []),\n  ];\n\n  if (props.length) {\n    this.newline();\n\n    this.space();\n\n    this.printJoin(\n      props,\n      true,\n      true,\n      undefined,\n      undefined,\n      function addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n      () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      },\n    );\n\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n    if (props.length) {\n      this.newline();\n    }\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nexport function ObjectTypeInternalSlot(\n  this: Printer,\n  node: t.ObjectTypeInternalSlot,\n) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.value);\n}\n\nexport function ObjectTypeCallProperty(\n  this: Printer,\n  node: t.ObjectTypeCallProperty,\n) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this.print(node.value);\n}\n\nexport function ObjectTypeIndexer(this: Printer, node: t.ObjectTypeIndexer) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  this._variance(node);\n  this.token(\"[\");\n  if (node.id) {\n    this.print(node.id);\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.key);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value);\n}\n\nexport function ObjectTypeProperty(this: Printer, node: t.ObjectTypeProperty) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  if (node.kind === \"get\" || node.kind === \"set\") {\n    this.word(node.kind);\n    this.space();\n  }\n  this._variance(node);\n  this.print(node.key);\n  if (node.optional) this.token(\"?\");\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n  this.print(node.value);\n}\n\nexport function ObjectTypeSpreadProperty(\n  this: Printer,\n  node: t.ObjectTypeSpreadProperty,\n) {\n  this.token(\"...\");\n  this.print(node.argument);\n}\n\nexport function QualifiedTypeIdentifier(\n  this: Printer,\n  node: t.QualifiedTypeIdentifier,\n) {\n  this.print(node.qualification);\n  this.token(\".\");\n  this.print(node.id);\n}\n\nexport function SymbolTypeAnnotation(this: Printer) {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator(this: Printer, occurrenceCount: number) {\n  this.space();\n  this.token(\"|\", false, occurrenceCount);\n  this.space();\n}\n\nexport function UnionTypeAnnotation(\n  this: Printer,\n  node: t.UnionTypeAnnotation,\n) {\n  this.printJoin(node.types, undefined, undefined, orSeparator);\n}\n\nexport function TypeCastExpression(this: Printer, node: t.TypeCastExpression) {\n  this.token(\"(\");\n  this.print(node.expression);\n  this.print(node.typeAnnotation);\n  this.token(\")\");\n}\n\nexport function Variance(this: Printer, node: t.Variance) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nexport function VoidTypeAnnotation(this: Printer) {\n  this.word(\"void\");\n}\n\nexport function IndexedAccessType(this: Printer, node: t.IndexedAccessType) {\n  this.print(node.objectType, true);\n  this.token(\"[\");\n  this.print(node.indexType);\n  this.token(\"]\");\n}\n\nexport function OptionalIndexedAccessType(\n  this: Printer,\n  node: t.OptionalIndexedAccessType,\n) {\n  this.print(node.objectType);\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n  this.token(\"[\");\n  this.print(node.indexType);\n  this.token(\"]\");\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/base.js":{"lineLengths":[13,0,46,13,3,40,30,44,20,52,34,26,21,21,41,3,27,1,24,23,35,28,104,22,30,45,60,131,28,5,3,32,1,31,24,22,37,106,22,31,45,55,133,28,5,3,38,9,24,1,26,25,19,1,55,55,33,40,51,20,11,3,9,9,11,44,29,51,29,10,135,3,1,37,32,24,1,28,19,24,19,42,21,3,1,0,32,0],"data":{"version":3,"names":["File","node","program","print","interpreter","Program","_node$directives","noIndentInnerCommentsHere","printInnerComments","directivesLen","directives","length","_node$directives$trai","newline","body","printSequence","undefined","trailingComments","BlockStatement","_node$directives2","token","exit","enterDelimited","_node$directives$trai2","rightBrace","Directive","value","semicolon","unescapedSingleQuoteRE","unescapedDoubleQuoteRE","DirectiveLiteral","raw","getPossibleRaw","format","minified","test","Error","InterpreterDirective","Placeholder","name","expectedNode"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/base.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport type * as t from \"@babel/types\";\n\nexport function File(this: Printer, node: t.File) {\n  if (node.program) {\n    // Print this here to ensure that Program node 'leadingComments' still\n    // get printed after the hashbang.\n    this.print(node.program.interpreter);\n  }\n\n  this.print(node.program);\n}\n\nexport function Program(this: Printer, node: t.Program) {\n  // An empty Program doesn't have any inner tokens, so\n  // we must explicitly print its inner comments.\n  this.noIndentInnerCommentsHere();\n  this.printInnerComments();\n\n  const directivesLen = node.directives?.length;\n  if (directivesLen) {\n    const newline = node.body.length ? 2 : 1;\n    this.printSequence(node.directives, undefined, newline);\n    if (!node.directives[directivesLen - 1].trailingComments?.length) {\n      this.newline(newline);\n    }\n  }\n\n  this.printSequence(node.body);\n}\n\nexport function BlockStatement(this: Printer, node: t.BlockStatement) {\n  this.token(\"{\");\n  const exit = this.enterDelimited();\n\n  const directivesLen = node.directives?.length;\n  if (directivesLen) {\n    const newline = node.body.length ? 2 : 1;\n    this.printSequence(node.directives, true, newline);\n    if (!node.directives[directivesLen - 1].trailingComments?.length) {\n      this.newline(newline);\n    }\n  }\n\n  this.printSequence(node.body, true);\n\n  exit();\n  this.rightBrace(node);\n}\n\nexport function Directive(this: Printer, node: t.Directive) {\n  this.print(node.value);\n  this.semicolon();\n}\n\n// These regexes match an even number of \\ followed by a quote\nconst unescapedSingleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*'/;\nconst unescapedDoubleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*\"/;\n\nexport function DirectiveLiteral(this: Printer, node: t.DirectiveLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const { value } = node;\n\n  // NOTE: In directives we can't change escapings,\n  // because they change the behavior.\n  // e.g. \"us\\x65 strict\" (\\x65 is e) is not a \"use strict\" directive.\n\n  if (!unescapedDoubleQuoteRE.test(value)) {\n    this.token(`\"${value}\"`);\n  } else if (!unescapedSingleQuoteRE.test(value)) {\n    this.token(`'${value}'`);\n  } else {\n    throw new Error(\n      \"Malformed AST: it is not possible to print a directive containing\" +\n        \" both unescaped single and double quotes.\",\n    );\n  }\n}\n\nexport function InterpreterDirective(\n  this: Printer,\n  node: t.InterpreterDirective,\n) {\n  this.token(`#!${node.value}`);\n  this.newline(1, true);\n}\n\nexport function Placeholder(this: Printer, node: t.Placeholder) {\n  this.token(\"%%\");\n  this.print(node.name);\n  this.token(\"%%\");\n\n  if (node.expectedNode === \"Statement\") {\n    this.semicolon();\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/jsx.js":{"lineLengths":[13,0,46,13,3,36,46,48,32,48,56,34,38,50,46,46,48,48,40,26,29,24,19,23,27,3,1,30,23,1,34,29,21,24,1,36,26,21,28,1,35,22,20,28,24,1,39,22,30,24,1,31,22,20,30,24,1,24,40,26,26,10,33,3,1,27,35,19,31,16,38,22,3,16,34,1,27,15,1,34,21,24,3,29,37,5,36,3,35,17,74,3,25,17,23,3,21,1,34,21,21,24,21,1,31,28,1,28,35,16,38,22,3,16,35,1,31,21,21,1,31,19,21,1,0,31,0],"data":{"version":3,"names":["JSXAttribute","node","print","name","value","token","JSXIdentifier","word","JSXNamespacedName","namespace","JSXMemberExpression","object","property","JSXSpreadAttribute","argument","rightBrace","JSXExpressionContainer","expression","JSXSpreadChild","JSXText","raw","getPossibleRaw","undefined","JSXElement","open","openingElement","selfClosing","indent","child","children","dedent","closingElement","spaceSeparator","space","JSXOpeningElement","typeArguments","typeParameters","attributes","length","printJoin","JSXClosingElement","JSXEmptyExpression","printInnerComments","JSXFragment","openingFragment","closingFragment","JSXOpeningFragment","JSXClosingFragment"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/jsx.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport type * as t from \"@babel/types\";\n\nexport function JSXAttribute(this: Printer, node: t.JSXAttribute) {\n  this.print(node.name);\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value);\n  }\n}\n\nexport function JSXIdentifier(this: Printer, node: t.JSXIdentifier) {\n  this.word(node.name);\n}\n\nexport function JSXNamespacedName(this: Printer, node: t.JSXNamespacedName) {\n  this.print(node.namespace);\n  this.token(\":\");\n  this.print(node.name);\n}\n\nexport function JSXMemberExpression(\n  this: Printer,\n  node: t.JSXMemberExpression,\n) {\n  this.print(node.object);\n  this.token(\".\");\n  this.print(node.property);\n}\n\nexport function JSXSpreadAttribute(this: Printer, node: t.JSXSpreadAttribute) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument);\n  this.rightBrace(node);\n}\n\nexport function JSXExpressionContainer(\n  this: Printer,\n  node: t.JSXExpressionContainer,\n) {\n  this.token(\"{\");\n  this.print(node.expression);\n  this.rightBrace(node);\n}\n\nexport function JSXSpreadChild(this: Printer, node: t.JSXSpreadChild) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression);\n  this.rightBrace(node);\n}\n\nexport function JSXText(this: Printer, node: t.JSXText) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw !== undefined) {\n    this.token(raw, true);\n  } else {\n    this.token(node.value, true);\n  }\n}\n\nexport function JSXElement(this: Printer, node: t.JSXElement) {\n  const open = node.openingElement;\n  this.print(open);\n  if (open.selfClosing) return;\n\n  this.indent();\n  for (const child of node.children) {\n    this.print(child);\n  }\n  this.dedent();\n\n  this.print(node.closingElement);\n}\n\nfunction spaceSeparator(this: Printer) {\n  this.space();\n}\n\nexport function JSXOpeningElement(this: Printer, node: t.JSXOpeningElement) {\n  this.token(\"<\");\n  this.print(node.name);\n  if (process.env.BABEL_8_BREAKING) {\n    //@ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    this.print(node.typeArguments);\n  } else {\n    if (node.typeArguments) {\n      this.print(node.typeArguments); // Flow AST\n    }\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    this.print(node.typeParameters); // Legacy TS AST\n  }\n\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, undefined, undefined, spaceSeparator);\n  }\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/\");\n  }\n  this.token(\">\");\n}\n\nexport function JSXClosingElement(this: Printer, node: t.JSXClosingElement) {\n  this.token(\"<\");\n  this.token(\"/\");\n  this.print(node.name);\n  this.token(\">\");\n}\n\nexport function JSXEmptyExpression(this: Printer) {\n  // This node is empty, so forcefully print its inner comments.\n  this.printInnerComments();\n}\n\nexport function JSXFragment(this: Printer, node: t.JSXFragment) {\n  this.print(node.openingFragment);\n\n  this.indent();\n  for (const child of node.children) {\n    this.print(child);\n  }\n  this.dedent();\n\n  this.print(node.closingFragment);\n}\n\nexport function JSXOpeningFragment(this: Printer) {\n  this.token(\"<\");\n  this.token(\">\");\n}\n\nexport function JSXClosingFragment(this: Printer) {\n  this.token(\"</\");\n  this.token(\">\");\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/typescript.js":{"lineLengths":[13,0,46,13,3,36,34,74,42,44,64,76,46,74,46,46,42,32,46,36,48,62,40,62,36,44,50,34,62,42,56,48,48,38,36,46,38,50,48,68,40,50,38,42,42,40,50,50,50,42,32,42,42,54,32,34,56,44,42,38,40,42,105,42,34,42,48,34,44,38,66,76,66,74,41,135,15,40,34,1,53,21,101,64,128,92,3,54,21,1,32,19,23,17,3,16,20,17,3,17,21,17,3,23,24,17,25,17,32,3,21,17,23,17,29,3,1,36,27,34,17,3,22,26,17,3,30,1,42,21,25,17,3,35,19,1,32,30,19,1,32,24,21,25,1,43,45,49,1,60,54,24,11,3,47,23,54,24,3,1,48,19,15,45,49,1,36,9,12,11,17,26,17,3,41,34,49,1,44,22,23,3,23,22,23,3,22,23,3,1,34,9,8,11,41,20,17,3,41,45,49,1,33,9,13,20,11,17,24,17,3,17,26,17,3,21,41,34,49,1,25,19,1,28,22,1,29,23,1,28,22,1,28,22,1,29,23,1,28,22,1,28,22,1,26,20,1,31,25,1,26,20,1,27,21,1,31,25,1,23,20,1,31,46,1,34,22,26,17,3,19,15,46,1,49,9,18,11,37,29,21,36,15,41,25,1,32,44,45,28,1,32,21,25,17,3,33,28,17,20,17,51,3,1,28,22,15,28,44,22,30,3,1,30,74,1,28,37,21,21,1,28,21,72,21,1,31,34,21,1,27,20,34,1,35,25,40,21,15,31,1,28,50,1,35,50,1,61,24,26,100,24,23,3,68,17,47,17,5,1,34,29,15,23,15,31,15,21,15,28,15,21,15,29,1,28,21,33,1,36,21,34,21,1,31,27,15,34,1,36,36,21,29,21,1,29,9,13,13,13,18,11,22,37,15,17,37,26,17,3,21,3,39,3,15,18,15,3,46,3,17,17,20,17,25,3,21,17,37,23,3,23,23,17,31,3,15,9,22,1,38,21,20,3,1,38,40,1,30,27,1,34,30,33,1,39,9,12,7,19,21,8,11,16,25,17,3,25,15,17,29,42,17,25,17,28,3,15,19,1,32,71,1,39,9,12,7,19,18,11,16,25,17,3,20,15,17,29,15,21,15,29,19,1,33,9,9,15,18,11,31,15,60,15,29,1,32,9,19,14,11,21,29,21,15,25,1,42,30,3,36,3,1,34,9,12,19,6,11,16,25,17,3,16,23,17,3,20,15,17,15,3,32,3,1,27,33,30,153,5,1,29,9,7,15,11,17,20,17,23,17,28,3,1,36,9,12,7,8,11,16,25,17,3,3,23,89,19,5,19,21,23,13,5,25,49,25,26,23,5,17,21,3,1,30,69,1,29,9,13,14,11,11,22,21,23,16,23,24,3,21,18,23,26,3,44,22,30,3,1,42,9,7,19,11,22,24,17,3,22,15,17,15,21,15,30,19,1,42,25,30,21,1,36,30,21,1,35,22,15,21,15,30,19,1,45,22,15,18,15,25,15,22,19,1,48,9,18,11,37,29,21,36,41,25,1,44,62,95,118,20,24,17,3,197,1,41,21,40,7,9,27,1,55,25,33,37,45,3,91,38,31,22,37,37,5,5,40,27,20,3,1,0,38,0],"data":{"version":3,"names":["TSTypeAnnotation","node","parent","token","type","typeAnnotation","space","optional","print","TSTypeParameterInstantiation","printTrailingSeparator","params","length","tokenMap","start","end","find","t","matchesOriginal","shouldPrintTrailingComma","printList","TSTypeParameter","const","word","in","out","name","constraint","default","TSParameterProperty","accessibility","readonly","_param","parameter","TSDeclareFunction","declare","_functionHead","semicolon","TSDeclareMethod","_classMethodHead","TSQualifiedName","left","right","TSCallSignatureDeclaration","tsPrintSignatureDeclarationBase","maybePrintTrailingCommaOrSemicolon","printer","endMatches","TSConstructSignatureDeclaration","TSPropertySignature","tsPrintPropertyOrMethodName","computed","key","TSMethodSignature","kind","TSIndexSignature","static","isStatic","_parameters","parameters","TSAnyKeyword","TSBigIntKeyword","TSUnknownKeyword","TSNumberKeyword","TSObjectKeyword","TSBooleanKeyword","TSStringKeyword","TSSymbolKeyword","TSVoidKeyword","TSUndefinedKeyword","TSNullKeyword","TSNeverKeyword","TSIntrinsicKeyword","TSThisType","TSFunctionType","tsPrintFunctionOrConstructorType","TSConstructorType","abstract","typeParameters","returnType","TSTypeReference","typeArguments","typeName","TSTypePredicate","asserts","parameterName","TSTypeQuery","exprName","TSTypeLiteral","printBraced","printJoin","members","TSArrayType","elementType","TSTupleType","elementTypes","TSOptionalType","TSRestType","TSNamedTupleMember","label","TSUnionType","tsPrintUnionOrIntersectionType","TSIntersectionType","sep","_printer$tokenMap","hasLeadingToken","startMatches","types","undefined","i","TSConditionalType","checkType","extendsType","trueType","falseType","TSInferType","typeParameter","TSParenthesizedType","TSTypeOperator","operator","TSIndexedAccessType","objectType","indexType","TSMappedType","nameType","exit","enterDelimited","tokenIfPlusMinus","self","tok","TSTemplateLiteralType","_printTemplate","TSLiteralType","literal","TSClassImplements","expression","TSInterfaceDeclaration","id","extends","extendz","body","TSInterfaceBody","TSTypeAliasDeclaration","TSTypeExpression","TSTypeAssertion","TSInstantiationExpression","TSEnumDeclaration","isConst","TSEnumBody","call","_this$shouldPrintTrai","TSEnumMember","initializer","TSModuleDeclaration","global","TSModuleBlock","printSequence","TSImportType","argument","qualifier","options","TSImportEqualsDeclaration","moduleReference","isExport","TSExternalModuleReference","TSNonNullExpression","TSExportAssignment","TSNamespaceExportDeclaration","tsPrintClassMemberModifiers","isPrivateField","isPublicField","printModifiersList","override","cb","rightBrace","modifiers","_printer$tokenMap2","modifiersSet","Set","modifier","add","has","value","delete","size"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/typescript.ts"],"sourcesContent":["import type Printer from \"../printer.ts\";\nimport type * as t from \"@babel/types\";\n\nexport function TSTypeAnnotation(\n  this: Printer,\n  node: t.TSTypeAnnotation,\n  parent: t.Node,\n) {\n  // TODO(@nicolo-ribaudo): investigate not including => in the range\n  // of the return type of an arrow function type\n  this.token(\n    (parent.type === \"TSFunctionType\" || parent.type === \"TSConstructorType\") &&\n      (process.env.BABEL_8_BREAKING\n        ? // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n          parent.returnType\n        : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n          parent.typeAnnotation) === node\n      ? \"=>\"\n      : \":\",\n  );\n  this.space();\n  // @ts-expect-error todo(flow->ts) can this be removed? `.optional` looks to be not existing property\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation);\n}\n\nexport function TSTypeParameterInstantiation(\n  this: Printer,\n  node: t.TSTypeParameterInstantiation,\n  parent: t.Node,\n): void {\n  this.token(\"<\");\n\n  let printTrailingSeparator =\n    parent.type === \"ArrowFunctionExpression\" && node.params.length === 1;\n  if (this.tokenMap && node.start != null && node.end != null) {\n    // Only force the trailing comma for pre-existing nodes if they\n    // already had a comma (either because they were multi-param, or\n    // because they had a trailing comma)\n    printTrailingSeparator &&= !!this.tokenMap.find(node, t =>\n      this.tokenMap.matchesOriginal(t, \",\"),\n    );\n    // Preserve the trailing comma if it was there before\n    printTrailingSeparator ||= this.shouldPrintTrailingComma(\">\");\n  }\n\n  this.printList(node.params, printTrailingSeparator);\n  this.token(\">\");\n}\n\nexport { TSTypeParameterInstantiation as TSTypeParameterDeclaration };\n\nexport function TSTypeParameter(this: Printer, node: t.TSTypeParameter) {\n  if (node.const) {\n    this.word(\"const\");\n    this.space();\n  }\n\n  if (node.in) {\n    this.word(\"in\");\n    this.space();\n  }\n\n  if (node.out) {\n    this.word(\"out\");\n    this.space();\n  }\n\n  this.word(\n    !process.env.BABEL_8_BREAKING\n      ? (node.name as unknown as string)\n      : (node.name as unknown as t.Identifier).name,\n  );\n\n  if (node.constraint) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.constraint);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default);\n  }\n}\n\nexport function TSParameterProperty(\n  this: Printer,\n  node: t.TSParameterProperty,\n) {\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this._param(node.parameter);\n}\n\nexport function TSDeclareFunction(\n  this: Printer,\n  node: t.TSDeclareFunction,\n  parent: t.ParentMaps[\"TSDeclareFunction\"],\n) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this._functionHead(node, parent);\n  this.semicolon();\n}\n\nexport function TSDeclareMethod(this: Printer, node: t.TSDeclareMethod) {\n  this._classMethodHead(node);\n  this.semicolon();\n}\n\nexport function TSQualifiedName(this: Printer, node: t.TSQualifiedName) {\n  this.print(node.left);\n  this.token(\".\");\n  this.print(node.right);\n}\n\nexport function TSCallSignatureDeclaration(\n  this: Printer,\n  node: t.TSCallSignatureDeclaration,\n) {\n  this.tsPrintSignatureDeclarationBase(node);\n  maybePrintTrailingCommaOrSemicolon(this, node);\n}\n\nfunction maybePrintTrailingCommaOrSemicolon(printer: Printer, node: t.Node) {\n  if (!printer.tokenMap || !node.start || !node.end) {\n    printer.semicolon();\n    return;\n  }\n\n  if (printer.tokenMap.endMatches(node, \",\")) {\n    printer.token(\",\");\n  } else if (printer.tokenMap.endMatches(node, \";\")) {\n    printer.semicolon();\n  }\n}\n\nexport function TSConstructSignatureDeclaration(\n  this: Printer,\n  node: t.TSConstructSignatureDeclaration,\n) {\n  this.word(\"new\");\n  this.space();\n  this.tsPrintSignatureDeclarationBase(node);\n  maybePrintTrailingCommaOrSemicolon(this, node);\n}\n\nexport function TSPropertySignature(\n  this: Printer,\n  node: t.TSPropertySignature,\n) {\n  const { readonly } = node;\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n  this.tsPrintPropertyOrMethodName(node);\n  this.print(node.typeAnnotation);\n  maybePrintTrailingCommaOrSemicolon(this, node);\n}\n\nexport function tsPrintPropertyOrMethodName(\n  this: Printer,\n  node: t.TSPropertySignature | t.TSMethodSignature,\n) {\n  if (node.computed) {\n    this.token(\"[\");\n  }\n  this.print(node.key);\n  if (node.computed) {\n    this.token(\"]\");\n  }\n  if (node.optional) {\n    this.token(\"?\");\n  }\n}\n\nexport function TSMethodSignature(this: Printer, node: t.TSMethodSignature) {\n  const { kind } = node;\n  if (kind === \"set\" || kind === \"get\") {\n    this.word(kind);\n    this.space();\n  }\n  this.tsPrintPropertyOrMethodName(node);\n  this.tsPrintSignatureDeclarationBase(node);\n  maybePrintTrailingCommaOrSemicolon(this, node);\n}\n\nexport function TSIndexSignature(this: Printer, node: t.TSIndexSignature) {\n  const { readonly, static: isStatic } = node;\n  if (isStatic) {\n    this.word(\"static\");\n    this.space();\n  }\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n  this.token(\"[\");\n  this._parameters(node.parameters, \"]\");\n  this.print(node.typeAnnotation);\n  maybePrintTrailingCommaOrSemicolon(this, node);\n}\n\nexport function TSAnyKeyword(this: Printer) {\n  this.word(\"any\");\n}\nexport function TSBigIntKeyword(this: Printer) {\n  this.word(\"bigint\");\n}\nexport function TSUnknownKeyword(this: Printer) {\n  this.word(\"unknown\");\n}\nexport function TSNumberKeyword(this: Printer) {\n  this.word(\"number\");\n}\nexport function TSObjectKeyword(this: Printer) {\n  this.word(\"object\");\n}\nexport function TSBooleanKeyword(this: Printer) {\n  this.word(\"boolean\");\n}\nexport function TSStringKeyword(this: Printer) {\n  this.word(\"string\");\n}\nexport function TSSymbolKeyword(this: Printer) {\n  this.word(\"symbol\");\n}\nexport function TSVoidKeyword(this: Printer) {\n  this.word(\"void\");\n}\nexport function TSUndefinedKeyword(this: Printer) {\n  this.word(\"undefined\");\n}\nexport function TSNullKeyword(this: Printer) {\n  this.word(\"null\");\n}\nexport function TSNeverKeyword(this: Printer) {\n  this.word(\"never\");\n}\nexport function TSIntrinsicKeyword(this: Printer) {\n  this.word(\"intrinsic\");\n}\n\nexport function TSThisType(this: Printer) {\n  this.word(\"this\");\n}\n\nexport function TSFunctionType(this: Printer, node: t.TSFunctionType) {\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nexport function TSConstructorType(this: Printer, node: t.TSConstructorType) {\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n  this.word(\"new\");\n  this.space();\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nexport function tsPrintFunctionOrConstructorType(\n  this: Printer,\n  node: t.TSFunctionType | t.TSConstructorType,\n) {\n  const { typeParameters } = node;\n  const parameters = process.env.BABEL_8_BREAKING\n    ? // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n      node.params\n    : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n      node.parameters;\n  this.print(typeParameters);\n  this.token(\"(\");\n  this._parameters(parameters, \")\");\n  this.space();\n  const returnType = process.env.BABEL_8_BREAKING\n    ? // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n      node.returnType\n    : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n      node.typeAnnotation;\n  this.print(returnType);\n}\n\nexport function TSTypeReference(this: Printer, node: t.TSTypeReference) {\n  const typeArguments = process.env.BABEL_8_BREAKING\n    ? // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n      node.typeArguments\n    : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n      node.typeParameters;\n  this.print(node.typeName, !!typeArguments);\n  this.print(typeArguments);\n}\n\nexport function TSTypePredicate(this: Printer, node: t.TSTypePredicate) {\n  if (node.asserts) {\n    this.word(\"asserts\");\n    this.space();\n  }\n  this.print(node.parameterName);\n  if (node.typeAnnotation) {\n    this.space();\n    this.word(\"is\");\n    this.space();\n    this.print(node.typeAnnotation.typeAnnotation);\n  }\n}\n\nexport function TSTypeQuery(this: Printer, node: t.TSTypeQuery) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.exprName);\n\n  const typeArguments = process.env.BABEL_8_BREAKING\n    ? //@ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      node.typeArguments\n    : //@ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n      node.typeParameters;\n  if (typeArguments) {\n    this.print(typeArguments);\n  }\n}\n\nexport function TSTypeLiteral(this: Printer, node: t.TSTypeLiteral) {\n  printBraced(this, node, () => this.printJoin(node.members, true, true));\n}\n\nexport function TSArrayType(this: Printer, node: t.TSArrayType) {\n  this.print(node.elementType, true);\n\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nexport function TSTupleType(this: Printer, node: t.TSTupleType) {\n  this.token(\"[\");\n  this.printList(node.elementTypes, this.shouldPrintTrailingComma(\"]\"));\n  this.token(\"]\");\n}\n\nexport function TSOptionalType(this: Printer, node: t.TSOptionalType) {\n  this.print(node.typeAnnotation);\n  this.token(\"?\");\n}\n\nexport function TSRestType(this: Printer, node: t.TSRestType) {\n  this.token(\"...\");\n  this.print(node.typeAnnotation);\n}\n\nexport function TSNamedTupleMember(this: Printer, node: t.TSNamedTupleMember) {\n  this.print(node.label);\n  if (node.optional) this.token(\"?\");\n  this.token(\":\");\n  this.space();\n  this.print(node.elementType);\n}\n\nexport function TSUnionType(this: Printer, node: t.TSUnionType) {\n  tsPrintUnionOrIntersectionType(this, node, \"|\");\n}\n\nexport function TSIntersectionType(this: Printer, node: t.TSIntersectionType) {\n  tsPrintUnionOrIntersectionType(this, node, \"&\");\n}\n\nfunction tsPrintUnionOrIntersectionType(\n  printer: Printer,\n  node: t.TSUnionType | t.TSIntersectionType,\n  sep: \"|\" | \"&\",\n) {\n  let hasLeadingToken = 0;\n  if (printer.tokenMap?.startMatches(node, sep)) {\n    hasLeadingToken = 1;\n    printer.token(sep);\n  }\n\n  printer.printJoin(node.types, undefined, undefined, function (i) {\n    this.space();\n    this.token(sep, null, i + hasLeadingToken);\n    this.space();\n  });\n}\n\nexport function TSConditionalType(this: Printer, node: t.TSConditionalType) {\n  this.print(node.checkType);\n  this.space();\n  this.word(\"extends\");\n  this.space();\n  this.print(node.extendsType);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.trueType);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.falseType);\n}\n\nexport function TSInferType(this: Printer, node: t.TSInferType) {\n  this.word(\"infer\");\n  this.print(node.typeParameter);\n}\n\nexport function TSParenthesizedType(\n  this: Printer,\n  node: t.TSParenthesizedType,\n) {\n  this.token(\"(\");\n  this.print(node.typeAnnotation);\n  this.token(\")\");\n}\n\nexport function TSTypeOperator(this: Printer, node: t.TSTypeOperator) {\n  this.word(node.operator);\n  this.space();\n  this.print(node.typeAnnotation);\n}\n\nexport function TSIndexedAccessType(\n  this: Printer,\n  node: t.TSIndexedAccessType,\n) {\n  this.print(node.objectType, true);\n  this.token(\"[\");\n  this.print(node.indexType);\n  this.token(\"]\");\n}\n\nexport function TSMappedType(this: Printer, node: t.TSMappedType) {\n  const { nameType, optional, readonly, typeAnnotation } = node;\n  this.token(\"{\");\n  const exit = this.enterDelimited();\n  this.space();\n  if (readonly) {\n    tokenIfPlusMinus(this, readonly);\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  if (process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n    this.word(node.key.name);\n  } else {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n    this.word(node.typeParameter.name);\n  }\n\n  this.space();\n  this.word(\"in\");\n  this.space();\n  if (process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST shape\n    this.print(node.constraint);\n  } else {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n    this.print(node.typeParameter.constraint);\n  }\n\n  if (nameType) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(nameType);\n  }\n\n  this.token(\"]\");\n\n  if (optional) {\n    tokenIfPlusMinus(this, optional);\n    this.token(\"?\");\n  }\n\n  if (typeAnnotation) {\n    this.token(\":\");\n    this.space();\n    this.print(typeAnnotation);\n  }\n  this.space();\n  exit();\n  this.token(\"}\");\n}\n\nfunction tokenIfPlusMinus(self: Printer, tok: true | \"+\" | \"-\") {\n  if (tok !== true) {\n    self.token(tok);\n  }\n}\n\nexport function TSTemplateLiteralType(\n  this: Printer,\n  node: t.TSTemplateLiteralType,\n) {\n  this._printTemplate(node, node.types);\n}\n\nexport function TSLiteralType(this: Printer, node: t.TSLiteralType) {\n  this.print(node.literal);\n}\n\nexport function TSClassImplements(\n  this: Printer,\n  // TODO(Babel 8): Just use t.TSClassImplements\n  node: t.Node & {\n    expression: t.TSEntityName;\n    typeArguments?: t.TSTypeParameterInstantiation;\n  },\n) {\n  this.print(node.expression);\n  this.print(node.typeArguments);\n}\n\nexport { TSClassImplements as TSInterfaceHeritage };\n\nexport function TSInterfaceDeclaration(\n  this: Printer,\n  node: t.TSInterfaceDeclaration,\n) {\n  const { declare, id, typeParameters, extends: extendz, body } = node;\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"interface\");\n  this.space();\n  this.print(id);\n  this.print(typeParameters);\n  if (extendz?.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(extendz);\n  }\n  this.space();\n  this.print(body);\n}\n\nexport function TSInterfaceBody(this: Printer, node: t.TSInterfaceBody) {\n  printBraced(this, node, () => this.printJoin(node.body, true, true));\n}\n\nexport function TSTypeAliasDeclaration(\n  this: Printer,\n  node: t.TSTypeAliasDeclaration,\n) {\n  const { declare, id, typeParameters, typeAnnotation } = node;\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n  this.word(\"type\");\n  this.space();\n  this.print(id);\n  this.print(typeParameters);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(typeAnnotation);\n  this.semicolon();\n}\n\nfunction TSTypeExpression(\n  this: Printer,\n  node: t.TSAsExpression | t.TSSatisfiesExpression,\n) {\n  const { type, expression, typeAnnotation } = node;\n  this.print(expression, true);\n  this.space();\n  this.word(type === \"TSAsExpression\" ? \"as\" : \"satisfies\");\n  this.space();\n  this.print(typeAnnotation);\n}\n\nexport {\n  TSTypeExpression as TSAsExpression,\n  TSTypeExpression as TSSatisfiesExpression,\n};\n\nexport function TSTypeAssertion(this: Printer, node: t.TSTypeAssertion) {\n  const { typeAnnotation, expression } = node;\n  this.token(\"<\");\n  this.print(typeAnnotation);\n  this.token(\">\");\n  this.space();\n  this.print(expression);\n}\n\nexport function TSInstantiationExpression(\n  this: Printer,\n  node: t.TSInstantiationExpression,\n) {\n  this.print(node.expression);\n  if (process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    this.print(node.typeArguments);\n  } else {\n    // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n    this.print(node.typeParameters);\n  }\n}\n\nexport function TSEnumDeclaration(this: Printer, node: t.TSEnumDeclaration) {\n  const { declare, const: isConst, id } = node;\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n  if (isConst) {\n    this.word(\"const\");\n    this.space();\n  }\n  this.word(\"enum\");\n  this.space();\n  this.print(id);\n  this.space();\n\n  if (process.env.BABEL_8_BREAKING) {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    this.print(node.body);\n  } else {\n    // cast to TSEnumBody for Babel 7 AST\n    TSEnumBody.call(this, node as unknown as t.TSEnumBody);\n  }\n}\n\nexport function TSEnumBody(this: Printer, node: t.TSEnumBody) {\n  printBraced(this, node, () =>\n    this.printList(\n      node.members,\n      this.shouldPrintTrailingComma(\"}\") ??\n        (process.env.BABEL_8_BREAKING ? false : true),\n      true,\n      true,\n    ),\n  );\n}\n\nexport function TSEnumMember(this: Printer, node: t.TSEnumMember) {\n  const { id, initializer } = node;\n  this.print(id);\n  if (initializer) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(initializer);\n  }\n}\n\nexport function TSModuleDeclaration(\n  this: Printer,\n  node: t.TSModuleDeclaration,\n) {\n  const { declare, id, kind } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (kind !== \"global\") {\n      this.word(kind);\n      this.space();\n    }\n\n    this.print(node.id);\n    if (!node.body) {\n      this.semicolon();\n      return;\n    }\n    this.space();\n    this.print(node.body);\n  } else {\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n    if (!node.global) {\n      this.word(kind ?? (id.type === \"Identifier\" ? \"namespace\" : \"module\"));\n      this.space();\n    }\n\n    this.print(id);\n\n    if (!node.body) {\n      this.semicolon();\n      return;\n    }\n\n    let body = node.body;\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n    while (body.type === \"TSModuleDeclaration\") {\n      this.token(\".\");\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n      this.print(body.id);\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST shape\n      body = body.body;\n    }\n\n    this.space();\n    this.print(body);\n  }\n}\n\nexport function TSModuleBlock(this: Printer, node: t.TSModuleBlock) {\n  printBraced(this, node, () => this.printSequence(node.body, true));\n}\n\nexport function TSImportType(this: Printer, node: t.TSImportType) {\n  const { argument, qualifier, options } = node;\n  this.word(\"import\");\n  this.token(\"(\");\n  this.print(argument);\n  if (options) {\n    this.token(\",\");\n    this.print(options);\n  }\n  this.token(\")\");\n  if (qualifier) {\n    this.token(\".\");\n    this.print(qualifier);\n  }\n  const typeArguments = process.env.BABEL_8_BREAKING\n    ? //@ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      node.typeArguments\n    : //@ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n      node.typeParameters;\n  if (typeArguments) {\n    this.print(typeArguments);\n  }\n}\n\nexport function TSImportEqualsDeclaration(\n  this: Printer,\n  node: t.TSImportEqualsDeclaration,\n) {\n  const { id, moduleReference } = node;\n  if (\n    !process.env.BABEL_8_BREAKING &&\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n    node.isExport\n  ) {\n    this.word(\"export\");\n    this.space();\n  }\n  this.word(\"import\");\n  this.space();\n  this.print(id);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(moduleReference);\n  this.semicolon();\n}\n\nexport function TSExternalModuleReference(\n  this: Printer,\n  node: t.TSExternalModuleReference,\n) {\n  this.token(\"require(\");\n  this.print(node.expression);\n  this.token(\")\");\n}\n\nexport function TSNonNullExpression(\n  this: Printer,\n  node: t.TSNonNullExpression,\n) {\n  this.print(node.expression);\n  this.token(\"!\");\n}\n\nexport function TSExportAssignment(this: Printer, node: t.TSExportAssignment) {\n  this.word(\"export\");\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.expression);\n  this.semicolon();\n}\n\nexport function TSNamespaceExportDeclaration(\n  this: Printer,\n  node: t.TSNamespaceExportDeclaration,\n) {\n  this.word(\"export\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.word(\"namespace\");\n  this.space();\n  this.print(node.id);\n  this.semicolon();\n}\n\nexport function tsPrintSignatureDeclarationBase(this: Printer, node: any) {\n  const { typeParameters } = node;\n  const parameters = process.env.BABEL_8_BREAKING\n    ? node.params\n    : node.parameters;\n  this.print(typeParameters);\n  this.token(\"(\");\n  this._parameters(parameters, \")\");\n  const returnType = process.env.BABEL_8_BREAKING\n    ? node.returnType\n    : node.typeAnnotation;\n  this.print(returnType);\n}\n\nexport function tsPrintClassMemberModifiers(\n  this: Printer,\n  node:\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.ClassPrivateProperty\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.TSDeclareMethod,\n) {\n  const isPrivateField = node.type === \"ClassPrivateProperty\";\n  const isPublicField =\n    node.type === \"ClassAccessorProperty\" || node.type === \"ClassProperty\";\n  printModifiersList(this, node, [\n    isPublicField && node.declare && \"declare\",\n    !isPrivateField && node.accessibility,\n  ]);\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n  printModifiersList(this, node, [\n    !isPrivateField && node.abstract && \"abstract\",\n    !isPrivateField && node.override && \"override\",\n    (isPublicField || isPrivateField) && node.readonly && \"readonly\",\n  ]);\n}\n\nfunction printBraced(printer: Printer, node: t.Node, cb: () => void) {\n  printer.token(\"{\");\n  const exit = printer.enterDelimited();\n  cb();\n  exit();\n  printer.rightBrace(node);\n}\n\nfunction printModifiersList(\n  printer: Printer,\n  node: t.Node,\n  modifiers: (string | false | null)[],\n) {\n  const modifiersSet = new Set<string>();\n  for (const modifier of modifiers) {\n    if (modifier) modifiersSet.add(modifier);\n  }\n\n  printer.tokenMap?.find(node, tok => {\n    if (modifiersSet.has(tok.value)) {\n      printer.token(tok.value);\n      printer.space();\n      modifiersSet.delete(tok.value);\n      return modifiersSet.size === 0;\n    }\n  });\n\n  for (const modifier of modifiersSet) {\n    printer.word(modifier);\n    printer.space();\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/lib/generators/deprecated.js":{"lineLengths":[13,0,46,13,3,58,48,3,40,16,43,36,40,8,28,46,57,25,17,9,36,7,6,70,3,1,0,38,0],"data":{"version":3,"names":["addDeprecatedGenerators","PrinterClass","deprecatedBabel7Generators","Noop","TSExpressionWithTypeArguments","node","print","expression","typeParameters","DecimalLiteral","raw","getPossibleRaw","format","minified","undefined","word","value","Object","assign","prototype"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/generator/src/generators/deprecated.ts"],"sourcesContent":["import type Printer from \"../printer\";\nimport type * as t from \"@babel/types\";\n\nexport type DeprecatedBabel7ASTTypes =\n  | \"Noop\"\n  | \"TSExpressionWithTypeArguments\"\n  | \"DecimalLiteral\";\n\nexport function addDeprecatedGenerators(PrinterClass: typeof Printer) {\n  // Add Babel 7 generator methods that is removed in Babel 8\n  if (!process.env.BABEL_8_BREAKING) {\n    const deprecatedBabel7Generators = {\n      Noop(this: Printer) {},\n\n      TSExpressionWithTypeArguments(\n        this: Printer,\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        node: t.TSExpressionWithTypeArguments,\n      ) {\n        this.print(node.expression);\n        this.print(node.typeParameters);\n      },\n\n      DecimalLiteral(this: Printer, node: any) {\n        const raw = this.getPossibleRaw(node);\n        if (!this.format.minified && raw !== undefined) {\n          this.word(raw);\n          return;\n        }\n        this.word(node.value + \"m\");\n      },\n    } satisfies Record<\n      DeprecatedBabel7ASTTypes,\n      (this: Printer, node: any) => void\n    >;\n    Object.assign(PrinterClass.prototype, deprecatedBabel7Generators);\n  }\n}\n"],"mappings":";;;;;;AAQO,SAASA,uBAAuBA,CAACC,YAA4B,EAAE;EAEjC;IACjC,MAAMC,0BAA0B,GAAG;MACjCC,IAAIA,CAAA,EAAgB,CAAC,CAAC;MAEtBC,6BAA6BA,CAG3BC,IAAqC,EACrC;QACA,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,UAAU,CAAC;QAC3B,IAAI,CAACD,KAAK,CAACD,IAAI,CAACG,cAAc,CAAC;MACjC,CAAC;MAEDC,cAAcA,CAAgBJ,IAAS,EAAE;QACvC,MAAMK,GAAG,GAAG,IAAI,CAACC,cAAc,CAACN,IAAI,CAAC;QACrC,IAAI,CAAC,IAAI,CAACO,MAAM,CAACC,QAAQ,IAAIH,GAAG,KAAKI,SAAS,EAAE;UAC9C,IAAI,CAACC,IAAI,CAACL,GAAG,CAAC;UACd;QACF;QACA,IAAI,CAACK,IAAI,CAACV,IAAI,CAACW,KAAK,GAAG,GAAG,CAAC;MAC7B;IACF,CAGC;IACDC,MAAM,CAACC,MAAM,CAACjB,YAAY,CAACkB,SAAS,EAAEjB,0BAA0B,CAAC;EACnE;AACF","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/index.js":{"lineLengths":[13,0,46,13,3,36,40,19,20,25,3,3,56,19,20,41,3,3,52,19,20,36,3,3,57,19,20,41,3,3,56,19,20,40,3,3,42,19,20,31,3,3,47,19,20,31,3,3,52,19,20,36,3,3,51,19,20,35,3,3,53,19,20,37,3,3,58,19,20,42,3,3,57,19,20,41,3,3,41,19,20,24,3,3,46,19,20,29,3,3,45,19,20,28,3,3,55,49,19,20,31,3,3,49,19,20,30,3,3,45,19,20,32,3,3,50,19,20,37,3,3,49,19,20,40,3,3,54,19,20,45,3,3,53,19,20,44,3,3,52,19,20,42,3,3,57,19,20,47,3,3,56,19,20,46,3,3,49,19,20,36,3,3,49,19,20,31,3,3,41,53,73,51,62,19,39,24,16,4,14,1,46,19,20,20,3,3,20,40,25,16,4,14,1,22,42,27,16,4,14,1,22,42,27,16,4,14,1,43,43,52,50,35,1,43,96,38,96,38,118,1,47,16,48,5,4,43,101,4,1,82,0,33,0],"data":{"version":3,"names":["_file","require","_buildExternalHelpers","resolvers","_environment","_types","data","Object","defineProperty","exports","enumerable","get","_parser","_traverse","_template","_index2","_transform","_transformFile","_transformAst","_parse","version","resolvePlugin","name","dirname","filepath","resolvePreset","DEFAULT_EXTENSIONS","freeze","OptionManager","init","opts","loadOptionsSync","Plugin","alias","Error","types","traverse","tokTypes","template"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/index.ts"],"sourcesContent":["if (!process.env.IS_PUBLISH && !USE_ESM && process.env.BABEL_8_BREAKING) {\n  throw new Error(\n    \"BABEL_8_BREAKING is only supported in ESM. Please run `make use-esm`.\",\n  );\n}\n\nexport const version = PACKAGE_JSON.version;\n\nexport { default as File } from \"./transformation/file/file.ts\";\nexport type { default as PluginPass } from \"./transformation/plugin-pass.ts\";\nexport { default as buildExternalHelpers } from \"./tools/build-external-helpers.ts\";\n\nimport * as resolvers from \"./config/files/index.ts\";\n// For backwards-compatibility, we expose the resolvers\n// with the old API.\nexport const resolvePlugin = (name: string, dirname: string) =>\n  resolvers.resolvePlugin(name, dirname, false).filepath;\nexport const resolvePreset = (name: string, dirname: string) =>\n  resolvers.resolvePreset(name, dirname, false).filepath;\n\nexport { getEnv } from \"./config/helpers/environment.ts\";\n\n// NOTE: Lazy re-exports aren't detected by the Node.js CJS-ESM interop.\n// These are handled by pluginInjectNodeReexportsHints in our babel.config.js\n// so that they can work well.\nexport * as types from \"@babel/types\";\nexport { tokTypes } from \"@babel/parser\";\nexport { default as traverse } from \"@babel/traverse\";\nexport { default as template } from \"@babel/template\";\n\n// rollup-plugin-dts assumes that all re-exported types are also valid values\n// Visitor is only a type, so we need to use this workaround to prevent\n// rollup-plugin-dts from breaking it.\n// TODO: Figure out how to fix this upstream.\nexport type { NodePath, Scope } from \"@babel/traverse\";\nexport type Visitor<S = unknown> = import(\"@babel/traverse\").Visitor<S>;\n\nexport {\n  createConfigItem,\n  createConfigItemAsync,\n  createConfigItemSync,\n} from \"./config/index.ts\";\n\nexport {\n  loadOptions,\n  loadOptionsAsync,\n  loadPartialConfig,\n  loadPartialConfigAsync,\n  loadPartialConfigSync,\n} from \"./config/index.ts\";\nimport { loadOptionsSync } from \"./config/index.ts\";\nexport { loadOptionsSync };\n\nexport type {\n  CallerMetadata,\n  ConfigItem,\n  InputOptions,\n  PluginAPI,\n  PluginObject,\n  PresetAPI,\n  PresetObject,\n} from \"./config/index.ts\";\n\nexport {\n  type FileResult,\n  transform,\n  transformAsync,\n  transformSync,\n} from \"./transform.ts\";\nexport {\n  transformFile,\n  transformFileAsync,\n  transformFileSync,\n} from \"./transform-file.ts\";\nexport {\n  transformFromAst,\n  transformFromAstAsync,\n  transformFromAstSync,\n} from \"./transform-ast.ts\";\nexport { parse, parseAsync, parseSync } from \"./parse.ts\";\n\n/**\n * Recommended set of compilable extensions. Not used in @babel/core directly, but meant as\n * as an easy source for tooling making use of @babel/core.\n */\nexport const DEFAULT_EXTENSIONS = Object.freeze([\n  \".js\",\n  \".jsx\",\n  \".es6\",\n  \".es\",\n  \".mjs\",\n  \".cjs\",\n] as const);\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM) {\n  // For easier backward-compatibility, provide an API like the one we exposed in Babel 6.\n  // eslint-disable-next-line no-restricted-globals\n  exports.OptionManager = class OptionManager {\n    init(opts: any) {\n      return loadOptionsSync(opts);\n    }\n  };\n\n  // eslint-disable-next-line no-restricted-globals\n  exports.Plugin = function Plugin(alias: string) {\n    throw new Error(\n      `The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`,\n    );\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,qBAAA,GAAAD,OAAA;AAEA,IAAAE,SAAA,GAAAF,OAAA;AAQA,IAAAG,YAAA,GAAAH,OAAA;AAAyD,SAAAI,OAAA;EAAA,MAAAC,IAAA,GAAAL,OAAA;EAAAI,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAAC,MAAA,CAAAC,cAAA,KAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,MAAA;EAAA;AAAA;AAMzD,SAAAO,QAAA;EAAA,MAAAN,IAAA,GAAAL,OAAA;EAAAW,OAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,UAAA;EAAA,MAAAP,IAAA,GAAAL,OAAA;EAAAY,SAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAQ,UAAA;EAAA,MAAAR,IAAA,GAAAL,OAAA;EAAAa,SAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AASA,IAAAS,OAAA,GAAAd,OAAA;AA0BA,IAAAe,UAAA,GAAAf,OAAA;AAMA,IAAAgB,cAAA,GAAAhB,OAAA;AAKA,IAAAiB,aAAA,GAAAjB,OAAA;AAKA,IAAAkB,MAAA,GAAAlB,OAAA;AAA0D;AAzEnD,MAAMmB,OAAO,GAAAX,OAAA,CAAAW,OAAA,WAAuB;AASpC,MAAMC,aAAa,GAAGA,CAACC,IAAY,EAAEC,OAAe,KACzDpB,SAAS,CAACkB,aAAa,CAACC,IAAI,EAAEC,OAAO,EAAE,KAAK,CAAC,CAACC,QAAQ;AAACf,OAAA,CAAAY,aAAA,GAAAA,aAAA;AAClD,MAAMI,aAAa,GAAGA,CAACH,IAAY,EAAEC,OAAe,KACzDpB,SAAS,CAACsB,aAAa,CAACH,IAAI,EAAEC,OAAO,EAAE,KAAK,CAAC,CAACC,QAAQ;AAACf,OAAA,CAAAgB,aAAA,GAAAA,aAAA;AAmElD,MAAMC,kBAAkB,GAAAjB,OAAA,CAAAiB,kBAAA,GAAGnB,MAAM,CAACoB,MAAM,CAAC,CAC9C,KAAK,EACL,MAAM,EACN,MAAM,EACN,KAAK,EACL,MAAM,EACN,MAAM,CACE,CAAC;AAEoC;EAG7ClB,OAAO,CAACmB,aAAa,GAAG,MAAMA,aAAa,CAAC;IAC1CC,IAAIA,CAACC,IAAS,EAAE;MACd,OAAO,IAAAC,uBAAe,EAACD,IAAI,CAAC;IAC9B;EACF,CAAC;EAGDrB,OAAO,CAACuB,MAAM,GAAG,SAASA,MAAMA,CAACC,KAAa,EAAE;IAC9C,MAAM,IAAIC,KAAK,CACb,QAAQD,KAAK,kEACf,CAAC;EACH,CAAC;AACH;AAAC,MAAAxB,OAAA,CAAA0B,KAAA,GAAA1B,OAAA,CAAA2B,QAAA,GAAA3B,OAAA,CAAA4B,QAAA,GAAA5B,OAAA,CAAA6B,QAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/file.js":{"lineLengths":[13,0,46,13,3,25,20,41,25,16,4,14,1,22,42,27,16,4,14,1,23,44,28,16,4,14,1,15,39,20,16,4,14,1,20,33,25,16,4,14,1,54,7,12,22,9,22,22,30,14,22,18,5,3,2,12,24,9,8,12,6,26,23,27,23,22,24,23,19,27,16,17,31,33,43,53,6,24,21,19,29,42,20,23,23,26,20,20,33,3,17,11,17,23,48,3,22,16,76,12,44,5,3,17,5,39,370,7,5,28,3,12,30,3,12,30,3,39,49,19,9,46,19,57,19,5,54,73,5,117,5,3,19,37,60,5,33,3,20,43,41,50,20,34,26,5,31,81,28,56,47,5,11,12,13,106,29,51,37,7,7,27,27,7,60,31,77,5,15,3,56,47,23,21,17,8,70,22,84,54,25,5,14,13,28,20,67,16,31,38,10,59,29,36,21,10,21,9,5,27,3,1,23,1,51,263,4,67,96,4,3,61,66,6,3,1,7,0,32,0],"data":{"version":3,"names":["helpers","data","require","_traverse","_codeFrame","_t","_semver","_babel7Helpers","cloneNode","interpreterDirective","errorVisitor","enter","path","state","loc","node","stop","File","constructor","options","code","ast","inputMap","_map","Map","opts","declarations","scope","metadata","hub","file","getCode","getScope","addHelper","bind","buildError","buildCodeFrameError","NodePath","get","parentPath","parent","container","key","setContext","shebang","interpreter","value","replaceWith","remove","set","val","Error","has","availableHelper","name","versionRange","isInternal","minVersion","err","semver","valid","intersects","_addHelper","declar","generator","res","uid","generateUidIdentifier","dependencies","dep","getDependencies","nodes","globals","Object","keys","getAllBindings","forEach","hasBinding","rename","_compact","added","unshiftContainer","isVariableDeclaration","registerDeclaration","msg","_Error","SyntaxError","traverse","txt","highlightCode","codeFrameColumns","start","line","column","end","undefined","exports","default","prototype","addImport","addTemplateObject","getModuleName","babel7"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/file/file.ts"],"sourcesContent":["import * as helpers from \"@babel/helpers\";\nimport { NodePath } from \"@babel/traverse\";\nimport type { HubInterface, Visitor, Scope } from \"@babel/traverse\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport traverse from \"@babel/traverse\";\nimport { cloneNode, interpreterDirective } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport semver from \"semver\";\n\nimport type { NormalizedFile } from \"../normalize-file.ts\";\n\n// @ts-expect-error This file is `any`\nimport babel7 from \"./babel-7-helpers.cjs\" with { if: \"!process.env.BABEL_8_BREAKING && (!USE_ESM || IS_STANDALONE)\" };\n\nconst errorVisitor: Visitor<{ loc: t.SourceLocation | null }> = {\n  enter(path, state) {\n    const loc = path.node.loc;\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  },\n};\n\nexport default class File {\n  _map: Map<unknown, unknown> = new Map();\n  opts: { [key: string]: any };\n  declarations: { [key: string]: t.Identifier } = {};\n  path: NodePath<t.Program>;\n  ast: t.File;\n  scope: Scope;\n  metadata: { [key: string]: any } = {};\n  code: string = \"\";\n  inputMap: any;\n\n  hub: HubInterface & { file: File } = {\n    // keep it for the usage in babel-core, ex: path.hub.file.opts.filename\n    file: this,\n    getCode: () => this.code,\n    getScope: () => this.scope,\n    addHelper: this.addHelper.bind(this),\n    buildError: this.buildCodeFrameError.bind(this),\n  };\n\n  constructor(options: any, { code, ast, inputMap }: NormalizedFile) {\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n\n    this.path = NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\",\n    }).setContext() as NodePath<t.Program>;\n    this.scope = this.path.scope;\n  }\n\n  /**\n   * Provide backward-compatible access to the interpreter directive handling\n   * in Babel 6.x. If you are writing a plugin for Babel 7.x, it would be\n   * best to use 'program.interpreter' directly.\n   */\n  get shebang(): string {\n    const { interpreter } = this.path.node;\n    return interpreter ? interpreter.value : \"\";\n  }\n  set shebang(value: string) {\n    if (value) {\n      this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n    } else {\n      this.path.get(\"interpreter\").remove();\n    }\n  }\n\n  set(key: unknown, val: unknown) {\n    if (!process.env.BABEL_8_BREAKING) {\n      if (key === \"helpersNamespace\") {\n        throw new Error(\n          \"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" +\n            \"If you are using @babel/plugin-external-helpers you will need to use a newer \" +\n            \"version than the one you currently have installed. \" +\n            \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" +\n            \"alongside 'file.availableHelper()'.\",\n        );\n      }\n    }\n\n    this._map.set(key, val);\n  }\n\n  get(key: unknown): any {\n    return this._map.get(key);\n  }\n\n  has(key: unknown): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Check if a given helper is available in @babel/core's helper list.\n   *\n   * This _also_ allows you to pass a Babel version specifically. If the\n   * helper exists, but was not available for the full given range, it will be\n   * considered unavailable.\n   */\n  availableHelper(name: string, versionRange?: string | null): boolean {\n    if (helpers.isInternal(name)) return false;\n\n    let minVersion;\n    try {\n      minVersion = helpers.minVersion(name);\n    } catch (err) {\n      if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n\n      return false;\n    }\n\n    if (typeof versionRange !== \"string\") return true;\n\n    // semver.intersects() has some surprising behavior with comparing ranges\n    // with pre-release versions. We add '^' to ensure that we are always\n    // comparing ranges with ranges, which sidesteps this logic.\n    // For example:\n    //\n    //   semver.intersects(`<7.0.1`, \"7.0.0-beta.0\") // false - surprising\n    //   semver.intersects(`<7.0.1`, \"^7.0.0-beta.0\") // true - expected\n    //\n    // This is because the first falls back to\n    //\n    //   semver.satisfies(\"7.0.0-beta.0\", `<7.0.1`) // false - surprising\n    //\n    // and this fails because a prerelease version can only satisfy a range\n    // if it is a prerelease within the same major/minor/patch range.\n    //\n    // Note: If this is found to have issues, please also revisit the logic in\n    // transform-runtime's definitions.js file.\n    if (semver.valid(versionRange)) versionRange = `^${versionRange}`;\n\n    if (process.env.BABEL_8_BREAKING) {\n      return (\n        !semver.intersects(`<${minVersion}`, versionRange) &&\n        !semver.intersects(`>=9.0.0`, versionRange)\n      );\n    } else {\n      return (\n        !semver.intersects(`<${minVersion}`, versionRange) &&\n        !semver.intersects(`>=8.0.0`, versionRange)\n      );\n    }\n  }\n\n  addHelper(name: string): t.Identifier {\n    if (helpers.isInternal(name)) {\n      throw new Error(\"Cannot use internal helper \" + name);\n    }\n    return this._addHelper(name);\n  }\n\n  _addHelper(name: string): t.Identifier {\n    const declar = this.declarations[name];\n    if (declar) return cloneNode(declar);\n\n    const generator = this.get(\"helperGenerator\");\n    if (generator) {\n      const res = generator(name);\n      if (res) return res;\n    }\n\n    // make sure that the helper exists\n    helpers.minVersion(name);\n\n    const uid = (this.declarations[name] =\n      this.scope.generateUidIdentifier(name));\n\n    const dependencies: { [key: string]: t.Identifier } = {};\n    for (const dep of helpers.getDependencies(name)) {\n      dependencies[dep] = this._addHelper(dep);\n    }\n\n    const { nodes, globals } = helpers.get(\n      name,\n      dep => dependencies[dep],\n      uid.name,\n      Object.keys(this.scope.getAllBindings()),\n    );\n\n    globals.forEach(name => {\n      if (this.path.scope.hasBinding(name, true /* noGlobals */)) {\n        this.path.scope.rename(name);\n      }\n    });\n\n    nodes.forEach(node => {\n      // @ts-expect-error Fixme: document _compact node property\n      node._compact = true;\n    });\n\n    const added = this.path.unshiftContainer(\"body\", nodes);\n    // TODO: NodePath#unshiftContainer should automatically register new\n    // bindings.\n    for (const path of added) {\n      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);\n    }\n\n    return uid;\n  }\n\n  buildCodeFrameError(\n    node: t.Node | undefined | null,\n    msg: string,\n    _Error: typeof Error = SyntaxError,\n  ): Error {\n    let loc = node?.loc;\n\n    if (!loc && node) {\n      const state: { loc?: t.SourceLocation | null } = {\n        loc: null,\n      };\n      traverse(node, errorVisitor, this.scope, state);\n      loc = state.loc;\n\n      let txt =\n        \"This is an error on an internal node. Probably an internal error.\";\n      if (loc) txt += \" Location has been estimated.\";\n\n      msg += ` (${txt})`;\n    }\n\n    if (loc) {\n      const { highlightCode = true } = this.opts;\n\n      msg +=\n        \"\\n\" +\n        codeFrameColumns(\n          this.code,\n          {\n            start: {\n              line: loc.start.line,\n              column: loc.start.column + 1,\n            },\n            end:\n              loc.end && loc.start.line === loc.end.line\n                ? {\n                    line: loc.end.line,\n                    column: loc.end.column + 1,\n                  }\n                : undefined,\n          },\n          { highlightCode },\n        );\n    }\n\n    return new _Error(msg);\n  }\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error Babel 7\n  File.prototype.addImport = function addImport() {\n    throw new Error(\n      \"This API has been removed. If you're looking for this \" +\n        \"functionality in Babel 7, you should import the \" +\n        \"'@babel/helper-module-imports' module and use the functions exposed \" +\n        \" from that module, such as 'addNamed' or 'addDefault'.\",\n    );\n  };\n  // @ts-expect-error Babel 7\n  File.prototype.addTemplateObject = function addTemplateObject() {\n    throw new Error(\n      \"This function has been moved into the template literal transform itself.\",\n    );\n  };\n\n  if (!USE_ESM || IS_STANDALONE) {\n    // @ts-expect-error Babel 7\n    File.prototype.getModuleName = function getModuleName() {\n      return babel7.getModuleName()(this.opts, this.opts);\n    };\n  }\n}\n"],"mappings":";;;;;;AAAA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,UAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,SAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,WAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,UAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,GAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,EAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,QAAA;EAAA,MAAAL,IAAA,GAAAC,OAAA;EAAAI,OAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAKA,IAAAM,cAAA,GAAAL,OAAA;AAAuH;EAP9GM,SAAS;EAAEC;AAAoB,IAAAJ,EAAA;AASxC,MAAMK,YAAuD,GAAG;EAC9DC,KAAKA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACjB,MAAMC,GAAG,GAAGF,IAAI,CAACG,IAAI,CAACD,GAAG;IACzB,IAAIA,GAAG,EAAE;MACPD,KAAK,CAACC,GAAG,GAAGA,GAAG;MACfF,IAAI,CAACI,IAAI,CAAC,CAAC;IACb;EACF;AACF,CAAC;AAEc,MAAMC,IAAI,CAAC;EAoBxBC,WAAWA,CAACC,OAAY,EAAE;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAyB,CAAC,EAAE;IAAA,KAnBnEC,IAAI,GAA0B,IAAIC,GAAG,CAAC,CAAC;IAAA,KACvCC,IAAI;IAAA,KACJC,YAAY,GAAoC,CAAC,CAAC;IAAA,KAClDd,IAAI;IAAA,KACJS,GAAG;IAAA,KACHM,KAAK;IAAA,KACLC,QAAQ,GAA2B,CAAC,CAAC;IAAA,KACrCR,IAAI,GAAW,EAAE;IAAA,KACjBE,QAAQ;IAAA,KAERO,GAAG,GAAkC;MAEnCC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACX,IAAI;MACxBY,QAAQ,EAAEA,CAAA,KAAM,IAAI,CAACL,KAAK;MAC1BM,SAAS,EAAE,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;MACpCC,UAAU,EAAE,IAAI,CAACC,mBAAmB,CAACF,IAAI,CAAC,IAAI;IAChD,CAAC;IAGC,IAAI,CAACT,IAAI,GAAGN,OAAO;IACnB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IAExB,IAAI,CAACV,IAAI,GAAGyB,oBAAQ,CAACC,GAAG,CAAC;MACvBT,GAAG,EAAE,IAAI,CAACA,GAAG;MACbU,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI,CAACnB,GAAG;MAChBoB,SAAS,EAAE,IAAI,CAACpB,GAAG;MACnBqB,GAAG,EAAE;IACP,CAAC,CAAC,CAACC,UAAU,CAAC,CAAwB;IACtC,IAAI,CAAChB,KAAK,GAAG,IAAI,CAACf,IAAI,CAACe,KAAK;EAC9B;EAOA,IAAIiB,OAAOA,CAAA,EAAW;IACpB,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACjC,IAAI,CAACG,IAAI;IACtC,OAAO8B,WAAW,GAAGA,WAAW,CAACC,KAAK,GAAG,EAAE;EAC7C;EACA,IAAIF,OAAOA,CAACE,KAAa,EAAE;IACzB,IAAIA,KAAK,EAAE;MACT,IAAI,CAAClC,IAAI,CAAC0B,GAAG,CAAC,aAAa,CAAC,CAACS,WAAW,CAACtC,oBAAoB,CAACqC,KAAK,CAAC,CAAC;IACvE,CAAC,MAAM;MACL,IAAI,CAAClC,IAAI,CAAC0B,GAAG,CAAC,aAAa,CAAC,CAACU,MAAM,CAAC,CAAC;IACvC;EACF;EAEAC,GAAGA,CAACP,GAAY,EAAEQ,GAAY,EAAE;IACK;MACjC,IAAIR,GAAG,KAAK,kBAAkB,EAAE;QAC9B,MAAM,IAAIS,KAAK,CACb,6EAA6E,GAC3E,+EAA+E,GAC/E,qDAAqD,GACrD,sFAAsF,GACtF,qCACJ,CAAC;MACH;IACF;IAEA,IAAI,CAAC5B,IAAI,CAAC0B,GAAG,CAACP,GAAG,EAAEQ,GAAG,CAAC;EACzB;EAEAZ,GAAGA,CAACI,GAAY,EAAO;IACrB,OAAO,IAAI,CAACnB,IAAI,CAACe,GAAG,CAACI,GAAG,CAAC;EAC3B;EAEAU,GAAGA,CAACV,GAAY,EAAW;IACzB,OAAO,IAAI,CAACnB,IAAI,CAAC6B,GAAG,CAACV,GAAG,CAAC;EAC3B;EASAW,eAAeA,CAACC,IAAY,EAAEC,YAA4B,EAAW;IACnE,IAAIvD,OAAO,CAAD,CAAC,CAACwD,UAAU,CAACF,IAAI,CAAC,EAAE,OAAO,KAAK;IAE1C,IAAIG,UAAU;IACd,IAAI;MACFA,UAAU,GAAGzD,OAAO,CAAD,CAAC,CAACyD,UAAU,CAACH,IAAI,CAAC;IACvC,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACtC,IAAI,KAAK,sBAAsB,EAAE,MAAMsC,GAAG;MAElD,OAAO,KAAK;IACd;IAEA,IAAI,OAAOH,YAAY,KAAK,QAAQ,EAAE,OAAO,IAAI;IAmBjD,IAAII,QAAKA,CAAC,CAACC,KAAK,CAACL,YAAY,CAAC,EAAEA,YAAY,GAAG,IAAIA,YAAY,EAAE;IAO1D;MACL,OACE,CAACI,QAAKA,CAAC,CAACE,UAAU,CAAC,IAAIJ,UAAU,EAAE,EAAEF,YAAY,CAAC,IAClD,CAACI,QAAKA,CAAC,CAACE,UAAU,CAAC,SAAS,EAAEN,YAAY,CAAC;IAE/C;EACF;EAEAtB,SAASA,CAACqB,IAAY,EAAgB;IACpC,IAAItD,OAAO,CAAD,CAAC,CAACwD,UAAU,CAACF,IAAI,CAAC,EAAE;MAC5B,MAAM,IAAIH,KAAK,CAAC,6BAA6B,GAAGG,IAAI,CAAC;IACvD;IACA,OAAO,IAAI,CAACQ,UAAU,CAACR,IAAI,CAAC;EAC9B;EAEAQ,UAAUA,CAACR,IAAY,EAAgB;IACrC,MAAMS,MAAM,GAAG,IAAI,CAACrC,YAAY,CAAC4B,IAAI,CAAC;IACtC,IAAIS,MAAM,EAAE,OAAOvD,SAAS,CAACuD,MAAM,CAAC;IAEpC,MAAMC,SAAS,GAAG,IAAI,CAAC1B,GAAG,CAAC,iBAAiB,CAAC;IAC7C,IAAI0B,SAAS,EAAE;MACb,MAAMC,GAAG,GAAGD,SAAS,CAACV,IAAI,CAAC;MAC3B,IAAIW,GAAG,EAAE,OAAOA,GAAG;IACrB;IAGAjE,OAAO,CAAD,CAAC,CAACyD,UAAU,CAACH,IAAI,CAAC;IAExB,MAAMY,GAAG,GAAI,IAAI,CAACxC,YAAY,CAAC4B,IAAI,CAAC,GAClC,IAAI,CAAC3B,KAAK,CAACwC,qBAAqB,CAACb,IAAI,CAAE;IAEzC,MAAMc,YAA6C,GAAG,CAAC,CAAC;IACxD,KAAK,MAAMC,GAAG,IAAIrE,OAAO,CAAD,CAAC,CAACsE,eAAe,CAAChB,IAAI,CAAC,EAAE;MAC/Cc,YAAY,CAACC,GAAG,CAAC,GAAG,IAAI,CAACP,UAAU,CAACO,GAAG,CAAC;IAC1C;IAEA,MAAM;MAAEE,KAAK;MAAEC;IAAQ,CAAC,GAAGxE,OAAO,CAAD,CAAC,CAACsC,GAAG,CACpCgB,IAAI,EACJe,GAAG,IAAID,YAAY,CAACC,GAAG,CAAC,EACxBH,GAAG,CAACZ,IAAI,EACRmB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC/C,KAAK,CAACgD,cAAc,CAAC,CAAC,CACzC,CAAC;IAEDH,OAAO,CAACI,OAAO,CAACtB,IAAI,IAAI;MACtB,IAAI,IAAI,CAAC1C,IAAI,CAACe,KAAK,CAACkD,UAAU,CAACvB,IAAI,EAAE,IAAoB,CAAC,EAAE;QAC1D,IAAI,CAAC1C,IAAI,CAACe,KAAK,CAACmD,MAAM,CAACxB,IAAI,CAAC;MAC9B;IACF,CAAC,CAAC;IAEFiB,KAAK,CAACK,OAAO,CAAC7D,IAAI,IAAI;MAEpBA,IAAI,CAACgE,QAAQ,GAAG,IAAI;IACtB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG,IAAI,CAACpE,IAAI,CAACqE,gBAAgB,CAAC,MAAM,EAAEV,KAAK,CAAC;IAGvD,KAAK,MAAM3D,IAAI,IAAIoE,KAAK,EAAE;MACxB,IAAIpE,IAAI,CAACsE,qBAAqB,CAAC,CAAC,EAAE,IAAI,CAACvD,KAAK,CAACwD,mBAAmB,CAACvE,IAAI,CAAC;IACxE;IAEA,OAAOsD,GAAG;EACZ;EAEA9B,mBAAmBA,CACjBrB,IAA+B,EAC/BqE,GAAW,EACXC,MAAoB,GAAGC,WAAW,EAC3B;IACP,IAAIxE,GAAG,GAAGC,IAAI,oBAAJA,IAAI,CAAED,GAAG;IAEnB,IAAI,CAACA,GAAG,IAAIC,IAAI,EAAE;MAChB,MAAMF,KAAwC,GAAG;QAC/CC,GAAG,EAAE;MACP,CAAC;MACD,IAAAyE,mBAAQ,EAACxE,IAAI,EAAEL,YAAY,EAAE,IAAI,CAACiB,KAAK,EAAEd,KAAK,CAAC;MAC/CC,GAAG,GAAGD,KAAK,CAACC,GAAG;MAEf,IAAI0E,GAAG,GACL,mEAAmE;MACrE,IAAI1E,GAAG,EAAE0E,GAAG,IAAI,+BAA+B;MAE/CJ,GAAG,IAAI,KAAKI,GAAG,GAAG;IACpB;IAEA,IAAI1E,GAAG,EAAE;MACP,MAAM;QAAE2E,aAAa,GAAG;MAAK,CAAC,GAAG,IAAI,CAAChE,IAAI;MAE1C2D,GAAG,IACD,IAAI,GACJ,IAAAM,6BAAgB,EACd,IAAI,CAACtE,IAAI,EACT;QACEuE,KAAK,EAAE;UACLC,IAAI,EAAE9E,GAAG,CAAC6E,KAAK,CAACC,IAAI;UACpBC,MAAM,EAAE/E,GAAG,CAAC6E,KAAK,CAACE,MAAM,GAAG;QAC7B,CAAC;QACDC,GAAG,EACDhF,GAAG,CAACgF,GAAG,IAAIhF,GAAG,CAAC6E,KAAK,CAACC,IAAI,KAAK9E,GAAG,CAACgF,GAAG,CAACF,IAAI,GACtC;UACEA,IAAI,EAAE9E,GAAG,CAACgF,GAAG,CAACF,IAAI;UAClBC,MAAM,EAAE/E,GAAG,CAACgF,GAAG,CAACD,MAAM,GAAG;QAC3B,CAAC,GACDE;MACR,CAAC,EACD;QAAEN;MAAc,CAClB,CAAC;IACL;IAEA,OAAO,IAAIJ,MAAM,CAACD,GAAG,CAAC;EACxB;AACF;AAACY,OAAA,CAAAC,OAAA,GAAAhF,IAAA;AAEkC;EAEjCA,IAAI,CAACiF,SAAS,CAACC,SAAS,GAAG,SAASA,SAASA,CAAA,EAAG;IAC9C,MAAM,IAAIhD,KAAK,CACb,wDAAwD,GACtD,kDAAkD,GAClD,sEAAsE,GACtE,wDACJ,CAAC;EACH,CAAC;EAEDlC,IAAI,CAACiF,SAAS,CAACE,iBAAiB,GAAG,SAASA,iBAAiBA,CAAA,EAAG;IAC9D,MAAM,IAAIjD,KAAK,CACb,0EACF,CAAC;EACH,CAAC;EAE8B;IAE7BlC,IAAI,CAACiF,SAAS,CAACG,aAAa,GAAG,SAASA,aAAaA,CAAA,EAAG;MACtD,OAAOC,cAAM,CAACD,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC5E,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC;IACrD,CAAC;EACH;AACF;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/babel-7-helpers.cjs":{"lineLengths":[1,89,1,7,0,44,0],"data":{"version":3,"names":["exports","getModuleName","require"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/file/babel-7-helpers.cjs"],"sourcesContent":["// TODO(Babel 8): Remove this file\n\nif (!process.env.BABEL_8_BREAKING) {\n  exports.getModuleName = () =>\n    require(\"@babel/helper-module-transforms\").getModuleName;\n} else if (process.env.IS_PUBLISH) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n"],"mappings":"AAEmC;EACjCA,OAAO,CAACC,aAAa,GAAG,MACtBC,OAAO,CAAC,iCAAiC,CAAC,CAACD,aAAa;AAC5D;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/tools/build-external-helpers.js":{"lineLengths":[13,0,46,13,3,27,20,41,25,16,4,14,1,23,43,28,16,4,14,1,22,42,27,16,4,14,1,15,39,20,16,4,14,1,7,18,23,19,17,17,12,24,25,18,22,21,13,19,19,10,16,18,22,20,9,70,31,55,39,47,34,14,35,7,48,18,7,18,33,47,18,91,242,173,43,14,1,33,18,51,75,68,7,37,1,30,47,18,95,43,35,45,120,44,63,23,32,7,1,30,47,18,95,29,43,44,14,1,51,38,94,4,18,42,55,54,11,11,146,80,97,14,24,5,14,1,53,11,17,24,24,18,17,16,14,28,10,61,3,46,1,7,0,50,0],"data":{"version":3,"names":["helpers","data","require","_generator","_template","_t","arrayExpression","assignmentExpression","binaryExpression","blockStatement","callExpression","cloneNode","conditionalExpression","exportNamedDeclaration","exportSpecifier","expressionStatement","functionExpression","identifier","memberExpression","objectExpression","program","stringLiteral","unaryExpression","variableDeclaration","variableDeclarator","buildUmdWrapper","replacements","template","statement","buildGlobal","allowlist","namespace","body","container","tree","push","buildHelpers","buildModule","refs","unshift","Object","keys","map","name","buildUmd","FACTORY_PARAMETERS","BROWSER_ARGUMENTS","COMMON_ARGUMENTS","AMD_ARGUMENTS","FACTORY_BODY","UMD_ROOT","buildVar","getHelperReference","list","forEach","includes","ref","nodes","get","ast","exportName","mapExportBindingAssignments","node","_default","outputType","build","global","module","umd","var","Error","generator","code"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/tools/build-external-helpers.ts"],"sourcesContent":["import * as helpers from \"@babel/helpers\";\nimport generator from \"@babel/generator\";\nimport template from \"@babel/template\";\nimport {\n  arrayExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  exportNamedDeclaration,\n  exportSpecifier,\n  expressionStatement,\n  functionExpression,\n  identifier,\n  memberExpression,\n  objectExpression,\n  program,\n  stringLiteral,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { Replacements } from \"@babel/template\";\n\n// Wrapped to avoid wasting time parsing this when almost no-one uses\n// build-external-helpers.\nconst buildUmdWrapper = (replacements: Replacements) =>\n  template.statement`\n    (function (root, factory) {\n      if (typeof define === \"function\" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === \"object\") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  `(replacements);\n\nfunction buildGlobal(allowlist?: Array<string>) {\n  const namespace = identifier(\"babelHelpers\");\n\n  const body: t.Statement[] = [];\n  const container = functionExpression(\n    null,\n    [identifier(\"global\")],\n    blockStatement(body),\n  );\n  const tree = program([\n    expressionStatement(\n      callExpression(container, [\n        // typeof global === \"undefined\" ? self : global\n        conditionalExpression(\n          binaryExpression(\n            \"===\",\n            unaryExpression(\"typeof\", identifier(\"global\")),\n            stringLiteral(\"undefined\"),\n          ),\n          identifier(\"self\"),\n          identifier(\"global\"),\n        ),\n      ]),\n    ),\n  ]);\n\n  body.push(\n    variableDeclaration(\"var\", [\n      variableDeclarator(\n        namespace,\n        assignmentExpression(\n          \"=\",\n          memberExpression(identifier(\"global\"), namespace),\n          objectExpression([]),\n        ),\n      ),\n    ]),\n  );\n\n  buildHelpers(body, namespace, allowlist);\n\n  return tree;\n}\n\nfunction buildModule(allowlist?: Array<string>) {\n  const body: t.Statement[] = [];\n  const refs = buildHelpers(body, null, allowlist);\n\n  body.unshift(\n    exportNamedDeclaration(\n      null,\n      Object.keys(refs).map(name => {\n        return exportSpecifier(cloneNode(refs[name]), identifier(name));\n      }),\n    ),\n  );\n\n  return program(body, [], \"module\");\n}\n\nfunction buildUmd(allowlist?: Array<string>) {\n  const namespace = identifier(\"babelHelpers\");\n\n  const body: t.Statement[] = [];\n  body.push(\n    variableDeclaration(\"var\", [\n      variableDeclarator(namespace, identifier(\"global\")),\n    ]),\n  );\n\n  buildHelpers(body, namespace, allowlist);\n\n  return program([\n    buildUmdWrapper({\n      FACTORY_PARAMETERS: identifier(\"global\"),\n      BROWSER_ARGUMENTS: assignmentExpression(\n        \"=\",\n        memberExpression(identifier(\"root\"), namespace),\n        objectExpression([]),\n      ),\n      COMMON_ARGUMENTS: identifier(\"exports\"),\n      AMD_ARGUMENTS: arrayExpression([stringLiteral(\"exports\")]),\n      FACTORY_BODY: body,\n      UMD_ROOT: identifier(\"this\"),\n    }),\n  ]);\n}\n\nfunction buildVar(allowlist?: Array<string>) {\n  const namespace = identifier(\"babelHelpers\");\n\n  const body: t.Statement[] = [];\n  body.push(\n    variableDeclaration(\"var\", [\n      variableDeclarator(namespace, objectExpression([])),\n    ]),\n  );\n  const tree = program(body);\n  buildHelpers(body, namespace, allowlist);\n  body.push(expressionStatement(namespace));\n  return tree;\n}\n\nfunction buildHelpers(\n  body: t.Statement[],\n  namespace: t.Expression,\n  allowlist?: Array<string>,\n): Record<string, t.MemberExpression>;\nfunction buildHelpers(\n  body: t.Statement[],\n  namespace: null,\n  allowlist?: Array<string>,\n): Record<string, t.Identifier>;\n\nfunction buildHelpers(\n  body: t.Statement[],\n  namespace: t.Expression | null,\n  allowlist?: Array<string>,\n) {\n  const getHelperReference = (name: string) => {\n    return namespace\n      ? memberExpression(namespace, identifier(name))\n      : identifier(`_${name}`);\n  };\n\n  const refs: { [key: string]: t.Identifier | t.MemberExpression } = {};\n  helpers.list.forEach(function (name) {\n    if (allowlist && !allowlist.includes(name)) return;\n\n    const ref = (refs[name] = getHelperReference(name));\n\n    const { nodes } = helpers.get(\n      name,\n      getHelperReference,\n      namespace ? null : `_${name}`,\n      [],\n      namespace\n        ? (ast, exportName, mapExportBindingAssignments) => {\n            mapExportBindingAssignments(node =>\n              assignmentExpression(\"=\", ref, node),\n            );\n            ast.body.push(\n              expressionStatement(\n                assignmentExpression(\"=\", ref, identifier(exportName)),\n              ),\n            );\n          }\n        : null,\n    );\n\n    body.push(...nodes);\n  });\n  return refs;\n}\nexport default function (\n  allowlist?: Array<string>,\n  outputType: \"global\" | \"module\" | \"umd\" | \"var\" = \"global\",\n) {\n  let tree: t.Program;\n\n  const build = {\n    global: buildGlobal,\n    module: buildModule,\n    umd: buildUmd,\n    var: buildVar,\n  }[outputType];\n\n  if (build) {\n    tree = build(allowlist);\n  } else {\n    throw new Error(`Unsupported output type ${outputType}`);\n  }\n\n  return generator(tree).code;\n}\n"],"mappings":";;;;;;AAAA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,WAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,UAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,UAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,SAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,GAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,EAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAoBsB;EAnBpBK,eAAe;EACfC,oBAAoB;EACpBC,gBAAgB;EAChBC,cAAc;EACdC,cAAc;EACdC,SAAS;EACTC,qBAAqB;EACrBC,sBAAsB;EACtBC,eAAe;EACfC,mBAAmB;EACnBC,kBAAkB;EAClBC,UAAU;EACVC,gBAAgB;EAChBC,gBAAgB;EAChBC,OAAO;EACPC,aAAa;EACbC,eAAe;EACfC,mBAAmB;EACnBC;AAAkB,IAAAnB,EAAA;AAOpB,MAAMoB,eAAe,GAAIC,YAA0B,IACjDC,mBAAQ,CAACC,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAACF,YAAY,CAAC;AAEjB,SAASG,WAAWA,CAACC,SAAyB,EAAE;EAC9C,MAAMC,SAAS,GAAGd,UAAU,CAAC,cAAc,CAAC;EAE5C,MAAMe,IAAmB,GAAG,EAAE;EAC9B,MAAMC,SAAS,GAAGjB,kBAAkB,CAClC,IAAI,EACJ,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAC,EACtBR,cAAc,CAACuB,IAAI,CACrB,CAAC;EACD,MAAME,IAAI,GAAGd,OAAO,CAAC,CACnBL,mBAAmB,CACjBL,cAAc,CAACuB,SAAS,EAAE,CAExBrB,qBAAqB,CACnBJ,gBAAgB,CACd,KAAK,EACLc,eAAe,CAAC,QAAQ,EAAEL,UAAU,CAAC,QAAQ,CAAC,CAAC,EAC/CI,aAAa,CAAC,WAAW,CAC3B,CAAC,EACDJ,UAAU,CAAC,MAAM,CAAC,EAClBA,UAAU,CAAC,QAAQ,CACrB,CAAC,CACF,CACH,CAAC,CACF,CAAC;EAEFe,IAAI,CAACG,IAAI,CACPZ,mBAAmB,CAAC,KAAK,EAAE,CACzBC,kBAAkB,CAChBO,SAAS,EACTxB,oBAAoB,CAClB,GAAG,EACHW,gBAAgB,CAACD,UAAU,CAAC,QAAQ,CAAC,EAAEc,SAAS,CAAC,EACjDZ,gBAAgB,CAAC,EAAE,CACrB,CACF,CAAC,CACF,CACH,CAAC;EAEDiB,YAAY,CAACJ,IAAI,EAAED,SAAS,EAAED,SAAS,CAAC;EAExC,OAAOI,IAAI;AACb;AAEA,SAASG,WAAWA,CAACP,SAAyB,EAAE;EAC9C,MAAME,IAAmB,GAAG,EAAE;EAC9B,MAAMM,IAAI,GAAGF,YAAY,CAACJ,IAAI,EAAE,IAAI,EAAEF,SAAS,CAAC;EAEhDE,IAAI,CAACO,OAAO,CACV1B,sBAAsB,CACpB,IAAI,EACJ2B,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,IAAI,IAAI;IAC5B,OAAO7B,eAAe,CAACH,SAAS,CAAC2B,IAAI,CAACK,IAAI,CAAC,CAAC,EAAE1B,UAAU,CAAC0B,IAAI,CAAC,CAAC;EACjE,CAAC,CACH,CACF,CAAC;EAED,OAAOvB,OAAO,CAACY,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC;AACpC;AAEA,SAASY,QAAQA,CAACd,SAAyB,EAAE;EAC3C,MAAMC,SAAS,GAAGd,UAAU,CAAC,cAAc,CAAC;EAE5C,MAAMe,IAAmB,GAAG,EAAE;EAC9BA,IAAI,CAACG,IAAI,CACPZ,mBAAmB,CAAC,KAAK,EAAE,CACzBC,kBAAkB,CAACO,SAAS,EAAEd,UAAU,CAAC,QAAQ,CAAC,CAAC,CACpD,CACH,CAAC;EAEDmB,YAAY,CAACJ,IAAI,EAAED,SAAS,EAAED,SAAS,CAAC;EAExC,OAAOV,OAAO,CAAC,CACbK,eAAe,CAAC;IACdoB,kBAAkB,EAAE5B,UAAU,CAAC,QAAQ,CAAC;IACxC6B,iBAAiB,EAAEvC,oBAAoB,CACrC,GAAG,EACHW,gBAAgB,CAACD,UAAU,CAAC,MAAM,CAAC,EAAEc,SAAS,CAAC,EAC/CZ,gBAAgB,CAAC,EAAE,CACrB,CAAC;IACD4B,gBAAgB,EAAE9B,UAAU,CAAC,SAAS,CAAC;IACvC+B,aAAa,EAAE1C,eAAe,CAAC,CAACe,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D4B,YAAY,EAAEjB,IAAI;IAClBkB,QAAQ,EAAEjC,UAAU,CAAC,MAAM;EAC7B,CAAC,CAAC,CACH,CAAC;AACJ;AAEA,SAASkC,QAAQA,CAACrB,SAAyB,EAAE;EAC3C,MAAMC,SAAS,GAAGd,UAAU,CAAC,cAAc,CAAC;EAE5C,MAAMe,IAAmB,GAAG,EAAE;EAC9BA,IAAI,CAACG,IAAI,CACPZ,mBAAmB,CAAC,KAAK,EAAE,CACzBC,kBAAkB,CAACO,SAAS,EAAEZ,gBAAgB,CAAC,EAAE,CAAC,CAAC,CACpD,CACH,CAAC;EACD,MAAMe,IAAI,GAAGd,OAAO,CAACY,IAAI,CAAC;EAC1BI,YAAY,CAACJ,IAAI,EAAED,SAAS,EAAED,SAAS,CAAC;EACxCE,IAAI,CAACG,IAAI,CAACpB,mBAAmB,CAACgB,SAAS,CAAC,CAAC;EACzC,OAAOG,IAAI;AACb;AAaA,SAASE,YAAYA,CACnBJ,IAAmB,EACnBD,SAA8B,EAC9BD,SAAyB,EACzB;EACA,MAAMsB,kBAAkB,GAAIT,IAAY,IAAK;IAC3C,OAAOZ,SAAS,GACZb,gBAAgB,CAACa,SAAS,EAAEd,UAAU,CAAC0B,IAAI,CAAC,CAAC,GAC7C1B,UAAU,CAAC,IAAI0B,IAAI,EAAE,CAAC;EAC5B,CAAC;EAED,MAAML,IAA0D,GAAG,CAAC,CAAC;EACrEtC,OAAO,CAAD,CAAC,CAACqD,IAAI,CAACC,OAAO,CAAC,UAAUX,IAAI,EAAE;IACnC,IAAIb,SAAS,IAAI,CAACA,SAAS,CAACyB,QAAQ,CAACZ,IAAI,CAAC,EAAE;IAE5C,MAAMa,GAAG,GAAIlB,IAAI,CAACK,IAAI,CAAC,GAAGS,kBAAkB,CAACT,IAAI,CAAE;IAEnD,MAAM;MAAEc;IAAM,CAAC,GAAGzD,OAAO,CAAD,CAAC,CAAC0D,GAAG,CAC3Bf,IAAI,EACJS,kBAAkB,EAClBrB,SAAS,GAAG,IAAI,GAAG,IAAIY,IAAI,EAAE,EAC7B,EAAE,EACFZ,SAAS,GACL,CAAC4B,GAAG,EAAEC,UAAU,EAAEC,2BAA2B,KAAK;MAChDA,2BAA2B,CAACC,IAAI,IAC9BvD,oBAAoB,CAAC,GAAG,EAAEiD,GAAG,EAAEM,IAAI,CACrC,CAAC;MACDH,GAAG,CAAC3B,IAAI,CAACG,IAAI,CACXpB,mBAAmB,CACjBR,oBAAoB,CAAC,GAAG,EAAEiD,GAAG,EAAEvC,UAAU,CAAC2C,UAAU,CAAC,CACvD,CACF,CAAC;IACH,CAAC,GACD,IACN,CAAC;IAED5B,IAAI,CAACG,IAAI,CAAC,GAAGsB,KAAK,CAAC;EACrB,CAAC,CAAC;EACF,OAAOnB,IAAI;AACb;AACe,SAAAyB,SACbjC,SAAyB,EACzBkC,UAA+C,GAAG,QAAQ,EAC1D;EACA,IAAI9B,IAAe;EAEnB,MAAM+B,KAAK,GAAG;IACZC,MAAM,EAAErC,WAAW;IACnBsC,MAAM,EAAE9B,WAAW;IACnB+B,GAAG,EAAExB,QAAQ;IACbyB,GAAG,EAAElB;EACP,CAAC,CAACa,UAAU,CAAC;EAEb,IAAIC,KAAK,EAAE;IACT/B,IAAI,GAAG+B,KAAK,CAACnC,SAAS,CAAC;EACzB,CAAC,MAAM;IACL,MAAM,IAAIwC,KAAK,CAAC,2BAA2BN,UAAU,EAAE,CAAC;EAC1D;EAEA,OAAO,IAAAO,oBAAS,EAACrC,IAAI,CAAC,CAACsC,IAAI;AAC7B;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/index.js":{"lineLengths":[13,0,46,13,3,57,19,20,48,3,3,53,19,20,44,3,3,51,19,20,36,3,3,54,19,20,45,3,3,50,19,20,41,3,3,46,19,20,37,3,3,46,19,20,31,3,3,46,19,20,31,3,3,49,19,20,34,3,3,49,19,20,34,3,3,57,19,20,48,3,3,39,51,39,5,7,0,33,0],"data":{"version":3,"names":["_package","require","_configuration","_plugins"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/index.ts"],"sourcesContent":["type indexBrowserType = typeof import(\"./index-browser\");\ntype indexType = typeof import(\"./index\");\n\n// Kind of gross, but essentially asserting that the exports of this module are the same as the\n// exports of index-browser, since this file may be replaced at bundle time with index-browser.\n({}) as any as indexBrowserType as indexType;\n\nexport { findPackageData } from \"./package.ts\";\n\nexport {\n  findConfigUpwards,\n  findRelativeConfig,\n  findRootConfig,\n  loadConfig,\n  resolveShowConfigPath,\n  ROOT_CONFIG_FILENAMES,\n} from \"./configuration.ts\";\nexport type {\n  ConfigFile,\n  IgnoreFile,\n  RelativeConfig,\n  FilePackageData,\n} from \"./types.ts\";\nexport {\n  loadPlugin,\n  loadPreset,\n  resolvePlugin,\n  resolvePreset,\n} from \"./plugins.ts\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AAcA,IAAAE,QAAA,GAAAF,OAAA;AAlBA,CAAC,CAAC,CAAC;AAA0C","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/package.js":{"lineLengths":[13,0,46,13,3,42,18,31,23,16,4,14,1,35,59,40,82,14,7,34,17,90,3,67,36,89,3,31,87,3,10,13,39,11,4,3,37,17,25,23,42,64,30,76,45,30,24,12,5,22,3,10,13,16,8,13,4,1,7,0,35,0],"data":{"version":3,"names":["_path","data","require","_utils","_configError","PACKAGE_FILENAME","readConfigPackage","makeStaticFileCache","filepath","content","options","JSON","parse","err","ConfigError","message","Error","Array","isArray","dirname","path","findPackageData","pkg","directories","isPackage","basename","push","join","nextLoc"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/package.ts"],"sourcesContent":["import path from \"node:path\";\nimport type { Handler } from \"gensync\";\nimport { makeStaticFileCache } from \"./utils.ts\";\n\nimport type { ConfigFile, FilePackageData } from \"./types.ts\";\n\nimport ConfigError from \"../../errors/config-error.ts\";\n\nconst PACKAGE_FILENAME = \"package.json\";\n\nconst readConfigPackage = makeStaticFileCache(\n  (filepath, content): ConfigFile => {\n    let options;\n    try {\n      options = JSON.parse(content) as unknown;\n    } catch (err) {\n      throw new ConfigError(\n        `Error while parsing JSON - ${err.message}`,\n        filepath,\n      );\n    }\n\n    if (!options) throw new Error(`${filepath}: No config detected`);\n\n    if (typeof options !== \"object\") {\n      throw new ConfigError(\n        `Config returned typeof ${typeof options}`,\n        filepath,\n      );\n    }\n    if (Array.isArray(options)) {\n      throw new ConfigError(`Expected config object but found array`, filepath);\n    }\n\n    return {\n      filepath,\n      dirname: path.dirname(filepath),\n      options,\n    };\n  },\n);\n\n/**\n * Find metadata about the package that this file is inside of. Resolution\n * of Babel's config requires general package information to decide when to\n * search for .babelrc files\n */\nexport function* findPackageData(filepath: string): Handler<FilePackageData> {\n  let pkg = null;\n  const directories = [];\n  let isPackage = true;\n\n  let dirname = path.dirname(filepath);\n  while (!pkg && path.basename(dirname) !== \"node_modules\") {\n    directories.push(dirname);\n\n    pkg = yield* readConfigPackage(path.join(dirname, PACKAGE_FILENAME));\n\n    const nextLoc = path.dirname(dirname);\n    if (dirname === nextLoc) {\n      isPackage = false;\n      break;\n    }\n    dirname = nextLoc;\n  }\n\n  return { filepath, directories, pkg, isPackage };\n}\n"],"mappings":";;;;;;AAAA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAE,MAAA,GAAAD,OAAA;AAIA,IAAAE,YAAA,GAAAF,OAAA;AAEA,MAAMG,gBAAgB,GAAG,cAAc;AAEvC,MAAMC,iBAAiB,GAAG,IAAAC,0BAAmB,EAC3C,CAACC,QAAQ,EAAEC,OAAO,KAAiB;EACjC,IAAIC,OAAO;EACX,IAAI;IACFA,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAY;EAC1C,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,MAAM,IAAIC,oBAAW,CACnB,8BAA8BD,GAAG,CAACE,OAAO,EAAE,EAC3CP,QACF,CAAC;EACH;EAEA,IAAI,CAACE,OAAO,EAAE,MAAM,IAAIM,KAAK,CAAC,GAAGR,QAAQ,sBAAsB,CAAC;EAEhE,IAAI,OAAOE,OAAO,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAII,oBAAW,CACnB,0BAA0B,OAAOJ,OAAO,EAAE,EAC1CF,QACF,CAAC;EACH;EACA,IAAIS,KAAK,CAACC,OAAO,CAACR,OAAO,CAAC,EAAE;IAC1B,MAAM,IAAII,oBAAW,CAAC,wCAAwC,EAAEN,QAAQ,CAAC;EAC3E;EAEA,OAAO;IACLA,QAAQ;IACRW,OAAO,EAAEC,MAAGA,CAAC,CAACD,OAAO,CAACX,QAAQ,CAAC;IAC/BE;EACF,CAAC;AACH,CACF,CAAC;AAOM,UAAUW,eAAeA,CAACb,QAAgB,EAA4B;EAC3E,IAAIc,GAAG,GAAG,IAAI;EACd,MAAMC,WAAW,GAAG,EAAE;EACtB,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAIL,OAAO,GAAGC,MAAGA,CAAC,CAACD,OAAO,CAACX,QAAQ,CAAC;EACpC,OAAO,CAACc,GAAG,IAAIF,MAAGA,CAAC,CAACK,QAAQ,CAACN,OAAO,CAAC,KAAK,cAAc,EAAE;IACxDI,WAAW,CAACG,IAAI,CAACP,OAAO,CAAC;IAEzBG,GAAG,GAAG,OAAOhB,iBAAiB,CAACc,MAAGA,CAAC,CAACO,IAAI,CAACR,OAAO,EAAEd,gBAAgB,CAAC,CAAC;IAEpE,MAAMuB,OAAO,GAAGR,MAAGA,CAAC,CAACD,OAAO,CAACA,OAAO,CAAC;IACrC,IAAIA,OAAO,KAAKS,OAAO,EAAE;MACvBJ,SAAS,GAAG,KAAK;MACjB;IACF;IACAL,OAAO,GAAGS,OAAO;EACnB;EAEA,OAAO;IAAEpB,QAAQ;IAAEe,WAAW;IAAED,GAAG;IAAEE;EAAU,CAAC;AAClD;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/utils.js":{"lineLengths":[13,0,46,13,3,50,40,46,17,29,22,16,4,14,1,34,68,63,26,18,5,62,5,1,30,48,7,44,15,61,3,14,1,7,0,33,0],"data":{"version":3,"names":["_caching","require","fs","_fs2","data","makeStaticFileCache","fn","makeStrongCache","filepath","cache","cached","invalidate","fileMtime","readFile","nodeFs","existsSync","statSync","mtime","e","code"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/utils.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\n\nimport { makeStrongCache } from \"../caching.ts\";\nimport type { CacheConfigurator } from \"../caching.ts\";\nimport * as fs from \"../../gensync-utils/fs.ts\";\nimport nodeFs from \"node:fs\";\n\nexport function makeStaticFileCache<T>(\n  fn: (filepath: string, contents: string) => T,\n) {\n  return makeStrongCache(function* (\n    filepath: string,\n    cache: CacheConfigurator<void>,\n  ): Handler<null | T> {\n    const cached = cache.invalidate(() => fileMtime(filepath));\n\n    if (cached === null) {\n      return null;\n    }\n\n    return fn(filepath, yield* fs.readFile(filepath, \"utf8\"));\n  });\n}\n\nfunction fileMtime(filepath: string): number | null {\n  if (!nodeFs.existsSync(filepath)) return null;\n\n  try {\n    return +nodeFs.statSync(filepath).mtime;\n  } catch (e) {\n    if (e.code !== \"ENOENT\" && e.code !== \"ENOTDIR\") throw e;\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;AAEA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,EAAA,GAAAD,OAAA;AACA,SAAAE,KAAA;EAAA,MAAAC,IAAA,GAAAH,OAAA;EAAAE,IAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEO,SAASC,mBAAmBA,CACjCC,EAA6C,EAC7C;EACA,OAAO,IAAAC,wBAAe,EAAC,WACrBC,QAAgB,EAChBC,KAA8B,EACX;IACnB,MAAMC,MAAM,GAAGD,KAAK,CAACE,UAAU,CAAC,MAAMC,SAAS,CAACJ,QAAQ,CAAC,CAAC;IAE1D,IAAIE,MAAM,KAAK,IAAI,EAAE;MACnB,OAAO,IAAI;IACb;IAEA,OAAOJ,EAAE,CAACE,QAAQ,EAAE,OAAON,EAAE,CAACW,QAAQ,CAACL,QAAQ,EAAE,MAAM,CAAC,CAAC;EAC3D,CAAC,CAAC;AACJ;AAEA,SAASI,SAASA,CAACJ,QAAgB,EAAiB;EAClD,IAAI,CAACM,KAAKA,CAAC,CAACC,UAAU,CAACP,QAAQ,CAAC,EAAE,OAAO,IAAI;EAE7C,IAAI;IACF,OAAO,CAACM,KAAKA,CAAC,CAACE,QAAQ,CAACR,QAAQ,CAAC,CAACS,KAAK;EACzC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,IAAID,CAAC,CAACC,IAAI,KAAK,SAAS,EAAE,MAAMD,CAAC;EAC1D;EAEA,OAAO,IAAI;AACb;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/caching.js":{"lineLengths":[13,0,46,13,3,44,42,50,38,46,21,34,26,16,4,14,1,50,33,28,30,2,21,14,1,33,46,1,37,45,1,35,42,1,39,47,1,49,40,41,38,46,54,68,96,42,46,46,19,14,55,68,62,9,12,28,5,54,21,30,32,5,17,4,1,44,37,20,16,12,11,23,38,20,13,8,5,3,10,17,15,4,1,81,61,21,18,3,21,65,23,69,14,20,13,8,5,3,10,17,15,4,1,52,32,60,20,1,57,45,35,22,26,19,22,14,22,9,34,12,22,22,14,33,9,34,12,17,24,26,16,35,11,14,24,16,35,11,36,7,3,1,25,21,24,24,26,29,29,21,24,22,3,12,40,3,10,36,40,46,19,3,13,24,79,5,22,75,5,25,28,3,11,24,79,5,24,77,5,23,28,3,18,24,79,5,39,87,5,28,36,137,38,30,36,19,9,5,32,15,3,23,28,31,3,15,30,29,38,52,7,18,6,3,16,25,3,16,28,3,1,40,25,35,50,13,5,54,3,42,38,66,76,17,1,34,38,333,3,110,94,3,15,1,12,17,26,26,27,43,30,7,3,18,25,25,3,1,7,0,35,0],"data":{"version":3,"names":["_gensync","data","require","_async","_util","synchronize","gen","gensync","sync","genTrue","makeWeakCache","handler","makeCachedFunction","WeakMap","makeWeakCacheSync","makeStrongCache","Map","makeStrongCacheSync","CallCache","callCacheSync","callCacheAsync","futureCache","cachedFunction","arg","asyncContext","isAsync","callCache","cached","getCachedValueOrWait","valid","value","cache","CacheConfigurator","handlerResult","finishLock","isIterableIterator","onFirstPause","setupAsyncLocks","updateFunctionCache","delete","release","getCachedValue","cachedValue","get","waitFor","promise","config","Lock","configured","forever","deactivate","mode","set","validator","push","constructor","_active","_never","_forever","_invalidate","_configured","_pairs","_data","simple","makeSimpleConfigurator","Error","never","using","key","fn","maybeAsync","isThenable","then","invalidate","pairs","cacheFn","val","assertSimpleType","cb","released","_resolve","Promise","resolve"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/caching.ts"],"sourcesContent":["import gensync from \"gensync\";\nimport type { Handler } from \"gensync\";\nimport {\n  maybeAsync,\n  isAsync,\n  onFirstPause,\n  waitFor,\n  isThenable,\n} from \"../gensync-utils/async.ts\";\nimport { isIterableIterator } from \"./util.ts\";\n\nexport type { CacheConfigurator };\n\nexport type SimpleCacheConfigurator = {\n  (forever: boolean): void;\n  <T>(handler: () => T): T;\n\n  forever: () => void;\n  never: () => void;\n  using: <T>(handler: () => T) => T;\n  invalidate: <T>(handler: () => T) => T;\n};\n\nexport type CacheEntry<ResultT, SideChannel> = Array<{\n  value: ResultT;\n  valid: (channel: SideChannel) => Handler<boolean>;\n}>;\n\nconst synchronize = <ArgsT extends unknown[], ResultT>(\n  gen: (...args: ArgsT) => Handler<ResultT>,\n): ((...args: ArgsT) => ResultT) => {\n  return gensync(gen).sync;\n};\n\n// eslint-disable-next-line require-yield\nfunction* genTrue() {\n  return true;\n}\n\nexport function makeWeakCache<ArgT extends object, ResultT, SideChannel>(\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  return makeCachedFunction<ArgT, ResultT, SideChannel>(WeakMap, handler);\n}\n\nexport function makeWeakCacheSync<ArgT extends object, ResultT, SideChannel>(\n  handler: (arg: ArgT, cache?: CacheConfigurator<SideChannel>) => ResultT,\n): (arg: ArgT, data?: SideChannel) => ResultT {\n  return synchronize<[ArgT, SideChannel], ResultT>(\n    makeWeakCache<ArgT, ResultT, SideChannel>(handler),\n  );\n}\n\nexport function makeStrongCache<ArgT, ResultT, SideChannel>(\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  return makeCachedFunction<ArgT, ResultT, SideChannel>(Map, handler);\n}\n\nexport function makeStrongCacheSync<ArgT, ResultT, SideChannel>(\n  handler: (arg: ArgT, cache?: CacheConfigurator<SideChannel>) => ResultT,\n): (arg: ArgT, data?: SideChannel) => ResultT {\n  return synchronize<[ArgT, SideChannel], ResultT>(\n    makeStrongCache<ArgT, ResultT, SideChannel>(handler),\n  );\n}\n\n/* NOTE: Part of the logic explained in this comment is explained in the\n *       getCachedValueOrWait and setupAsyncLocks functions.\n *\n * > There are only two hard things in Computer Science: cache invalidation and naming things.\n * > -- Phil Karlton\n *\n * I don't know if Phil was also thinking about handling a cache whose invalidation function is\n * defined asynchronously is considered, but it is REALLY hard to do correctly.\n *\n * The implemented logic (only when gensync is run asynchronously) is the following:\n *   1. If there is a valid cache associated to the current \"arg\" parameter,\n *       a. RETURN the cached value\n *   3. If there is a FinishLock associated to the current \"arg\" parameter representing a valid cache,\n *       a. Wait for that lock to be released\n *       b. RETURN the value associated with that lock\n *   5. Start executing the function to be cached\n *       a. If it pauses on a promise, then\n *           i. Let FinishLock be a new lock\n *          ii. Store FinishLock as associated to the current \"arg\" parameter\n *         iii. Wait for the function to finish executing\n *          iv. Release FinishLock\n *           v. Send the function result to anyone waiting on FinishLock\n *   6. Store the result in the cache\n *   7. RETURN the result\n */\nfunction makeCachedFunction<ArgT, ResultT, SideChannel>(\n  CallCache: new <Cached>() => CacheMap<ArgT, Cached, SideChannel>,\n  handler: (\n    arg: ArgT,\n    cache: CacheConfigurator<SideChannel>,\n  ) => Handler<ResultT> | ResultT,\n): (arg: ArgT, data: SideChannel) => Handler<ResultT> {\n  const callCacheSync = new CallCache<ResultT>();\n  const callCacheAsync = new CallCache<ResultT>();\n  const futureCache = new CallCache<Lock<ResultT>>();\n\n  return function* cachedFunction(arg: ArgT, data: SideChannel) {\n    const asyncContext = yield* isAsync();\n    const callCache = asyncContext ? callCacheAsync : callCacheSync;\n\n    const cached = yield* getCachedValueOrWait<ArgT, ResultT, SideChannel>(\n      asyncContext,\n      callCache,\n      futureCache,\n      arg,\n      data,\n    );\n    if (cached.valid) return cached.value;\n\n    const cache = new CacheConfigurator(data);\n\n    const handlerResult: Handler<ResultT> | ResultT = handler(arg, cache);\n\n    let finishLock: Lock<ResultT>;\n    let value: ResultT;\n\n    if (isIterableIterator(handlerResult)) {\n      value = yield* onFirstPause(handlerResult, () => {\n        finishLock = setupAsyncLocks(cache, futureCache, arg);\n      });\n    } else {\n      value = handlerResult;\n    }\n\n    updateFunctionCache(callCache, cache, arg, value);\n\n    if (finishLock) {\n      futureCache.delete(arg);\n      finishLock.release(value);\n    }\n\n    return value;\n  };\n}\n\ntype CacheMap<ArgT, ResultT, SideChannel> =\n  | Map<ArgT, CacheEntry<ResultT, SideChannel>>\n  // @ts-expect-error todo(flow->ts): add `extends object` constraint to ArgT\n  | WeakMap<ArgT, CacheEntry<ResultT, SideChannel>>;\n\nfunction* getCachedValue<ArgT, ResultT, SideChannel>(\n  cache: CacheMap<ArgT, ResultT, SideChannel>,\n  arg: ArgT,\n  data: SideChannel,\n): Handler<{ valid: true; value: ResultT } | { valid: false; value: null }> {\n  const cachedValue: CacheEntry<ResultT, SideChannel> | void = cache.get(arg);\n\n  if (cachedValue) {\n    for (const { value, valid } of cachedValue) {\n      if (yield* valid(data)) return { valid: true, value };\n    }\n  }\n\n  return { valid: false, value: null };\n}\n\nfunction* getCachedValueOrWait<ArgT, ResultT, SideChannel>(\n  asyncContext: boolean,\n  callCache: CacheMap<ArgT, ResultT, SideChannel>,\n  futureCache: CacheMap<ArgT, Lock<ResultT>, SideChannel>,\n  arg: ArgT,\n  data: SideChannel,\n): Handler<{ valid: true; value: ResultT } | { valid: false; value: null }> {\n  const cached = yield* getCachedValue(callCache, arg, data);\n  if (cached.valid) {\n    return cached;\n  }\n\n  if (asyncContext) {\n    const cached = yield* getCachedValue(futureCache, arg, data);\n    if (cached.valid) {\n      const value = yield* waitFor<ResultT>(cached.value.promise);\n      return { valid: true, value };\n    }\n  }\n\n  return { valid: false, value: null };\n}\n\nfunction setupAsyncLocks<ArgT, ResultT, SideChannel>(\n  config: CacheConfigurator<SideChannel>,\n  futureCache: CacheMap<ArgT, Lock<ResultT>, SideChannel>,\n  arg: ArgT,\n): Lock<ResultT> {\n  const finishLock = new Lock<ResultT>();\n\n  updateFunctionCache(futureCache, config, arg, finishLock);\n\n  return finishLock;\n}\n\nfunction updateFunctionCache<\n  ArgT,\n  ResultT,\n  SideChannel,\n  Cache extends CacheMap<ArgT, ResultT, SideChannel>,\n>(\n  cache: Cache,\n  config: CacheConfigurator<SideChannel>,\n  arg: ArgT,\n  value: ResultT,\n) {\n  if (!config.configured()) config.forever();\n\n  let cachedValue: CacheEntry<ResultT, SideChannel> | void = cache.get(arg);\n\n  config.deactivate();\n\n  switch (config.mode()) {\n    case \"forever\":\n      cachedValue = [{ value, valid: genTrue }];\n      cache.set(arg, cachedValue);\n      break;\n    case \"invalidate\":\n      cachedValue = [{ value, valid: config.validator() }];\n      cache.set(arg, cachedValue);\n      break;\n    case \"valid\":\n      if (cachedValue) {\n        cachedValue.push({ value, valid: config.validator() });\n      } else {\n        cachedValue = [{ value, valid: config.validator() }];\n        cache.set(arg, cachedValue);\n      }\n  }\n}\n\nclass CacheConfigurator<SideChannel = void> {\n  _active: boolean = true;\n  _never: boolean = false;\n  _forever: boolean = false;\n  _invalidate: boolean = false;\n\n  _configured: boolean = false;\n\n  _pairs: Array<\n    [cachedValue: unknown, handler: (data: SideChannel) => Handler<unknown>]\n  > = [];\n\n  _data: SideChannel;\n\n  constructor(data: SideChannel) {\n    this._data = data;\n  }\n\n  simple() {\n    return makeSimpleConfigurator(this);\n  }\n\n  mode() {\n    if (this._never) return \"never\";\n    if (this._forever) return \"forever\";\n    if (this._invalidate) return \"invalidate\";\n    return \"valid\";\n  }\n\n  forever() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._never) {\n      throw new Error(\"Caching has already been configured with .never()\");\n    }\n    this._forever = true;\n    this._configured = true;\n  }\n\n  never() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._forever) {\n      throw new Error(\"Caching has already been configured with .forever()\");\n    }\n    this._never = true;\n    this._configured = true;\n  }\n\n  using<T>(handler: (data: SideChannel) => T): T {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n    if (this._never || this._forever) {\n      throw new Error(\n        \"Caching has already been configured with .never or .forever()\",\n      );\n    }\n    this._configured = true;\n\n    const key = handler(this._data);\n\n    const fn = maybeAsync(\n      handler,\n      `You appear to be using an async cache handler, but Babel has been called synchronously`,\n    );\n\n    if (isThenable(key)) {\n      // @ts-expect-error todo(flow->ts): improve function return type annotation\n      return key.then((key: unknown) => {\n        this._pairs.push([key, fn]);\n        return key;\n      });\n    }\n\n    this._pairs.push([key, fn]);\n    return key;\n  }\n\n  invalidate<T>(handler: (data: SideChannel) => T): T {\n    this._invalidate = true;\n    return this.using(handler);\n  }\n\n  validator(): (data: SideChannel) => Handler<boolean> {\n    const pairs = this._pairs;\n    return function* (data: SideChannel) {\n      for (const [key, fn] of pairs) {\n        if (key !== (yield* fn(data))) return false;\n      }\n      return true;\n    };\n  }\n\n  deactivate() {\n    this._active = false;\n  }\n\n  configured() {\n    return this._configured;\n  }\n}\n\nfunction makeSimpleConfigurator(\n  cache: CacheConfigurator<any>,\n): SimpleCacheConfigurator {\n  function cacheFn(val: any) {\n    if (typeof val === \"boolean\") {\n      if (val) cache.forever();\n      else cache.never();\n      return;\n    }\n\n    return cache.using(() => assertSimpleType(val()));\n  }\n  cacheFn.forever = () => cache.forever();\n  cacheFn.never = () => cache.never();\n  cacheFn.using = (cb: () => SimpleType) =>\n    cache.using(() => assertSimpleType(cb()));\n  cacheFn.invalidate = (cb: () => SimpleType) =>\n    cache.invalidate(() => assertSimpleType(cb()));\n\n  return cacheFn as any;\n}\n\n// Types are limited here so that in the future these values can be used\n// as part of Babel's caching logic.\nexport type SimpleType =\n  | string\n  | boolean\n  | number\n  | null\n  | void\n  | Promise<SimpleType>;\nexport function assertSimpleType(value: unknown): SimpleType {\n  if (isThenable(value)) {\n    throw new Error(\n      `You appear to be using an async cache handler, ` +\n        `which your current version of Babel does not support. ` +\n        `We may add support for this in the future, ` +\n        `but if you're on the most recent version of @babel/core and still ` +\n        `seeing this error, then you'll need to synchronously handle your caching logic.`,\n    );\n  }\n\n  if (\n    value != null &&\n    typeof value !== \"string\" &&\n    typeof value !== \"boolean\" &&\n    typeof value !== \"number\"\n  ) {\n    throw new Error(\n      \"Cache keys must be either string, boolean, number, null, or undefined.\",\n    );\n  }\n  // @ts-expect-error Type 'unknown' is not assignable to type 'SimpleType'. This can be removed\n  // when strictNullCheck is enabled\n  return value;\n}\n\nclass Lock<T> {\n  released: boolean = false;\n  promise: Promise<T>;\n  _resolve: (value: T) => void;\n\n  constructor() {\n    this.promise = new Promise(resolve => {\n      this._resolve = resolve;\n    });\n  }\n\n  release(value: T) {\n    this.released = true;\n    this._resolve(value);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/async.js":{"lineLengths":[13,0,46,13,3,36,25,32,32,48,21,34,26,16,4,14,1,169,321,50,21,3,46,20,31,3,34,21,19,42,55,20,6,20,51,5,5,1,29,25,22,49,25,7,31,41,6,5,3,35,31,27,28,23,5,1,56,23,11,25,35,4,44,26,48,23,21,7,21,19,5,3,3,46,15,22,49,15,7,32,42,6,5,3,26,121,1,7,0,33,0],"data":{"version":3,"names":["_gensync","data","require","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","runGenerator","gensync","item","isAsync","exports","sync","errback","cb","maybeAsync","fn","message","args","result","isThenable","Error","async","withKind","_ref","_x","forwardAsync","action","g","kind","adapted","onFirstPause","name","arity","firstPause","completed","err","waitFor","x","_ref2","_x2","val"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/gensync-utils/async.ts"],"sourcesContent":["import gensync, { type Gensync, type Handler, type Callback } from \"gensync\";\n\ntype MaybePromise<T> = T | Promise<T>;\n\nconst runGenerator: {\n  sync<Return>(gen: Handler<Return>): Return;\n  async<Return>(gen: Handler<Return>): Promise<Return>;\n  errback<Return>(gen: Handler<Return>, cb: Callback<Return>): void;\n} = gensync(function* (item: Handler<any>): Handler<any> {\n  return yield* item;\n});\n\n// This Gensync returns true if the current execution context is\n// asynchronous, otherwise it returns false.\nexport const isAsync = gensync({\n  sync: () => false,\n  errback: cb => cb(null, true),\n});\n\n// This function wraps any functions (which could be either synchronous or\n// asynchronous) with a Gensync. If the wrapped function returns a promise\n// but the current execution context is synchronous, it will throw the\n// provided error.\n// This is used to handle user-provided functions which could be asynchronous.\nexport function maybeAsync<Args extends unknown[], Return>(\n  fn: (...args: Args) => Return,\n  message: string,\n): Gensync<Args, Return> {\n  return gensync({\n    sync(...args) {\n      const result = fn.apply(this, args);\n      if (isThenable(result)) throw new Error(message);\n      return result;\n    },\n    async(...args) {\n      return Promise.resolve(fn.apply(this, args));\n    },\n  });\n}\n\nconst withKind = gensync({\n  sync: cb => cb(\"sync\"),\n  async: async cb => cb(\"async\"),\n}) as <T>(cb: (kind: \"sync\" | \"async\") => MaybePromise<T>) => Handler<T>;\n\n// This function wraps a generator (or a Gensync) into another function which,\n// when called, will run the provided generator in a sync or async way, depending\n// on the execution context where this forwardAsync function is called.\n// This is useful, for example, when passing a callback to a function which isn't\n// aware of gensync, but it only knows about synchronous and asynchronous functions.\n// An example is cache.using, which being exposed to the user must be as simple as\n// possible:\n//     yield* forwardAsync(gensyncFn, wrappedFn =>\n//       cache.using(x => {\n//         // Here we don't know about gensync. wrappedFn is a\n//         // normal sync or async function\n//         return wrappedFn(x);\n//       })\n//     )\nexport function forwardAsync<Args extends unknown[], Return>(\n  action: (...args: Args) => Handler<Return>,\n  cb: (\n    adapted: (...args: Args) => MaybePromise<Return>,\n  ) => MaybePromise<Return>,\n): Handler<Return> {\n  const g = gensync(action);\n  return withKind(kind => {\n    const adapted = g[kind];\n    return cb(adapted);\n  });\n}\n\n// If the given generator is executed asynchronously, the first time that it\n// is paused (i.e. When it yields a gensync generator which can't be run\n// synchronously), call the \"firstPause\" callback.\nexport const onFirstPause = gensync<\n  [gen: Handler<unknown>, firstPause: () => void],\n  unknown\n>({\n  name: \"onFirstPause\",\n  arity: 2,\n  sync: function (item) {\n    return runGenerator.sync(item);\n  },\n  errback: function (item, firstPause, cb) {\n    let completed = false;\n\n    runGenerator.errback(item, (err, value) => {\n      completed = true;\n      cb(err, value);\n    });\n\n    if (!completed) {\n      firstPause();\n    }\n  },\n}) as <T>(gen: Handler<T>, firstPause: () => void) => Handler<T>;\n\n// Wait for the given promise to be resolved\nexport const waitFor = gensync({\n  sync: x => x,\n  async: async x => x,\n}) as <T>(p: T | Promise<T>) => Handler<T>;\n\nexport function isThenable<T = any>(val: any): val is PromiseLike<T> {\n  return (\n    !!val &&\n    (typeof val === \"object\" || typeof val === \"function\") &&\n    !!val.then &&\n    typeof val.then === \"function\"\n  );\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/util.js":{"lineLengths":[13,0,46,13,3,48,36,39,40,92,35,54,48,12,28,45,5,3,1,45,40,26,43,3,1,36,101,1,7,0,32,0],"data":{"version":3,"names":["mergeOptions","target","source","k","Object","keys","parserOpts","targetObj","mergeDefaultFields","val","undefined","isIterableIterator","value","next","Symbol","iterator"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/util.ts"],"sourcesContent":["import type {\n  ValidatedOptions,\n  NormalizedOptions,\n} from \"./validation/options.ts\";\n\nexport function mergeOptions(\n  target: ValidatedOptions,\n  source: ValidatedOptions | NormalizedOptions,\n): void {\n  for (const k of Object.keys(source)) {\n    if (\n      (k === \"parserOpts\" || k === \"generatorOpts\" || k === \"assumptions\") &&\n      source[k]\n    ) {\n      const parserOpts = source[k];\n      const targetObj = target[k] || (target[k] = {});\n      mergeDefaultFields(targetObj, parserOpts);\n    } else {\n      //@ts-expect-error k must index source\n      const val = source[k];\n      //@ts-expect-error assigning source to target\n      if (val !== undefined) target[k] = val as any;\n    }\n  }\n}\n\nfunction mergeDefaultFields<T extends object>(target: T, source: T) {\n  for (const k of Object.keys(source) as (keyof T)[]) {\n    const val = source[k];\n    if (val !== undefined) target[k] = val;\n  }\n}\n\nexport function isIterableIterator(value: any): value is IterableIterator<any> {\n  return (\n    !!value &&\n    typeof value.next === \"function\" &&\n    typeof value[Symbol.iterator] === \"function\"\n  );\n}\n"],"mappings":";;;;;;;AAKO,SAASA,YAAYA,CAC1BC,MAAwB,EACxBC,MAA4C,EACtC;EACN,KAAK,MAAMC,CAAC,IAAIC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,EAAE;IACnC,IACE,CAACC,CAAC,KAAK,YAAY,IAAIA,CAAC,KAAK,eAAe,IAAIA,CAAC,KAAK,aAAa,KACnED,MAAM,CAACC,CAAC,CAAC,EACT;MACA,MAAMG,UAAU,GAAGJ,MAAM,CAACC,CAAC,CAAC;MAC5B,MAAMI,SAAS,GAAGN,MAAM,CAACE,CAAC,CAAC,KAAKF,MAAM,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC/CK,kBAAkB,CAACD,SAAS,EAAED,UAAU,CAAC;IAC3C,CAAC,MAAM;MAEL,MAAMG,GAAG,GAAGP,MAAM,CAACC,CAAC,CAAC;MAErB,IAAIM,GAAG,KAAKC,SAAS,EAAET,MAAM,CAACE,CAAC,CAAC,GAAGM,GAAU;IAC/C;EACF;AACF;AAEA,SAASD,kBAAkBA,CAAmBP,MAAS,EAAEC,MAAS,EAAE;EAClE,KAAK,MAAMC,CAAC,IAAIC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,EAAiB;IAClD,MAAMO,GAAG,GAAGP,MAAM,CAACC,CAAC,CAAC;IACrB,IAAIM,GAAG,KAAKC,SAAS,EAAET,MAAM,CAACE,CAAC,CAAC,GAAGM,GAAG;EACxC;AACF;AAEO,SAASE,kBAAkBA,CAACC,KAAU,EAAkC;EAC7E,OACE,CAAC,CAACA,KAAK,IACP,OAAOA,KAAK,CAACC,IAAI,KAAK,UAAU,IAChC,OAAOD,KAAK,CAACE,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU;AAEhD;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/fs.js":{"lineLengths":[13,0,46,13,3,41,16,29,21,16,4,14,1,21,34,26,16,4,14,1,48,27,25,3,40,23,21,3,7,0,30,0],"data":{"version":3,"names":["_fs","data","require","_gensync","readFile","exports","gensync","sync","fs","readFileSync","errback","stat","statSync"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/gensync-utils/fs.ts"],"sourcesContent":["import fs from \"node:fs\";\nimport gensync from \"gensync\";\n\nexport const readFile = gensync<[filepath: string, encoding: \"utf8\"], string>({\n  sync: fs.readFileSync,\n  errback: fs.readFile,\n});\n\nexport const stat = gensync({\n  sync: fs.statSync,\n  errback: fs.stat,\n});\n"],"mappings":";;;;;;AAAA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,SAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,QAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEO,MAAMG,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAGE,SAAMA,CAAC,CAA+C;EAC5EC,IAAI,EAAEC,IAACA,CAAC,CAACC,YAAY;EACrBC,OAAO,EAAEF,IAACA,CAAC,CAACJ;AACd,CAAC,CAAC;AAEK,MAAMO,IAAI,GAAAN,OAAA,CAAAM,IAAA,GAAGL,SAAMA,CAAC,CAAC;EAC1BC,IAAI,EAAEC,IAACA,CAAC,CAACI,QAAQ;EACjBF,OAAO,EAAEF,IAACA,CAAC,CAACG;AACd,CAAC,CAAC;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/errors/config-error.js":{"lineLengths":[13,0,46,13,3,25,61,33,34,19,48,82,3,1,30,7,0,40,0],"data":{"version":3,"names":["_rewriteStackTrace","require","ConfigError","Error","constructor","message","filename","expectedError","injectVirtualStackFrame","exports","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/errors/config-error.ts"],"sourcesContent":["import {\n  injectVirtualStackFrame,\n  expectedError,\n} from \"./rewrite-stack-trace.ts\";\n\nexport default class ConfigError extends Error {\n  constructor(message: string, filename?: string) {\n    super(message);\n    expectedError(this);\n    if (filename) injectVirtualStackFrame(this, filename);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAKe,MAAMC,WAAW,SAASC,KAAK,CAAC;EAC7CC,WAAWA,CAACC,OAAe,EAAEC,QAAiB,EAAE;IAC9C,KAAK,CAACD,OAAO,CAAC;IACd,IAAAE,gCAAa,EAAC,IAAI,CAAC;IACnB,IAAID,QAAQ,EAAE,IAAAE,0CAAuB,EAAC,IAAI,EAAEF,QAAQ,CAAC;EACvD;AACF;AAACG,OAAA,CAAAC,OAAA,GAAAR,WAAA;AAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/errors/rewrite-stack-trace.js":{"lineLengths":[13,0,46,13,3,52,48,38,58,26,67,192,66,64,37,36,29,24,26,31,27,32,35,37,37,35,33,28,5,1,51,25,40,53,34,15,1,31,25,28,15,1,35,28,51,29,23,14,22,5,1,33,28,51,23,14,23,5,1,35,36,9,48,12,35,108,69,22,47,51,44,46,34,26,40,34,29,39,56,11,42,27,16,9,39,32,7,5,44,4,1,47,52,68,1,7,0,47,0],"data":{"version":3,"names":["ErrorToString","Function","call","bind","Error","prototype","toString","SUPPORTED","captureStackTrace","_Object$getOwnPropert","Object","getOwnPropertyDescriptor","writable","START_HIDING","STOP_HIDING","expectedErrors","WeakSet","virtualFrames","WeakMap","CallSite","filename","create","isNative","isConstructor","isToplevel","getFileName","getLineNumber","undefined","getColumnNumber","getFunctionName","getMethodName","getTypeName","injectVirtualStackFrame","error","frames","get","set","push","expectedError","add","beginHiddenCallStack","fn","defineProperty","args","setupPrepareStackTrace","value","endHiddenCallStack","prepareStackTrace","defaultPrepareStackTrace","MIN_STACK_TRACE_LIMIT","stackTraceLimit","Math","max","stackTraceRewriter","err","trace","newTrace","isExpected","has","status","i","length","name","unshift","join"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/errors/rewrite-stack-trace.ts"],"sourcesContent":["/**\n * This file uses the internal V8 Stack Trace API (https://v8.dev/docs/stack-trace-api)\n * to provide utilities to rewrite the stack trace.\n * When this API is not present, all the functions in this file become noops.\n *\n * beginHiddenCallStack(fn) and endHiddenCallStack(fn) wrap their parameter to\n * mark an hidden portion of the stack trace. The function passed to\n * beginHiddenCallStack is the first hidden function, while the function passed\n * to endHiddenCallStack is the first shown function.\n *\n * When an error is thrown _outside_ of the hidden zone, everything between\n * beginHiddenCallStack and endHiddenCallStack will not be shown.\n * If an error is thrown _inside_ the hidden zone, then the whole stack trace\n * will be visible: this is to avoid hiding real bugs.\n * However, if an error inside the hidden zone is expected, it can be marked\n * with the expectedError(error) function to keep the hidden frames hidden.\n *\n * Consider this call stack (the outer function is the bottom one):\n *\n *   1. a()\n *   2. endHiddenCallStack(b)()\n *   3. c()\n *   4. beginHiddenCallStack(d)()\n *   5. e()\n *   6. f()\n *\n * - If a() throws an error, then its shown call stack will be \"a, b, e, f\"\n * - If b() throws an error, then its shown call stack will be \"b, e, f\"\n * - If c() throws an expected error, then its shown call stack will be \"e, f\"\n * - If c() throws an unexpected error, then its shown call stack will be \"c, d, e, f\"\n * - If d() throws an expected error, then its shown call stack will be \"e, f\"\n * - If d() throws an unexpected error, then its shown call stack will be \"d, e, f\"\n * - If e() throws an error, then its shown call stack will be \"e, f\"\n *\n * Additionally, an error can inject additional \"virtual\" stack frames using the\n * injectVirtualStackFrame(error, filename) function: those are injected as a\n * replacement of the hidden frames.\n * In the example above, if we called injectVirtualStackFrame(err, \"h\") and\n * injectVirtualStackFrame(err, \"i\") on the expected error thrown by c(), its\n * shown call stack would have been \"h, i, e, f\".\n * This can be useful, for example, to report config validation errors as if they\n * were directly thrown in the config file.\n */\n\nconst ErrorToString = Function.call.bind(Error.prototype.toString);\n\nconst SUPPORTED =\n  !!Error.captureStackTrace &&\n  Object.getOwnPropertyDescriptor(Error, \"stackTraceLimit\")?.writable === true;\n\nconst START_HIDING = \"startHiding - secret - don't use this - v1\";\nconst STOP_HIDING = \"stopHiding - secret - don't use this - v1\";\n\ntype CallSite = NodeJS.CallSite;\n\nconst expectedErrors = new WeakSet<Error>();\nconst virtualFrames = new WeakMap<Error, CallSite[]>();\n\nfunction CallSite(filename: string): CallSite {\n  // We need to use a prototype otherwise it breaks source-map-support's internals\n  return Object.create({\n    isNative: () => false,\n    isConstructor: () => false,\n    isToplevel: () => true,\n    getFileName: () => filename,\n    getLineNumber: () => undefined,\n    getColumnNumber: () => undefined,\n    getFunctionName: () => undefined,\n    getMethodName: () => undefined,\n    getTypeName: () => undefined,\n    toString: () => filename,\n  } as CallSite);\n}\n\nexport function injectVirtualStackFrame(error: Error, filename: string) {\n  if (!SUPPORTED) return;\n\n  let frames = virtualFrames.get(error);\n  if (!frames) virtualFrames.set(error, (frames = []));\n  frames.push(CallSite(filename));\n\n  return error;\n}\n\nexport function expectedError(error: Error) {\n  if (!SUPPORTED) return;\n  expectedErrors.add(error);\n  return error;\n}\n\nexport function beginHiddenCallStack<A extends unknown[], R>(\n  fn: (...args: A) => R,\n) {\n  if (!SUPPORTED) return fn;\n\n  return Object.defineProperty(\n    function (...args: A) {\n      setupPrepareStackTrace();\n      return fn(...args);\n    },\n    \"name\",\n    { value: STOP_HIDING },\n  );\n}\n\nexport function endHiddenCallStack<A extends unknown[], R>(\n  fn: (...args: A) => R,\n) {\n  if (!SUPPORTED) return fn;\n\n  return Object.defineProperty(\n    function (...args: A) {\n      return fn(...args);\n    },\n    \"name\",\n    { value: START_HIDING },\n  );\n}\n\nfunction setupPrepareStackTrace() {\n  // @ts-expect-error This function is a singleton\n  setupPrepareStackTrace = () => {};\n\n  const { prepareStackTrace = defaultPrepareStackTrace } = Error;\n\n  // We add some extra frames to Error.stackTraceLimit, so that we can\n  // always show some useful frames even after deleting ours.\n  // STACK_TRACE_LIMIT_DELTA should be around the maximum expected number\n  // of internal frames, and not too big because capturing the stack trace\n  // is slow (this is why Error.stackTraceLimit does not default to Infinity!).\n  // Increase it if needed.\n  // However, we only do it if the user did not explicitly set it to 0.\n  const MIN_STACK_TRACE_LIMIT = 50;\n  Error.stackTraceLimit &&= Math.max(\n    Error.stackTraceLimit,\n    MIN_STACK_TRACE_LIMIT,\n  );\n\n  Error.prepareStackTrace = function stackTraceRewriter(err, trace) {\n    let newTrace = [];\n\n    const isExpected = expectedErrors.has(err);\n    let status: \"showing\" | \"hiding\" | \"unknown\" = isExpected\n      ? \"hiding\"\n      : \"unknown\";\n    for (let i = 0; i < trace.length; i++) {\n      const name = trace[i].getFunctionName();\n      if (name === START_HIDING) {\n        status = \"hiding\";\n      } else if (name === STOP_HIDING) {\n        if (status === \"hiding\") {\n          status = \"showing\";\n          if (virtualFrames.has(err)) {\n            newTrace.unshift(...virtualFrames.get(err));\n          }\n        } else if (status === \"unknown\") {\n          // Unexpected internal error, show the full stack trace\n          newTrace = trace;\n          break;\n        }\n      } else if (status !== \"hiding\") {\n        newTrace.push(trace[i]);\n      }\n    }\n\n    return prepareStackTrace(err, newTrace);\n  };\n}\n\nfunction defaultPrepareStackTrace(err: Error, trace: CallSite[]) {\n  if (trace.length === 0) return ErrorToString(err);\n  return `${ErrorToString(err)}\\n    at ${trace.join(\"\\n    at \")}`;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/configuration.js":{"lineLengths":[13,0,46,13,3,39,46,48,40,32,54,19,32,24,16,4,14,1,16,29,21,16,4,14,1,18,31,23,16,4,14,1,18,32,23,16,4,14,1,21,34,26,16,4,14,1,40,53,35,48,56,59,46,18,72,53,67,163,127,44,83,12,10,103,48,4,3,42,47,459,38,38,6,14,29,41,3,74,103,3,43,53,351,3,58,50,1,29,51,50,31,59,3,55,20,18,15,41,13,6,52,3,20,1,70,35,39,76,87,3,10,28,26,18,4,3,80,14,7,37,17,92,3,79,36,89,3,31,87,3,25,10,13,39,11,4,3,81,46,106,41,29,91,5,3,10,13,39,91,4,3,37,24,12,51,62,23,7,5,45,35,22,3,14,1,60,20,20,56,46,18,27,224,5,18,64,50,19,68,7,5,3,10,11,10,4,1,51,72,1,81,125,61,35,199,5,36,21,15,71,3,16,1,54,173,14,32,60,20,50,32,12,12,20,5,60,14,91,3,52,14,1,48,40,16,15,16,16,15,16,16,39,16,14,9,12,39,3,1,42,55,27,62,47,26,125,5,24,3,14,1,37,35,96,79,0,32,35,0,73,18,0,70,19,0,96,66,50,0,94,76,70,0,95,95,63,81,0,84,41,42,39,0,42,13,15,1,7,0,41,0],"data":{"version":3,"names":["_debug","data","require","_fs","_path","_json","_gensync","_caching","_configApi","_utils","_moduleTypes","_patternToRegex","_configError","fs","_rewriteStackTrace","_async","debug","buildDebug","ROOT_CONFIG_FILENAMES","exports","RELATIVE_CONFIG_FILENAMES","BABELIGNORE_FILENAME","runConfig","makeWeakCache","options","cache","endHiddenCallStack","makeConfigAPI","cacheNeedsConfiguration","configured","readConfigCode","filepath","nodeFs","existsSync","loadCodeDefault","isAsync","Array","isArray","ConfigError","then","catch","throwConfigError","buildConfigFileObject","cfboaf","WeakMap","configFilesByFilepath","get","set","Map","configFile","dirname","path","packageToBabelConfig","makeWeakCacheSync","file","babel","undefined","readConfigJSON5","makeStaticFileCache","content","json5","parse","err","message","$schema","readIgnoreConfig","ignoreDir","ignorePatterns","split","map","line","replace","trim","filter","Boolean","pattern","ignore","pathPatternToRegex","findConfigUpwards","rootDir","filename","join","nextDir","findRelativeConfig","packageData","envName","caller","config","loc","directories","_packageData$pkg","loadOneConfig","pkg","ignoreLoc","findRootConfig","names","previousConfig","configs","gensync","all","readConfig","reduce","basename","loadConfig","name","v","w","process","versions","node","resolve","r","paths","b","M","f","_findPath","_nodeModulePaths","concat","Error","code","conf","ext","extname","resolveShowConfigPath","targetPath","env","BABEL_SHOW_CONFIG_FOR","absolutePath","stats","stat","isFile"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/configuration.ts"],"sourcesContent":["import buildDebug from \"debug\";\nimport nodeFs from \"node:fs\";\nimport path from \"node:path\";\nimport json5 from \"json5\";\nimport gensync from \"gensync\";\nimport type { Handler } from \"gensync\";\nimport { makeWeakCache, makeWeakCacheSync } from \"../caching.ts\";\nimport type { CacheConfigurator } from \"../caching.ts\";\nimport { makeConfigAPI } from \"../helpers/config-api.ts\";\nimport type { ConfigAPI } from \"../helpers/config-api.ts\";\nimport { makeStaticFileCache } from \"./utils.ts\";\nimport loadCodeDefault from \"./module-types.ts\";\nimport pathPatternToRegex from \"../pattern-to-regex.ts\";\nimport type { FilePackageData, RelativeConfig, ConfigFile } from \"./types.ts\";\nimport type { CallerMetadata, InputOptions } from \"../validation/options.ts\";\nimport ConfigError from \"../../errors/config-error.ts\";\n\nimport * as fs from \"../../gensync-utils/fs.ts\";\n\nimport { createRequire } from \"node:module\";\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace.ts\";\nimport { isAsync } from \"../../gensync-utils/async.ts\";\nconst require = createRequire(import.meta.url);\n\nconst debug = buildDebug(\"babel:config:loading:files:configuration\");\n\nexport const ROOT_CONFIG_FILENAMES = [\n  \"babel.config.js\",\n  \"babel.config.cjs\",\n  \"babel.config.mjs\",\n  \"babel.config.json\",\n  \"babel.config.cts\",\n];\nconst RELATIVE_CONFIG_FILENAMES = [\n  \".babelrc\",\n  \".babelrc.js\",\n  \".babelrc.cjs\",\n  \".babelrc.mjs\",\n  \".babelrc.json\",\n  \".babelrc.cts\",\n];\n\nconst BABELIGNORE_FILENAME = \".babelignore\";\n\ntype ConfigCacheData = {\n  envName: string;\n  caller: CallerMetadata | undefined;\n};\n\nconst runConfig = makeWeakCache(function* runConfig(\n  options: Function,\n  cache: CacheConfigurator<ConfigCacheData>,\n): Handler<{\n  options: InputOptions | null;\n  cacheNeedsConfiguration: boolean;\n}> {\n  // if we want to make it possible to use async configs\n  yield* [];\n\n  return {\n    options: endHiddenCallStack(options as any as (api: ConfigAPI) => unknown)(\n      makeConfigAPI(cache),\n    ),\n    cacheNeedsConfiguration: !cache.configured(),\n  };\n});\n\nfunction* readConfigCode(\n  filepath: string,\n  data: ConfigCacheData,\n): Handler<ConfigFile | null> {\n  if (!nodeFs.existsSync(filepath)) return null;\n\n  let options = yield* loadCodeDefault(\n    filepath,\n    (yield* isAsync()) ? \"auto\" : \"require\",\n    \"You appear to be using a native ECMAScript module configuration \" +\n      \"file, which is only supported when running Babel asynchronously \" +\n      \"or when using the Node.js `--experimental-require-module` flag.\",\n    \"You appear to be using a configuration file that contains top-level \" +\n      \"await, which is only supported when running Babel asynchronously.\",\n  );\n\n  let cacheNeedsConfiguration = false;\n  if (typeof options === \"function\") {\n    ({ options, cacheNeedsConfiguration } = yield* runConfig(options, data));\n  }\n\n  if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n    throw new ConfigError(\n      `Configuration should be an exported JavaScript object.`,\n      filepath,\n    );\n  }\n\n  // @ts-expect-error todo(flow->ts)\n  if (typeof options.then === \"function\") {\n    // @ts-expect-error We use ?. in case options is a thenable but not a promise\n    options.catch?.(() => {});\n    throw new ConfigError(\n      `You appear to be using an async configuration, ` +\n        `which your current version of Babel does not support. ` +\n        `We may add support for this in the future, ` +\n        `but if you're on the most recent version of @babel/core and still ` +\n        `seeing this error, then you'll need to synchronously return your config.`,\n      filepath,\n    );\n  }\n\n  if (cacheNeedsConfiguration) throwConfigError(filepath);\n\n  return buildConfigFileObject(options, filepath);\n}\n\n// We cache the generated ConfigFile object rather than creating a new one\n// every time, so that it can be used as a cache key in other functions.\nconst cfboaf /* configFilesByOptionsAndFilepath */ = new WeakMap<\n  InputOptions,\n  Map<string, ConfigFile>\n>();\nfunction buildConfigFileObject(\n  options: InputOptions,\n  filepath: string,\n): ConfigFile {\n  let configFilesByFilepath = cfboaf.get(options);\n  if (!configFilesByFilepath) {\n    cfboaf.set(options, (configFilesByFilepath = new Map()));\n  }\n\n  let configFile = configFilesByFilepath.get(filepath);\n  if (!configFile) {\n    configFile = {\n      filepath,\n      dirname: path.dirname(filepath),\n      options,\n    };\n    configFilesByFilepath.set(filepath, configFile);\n  }\n\n  return configFile;\n}\n\nconst packageToBabelConfig = makeWeakCacheSync(\n  (file: ConfigFile): ConfigFile | null => {\n    const babel: unknown = file.options.babel;\n\n    if (babel === undefined) return null;\n\n    if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n      throw new ConfigError(`.babel property must be an object`, file.filepath);\n    }\n\n    return {\n      filepath: file.filepath,\n      dirname: file.dirname,\n      options: babel,\n    };\n  },\n);\n\nconst readConfigJSON5 = makeStaticFileCache((filepath, content): ConfigFile => {\n  let options;\n  try {\n    options = json5.parse(content);\n  } catch (err) {\n    throw new ConfigError(\n      `Error while parsing config - ${err.message}`,\n      filepath,\n    );\n  }\n\n  if (!options) throw new ConfigError(`No config detected`, filepath);\n\n  if (typeof options !== \"object\") {\n    throw new ConfigError(`Config returned typeof ${typeof options}`, filepath);\n  }\n  if (Array.isArray(options)) {\n    throw new ConfigError(`Expected config object but found array`, filepath);\n  }\n\n  delete options.$schema;\n\n  return {\n    filepath,\n    dirname: path.dirname(filepath),\n    options,\n  };\n});\n\nconst readIgnoreConfig = makeStaticFileCache((filepath, content) => {\n  const ignoreDir = path.dirname(filepath);\n  const ignorePatterns = content\n    .split(\"\\n\")\n    .map(line =>\n      line.replace(process.env.BABEL_8_BREAKING ? /^#.*$/ : /#.*$/, \"\").trim(),\n    )\n    .filter(Boolean);\n\n  for (const pattern of ignorePatterns) {\n    if (pattern[0] === \"!\") {\n      throw new ConfigError(\n        `Negation of file paths is not supported.`,\n        filepath,\n      );\n    }\n  }\n\n  return {\n    filepath,\n    dirname: path.dirname(filepath),\n    ignore: ignorePatterns.map(pattern =>\n      pathPatternToRegex(pattern, ignoreDir),\n    ),\n  };\n});\n\nexport function findConfigUpwards(rootDir: string): string | null {\n  let dirname = rootDir;\n  for (;;) {\n    for (const filename of ROOT_CONFIG_FILENAMES) {\n      if (nodeFs.existsSync(path.join(dirname, filename))) {\n        return dirname;\n      }\n    }\n\n    const nextDir = path.dirname(dirname);\n    if (dirname === nextDir) break;\n    dirname = nextDir;\n  }\n\n  return null;\n}\n\nexport function* findRelativeConfig(\n  packageData: FilePackageData,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<RelativeConfig> {\n  let config = null;\n  let ignore = null;\n\n  const dirname = path.dirname(packageData.filepath);\n\n  for (const loc of packageData.directories) {\n    if (!config) {\n      config = yield* loadOneConfig(\n        RELATIVE_CONFIG_FILENAMES,\n        loc,\n        envName,\n        caller,\n        packageData.pkg?.dirname === loc\n          ? packageToBabelConfig(packageData.pkg)\n          : null,\n      );\n    }\n\n    if (!ignore) {\n      const ignoreLoc = path.join(loc, BABELIGNORE_FILENAME);\n      ignore = yield* readIgnoreConfig(ignoreLoc);\n\n      if (ignore) {\n        debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n      }\n    }\n  }\n\n  return { config, ignore };\n}\n\nexport function findRootConfig(\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile | null> {\n  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n}\n\nfunction* loadOneConfig(\n  names: string[],\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n  previousConfig: ConfigFile | null = null,\n): Handler<ConfigFile | null> {\n  const configs = yield* gensync.all(\n    names.map(filename =>\n      readConfig(path.join(dirname, filename), envName, caller),\n    ),\n  );\n  const config = configs.reduce((previousConfig: ConfigFile | null, config) => {\n    if (config && previousConfig) {\n      throw new ConfigError(\n        `Multiple configuration files found. Please remove one:\\n` +\n          ` - ${path.basename(previousConfig.filepath)}\\n` +\n          ` - ${config.filepath}\\n` +\n          `from ${dirname}`,\n      );\n    }\n\n    return config || previousConfig;\n  }, previousConfig);\n\n  if (config) {\n    debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n  }\n  return config;\n}\n\nexport function* loadConfig(\n  name: string,\n  dirname: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile> {\n  const filepath = require.resolve(name, { paths: [dirname] });\n\n  const conf = yield* readConfig(filepath, envName, caller);\n  if (!conf) {\n    throw new ConfigError(\n      `Config file contains no configuration data`,\n      filepath,\n    );\n  }\n\n  debug(\"Loaded config %o from %o.\", name, dirname);\n  return conf;\n}\n\n/**\n * Read the given config file, returning the result. Returns null if no config was found, but will\n * throw if there are parsing errors while loading a config.\n */\nfunction readConfig(\n  filepath: string,\n  envName: string,\n  caller: CallerMetadata | undefined,\n): Handler<ConfigFile | null> {\n  const ext = path.extname(filepath);\n  switch (ext) {\n    case \".js\":\n    case \".cjs\":\n    case \".mjs\":\n    case \".ts\":\n    case \".cts\":\n    case \".mts\":\n      return readConfigCode(filepath, { envName, caller });\n    default:\n      return readConfigJSON5(filepath);\n  }\n}\n\nexport function* resolveShowConfigPath(\n  dirname: string,\n): Handler<string | null> {\n  const targetPath = process.env.BABEL_SHOW_CONFIG_FOR;\n  if (targetPath != null) {\n    const absolutePath = path.resolve(dirname, targetPath);\n    const stats = yield* fs.stat(absolutePath);\n    if (!stats.isFile()) {\n      throw new Error(\n        `${absolutePath}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`,\n      );\n    }\n    return absolutePath;\n  }\n  return null;\n}\n\nfunction throwConfigError(filepath: string): never {\n  throw new ConfigError(\n    `\\\nCaching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};`,\n    filepath,\n  );\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/config-api.js":{"lineLengths":[13,0,46,13,3,38,38,38,20,33,25,16,4,14,1,39,40,31,44,49,38,65,5,67,38,55,7,36,7,5,92,10,28,26,8,23,11,17,4,1,53,86,40,35,4,50,12,25,5,1,53,73,72,14,5,1,31,34,35,59,5,30,3,34,57,3,74,38,48,31,3,409,34,34,3,28,38,28,9,5,1,7,0,38,0],"data":{"version":3,"names":["_semver","data","require","_index","_caching","makeConfigAPI","cache","env","value","using","undefined","envName","assertSimpleType","Array","isArray","some","entry","Error","caller","cb","version","coreVersion","simple","async","assertVersion","makePresetAPI","externalDependencies","targets","JSON","parse","stringify","addExternalDependency","ref","push","Object","assign","makePluginAPI","assumption","name","assumptions","range","Number","isInteger","semver","satisfies","limit","stackTraceLimit","err","code"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/helpers/config-api.ts"],"sourcesContent":["import semver from \"semver\";\nimport type { Targets } from \"@babel/helper-compilation-targets\";\n\nimport { version as coreVersion } from \"../../index.ts\";\nimport { assertSimpleType } from \"../caching.ts\";\nimport type {\n  CacheConfigurator,\n  SimpleCacheConfigurator,\n  SimpleType,\n} from \"../caching.ts\";\n\nimport type { AssumptionName, CallerMetadata } from \"../validation/options.ts\";\n\nimport type * as Context from \"../cache-contexts\";\n\ntype EnvFunction = {\n  (): string;\n  <T>(extractor: (babelEnv: string) => T): T;\n  (envVar: string): boolean;\n  (envVars: Array<string>): boolean;\n};\n\ntype CallerFactory = {\n  <T extends SimpleType>(\n    extractor: (callerMetadata: CallerMetadata | undefined) => T,\n  ): T;\n  (\n    extractor: (callerMetadata: CallerMetadata | undefined) => unknown,\n  ): SimpleType;\n};\ntype TargetsFunction = () => Targets;\ntype AssumptionFunction = (name: AssumptionName) => boolean | undefined;\n\nexport type ConfigAPI = {\n  version: string;\n  cache: SimpleCacheConfigurator;\n  env: EnvFunction;\n  async: () => boolean;\n  assertVersion: typeof assertVersion;\n  caller?: CallerFactory;\n};\n\nexport type PresetAPI = {\n  targets: TargetsFunction;\n  addExternalDependency: (ref: string) => void;\n} & ConfigAPI;\n\nexport type PluginAPI = {\n  assumption: AssumptionFunction;\n} & PresetAPI;\n\nexport function makeConfigAPI<SideChannel extends Context.SimpleConfig>(\n  cache: CacheConfigurator<SideChannel>,\n): ConfigAPI {\n  // TODO(@nicolo-ribaudo): If we remove the explicit type from `value`\n  // and the `as any` type cast, TypeScript crashes in an infinite\n  // recursion. After upgrading to TS4.7 and finishing the noImplicitAny\n  // PR, we should check if it still crashes and report it to the TS team.\n  const env: EnvFunction = ((\n    value: string | string[] | (<T>(babelEnv: string) => T),\n  ) =>\n    cache.using(data => {\n      if (value === undefined) return data.envName;\n      if (typeof value === \"function\") {\n        return assertSimpleType(value(data.envName));\n      }\n      return (Array.isArray(value) ? value : [value]).some(entry => {\n        if (typeof entry !== \"string\") {\n          throw new Error(\"Unexpected non-string value\");\n        }\n        return entry === data.envName;\n      });\n    })) as any;\n\n  const caller = (\n    cb: (CallerMetadata: CallerMetadata | undefined) => SimpleType,\n  ) => cache.using(data => assertSimpleType(cb(data.caller)));\n\n  return {\n    version: coreVersion,\n    cache: cache.simple(),\n    // Expose \".env()\" so people can easily get the same env that we expose using the \"env\" key.\n    env,\n    async: () => false,\n    caller,\n    assertVersion,\n  };\n}\n\nexport function makePresetAPI<SideChannel extends Context.SimplePreset>(\n  cache: CacheConfigurator<SideChannel>,\n  externalDependencies: Array<string>,\n): PresetAPI {\n  const targets = () =>\n    // We are using JSON.parse/JSON.stringify because it's only possible to cache\n    // primitive values. We can safely stringify the targets object because it\n    // only contains strings as its properties.\n    // Please make the Record and Tuple proposal happen!\n    JSON.parse(cache.using(data => JSON.stringify(data.targets)));\n\n  const addExternalDependency = (ref: string) => {\n    externalDependencies.push(ref);\n  };\n\n  return { ...makeConfigAPI(cache), targets, addExternalDependency };\n}\n\nexport function makePluginAPI<SideChannel extends Context.SimplePlugin>(\n  cache: CacheConfigurator<SideChannel>,\n  externalDependencies: Array<string>,\n): PluginAPI {\n  const assumption = (name: string) =>\n    cache.using(data => data.assumptions[name]);\n\n  return { ...makePresetAPI(cache, externalDependencies), assumption };\n}\n\nfunction assertVersion(range: string | number): void {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n    range = `^${range}.0.0-0`;\n  }\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  // We want \"*\" to also allow any pre-release, but we do not pass\n  // the includePrerelease option to semver.satisfies because we\n  // do not want ^7.0.0 to match 8.0.0-alpha.1.\n  if (range === \"*\" || semver.satisfies(coreVersion, range)) return;\n\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    // Bump up the limit if needed so that users are more likely\n    // to be able to see what is calling Babel.\n    Error.stackTraceLimit = 25;\n  }\n\n  const err = new Error(\n    `Requires Babel \"${range}\", but was loaded with \"${coreVersion}\". ` +\n      `If you are sure you have a compatible version of @babel/core, ` +\n      `it is likely that something in your build process is loading the ` +\n      `wrong version. Inspect the stack trace of this error to look for ` +\n      `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` +\n      `to see what is calling Babel.`,\n  );\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version: coreVersion,\n    range,\n  });\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,IAAAE,MAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AA+CO,SAASG,aAAaA,CAC3BC,KAAqC,EAC1B;EAKX,MAAMC,GAAgB,GACpBC,KAAuD,IAEvDF,KAAK,CAACG,KAAK,CAACR,IAAI,IAAI;IAClB,IAAIO,KAAK,KAAKE,SAAS,EAAE,OAAOT,IAAI,CAACU,OAAO;IAC5C,IAAI,OAAOH,KAAK,KAAK,UAAU,EAAE;MAC/B,OAAO,IAAAI,yBAAgB,EAACJ,KAAK,CAACP,IAAI,CAACU,OAAO,CAAC,CAAC;IAC9C;IACA,OAAO,CAACE,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEO,IAAI,CAACC,KAAK,IAAI;MAC5D,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOD,KAAK,KAAKf,IAAI,CAACU,OAAO;IAC/B,CAAC,CAAC;EACJ,CAAC,CAAS;EAEZ,MAAMO,MAAM,GACVC,EAA8D,IAC3Db,KAAK,CAACG,KAAK,CAACR,IAAI,IAAI,IAAAW,yBAAgB,EAACO,EAAE,CAAClB,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC;EAE3D,OAAO;IACLE,OAAO,EAAEC,cAAW;IACpBf,KAAK,EAAEA,KAAK,CAACgB,MAAM,CAAC,CAAC;IAErBf,GAAG;IACHgB,KAAK,EAAEA,CAAA,KAAM,KAAK;IAClBL,MAAM;IACNM;EACF,CAAC;AACH;AAEO,SAASC,aAAaA,CAC3BnB,KAAqC,EACrCoB,oBAAmC,EACxB;EACX,MAAMC,OAAO,GAAGA,CAAA,KAKdC,IAAI,CAACC,KAAK,CAACvB,KAAK,CAACG,KAAK,CAACR,IAAI,IAAI2B,IAAI,CAACE,SAAS,CAAC7B,IAAI,CAAC0B,OAAO,CAAC,CAAC,CAAC;EAE/D,MAAMI,qBAAqB,GAAIC,GAAW,IAAK;IAC7CN,oBAAoB,CAACO,IAAI,CAACD,GAAG,CAAC;EAChC,CAAC;EAED,OAAAE,MAAA,CAAAC,MAAA,KAAY9B,aAAa,CAACC,KAAK,CAAC;IAAEqB,OAAO;IAAEI;EAAqB;AAClE;AAEO,SAASK,aAAaA,CAC3B9B,KAAqC,EACrCoB,oBAAmC,EACxB;EACX,MAAMW,UAAU,GAAIC,IAAY,IAC9BhC,KAAK,CAACG,KAAK,CAACR,IAAI,IAAIA,IAAI,CAACsC,WAAW,CAACD,IAAI,CAAC,CAAC;EAE7C,OAAAJ,MAAA,CAAAC,MAAA,KAAYV,aAAa,CAACnB,KAAK,EAAEoB,oBAAoB,CAAC;IAAEW;EAAU;AACpE;AAEA,SAASb,aAAaA,CAACgB,KAAsB,EAAQ;EACnD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE;MAC5B,MAAM,IAAIvB,KAAK,CAAC,mCAAmC,CAAC;IACtD;IACAuB,KAAK,GAAG,IAAIA,KAAK,QAAQ;EAC3B;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIvB,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAKA,IAAIuB,KAAK,KAAK,GAAG,IAAIG,QAAKA,CAAC,CAACC,SAAS,CAACvB,cAAW,EAAEmB,KAAK,CAAC,EAAE;EAE3D,MAAMK,KAAK,GAAG5B,KAAK,CAAC6B,eAAe;EAEnC,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,GAAG,EAAE,EAAE;IAG3C5B,KAAK,CAAC6B,eAAe,GAAG,EAAE;EAC5B;EAEA,MAAMC,GAAG,GAAG,IAAI9B,KAAK,CACnB,mBAAmBuB,KAAK,2BAA2BnB,cAAW,KAAK,GACjE,gEAAgE,GAChE,mEAAmE,GACnE,mEAAmE,GACnE,qEAAqE,GACrE,+BACJ,CAAC;EAED,IAAI,OAAOwB,KAAK,KAAK,QAAQ,EAAE;IAC7B5B,KAAK,CAAC6B,eAAe,GAAGD,KAAK;EAC/B;EAEA,MAAMX,MAAM,CAACC,MAAM,CAACY,GAAG,EAAE;IACvBC,IAAI,EAAE,2BAA2B;IACjC5B,OAAO,EAAEC,cAAW;IACpBmB;EACF,CAAC,CAAC;AACJ;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/module-types.js":{"lineLengths":[13,0,46,13,3,34,29,53,18,31,23,16,4,14,1,17,30,22,16,4,14,1,18,20,33,25,16,4,14,1,19,32,24,16,4,14,1,72,59,56,169,321,66,1,7,42,22,1,105,36,35,40,57,14,3,13,7,36,75,13,39,3,3,157,3,1,80,65,75,5,21,131,7,32,5,5,32,51,3,25,5,30,19,16,16,19,16,15,2,31,65,12,40,65,98,38,20,23,20,17,78,14,54,7,24,27,23,11,19,80,16,56,9,19,123,37,80,63,11,76,18,9,7,20,73,123,61,7,57,12,65,3,1,51,94,22,3,23,37,93,24,63,55,13,3,16,19,22,30,25,47,53,34,30,8,30,8,4,40,47,11,99,18,28,23,77,58,118,9,20,7,5,50,4,36,7,22,13,76,24,3,1,32,7,47,19,55,156,5,33,20,113,0,18,18,21,37,2,7,5,54,3,1,7,0,40,0],"data":{"version":3,"names":["_async","require","_path","data","_url","_semver","_debug","_rewriteStackTrace","_configError","_transformFile","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","debug","buildDebug","import_","_unused","supportsESM","exports","semver","satisfies","process","versions","node","LOADING_CJS_FILES","Set","loadCjsDefault","filepath","has","module","add","endHiddenCallStack","delete","__esModule","Symbol","toStringTag","default","undefined","loadMjsFromPath","_loadMjsFromPath","url","pathToFileURL","toString","ConfigError","_x","SUPPORTED_EXTENSIONS","asyncModules","loadCodeDefault","loader","esmError","tlaError","async","ext","path","extname","isTS","type","hasOwnProperty","call","pattern","ensureTsSupport","code","isAsync","promise","waitFor","Error","callback","extensions","opts","babelrc","configFile","sourceType","sourceMaps","sourceFileName","basename","presets","getTSPreset","Object","assign","onlyRemoveTypeImports","optimizeConstEnums","allowDeclareFields","handler","m","filename","endsWith","_compile","transformFileSync","error","packageJson","lt","version","console","message","pnp"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/module-types.ts"],"sourcesContent":["import { isAsync, waitFor } from \"../../gensync-utils/async.ts\";\nimport type { Handler } from \"gensync\";\nimport path from \"node:path\";\nimport { pathToFileURL } from \"node:url\";\nimport { createRequire } from \"node:module\";\nimport semver from \"semver\";\nimport buildDebug from \"debug\";\n\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace.ts\";\nimport ConfigError from \"../../errors/config-error.ts\";\n\nimport type { InputOptions } from \"../index.ts\";\nimport { transformFileSync } from \"../../transform-file.ts\";\n\nconst debug = buildDebug(\"babel:config:loading:files:module-types\");\n\nconst require = createRequire(import.meta.url);\n\nif (!process.env.BABEL_8_BREAKING) {\n  try {\n    // Old Node.js versions don't support import() syntax.\n    // eslint-disable-next-line no-var\n    var import_:\n      | ((specifier: string | URL) => any)\n      | undefined = require(\"./import.cjs\");\n  } catch {}\n}\n\nexport const supportsESM = semver.satisfies(\n  process.versions.node,\n  // older versions, starting from 10, support the dynamic\n  // import syntax but always return a rejected promise.\n  \"^12.17 || >=13.2\",\n);\n\nconst LOADING_CJS_FILES = new Set();\n\nfunction loadCjsDefault(filepath: string) {\n  // The `require()` call below can make this code reentrant if a require hook\n  // like @babel/register has been loaded into the system. That would cause\n  // Babel to attempt to compile the `.babelrc.js` file as it loads below. To\n  // cover this case, we auto-ignore re-entrant config processing. ESM loaders\n  // do not have this problem, because loaders do not apply to themselves.\n  if (LOADING_CJS_FILES.has(filepath)) {\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {};\n  }\n\n  let module;\n  try {\n    LOADING_CJS_FILES.add(filepath);\n    module = endHiddenCallStack(require)(filepath);\n  } finally {\n    LOADING_CJS_FILES.delete(filepath);\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    return module != null &&\n      (module.__esModule || module[Symbol.toStringTag] === \"Module\")\n      ? module.default\n      : module;\n  } else {\n    return module != null &&\n      (module.__esModule || module[Symbol.toStringTag] === \"Module\")\n      ? module.default ||\n          /* fallbackToTranspiledModule */ (arguments[1] ? module : undefined)\n      : module;\n  }\n}\n\nconst loadMjsFromPath = endHiddenCallStack(async function loadMjsFromPath(\n  filepath: string,\n) {\n  // Add ?import as a workaround for https://github.com/nodejs/node/issues/55500\n  const url = pathToFileURL(filepath).toString() + \"?import\";\n\n  if (process.env.BABEL_8_BREAKING) {\n    return await import(url);\n  } else {\n    if (!import_) {\n      throw new ConfigError(\n        \"Internal error: Native ECMAScript modules aren't supported by this platform.\\n\",\n        filepath,\n      );\n    }\n\n    return await import_(url);\n  }\n});\n\nconst SUPPORTED_EXTENSIONS = {\n  \".js\": \"unknown\",\n  \".mjs\": \"esm\",\n  \".cjs\": \"cjs\",\n  \".ts\": \"unknown\",\n  \".mts\": \"esm\",\n  \".cts\": \"cjs\",\n} as const;\n\nconst asyncModules = new Set();\n\nexport default function* loadCodeDefault(\n  filepath: string,\n  loader: \"require\" | \"auto\",\n  esmError: string,\n  tlaError: string,\n): Handler<unknown> {\n  let async;\n\n  const ext = path.extname(filepath);\n  const isTS = ext === \".ts\" || ext === \".cts\" || ext === \".mts\";\n\n  const type =\n    SUPPORTED_EXTENSIONS[\n      Object.hasOwn(SUPPORTED_EXTENSIONS, ext)\n        ? (ext as keyof typeof SUPPORTED_EXTENSIONS)\n        : (\".js\" as const)\n    ];\n\n  const pattern = `${loader} ${type}` as const;\n  switch (pattern) {\n    case \"require cjs\":\n    case \"auto cjs\":\n      if (isTS) {\n        return ensureTsSupport(filepath, ext, () => loadCjsDefault(filepath));\n      } else if (process.env.BABEL_8_BREAKING) {\n        return loadCjsDefault(filepath);\n      } else {\n        return loadCjsDefault(\n          filepath,\n          // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n          /* fallbackToTranspiledModule */ arguments[2],\n        );\n      }\n    case \"auto unknown\":\n    case \"require unknown\":\n    case \"require esm\":\n      try {\n        if (isTS) {\n          return ensureTsSupport(filepath, ext, () => loadCjsDefault(filepath));\n        } else if (process.env.BABEL_8_BREAKING) {\n          return loadCjsDefault(filepath);\n        } else {\n          return loadCjsDefault(\n            filepath,\n            // @ts-ignore(Babel 7 vs Babel 8) Removed in Babel 8\n            /* fallbackToTranspiledModule */ arguments[2],\n          );\n        }\n      } catch (e) {\n        if (\n          e.code === \"ERR_REQUIRE_ASYNC_MODULE\" ||\n          // Node.js 13.0.0 throws ERR_REQUIRE_CYCLE_MODULE instead of\n          // ERR_REQUIRE_ASYNC_MODULE when requiring a module a second time\n          // https://github.com/nodejs/node/issues/55516\n          // This `asyncModules` won't catch all of such cases, but it will\n          // at least catch those caused by Babel trying to load a module twice.\n          (e.code === \"ERR_REQUIRE_CYCLE_MODULE\" && asyncModules.has(filepath))\n        ) {\n          asyncModules.add(filepath);\n          if (!(async ??= yield* isAsync())) {\n            throw new ConfigError(tlaError, filepath);\n          }\n          // fall through: require() failed due to TLA\n        } else if (\n          e.code === \"ERR_REQUIRE_ESM\" ||\n          (!process.env.BABEL_8_BREAKING && type === \"esm\")\n        ) {\n          // fall through: require() failed due to ESM\n        } else {\n          throw e;\n        }\n      }\n    // fall through: require() failed due to ESM or TLA, try import()\n    case \"auto esm\":\n      if ((async ??= yield* isAsync())) {\n        const promise = isTS\n          ? ensureTsSupport(filepath, ext, () => loadMjsFromPath(filepath))\n          : loadMjsFromPath(filepath);\n\n        return (yield* waitFor(promise)).default;\n      }\n      throw new ConfigError(esmError, filepath);\n    default:\n      throw new Error(\"Internal Babel error: unreachable code.\");\n  }\n}\n\nfunction ensureTsSupport<T>(\n  filepath: string,\n  ext: string,\n  callback: () => T,\n): T {\n  if (\n    require.extensions[\".ts\"] ||\n    require.extensions[\".cts\"] ||\n    require.extensions[\".mts\"]\n  ) {\n    return callback();\n  }\n\n  if (ext !== \".cts\") {\n    throw new ConfigError(\n      `\\\nYou are using a ${ext} config file, but Babel only supports transpiling .cts configs. Either:\n- Use a .cts config file\n- Update to Node.js 23.6.0, which has native TypeScript support\n- Install ts-node to transpile ${ext} files on the fly\\\n`,\n      filepath,\n    );\n  }\n\n  const opts: InputOptions = {\n    babelrc: false,\n    configFile: false,\n    sourceType: \"unambiguous\",\n    sourceMaps: \"inline\",\n    sourceFileName: path.basename(filepath),\n    presets: [\n      [\n        getTSPreset(filepath),\n        {\n          onlyRemoveTypeImports: true,\n          optimizeConstEnums: true,\n          ...(process.env.BABEL_8_BREAKING ? {} : { allowDeclareFields: true }),\n        },\n      ],\n    ],\n  };\n\n  let handler: NodeJS.RequireExtensions[\"\"] = function (m, filename) {\n    // If we want to support `.ts`, `.d.ts` must be handled specially.\n    if (handler && filename.endsWith(\".cts\")) {\n      try {\n        // @ts-expect-error Undocumented API\n        return m._compile(\n          transformFileSync(filename, {\n            ...opts,\n            filename,\n          }).code,\n          filename,\n        );\n      } catch (error) {\n        // TODO(Babel 8): Add this as an optional peer dependency\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const packageJson = require(\"@babel/preset-typescript/package.json\");\n        if (semver.lt(packageJson.version, \"7.21.4\")) {\n          console.error(\n            \"`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.\",\n          );\n        }\n        throw error;\n      }\n    }\n    return require.extensions[\".js\"](m, filename);\n  };\n  require.extensions[ext] = handler;\n\n  try {\n    return callback();\n  } finally {\n    if (require.extensions[ext] === handler) delete require.extensions[ext];\n    handler = undefined;\n  }\n}\n\nfunction getTSPreset(filepath: string) {\n  try {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    return require(\"@babel/preset-typescript\");\n  } catch (error) {\n    if (error.code !== \"MODULE_NOT_FOUND\") throw error;\n\n    let message =\n      \"You appear to be using a .cts file as Babel configuration, but the `@babel/preset-typescript` package was not found: please install it!\";\n\n    if (!process.env.BABEL_8_BREAKING) {\n      if (process.versions.pnp) {\n        // Using Yarn PnP, which doesn't allow requiring packages that are not\n        // explicitly specified as dependencies.\n        message += `\nIf you are using Yarn Plug'n'Play, you may also need to add the following configuration to your .yarnrc.yml file:\n\npackageExtensions:\n\\t\"@babel/core@*\":\n\\t\\tpeerDependencies:\n\\t\\t\\t\"@babel/preset-typescript\": \"*\"\n`;\n      }\n    }\n\n    throw new ConfigError(message, filepath);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform-file.js":{"lineLengths":[13,0,46,13,3,38,48,46,21,34,26,16,4,14,1,42,51,42,5,67,43,12,5,53,35,52,47,3,33,39,1,37,43,1,38,44,1,7,0,42,0],"data":{"version":3,"names":["_gensync","data","require","_index","_index2","fs","transformFileRunner","gensync","filename","opts","options","Object","assign","config","loadConfig","code","readFile","run","transformFile","args","errback","transformFileSync","sync","transformFileAsync","async"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transform-file.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config/index.ts\";\nimport type { InputOptions, ResolvedConfig } from \"./config/index.ts\";\nimport { run } from \"./transformation/index.ts\";\nimport type { FileResult, FileResultCallback } from \"./transformation/index.ts\";\nimport * as fs from \"./gensync-utils/fs.ts\";\n\ntype transformFileBrowserType = typeof import(\"./transform-file-browser\");\ntype transformFileType = typeof import(\"./transform-file\");\n\n// Kind of gross, but essentially asserting that the exports of this module are the same as the\n// exports of transform-file-browser, since this file may be replaced at bundle time with\n// transform-file-browser.\n({}) as any as transformFileBrowserType as transformFileType;\n\nconst transformFileRunner = gensync(function* (\n  filename: string,\n  opts?: InputOptions,\n): Handler<FileResult | null> {\n  const options = { ...opts, filename };\n\n  const config: ResolvedConfig | null = yield* loadConfig(options);\n  if (config === null) return null;\n\n  const code = yield* fs.readFile(filename, \"utf8\");\n  return yield* run(config, code);\n});\n\n// @ts-expect-error TS doesn't detect that this signature is compatible\nexport function transformFile(\n  filename: string,\n  callback: FileResultCallback,\n): void;\nexport function transformFile(\n  filename: string,\n  opts: InputOptions | undefined | null,\n  callback: FileResultCallback,\n): void;\nexport function transformFile(\n  ...args: Parameters<typeof transformFileRunner.errback>\n) {\n  transformFileRunner.errback(...args);\n}\n\nexport function transformFileSync(\n  ...args: Parameters<typeof transformFileRunner.sync>\n) {\n  return transformFileRunner.sync(...args);\n}\nexport function transformFileAsync(\n  ...args: Parameters<typeof transformFileRunner.async>\n) {\n  return transformFileRunner.async(...args);\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAE,MAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAEA,IAAAG,EAAA,GAAAH,OAAA;AAQA,CAAC,CAAC,CAAC;AAEH,MAAMI,mBAAmB,GAAGC,SAAMA,CAAC,CAAC,WAClCC,QAAgB,EAChBC,IAAmB,EACS;EAC5B,MAAMC,OAAO,GAAAC,MAAA,CAAAC,MAAA,KAAQH,IAAI;IAAED;EAAQ,EAAE;EAErC,MAAMK,MAA6B,GAAG,OAAO,IAAAC,cAAU,EAACJ,OAAO,CAAC;EAChE,IAAIG,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,MAAME,IAAI,GAAG,OAAOV,EAAE,CAACW,QAAQ,CAACR,QAAQ,EAAE,MAAM,CAAC;EACjD,OAAO,OAAO,IAAAS,WAAG,EAACJ,MAAM,EAAEE,IAAI,CAAC;AACjC,CAAC,CAAC;AAYK,SAASG,aAAaA,CAC3B,GAAGC,IAAoD,EACvD;EACAb,mBAAmB,CAACc,OAAO,CAAC,GAAGD,IAAI,CAAC;AACtC;AAEO,SAASE,iBAAiBA,CAC/B,GAAGF,IAAiD,EACpD;EACA,OAAOb,mBAAmB,CAACgB,IAAI,CAAC,GAAGH,IAAI,CAAC;AAC1C;AACO,SAASI,kBAAkBA,CAChC,GAAGJ,IAAkD,EACrD;EACA,OAAOb,mBAAmB,CAACkB,KAAK,CAAC,GAAGL,IAAI,CAAC;AAC3C;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/index.js":{"lineLengths":[13,0,46,13,3,44,54,52,43,19,20,25,3,3,34,44,42,46,56,54,21,34,26,16,4,14,1,33,39,33,69,71,42,94,1,41,93,1,44,31,98,42,99,10,5,41,5,3,1,33,22,49,103,1,54,36,88,1,35,87,1,38,31,92,42,93,10,5,35,5,3,1,66,41,93,1,40,92,1,54,31,108,45,110,10,5,51,5,3,1,7,0,33,0],"data":{"version":3,"names":["_gensync","data","require","_full","_partial","_item","_rewriteStackTrace","loadPartialConfigRunner","gensync","loadPartialConfigImpl","loadPartialConfigAsync","args","beginHiddenCallStack","async","loadPartialConfigSync","sync","loadPartialConfig","opts","callback","undefined","errback","loadOptionsImpl","_config$options","config","loadFullConfig","options","loadOptionsRunner","loadOptionsAsync","loadOptionsSync","loadOptions","createConfigItemRunner","createConfigItemImpl","createConfigItemAsync","createConfigItemSync","createConfigItem","target"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/index.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nexport type {\n  ResolvedConfig,\n  InputOptions,\n  PluginPasses,\n  Plugin,\n} from \"./full.ts\";\n\nimport type { InputOptions, PluginTarget } from \"./validation/options.ts\";\n\nimport type {\n  PluginAPI as basePluginAPI,\n  PresetAPI as basePresetAPI,\n} from \"./helpers/config-api.ts\";\nexport type { PluginObject } from \"./validation/plugins.ts\";\ntype PluginAPI = basePluginAPI & typeof import(\"..\");\ntype PresetAPI = basePresetAPI & typeof import(\"..\");\nexport type { PluginAPI, PresetAPI };\n// todo: may need to refine PresetObject to be a subset of ValidatedOptions\nexport type {\n  CallerMetadata,\n  ValidatedOptions as PresetObject,\n} from \"./validation/options.ts\";\n\nimport loadFullConfig, { type ResolvedConfig } from \"./full.ts\";\nimport {\n  type PartialConfig,\n  loadPartialConfig as loadPartialConfigImpl,\n} from \"./partial.ts\";\n\nexport { loadFullConfig as default };\nexport type { PartialConfig } from \"./partial.ts\";\n\nimport { createConfigItem as createConfigItemImpl } from \"./item.ts\";\nimport type { ConfigItem } from \"./item.ts\";\nexport type { ConfigItem };\n\nimport { beginHiddenCallStack } from \"../errors/rewrite-stack-trace.ts\";\n\nconst loadPartialConfigRunner = gensync(loadPartialConfigImpl);\nexport function loadPartialConfigAsync(\n  ...args: Parameters<typeof loadPartialConfigRunner.async>\n) {\n  return beginHiddenCallStack(loadPartialConfigRunner.async)(...args);\n}\nexport function loadPartialConfigSync(\n  ...args: Parameters<typeof loadPartialConfigRunner.sync>\n) {\n  return beginHiddenCallStack(loadPartialConfigRunner.sync)(...args);\n}\nexport function loadPartialConfig(\n  opts: Parameters<typeof loadPartialConfigImpl>[0],\n  callback?: (err: Error, val: PartialConfig | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(loadPartialConfigRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    beginHiddenCallStack(loadPartialConfigRunner.errback)(\n      undefined,\n      opts as (err: Error, val: PartialConfig | null) => void,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'loadPartialConfig' function expects a callback. If you need to call it synchronously, please use 'loadPartialConfigSync'.\",\n      );\n    } else {\n      return loadPartialConfigSync(opts);\n    }\n  }\n}\n\nfunction* loadOptionsImpl(opts: InputOptions): Handler<ResolvedConfig | null> {\n  const config = yield* loadFullConfig(opts);\n  // NOTE: We want to return \"null\" explicitly, while ?. alone returns undefined\n  return config?.options ?? null;\n}\nconst loadOptionsRunner = gensync(loadOptionsImpl);\nexport function loadOptionsAsync(\n  ...args: Parameters<typeof loadOptionsRunner.async>\n) {\n  return beginHiddenCallStack(loadOptionsRunner.async)(...args);\n}\nexport function loadOptionsSync(\n  ...args: Parameters<typeof loadOptionsRunner.sync>\n) {\n  return beginHiddenCallStack(loadOptionsRunner.sync)(...args);\n}\nexport function loadOptions(\n  opts: Parameters<typeof loadOptionsImpl>[0],\n  callback?: (err: Error, val: ResolvedConfig | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(loadOptionsRunner.errback)(opts, callback);\n  } else if (typeof opts === \"function\") {\n    beginHiddenCallStack(loadOptionsRunner.errback)(\n      undefined,\n      opts as (err: Error, val: ResolvedConfig | null) => void,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'loadOptions' function expects a callback. If you need to call it synchronously, please use 'loadOptionsSync'.\",\n      );\n    } else {\n      return loadOptionsSync(opts);\n    }\n  }\n}\n\nconst createConfigItemRunner = gensync(createConfigItemImpl);\nexport function createConfigItemAsync(\n  ...args: Parameters<typeof createConfigItemRunner.async>\n) {\n  return beginHiddenCallStack(createConfigItemRunner.async)(...args);\n}\nexport function createConfigItemSync(\n  ...args: Parameters<typeof createConfigItemRunner.sync>\n) {\n  return beginHiddenCallStack(createConfigItemRunner.sync)(...args);\n}\nexport function createConfigItem(\n  target: PluginTarget,\n  options: Parameters<typeof createConfigItemImpl>[1],\n  callback?: (err: Error, val: ConfigItem<PluginAPI> | null) => void,\n) {\n  if (callback !== undefined) {\n    beginHiddenCallStack(createConfigItemRunner.errback)(\n      target,\n      options,\n      callback,\n    );\n  } else if (typeof options === \"function\") {\n    beginHiddenCallStack(createConfigItemRunner.errback)(\n      target,\n      undefined,\n      callback,\n    );\n  } else {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'createConfigItem' function expects a callback. If you need to call it synchronously, please use 'createConfigItemSync'.\",\n      );\n    } else {\n      return createConfigItemSync(target, options);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/full.js":{"lineLengths":[13,0,46,13,3,25,21,34,26,16,4,14,1,50,33,37,37,33,48,52,22,42,27,16,4,14,1,39,50,50,52,39,56,81,24,57,16,16,3,9,12,12,16,13,35,16,3,28,9,12,11,14,29,69,3,52,28,5,32,52,16,65,5,16,4,55,62,39,20,34,118,23,49,39,41,13,78,21,50,86,11,18,9,63,33,24,33,20,13,16,27,33,39,13,9,7,5,29,113,18,15,12,21,33,37,78,33,40,56,11,7,5,53,27,30,41,58,88,5,66,69,50,22,24,46,36,43,15,80,23,61,83,13,20,11,28,65,9,7,5,7,27,88,11,6,47,10,18,19,72,4,3,36,33,9,35,17,42,30,131,7,14,5,4,1,83,8,10,10,7,11,62,26,34,19,36,140,84,9,51,17,18,69,7,14,5,3,42,63,3,37,14,339,3,95,120,30,99,12,64,5,280,27,3,10,16,12,12,10,72,4,3,78,78,66,8,10,10,8,22,11,62,46,23,84,3,24,32,22,33,29,14,13,6,83,69,7,59,62,101,104,51,46,61,14,111,7,5,3,75,3,53,52,29,86,5,28,3,95,1,62,64,104,95,325,3,2,57,26,27,11,13,15,55,162,3,2,60,8,10,8,22,7,10,53,10,12,24,4,3,53,87,46,10,70,53,4,1,32,19,19,29,36,48,49,5,31,4,1,7,0,32,0],"data":{"version":3,"names":["_gensync","data","require","_async","_util","context","_plugin","_item","_configChain","_deepArray","_traverse","_caching","_options","_plugins","_configApi","_partial","_configError","_default","exports","default","gensync","loadFullConfig","inputOpts","_opts$assumptions","result","loadPrivatePartialConfig","options","fileHandling","optionDefaults","plugins","presets","Error","presetContext","Object","assign","targets","toDescriptor","item","desc","getItemDescriptor","presetsDescriptors","map","initialPluginsDescriptors","pluginDescriptorsByPass","passes","externalDependencies","ignored","enhanceError","recursePresetDescriptors","rawPresets","pluginDescriptorsPass","i","length","descriptor","preset","loadPresetDescriptor","e","code","checkNoUnwrappedItemOptionPairs","push","ownPass","chain","pass","unshift","splice","o","filter","p","forEach","opts","mergeOptions","pluginContext","assumptions","loadPluginDescriptors","descs","plugin","loadPluginDescriptor","slice","passPerPreset","freezeDeepArray","fn","arg1","arg2","test","message","_context$filename","filename","makeDescriptorLoader","apiFactory","makeWeakCache","value","dirname","alias","cache","factory","maybeAsync","api","JSON","stringify","isThenable","configured","mode","error","pluginDescriptorLoader","makePluginAPI","presetDescriptorLoader","makePresetAPI","instantiatePlugin","pluginObj","validatePluginObject","visitor","traverse","explode","inherits","inheritsDescriptor","name","undefined","forwardAsync","run","invalidate","pre","chainMaybeAsync","post","manipulateOptions","visitors","merge","Plugin","needsFilename","val","validateIfOptionNeedsFilename","include","exclude","formattedPresetName","ConfigError","join","validatePreset","_options$overrides","overrides","overrideOptions","instantiatePreset","makeWeakCacheSync","validate","buildPresetChain","a","b","args","res","apply","then"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/full.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\nimport {\n  forwardAsync,\n  maybeAsync,\n  isThenable,\n} from \"../gensync-utils/async.ts\";\n\nimport { mergeOptions } from \"./util.ts\";\nimport * as context from \"../index.ts\";\nimport Plugin from \"./plugin.ts\";\nimport { getItemDescriptor } from \"./item.ts\";\nimport { buildPresetChain } from \"./config-chain.ts\";\nimport { finalize as freezeDeepArray } from \"./helpers/deep-array.ts\";\nimport type { DeepArray, ReadonlyDeepArray } from \"./helpers/deep-array.ts\";\nimport type {\n  ConfigContext,\n  ConfigChain,\n  PresetInstance,\n} from \"./config-chain.ts\";\nimport type { UnloadedDescriptor } from \"./config-descriptors.ts\";\nimport traverse from \"@babel/traverse\";\nimport { makeWeakCache, makeWeakCacheSync } from \"./caching.ts\";\nimport type { CacheConfigurator } from \"./caching.ts\";\nimport {\n  validate,\n  checkNoUnwrappedItemOptionPairs,\n} from \"./validation/options.ts\";\nimport type { InputOptions, PluginItem } from \"./validation/options.ts\";\nimport { validatePluginObject } from \"./validation/plugins.ts\";\nimport { makePluginAPI, makePresetAPI } from \"./helpers/config-api.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\nimport loadPrivatePartialConfig from \"./partial.ts\";\nimport type { ValidatedOptions } from \"./validation/options.ts\";\n\nimport type * as Context from \"./cache-contexts.ts\";\nimport ConfigError from \"../errors/config-error.ts\";\n\ntype LoadedDescriptor = {\n  value: any;\n  options: object;\n  dirname: string;\n  alias: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { InputOptions } from \"./validation/options.ts\";\n\nexport type ResolvedConfig = {\n  options: any;\n  passes: PluginPasses;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { Plugin };\nexport type PluginPassList = Array<Plugin>;\nexport type PluginPasses = Array<PluginPassList>;\n\nexport default gensync(function* loadFullConfig(\n  inputOpts: InputOptions,\n): Handler<ResolvedConfig | null> {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) {\n    return null;\n  }\n  const { options, context, fileHandling } = result;\n\n  if (fileHandling === \"ignored\") {\n    return null;\n  }\n\n  const optionDefaults: ValidatedOptions = {};\n\n  const { plugins, presets } = options;\n\n  if (!plugins || !presets) {\n    throw new Error(\"Assertion failure - plugins and presets exist\");\n  }\n\n  const presetContext: Context.FullPreset = {\n    ...context,\n    targets: options.targets,\n  };\n\n  const toDescriptor = (item: PluginItem) => {\n    const desc = getItemDescriptor(item);\n    if (!desc) {\n      throw new Error(\"Assertion failure - must be config item\");\n    }\n\n    return desc;\n  };\n\n  const presetsDescriptors = presets.map(toDescriptor);\n  const initialPluginsDescriptors = plugins.map(toDescriptor);\n  const pluginDescriptorsByPass: Array<Array<UnloadedDescriptor<PluginAPI>>> = [\n    [],\n  ];\n  const passes: Array<Array<Plugin>> = [];\n\n  const externalDependencies: DeepArray<string> = [];\n\n  const ignored = yield* enhanceError(\n    context,\n    function* recursePresetDescriptors(\n      rawPresets: Array<UnloadedDescriptor<PresetAPI>>,\n      pluginDescriptorsPass: Array<UnloadedDescriptor<PluginAPI>>,\n    ): Handler<true | void> {\n      const presets: Array<{\n        preset: ConfigChain | null;\n        pass: Array<UnloadedDescriptor<PluginAPI>>;\n      }> = [];\n\n      for (let i = 0; i < rawPresets.length; i++) {\n        const descriptor = rawPresets[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var preset = yield* loadPresetDescriptor(descriptor, presetContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_OPTION\") {\n              checkNoUnwrappedItemOptionPairs(rawPresets, i, \"preset\", e);\n            }\n            throw e;\n          }\n\n          externalDependencies.push(preset.externalDependencies);\n\n          // Presets normally run in reverse order, but if they\n          // have their own pass they run after the presets\n          // in the previous pass.\n          if (descriptor.ownPass) {\n            presets.push({ preset: preset.chain, pass: [] });\n          } else {\n            presets.unshift({\n              preset: preset.chain,\n              pass: pluginDescriptorsPass,\n            });\n          }\n        }\n      }\n\n      // resolve presets\n      if (presets.length > 0) {\n        // The passes are created in the same order as the preset list, but are inserted before any\n        // existing additional passes.\n        pluginDescriptorsByPass.splice(\n          1,\n          0,\n          ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass),\n        );\n\n        for (const { preset, pass } of presets) {\n          if (!preset) return true;\n\n          pass.push(...preset.plugins);\n\n          const ignored = yield* recursePresetDescriptors(preset.presets, pass);\n          if (ignored) return true;\n\n          preset.options.forEach(opts => {\n            mergeOptions(optionDefaults, opts);\n          });\n        }\n      }\n    },\n  )(presetsDescriptors, pluginDescriptorsByPass[0]);\n\n  if (ignored) return null;\n\n  const opts: ValidatedOptions = optionDefaults;\n  mergeOptions(opts, options);\n\n  const pluginContext: Context.FullPlugin = {\n    ...presetContext,\n    assumptions: opts.assumptions ?? {},\n  };\n\n  yield* enhanceError(context, function* loadPluginDescriptors() {\n    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);\n\n    for (const descs of pluginDescriptorsByPass) {\n      const pass: Plugin[] = [];\n      passes.push(pass);\n\n      for (let i = 0; i < descs.length; i++) {\n        const descriptor = descs[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var plugin = yield* loadPluginDescriptor(descriptor, pluginContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n              // print special message for `plugins: [\"@babel/foo\", { foo: \"option\" }]`\n              checkNoUnwrappedItemOptionPairs(descs, i, \"plugin\", e);\n            }\n            throw e;\n          }\n          pass.push(plugin);\n\n          externalDependencies.push(plugin.externalDependencies);\n        }\n      }\n    }\n  })();\n\n  opts.plugins = passes[0];\n  opts.presets = passes\n    .slice(1)\n    .filter(plugins => plugins.length > 0)\n    .map(plugins => ({ plugins }));\n  opts.passPerPreset = opts.presets.length > 0;\n\n  return {\n    options: opts,\n    passes: passes,\n    externalDependencies: freezeDeepArray(externalDependencies),\n  };\n});\n\nfunction enhanceError<T extends Function>(context: ConfigContext, fn: T): T {\n  return function* (arg1: unknown, arg2: unknown) {\n    try {\n      return yield* fn(arg1, arg2);\n    } catch (e) {\n      // There are a few case where thrown errors will try to annotate themselves multiple times, so\n      // to keep things simple we just bail out if re-wrapping the message.\n      if (!/^\\[BABEL\\]/.test(e.message)) {\n        e.message = `[BABEL] ${context.filename ?? \"unknown file\"}: ${\n          e.message\n        }`;\n      }\n\n      throw e;\n    }\n  } as any;\n}\n\n/**\n * Load a generic plugin/preset from the given descriptor loaded from the config object.\n */\nconst makeDescriptorLoader = <Context, API>(\n  apiFactory: (\n    cache: CacheConfigurator<Context>,\n    externalDependencies: Array<string>,\n  ) => API,\n) =>\n  makeWeakCache(function* (\n    { value, options, dirname, alias }: UnloadedDescriptor<API>,\n    cache: CacheConfigurator<Context>,\n  ): Handler<LoadedDescriptor> {\n    // Disabled presets should already have been filtered out\n    if (options === false) throw new Error(\"Assertion failure\");\n\n    options = options || {};\n\n    const externalDependencies: Array<string> = [];\n\n    let item: unknown = value;\n    if (typeof value === \"function\") {\n      const factory = maybeAsync(\n        value as (api: API, options: object, dirname: string) => unknown,\n        `You appear to be using an async plugin/preset, but Babel has been called synchronously`,\n      );\n\n      const api = {\n        ...context,\n        ...apiFactory(cache, externalDependencies),\n      };\n      try {\n        item = yield* factory(api, options, dirname);\n      } catch (e) {\n        if (alias) {\n          e.message += ` (While processing: ${JSON.stringify(alias)})`;\n        }\n        throw e;\n      }\n    }\n\n    if (!item || typeof item !== \"object\") {\n      throw new Error(\"Plugin/Preset did not return an object.\");\n    }\n\n    if (isThenable(item)) {\n      // if we want to support async plugins\n      yield* [];\n\n      throw new Error(\n        `You appear to be using a promise as a plugin, ` +\n          `which your current version of Babel does not support. ` +\n          `If you're using a published plugin, ` +\n          `you may need to upgrade your @babel/core version. ` +\n          `As an alternative, you can prefix the promise with \"await\". ` +\n          `(While processing: ${JSON.stringify(alias)})`,\n      );\n    }\n\n    if (\n      externalDependencies.length > 0 &&\n      (!cache.configured() || cache.mode() === \"forever\")\n    ) {\n      let error =\n        `A plugin/preset has external untracked dependencies ` +\n        `(${externalDependencies[0]}), but the cache `;\n      if (!cache.configured()) {\n        error += `has not been configured to be invalidated when the external dependencies change. `;\n      } else {\n        error += ` has been configured to never be invalidated. `;\n      }\n      error +=\n        `Plugins/presets should configure their cache to be invalidated when the external ` +\n        `dependencies change, for example using \\`api.cache.invalidate(() => ` +\n        `statSync(filepath).mtimeMs)\\` or \\`api.cache.never()\\`\\n` +\n        `(While processing: ${JSON.stringify(alias)})`;\n\n      throw new Error(error);\n    }\n\n    return {\n      value: item,\n      options,\n      dirname,\n      alias,\n      externalDependencies: freezeDeepArray(externalDependencies),\n    };\n  });\n\nconst pluginDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePlugin,\n  PluginAPI\n>(makePluginAPI);\nconst presetDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePreset,\n  PresetAPI\n>(makePresetAPI);\n\nconst instantiatePlugin = makeWeakCache(function* (\n  { value, options, dirname, alias, externalDependencies }: LoadedDescriptor,\n  cache: CacheConfigurator<Context.SimplePlugin>,\n): Handler<Plugin> {\n  const pluginObj = validatePluginObject(value);\n\n  const plugin = {\n    ...pluginObj,\n  };\n  if (plugin.visitor) {\n    plugin.visitor = traverse.explode({\n      ...plugin.visitor,\n    });\n  }\n\n  if (plugin.inherits) {\n    const inheritsDescriptor: UnloadedDescriptor<PluginAPI> = {\n      name: undefined,\n      alias: `${alias}$inherits`,\n      value: plugin.inherits,\n      options,\n      dirname,\n    };\n\n    const inherits = yield* forwardAsync(loadPluginDescriptor, run => {\n      // If the inherited plugin changes, reinstantiate this plugin.\n      return cache.invalidate(data => run(inheritsDescriptor, data));\n    });\n\n    plugin.pre = chainMaybeAsync(inherits.pre, plugin.pre);\n    plugin.post = chainMaybeAsync(inherits.post, plugin.post);\n    plugin.manipulateOptions = chainMaybeAsync(\n      inherits.manipulateOptions,\n      plugin.manipulateOptions,\n    );\n    plugin.visitor = traverse.visitors.merge([\n      inherits.visitor || {},\n      plugin.visitor || {},\n    ]);\n\n    if (inherits.externalDependencies.length > 0) {\n      if (externalDependencies.length === 0) {\n        externalDependencies = inherits.externalDependencies;\n      } else {\n        externalDependencies = freezeDeepArray([\n          externalDependencies,\n          inherits.externalDependencies,\n        ]);\n      }\n    }\n  }\n\n  return new Plugin(plugin, options, alias, externalDependencies);\n});\n\n/**\n * Instantiate a plugin for the given descriptor, returning the plugin/options pair.\n */\nfunction* loadPluginDescriptor(\n  descriptor: UnloadedDescriptor<PluginAPI>,\n  context: Context.SimplePlugin,\n): Handler<Plugin> {\n  if (descriptor.value instanceof Plugin) {\n    if (descriptor.options) {\n      throw new Error(\n        \"Passed options to an existing Plugin instance will not work.\",\n      );\n    }\n\n    return descriptor.value;\n  }\n\n  return yield* instantiatePlugin(\n    yield* pluginDescriptorLoader(descriptor, context),\n    context,\n  );\n}\n\nconst needsFilename = (val: unknown) => val && typeof val !== \"function\";\n\nconst validateIfOptionNeedsFilename = (\n  options: ValidatedOptions,\n  descriptor: UnloadedDescriptor<PresetAPI>,\n): void => {\n  if (\n    needsFilename(options.test) ||\n    needsFilename(options.include) ||\n    needsFilename(options.exclude)\n  ) {\n    const formattedPresetName = descriptor.name\n      ? `\"${descriptor.name}\"`\n      : \"/* your preset */\";\n    throw new ConfigError(\n      [\n        `Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`,\n        `\\`\\`\\``,\n        `babel.transformSync(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`,\n        `\\`\\`\\``,\n        `See https://babeljs.io/docs/en/options#filename for more information.`,\n      ].join(\"\\n\"),\n    );\n  }\n};\n\nconst validatePreset = (\n  preset: PresetInstance,\n  context: ConfigContext,\n  descriptor: UnloadedDescriptor<PresetAPI>,\n): void => {\n  if (!context.filename) {\n    const { options } = preset;\n    validateIfOptionNeedsFilename(options, descriptor);\n    options.overrides?.forEach(overrideOptions =>\n      validateIfOptionNeedsFilename(overrideOptions, descriptor),\n    );\n  }\n};\n\nconst instantiatePreset = makeWeakCacheSync(\n  ({\n    value,\n    dirname,\n    alias,\n    externalDependencies,\n  }: LoadedDescriptor): PresetInstance => {\n    return {\n      options: validate(\"preset\", value),\n      alias,\n      dirname,\n      externalDependencies,\n    };\n  },\n);\n\n/**\n * Generate a config object that will act as the root of a new nested config.\n */\nfunction* loadPresetDescriptor(\n  descriptor: UnloadedDescriptor<PresetAPI>,\n  context: Context.FullPreset,\n): Handler<{\n  chain: ConfigChain | null;\n  externalDependencies: ReadonlyDeepArray<string>;\n}> {\n  const preset = instantiatePreset(\n    yield* presetDescriptorLoader(descriptor, context),\n  );\n  validatePreset(preset, context, descriptor);\n  return {\n    chain: yield* buildPresetChain(preset, context),\n    externalDependencies: preset.externalDependencies,\n  };\n}\n\nfunction chainMaybeAsync<Args extends any[], R extends void | Promise<void>>(\n  a: undefined | ((...args: Args) => R),\n  b: undefined | ((...args: Args) => R),\n): (...args: Args) => R {\n  if (!a) return b;\n  if (!b) return a;\n\n  return function (this: unknown, ...args: Args) {\n    const res = a.apply(this, args);\n    if (res && typeof res.then === \"function\") {\n      return res.then(() => b.apply(this, args));\n    }\n    return b.apply(this, args);\n  } as (...args: Args) => R;\n}\n"],"mappings":";;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,IAAAE,MAAA,GAAAD,OAAA;AAMA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AACA,IAAAK,KAAA,GAAAL,OAAA;AACA,IAAAM,YAAA,GAAAN,OAAA;AACA,IAAAO,UAAA,GAAAP,OAAA;AAQA,SAAAQ,UAAA;EAAA,MAAAT,IAAA,GAAAC,OAAA;EAAAQ,SAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,IAAAU,QAAA,GAAAT,OAAA;AAEA,IAAAU,QAAA,GAAAV,OAAA;AAKA,IAAAW,QAAA,GAAAX,OAAA;AACA,IAAAY,UAAA,GAAAZ,OAAA;AAGA,IAAAa,QAAA,GAAAb,OAAA;AAIA,IAAAc,YAAA,GAAAd,OAAA;AAAoD,IAAAe,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsBrCC,SAAMA,CAAC,CAAC,UAAUC,cAAcA,CAC7CC,SAAuB,EACS;EAAA,IAAAC,iBAAA;EAChC,MAAMC,MAAM,GAAG,OAAO,IAAAC,gBAAwB,EAACH,SAAS,CAAC;EACzD,IAAI,CAACE,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EACA,MAAM;IAAEE,OAAO;IAAErB,OAAO;IAAEsB;EAAa,CAAC,GAAGH,MAAM;EAEjD,IAAIG,YAAY,KAAK,SAAS,EAAE;IAC9B,OAAO,IAAI;EACb;EAEA,MAAMC,cAAgC,GAAG,CAAC,CAAC;EAE3C,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGJ,OAAO;EAEpC,IAAI,CAACG,OAAO,IAAI,CAACC,OAAO,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,MAAMC,aAAiC,GAAAC,MAAA,CAAAC,MAAA,KAClC7B,OAAO;IACV8B,OAAO,EAAET,OAAO,CAACS;EAAO,EACzB;EAED,MAAMC,YAAY,GAAIC,IAAgB,IAAK;IACzC,MAAMC,IAAI,GAAG,IAAAC,uBAAiB,EAACF,IAAI,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE;MACT,MAAM,IAAIP,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,OAAOO,IAAI;EACb,CAAC;EAED,MAAME,kBAAkB,GAAGV,OAAO,CAACW,GAAG,CAACL,YAAY,CAAC;EACpD,MAAMM,yBAAyB,GAAGb,OAAO,CAACY,GAAG,CAACL,YAAY,CAAC;EAC3D,MAAMO,uBAAoE,GAAG,CAC3E,EAAE,CACH;EACD,MAAMC,MAA4B,GAAG,EAAE;EAEvC,MAAMC,oBAAuC,GAAG,EAAE;EAElD,MAAMC,OAAO,GAAG,OAAOC,YAAY,CACjC1C,OAAO,EACP,UAAU2C,wBAAwBA,CAChCC,UAAgD,EAChDC,qBAA2D,EACrC;IACtB,MAAMpB,OAGJ,GAAG,EAAE;IAEP,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,UAAU,GAAGJ,UAAU,CAACE,CAAC,CAAC;MAChC,IAAIE,UAAU,CAAC3B,OAAO,KAAK,KAAK,EAAE;QAChC,IAAI;UAEF,IAAI4B,MAAM,GAAG,OAAOC,oBAAoB,CAACF,UAAU,EAAErB,aAAa,CAAC;QACrE,CAAC,CAAC,OAAOwB,CAAC,EAAE;UACV,IAAIA,CAAC,CAACC,IAAI,KAAK,sBAAsB,EAAE;YACrC,IAAAC,wCAA+B,EAACT,UAAU,EAAEE,CAAC,EAAE,QAAQ,EAAEK,CAAC,CAAC;UAC7D;UACA,MAAMA,CAAC;QACT;QAEAX,oBAAoB,CAACc,IAAI,CAACL,MAAM,CAACT,oBAAoB,CAAC;QAKtD,IAAIQ,UAAU,CAACO,OAAO,EAAE;UACtB9B,OAAO,CAAC6B,IAAI,CAAC;YAAEL,MAAM,EAAEA,MAAM,CAACO,KAAK;YAAEC,IAAI,EAAE;UAAG,CAAC,CAAC;QAClD,CAAC,MAAM;UACLhC,OAAO,CAACiC,OAAO,CAAC;YACdT,MAAM,EAAEA,MAAM,CAACO,KAAK;YACpBC,IAAI,EAAEZ;UACR,CAAC,CAAC;QACJ;MACF;IACF;IAGA,IAAIpB,OAAO,CAACsB,MAAM,GAAG,CAAC,EAAE;MAGtBT,uBAAuB,CAACqB,MAAM,CAC5B,CAAC,EACD,CAAC,EACD,GAAGlC,OAAO,CAACW,GAAG,CAACwB,CAAC,IAAIA,CAAC,CAACH,IAAI,CAAC,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKjB,qBAAqB,CACrE,CAAC;MAED,KAAK,MAAM;QAAEI,MAAM;QAAEQ;MAAK,CAAC,IAAIhC,OAAO,EAAE;QACtC,IAAI,CAACwB,MAAM,EAAE,OAAO,IAAI;QAExBQ,IAAI,CAACH,IAAI,CAAC,GAAGL,MAAM,CAACzB,OAAO,CAAC;QAE5B,MAAMiB,OAAO,GAAG,OAAOE,wBAAwB,CAACM,MAAM,CAACxB,OAAO,EAAEgC,IAAI,CAAC;QACrE,IAAIhB,OAAO,EAAE,OAAO,IAAI;QAExBQ,MAAM,CAAC5B,OAAO,CAAC0C,OAAO,CAACC,IAAI,IAAI;UAC7B,IAAAC,kBAAY,EAAC1C,cAAc,EAAEyC,IAAI,CAAC;QACpC,CAAC,CAAC;MACJ;IACF;EACF,CACF,CAAC,CAAC7B,kBAAkB,EAAEG,uBAAuB,CAAC,CAAC,CAAC,CAAC;EAEjD,IAAIG,OAAO,EAAE,OAAO,IAAI;EAExB,MAAMuB,IAAsB,GAAGzC,cAAc;EAC7C,IAAA0C,kBAAY,EAACD,IAAI,EAAE3C,OAAO,CAAC;EAE3B,MAAM6C,aAAiC,GAAAtC,MAAA,CAAAC,MAAA,KAClCF,aAAa;IAChBwC,WAAW,GAAAjD,iBAAA,GAAE8C,IAAI,CAACG,WAAW,YAAAjD,iBAAA,GAAI,CAAC;EAAC,EACpC;EAED,OAAOwB,YAAY,CAAC1C,OAAO,EAAE,UAAUoE,qBAAqBA,CAAA,EAAG;IAC7D9B,uBAAuB,CAAC,CAAC,CAAC,CAACoB,OAAO,CAAC,GAAGrB,yBAAyB,CAAC;IAEhE,KAAK,MAAMgC,KAAK,IAAI/B,uBAAuB,EAAE;MAC3C,MAAMmB,IAAc,GAAG,EAAE;MACzBlB,MAAM,CAACe,IAAI,CAACG,IAAI,CAAC;MAEjB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,KAAK,CAACtB,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,UAAU,GAAGqB,KAAK,CAACvB,CAAC,CAAC;QAC3B,IAAIE,UAAU,CAAC3B,OAAO,KAAK,KAAK,EAAE;UAChC,IAAI;YAEF,IAAIiD,MAAM,GAAG,OAAOC,oBAAoB,CAACvB,UAAU,EAAEkB,aAAa,CAAC;UACrE,CAAC,CAAC,OAAOf,CAAC,EAAE;YACV,IAAIA,CAAC,CAACC,IAAI,KAAK,+BAA+B,EAAE;cAE9C,IAAAC,wCAA+B,EAACgB,KAAK,EAAEvB,CAAC,EAAE,QAAQ,EAAEK,CAAC,CAAC;YACxD;YACA,MAAMA,CAAC;UACT;UACAM,IAAI,CAACH,IAAI,CAACgB,MAAM,CAAC;UAEjB9B,oBAAoB,CAACc,IAAI,CAACgB,MAAM,CAAC9B,oBAAoB,CAAC;QACxD;MACF;IACF;EACF,CAAC,CAAC,CAAC,CAAC;EAEJwB,IAAI,CAACxC,OAAO,GAAGe,MAAM,CAAC,CAAC,CAAC;EACxByB,IAAI,CAACvC,OAAO,GAAGc,MAAM,CAClBiC,KAAK,CAAC,CAAC,CAAC,CACRX,MAAM,CAACrC,OAAO,IAAIA,OAAO,CAACuB,MAAM,GAAG,CAAC,CAAC,CACrCX,GAAG,CAACZ,OAAO,KAAK;IAAEA;EAAQ,CAAC,CAAC,CAAC;EAChCwC,IAAI,CAACS,aAAa,GAAGT,IAAI,CAACvC,OAAO,CAACsB,MAAM,GAAG,CAAC;EAE5C,OAAO;IACL1B,OAAO,EAAE2C,IAAI;IACbzB,MAAM,EAAEA,MAAM;IACdC,oBAAoB,EAAE,IAAAkC,mBAAe,EAAClC,oBAAoB;EAC5D,CAAC;AACH,CAAC,CAAC;AAEF,SAASE,YAAYA,CAAqB1C,OAAsB,EAAE2E,EAAK,EAAK;EAC1E,OAAO,WAAWC,IAAa,EAAEC,IAAa,EAAE;IAC9C,IAAI;MACF,OAAO,OAAOF,EAAE,CAACC,IAAI,EAAEC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAO1B,CAAC,EAAE;MAGV,IAAI,CAAC,YAAY,CAAC2B,IAAI,CAAC3B,CAAC,CAAC4B,OAAO,CAAC,EAAE;QAAA,IAAAC,iBAAA;QACjC7B,CAAC,CAAC4B,OAAO,GAAG,YAAAC,iBAAA,GAAWhF,OAAO,CAACiF,QAAQ,YAAAD,iBAAA,GAAI,cAAc,KACvD7B,CAAC,CAAC4B,OAAO,EACT;MACJ;MAEA,MAAM5B,CAAC;IACT;EACF,CAAC;AACH;AAKA,MAAM+B,oBAAoB,GACxBC,UAGQ,IAER,IAAAC,sBAAa,EAAC,WACZ;EAAEC,KAAK;EAAEhE,OAAO;EAAEiE,OAAO;EAAEC;AAA+B,CAAC,EAC3DC,KAAiC,EACN;EAE3B,IAAInE,OAAO,KAAK,KAAK,EAAE,MAAM,IAAIK,KAAK,CAAC,mBAAmB,CAAC;EAE3DL,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,MAAMmB,oBAAmC,GAAG,EAAE;EAE9C,IAAIR,IAAa,GAAGqD,KAAK;EACzB,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IAC/B,MAAMI,OAAO,GAAG,IAAAC,iBAAU,EACxBL,KAAK,EACL,wFACF,CAAC;IAED,MAAMM,GAAG,GAAA/D,MAAA,CAAAC,MAAA,KACJ7B,OAAO,EACPmF,UAAU,CAACK,KAAK,EAAEhD,oBAAoB,CAAC,CAC3C;IACD,IAAI;MACFR,IAAI,GAAG,OAAOyD,OAAO,CAACE,GAAG,EAAEtE,OAAO,EAAEiE,OAAO,CAAC;IAC9C,CAAC,CAAC,OAAOnC,CAAC,EAAE;MACV,IAAIoC,KAAK,EAAE;QACTpC,CAAC,CAAC4B,OAAO,IAAI,uBAAuBa,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,GAAG;MAC9D;MACA,MAAMpC,CAAC;IACT;EACF;EAEA,IAAI,CAACnB,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACrC,MAAM,IAAIN,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,IAAI,IAAAoE,iBAAU,EAAC9D,IAAI,CAAC,EAAE;IAEpB,OAAO,EAAE;IAET,MAAM,IAAIN,KAAK,CACb,gDAAgD,GAC9C,wDAAwD,GACxD,sCAAsC,GACtC,oDAAoD,GACpD,8DAA8D,GAC9D,sBAAsBkE,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,GAC/C,CAAC;EACH;EAEA,IACE/C,oBAAoB,CAACO,MAAM,GAAG,CAAC,KAC9B,CAACyC,KAAK,CAACO,UAAU,CAAC,CAAC,IAAIP,KAAK,CAACQ,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,EACnD;IACA,IAAIC,KAAK,GACP,sDAAsD,GACtD,IAAIzD,oBAAoB,CAAC,CAAC,CAAC,mBAAmB;IAChD,IAAI,CAACgD,KAAK,CAACO,UAAU,CAAC,CAAC,EAAE;MACvBE,KAAK,IAAI,mFAAmF;IAC9F,CAAC,MAAM;MACLA,KAAK,IAAI,gDAAgD;IAC3D;IACAA,KAAK,IACH,mFAAmF,GACnF,sEAAsE,GACtE,0DAA0D,GAC1D,sBAAsBL,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,GAAG;IAEhD,MAAM,IAAI7D,KAAK,CAACuE,KAAK,CAAC;EACxB;EAEA,OAAO;IACLZ,KAAK,EAAErD,IAAI;IACXX,OAAO;IACPiE,OAAO;IACPC,KAAK;IACL/C,oBAAoB,EAAE,IAAAkC,mBAAe,EAAClC,oBAAoB;EAC5D,CAAC;AACH,CAAC,CAAC;AAEJ,MAAM0D,sBAAsB,GAAGhB,oBAAoB,CAGjDiB,wBAAa,CAAC;AAChB,MAAMC,sBAAsB,GAAGlB,oBAAoB,CAGjDmB,wBAAa,CAAC;AAEhB,MAAMC,iBAAiB,GAAG,IAAAlB,sBAAa,EAAC,WACtC;EAAEC,KAAK;EAAEhE,OAAO;EAAEiE,OAAO;EAAEC,KAAK;EAAE/C;AAAuC,CAAC,EAC1EgD,KAA8C,EAC7B;EACjB,MAAMe,SAAS,GAAG,IAAAC,6BAAoB,EAACnB,KAAK,CAAC;EAE7C,MAAMf,MAAM,GAAA1C,MAAA,CAAAC,MAAA,KACP0E,SAAS,CACb;EACD,IAAIjC,MAAM,CAACmC,OAAO,EAAE;IAClBnC,MAAM,CAACmC,OAAO,GAAGC,mBAAQ,CAACC,OAAO,CAAA/E,MAAA,CAAAC,MAAA,KAC5ByC,MAAM,CAACmC,OAAO,CAClB,CAAC;EACJ;EAEA,IAAInC,MAAM,CAACsC,QAAQ,EAAE;IACnB,MAAMC,kBAAiD,GAAG;MACxDC,IAAI,EAAEC,SAAS;MACfxB,KAAK,EAAE,GAAGA,KAAK,WAAW;MAC1BF,KAAK,EAAEf,MAAM,CAACsC,QAAQ;MACtBvF,OAAO;MACPiE;IACF,CAAC;IAED,MAAMsB,QAAQ,GAAG,OAAO,IAAAI,mBAAY,EAACzC,oBAAoB,EAAE0C,GAAG,IAAI;MAEhE,OAAOzB,KAAK,CAAC0B,UAAU,CAACtH,IAAI,IAAIqH,GAAG,CAACJ,kBAAkB,EAAEjH,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC;IAEF0E,MAAM,CAAC6C,GAAG,GAAGC,eAAe,CAACR,QAAQ,CAACO,GAAG,EAAE7C,MAAM,CAAC6C,GAAG,CAAC;IACtD7C,MAAM,CAAC+C,IAAI,GAAGD,eAAe,CAACR,QAAQ,CAACS,IAAI,EAAE/C,MAAM,CAAC+C,IAAI,CAAC;IACzD/C,MAAM,CAACgD,iBAAiB,GAAGF,eAAe,CACxCR,QAAQ,CAACU,iBAAiB,EAC1BhD,MAAM,CAACgD,iBACT,CAAC;IACDhD,MAAM,CAACmC,OAAO,GAAGC,mBAAQ,CAACa,QAAQ,CAACC,KAAK,CAAC,CACvCZ,QAAQ,CAACH,OAAO,IAAI,CAAC,CAAC,EACtBnC,MAAM,CAACmC,OAAO,IAAI,CAAC,CAAC,CACrB,CAAC;IAEF,IAAIG,QAAQ,CAACpE,oBAAoB,CAACO,MAAM,GAAG,CAAC,EAAE;MAC5C,IAAIP,oBAAoB,CAACO,MAAM,KAAK,CAAC,EAAE;QACrCP,oBAAoB,GAAGoE,QAAQ,CAACpE,oBAAoB;MACtD,CAAC,MAAM;QACLA,oBAAoB,GAAG,IAAAkC,mBAAe,EAAC,CACrClC,oBAAoB,EACpBoE,QAAQ,CAACpE,oBAAoB,CAC9B,CAAC;MACJ;IACF;EACF;EAEA,OAAO,IAAIiF,eAAM,CAACnD,MAAM,EAAEjD,OAAO,EAAEkE,KAAK,EAAE/C,oBAAoB,CAAC;AACjE,CAAC,CAAC;AAKF,UAAU+B,oBAAoBA,CAC5BvB,UAAyC,EACzChD,OAA6B,EACZ;EACjB,IAAIgD,UAAU,CAACqC,KAAK,YAAYoC,eAAM,EAAE;IACtC,IAAIzE,UAAU,CAAC3B,OAAO,EAAE;MACtB,MAAM,IAAIK,KAAK,CACb,8DACF,CAAC;IACH;IAEA,OAAOsB,UAAU,CAACqC,KAAK;EACzB;EAEA,OAAO,OAAOiB,iBAAiB,CAC7B,OAAOJ,sBAAsB,CAAClD,UAAU,EAAEhD,OAAO,CAAC,EAClDA,OACF,CAAC;AACH;AAEA,MAAM0H,aAAa,GAAIC,GAAY,IAAKA,GAAG,IAAI,OAAOA,GAAG,KAAK,UAAU;AAExE,MAAMC,6BAA6B,GAAGA,CACpCvG,OAAyB,EACzB2B,UAAyC,KAChC;EACT,IACE0E,aAAa,CAACrG,OAAO,CAACyD,IAAI,CAAC,IAC3B4C,aAAa,CAACrG,OAAO,CAACwG,OAAO,CAAC,IAC9BH,aAAa,CAACrG,OAAO,CAACyG,OAAO,CAAC,EAC9B;IACA,MAAMC,mBAAmB,GAAG/E,UAAU,CAAC8D,IAAI,GACvC,IAAI9D,UAAU,CAAC8D,IAAI,GAAG,GACtB,mBAAmB;IACvB,MAAM,IAAIkB,oBAAW,CACnB,CACE,UAAUD,mBAAmB,+DAA+D,EAC5F,QAAQ,EACR,8DAA8DA,mBAAmB,OAAO,EACxF,QAAQ,EACR,uEAAuE,CACxE,CAACE,IAAI,CAAC,IAAI,CACb,CAAC;EACH;AACF,CAAC;AAED,MAAMC,cAAc,GAAGA,CACrBjF,MAAsB,EACtBjD,OAAsB,EACtBgD,UAAyC,KAChC;EACT,IAAI,CAAChD,OAAO,CAACiF,QAAQ,EAAE;IAAA,IAAAkD,kBAAA;IACrB,MAAM;MAAE9G;IAAQ,CAAC,GAAG4B,MAAM;IAC1B2E,6BAA6B,CAACvG,OAAO,EAAE2B,UAAU,CAAC;IAClD,CAAAmF,kBAAA,GAAA9G,OAAO,CAAC+G,SAAS,aAAjBD,kBAAA,CAAmBpE,OAAO,CAACsE,eAAe,IACxCT,6BAA6B,CAACS,eAAe,EAAErF,UAAU,CAC3D,CAAC;EACH;AACF,CAAC;AAED,MAAMsF,iBAAiB,GAAG,IAAAC,0BAAiB,EACzC,CAAC;EACClD,KAAK;EACLC,OAAO;EACPC,KAAK;EACL/C;AACgB,CAAC,KAAqB;EACtC,OAAO;IACLnB,OAAO,EAAE,IAAAmH,iBAAQ,EAAC,QAAQ,EAAEnD,KAAK,CAAC;IAClCE,KAAK;IACLD,OAAO;IACP9C;EACF,CAAC;AACH,CACF,CAAC;AAKD,UAAUU,oBAAoBA,CAC5BF,UAAyC,EACzChD,OAA2B,EAI1B;EACD,MAAMiD,MAAM,GAAGqF,iBAAiB,CAC9B,OAAOlC,sBAAsB,CAACpD,UAAU,EAAEhD,OAAO,CACnD,CAAC;EACDkI,cAAc,CAACjF,MAAM,EAAEjD,OAAO,EAAEgD,UAAU,CAAC;EAC3C,OAAO;IACLQ,KAAK,EAAE,OAAO,IAAAiF,6BAAgB,EAACxF,MAAM,EAAEjD,OAAO,CAAC;IAC/CwC,oBAAoB,EAAES,MAAM,CAACT;EAC/B,CAAC;AACH;AAEA,SAAS4E,eAAeA,CACtBsB,CAAqC,EACrCC,CAAqC,EACf;EACtB,IAAI,CAACD,CAAC,EAAE,OAAOC,CAAC;EAChB,IAAI,CAACA,CAAC,EAAE,OAAOD,CAAC;EAEhB,OAAO,UAAyB,GAAGE,IAAU,EAAE;IAC7C,MAAMC,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;IAC/B,IAAIC,GAAG,IAAI,OAAOA,GAAG,CAACE,IAAI,KAAK,UAAU,EAAE;MACzC,OAAOF,GAAG,CAACE,IAAI,CAAC,MAAMJ,CAAC,CAACG,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC;IAC5C;IACA,OAAOD,CAAC,CAACG,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;EAC5B,CAAC;AACH;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/plugin.js":{"lineLengths":[13,0,46,13,3,25,52,14,90,22,36,23,22,26,33,36,26,39,34,54,28,26,40,48,54,27,53,3,1,25,7,0,34,0],"data":{"version":3,"names":["_deepArray","require","Plugin","constructor","plugin","options","key","externalDependencies","finalize","manipulateOptions","post","pre","visitor","parserOverride","generatorOverride","name","exports","default"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/plugin.ts"],"sourcesContent":["import { finalize } from \"./helpers/deep-array.ts\";\nimport type { ReadonlyDeepArray } from \"./helpers/deep-array.ts\";\nimport type { PluginObject } from \"./validation/plugins.ts\";\n\nexport default class Plugin {\n  key: string | undefined | null;\n  manipulateOptions?: (options: unknown, parserOpts: unknown) => void;\n  post?: PluginObject[\"post\"];\n  pre?: PluginObject[\"pre\"];\n  visitor: PluginObject[\"visitor\"];\n\n  parserOverride?: PluginObject[\"parserOverride\"];\n  generatorOverride?: Function;\n\n  options: object;\n\n  externalDependencies: ReadonlyDeepArray<string>;\n\n  constructor(\n    plugin: PluginObject,\n    options: object,\n    key?: string,\n    externalDependencies: ReadonlyDeepArray<string> = finalize([]),\n  ) {\n    this.key = plugin.name || key;\n\n    this.manipulateOptions = plugin.manipulateOptions;\n    this.post = plugin.post;\n    this.pre = plugin.pre;\n    this.visitor = plugin.visitor || {};\n    this.parserOverride = plugin.parserOverride;\n    this.generatorOverride = plugin.generatorOverride;\n\n    this.options = options;\n    this.externalDependencies = externalDependencies;\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAIe,MAAMC,MAAM,CAAC;EAc1BC,WAAWA,CACTC,MAAoB,EACpBC,OAAe,EACfC,GAAY,EACZC,oBAA+C,GAAG,IAAAC,mBAAQ,EAAC,EAAE,CAAC,EAC9D;IAAA,KAlBFF,GAAG;IAAA,KACHG,iBAAiB;IAAA,KACjBC,IAAI;IAAA,KACJC,GAAG;IAAA,KACHC,OAAO;IAAA,KAEPC,cAAc;IAAA,KACdC,iBAAiB;IAAA,KAEjBT,OAAO;IAAA,KAEPE,oBAAoB;IAQlB,IAAI,CAACD,GAAG,GAAGF,MAAM,CAACW,IAAI,IAAIT,GAAG;IAE7B,IAAI,CAACG,iBAAiB,GAAGL,MAAM,CAACK,iBAAiB;IACjD,IAAI,CAACC,IAAI,GAAGN,MAAM,CAACM,IAAI;IACvB,IAAI,CAACC,GAAG,GAAGP,MAAM,CAACO,GAAG;IACrB,IAAI,CAACC,OAAO,GAAGR,MAAM,CAACQ,OAAO,IAAI,CAAC,CAAC;IACnC,IAAI,CAACC,cAAc,GAAGT,MAAM,CAACS,cAAc;IAC3C,IAAI,CAACC,iBAAiB,GAAGV,MAAM,CAACU,iBAAiB;IAEjD,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,oBAAoB,GAAGA,oBAAoB;EAClD;AACF;AAACS,OAAA,CAAAC,OAAA,GAAAf,MAAA;AAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/deep-array.js":{"lineLengths":[13,0,46,13,3,28,36,28,32,1,28,27,22,28,35,64,5,3,16,1,7,0,38,0],"data":{"version":3,"names":["finalize","deepArr","Object","freeze","flattenToSet","arr","result","Set","stack","length","el","pop","Array","isArray","push","add"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/helpers/deep-array.ts"],"sourcesContent":["export type DeepArray<T> = Array<T | ReadonlyDeepArray<T>>;\n\n// Just to make sure that DeepArray<T> is not assignable to ReadonlyDeepArray<T>\ndeclare const __marker: unique symbol;\nexport type ReadonlyDeepArray<T> = ReadonlyArray<T | ReadonlyDeepArray<T>> & {\n  [__marker]: true;\n};\n\nexport function finalize<T>(deepArr: DeepArray<T>): ReadonlyDeepArray<T> {\n  return Object.freeze(deepArr) as ReadonlyDeepArray<T>;\n}\n\nexport function flattenToSet<T extends string>(\n  arr: ReadonlyDeepArray<T>,\n): Set<T> {\n  const result = new Set<T>();\n  const stack = [arr];\n  while (stack.length > 0) {\n    for (const el of stack.pop()) {\n      if (Array.isArray(el)) stack.push(el as ReadonlyDeepArray<T>);\n      else result.add(el as T);\n    }\n  }\n  return result;\n}\n"],"mappings":";;;;;;;AAQO,SAASA,QAAQA,CAAIC,OAAqB,EAAwB;EACvE,OAAOC,MAAM,CAACC,MAAM,CAACF,OAAO,CAAC;AAC/B;AAEO,SAASG,YAAYA,CAC1BC,GAAyB,EACjB;EACR,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAAI,CAAC;EAC3B,MAAMC,KAAK,GAAG,CAACH,GAAG,CAAC;EACnB,OAAOG,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IACvB,KAAK,MAAMC,EAAE,IAAIF,KAAK,CAACG,GAAG,CAAC,CAAC,EAAE;MAC5B,IAAIC,KAAK,CAACC,OAAO,CAACH,EAAE,CAAC,EAAEF,KAAK,CAACM,IAAI,CAACJ,EAA0B,CAAC,CAAC,KACzDJ,MAAM,CAACS,GAAG,CAACL,EAAO,CAAC;IAC1B;EACF;EACA,OAAOJ,MAAM;AACf;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/item.js":{"lineLengths":[13,0,46,13,3,44,60,46,18,31,23,16,4,14,1,60,41,30,1,35,16,6,9,103,9,30,5,46,1,67,34,48,28,3,19,1,18,27,30,35,24,26,26,23,23,34,48,23,7,52,23,7,40,44,44,38,41,45,46,18,24,3,1,36,7,0,32,0],"data":{"version":3,"names":["_path","data","require","_configDescriptors","createItemFromDescriptor","desc","ConfigItem","createConfigItem","value","dirname","type","descriptor","createDescriptor","path","resolve","alias","CONFIG_ITEM_BRAND","Symbol","for","getItemDescriptor","item","_descriptor","undefined","constructor","options","name","file","Object","defineProperty","enumerable","request","resolved","freeze","prototype"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/item.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\nimport type { PluginTarget, PluginOptions } from \"./validation/options.ts\";\n\nimport path from \"node:path\";\nimport { createDescriptor } from \"./config-descriptors.ts\";\n\nimport type { UnloadedDescriptor } from \"./config-descriptors.ts\";\n\nexport function createItemFromDescriptor<API>(\n  desc: UnloadedDescriptor<API>,\n): ConfigItem<API> {\n  return new ConfigItem(desc);\n}\n\n/**\n * Create a config item using the same value format used in Babel's config\n * files. Items returned from this function should be cached by the caller\n * ideally, as recreating the config item will mean re-resolving the item\n * and re-evaluating the plugin/preset function.\n */\nexport function* createConfigItem<API>(\n  value:\n    | PluginTarget\n    | [PluginTarget, PluginOptions]\n    | [PluginTarget, PluginOptions, string | void],\n  {\n    dirname = \".\",\n    type,\n  }: {\n    dirname?: string;\n    type?: \"preset\" | \"plugin\";\n  } = {},\n): Handler<ConfigItem<API>> {\n  const descriptor = yield* createDescriptor(value, path.resolve(dirname), {\n    type,\n    alias: \"programmatic item\",\n  });\n\n  return createItemFromDescriptor(descriptor);\n}\n\nconst CONFIG_ITEM_BRAND = Symbol.for(\"@babel/core@7 - ConfigItem\");\n\nexport function getItemDescriptor<API>(\n  item: unknown,\n): UnloadedDescriptor<API> | void {\n  if ((item as any)?.[CONFIG_ITEM_BRAND]) {\n    return (item as ConfigItem<API>)._descriptor;\n  }\n\n  return undefined;\n}\n\nexport type { ConfigItem };\n\n/**\n * A public representation of a plugin/preset that will _eventually_ be load.\n * Users can use this to interact with the results of a loaded Babel\n * configuration.\n *\n * Any changes to public properties of this class should be considered a\n * breaking change to Babel's API.\n */\nclass ConfigItem<API> {\n  /**\n   * The private underlying descriptor that Babel actually cares about.\n   * If you access this, you are a bad person.\n   */\n  _descriptor: UnloadedDescriptor<API>;\n\n  // TODO(Babel 9): Check if this symbol needs to be updated\n  /**\n   * Used to detect ConfigItem instances from other Babel instances.\n   */\n  [CONFIG_ITEM_BRAND] = true;\n\n  /**\n   * The resolved value of the item itself.\n   */\n  value: object | Function;\n\n  /**\n   * The options, if any, that were passed to the item.\n   * Mutating this will lead to undefined behavior.\n   *\n   * \"false\" means that this item has been disabled.\n   */\n  options: object | void | false;\n\n  /**\n   * The directory that the options for this item are relative to.\n   */\n  dirname: string;\n\n  /**\n   * Get the name of the plugin, if the user gave it one.\n   */\n  name: string | void;\n\n  /**\n   * Data about the file that the item was loaded from, if Babel knows it.\n   */\n  file: {\n    // The requested path, e.g. \"@babel/env\".\n    request: string;\n    // The resolved absolute path of the file.\n    resolved: string;\n  } | void;\n\n  constructor(descriptor: UnloadedDescriptor<API>) {\n    // Make people less likely to stumble onto this if they are exploring\n    // programmatically, and also make sure that if people happen to\n    // pass the item through JSON.stringify, it doesn't show up.\n    this._descriptor = descriptor;\n    Object.defineProperty(this, \"_descriptor\", { enumerable: false });\n\n    Object.defineProperty(this, CONFIG_ITEM_BRAND, { enumerable: false });\n\n    this.value = this._descriptor.value;\n    this.options = this._descriptor.options;\n    this.dirname = this._descriptor.dirname;\n    this.name = this._descriptor.name;\n    this.file = this._descriptor.file\n      ? {\n          request: this._descriptor.file.request,\n          resolved: this._descriptor.file.resolved,\n        }\n      : undefined;\n\n    // Freeze the object to make it clear that people shouldn't expect mutating\n    // this object to do anything. A new item should be created if they want\n    // to change something.\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(ConfigItem.prototype);\n"],"mappings":";;;;;;;;AAGA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,IAAAE,kBAAA,GAAAD,OAAA;AAIO,SAASE,wBAAwBA,CACtCC,IAA6B,EACZ;EACjB,OAAO,IAAIC,UAAU,CAACD,IAAI,CAAC;AAC7B;AAQO,UAAUE,gBAAgBA,CAC/BC,KAGgD,EAChD;EACEC,OAAO,GAAG,GAAG;EACbC;AAIF,CAAC,GAAG,CAAC,CAAC,EACoB;EAC1B,MAAMC,UAAU,GAAG,OAAO,IAAAC,mCAAgB,EAACJ,KAAK,EAAEK,MAAGA,CAAC,CAACC,OAAO,CAACL,OAAO,CAAC,EAAE;IACvEC,IAAI;IACJK,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,OAAOX,wBAAwB,CAACO,UAAU,CAAC;AAC7C;AAEA,MAAMK,iBAAiB,GAAGC,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC;AAE3D,SAASC,iBAAiBA,CAC/BC,IAAa,EACmB;EAChC,IAAKA,IAAI,YAAJA,IAAI,CAAWJ,iBAAiB,CAAC,EAAE;IACtC,OAAQI,IAAI,CAAqBC,WAAW;EAC9C;EAEA,OAAOC,SAAS;AAClB;AAYA,MAAMhB,UAAU,CAAM;EA8CpBiB,WAAWA,CAACZ,UAAmC,EAAE;IAAA,KAzCjDU,WAAW;IAAA,KAMVL,iBAAiB,IAAI,IAAI;IAAA,KAK1BR,KAAK;IAAA,KAQLgB,OAAO;IAAA,KAKPf,OAAO;IAAA,KAKPgB,IAAI;IAAA,KAKJC,IAAI;IAWF,IAAI,CAACL,WAAW,GAAGV,UAAU;IAC7BgB,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MAAEC,UAAU,EAAE;IAAM,CAAC,CAAC;IAEjEF,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEZ,iBAAiB,EAAE;MAAEa,UAAU,EAAE;IAAM,CAAC,CAAC;IAErE,IAAI,CAACrB,KAAK,GAAG,IAAI,CAACa,WAAW,CAACb,KAAK;IACnC,IAAI,CAACgB,OAAO,GAAG,IAAI,CAACH,WAAW,CAACG,OAAO;IACvC,IAAI,CAACf,OAAO,GAAG,IAAI,CAACY,WAAW,CAACZ,OAAO;IACvC,IAAI,CAACgB,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACI,IAAI;IACjC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACK,IAAI,GAC7B;MACEI,OAAO,EAAE,IAAI,CAACT,WAAW,CAACK,IAAI,CAACI,OAAO;MACtCC,QAAQ,EAAE,IAAI,CAACV,WAAW,CAACK,IAAI,CAACK;IAClC,CAAC,GACDT,SAAS;IAKbK,MAAM,CAACK,MAAM,CAAC,IAAI,CAAC;EACrB;AACF;AAEAL,MAAM,CAACK,MAAM,CAAC1B,UAAU,CAAC2B,SAAS,CAAC;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/config-descriptors.js":{"lineLengths":[13,0,46,13,3,58,44,62,21,34,26,16,4,14,1,60,41,33,39,54,34,43,398,1,28,15,1,70,59,129,3,17,1,59,9,12,12,17,14,10,73,106,122,4,1,61,10,73,105,129,4,1,46,89,42,109,93,88,6,3,46,89,42,58,78,88,5,3,27,44,9,10,29,11,37,40,24,35,37,3,50,23,23,47,3,38,94,29,24,5,29,3,14,1,73,82,1,58,67,1,67,104,9,31,22,7,34,21,1,43,7,8,9,4,50,13,16,3,11,14,19,29,29,37,12,31,5,3,23,22,34,35,88,5,79,26,6,15,11,41,12,14,24,6,3,15,64,3,54,24,28,12,78,5,3,65,94,3,64,109,3,10,9,29,10,12,12,12,8,4,1,36,24,29,51,38,19,26,35,5,33,66,342,5,27,3,1,7,0,46,0],"data":{"version":3,"names":["_gensync","data","require","_functional","_index","_item","_caching","_resolveTargets","isEqualDescriptor","a","b","_a$file","_b$file","_a$file2","_b$file2","name","value","options","dirname","alias","ownPass","file","request","resolved","handlerOf","optionsWithResolvedBrowserslistConfigFile","browserslistConfigFile","resolveBrowserslistConfigFile","createCachedDescriptors","plugins","presets","passPerPreset","createCachedPluginDescriptors","createCachedPresetDescriptors","createUncachedDescriptors","once","createPluginDescriptors","createPresetDescriptors","PRESET_DESCRIPTOR_CACHE","WeakMap","makeWeakCacheSync","items","cache","using","dir","makeStrongCacheSync","makeStrongCache","descriptors","map","desc","loadCachedDescriptor","PLUGIN_DESCRIPTOR_CACHE","DEFAULT_OPTIONS","cacheByOptions","get","set","possibilities","includes","matches","filter","possibility","length","push","createDescriptors","type","gensync","all","item","index","createDescriptor","assertNoDuplicates","pair","getItemDescriptor","Array","isArray","undefined","filepath","Error","resolver","loadPlugin","loadPreset","String","__esModule","default","Map","nameMap","Set","has","conflicts","i","JSON","stringify","join","add"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/config-descriptors.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\nimport { once } from \"../gensync-utils/functional.ts\";\n\nimport { loadPlugin, loadPreset } from \"./files/index.ts\";\n\nimport { getItemDescriptor } from \"./item.ts\";\n\nimport {\n  makeWeakCacheSync,\n  makeStrongCacheSync,\n  makeStrongCache,\n} from \"./caching.ts\";\nimport type { CacheConfigurator } from \"./caching.ts\";\n\nimport type {\n  ValidatedOptions,\n  PluginList,\n  PluginItem,\n} from \"./validation/options.ts\";\n\nimport { resolveBrowserslistConfigFile } from \"./resolve-targets.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\n// Represents a config object and functions to lazily load the descriptors\n// for the plugins and presets so we don't load the plugins/presets unless\n// the options object actually ends up being applicable.\nexport type OptionsAndDescriptors = {\n  options: ValidatedOptions;\n  plugins: () => Handler<Array<UnloadedDescriptor<PluginAPI>>>;\n  presets: () => Handler<Array<UnloadedDescriptor<PresetAPI>>>;\n};\n\n// Represents a plugin or presets at a given location in a config object.\n// At this point these have been resolved to a specific object or function,\n// but have not yet been executed to call functions with options.\nexport interface UnloadedDescriptor<API, Options = object | undefined | false> {\n  name: string | undefined;\n  value: object | ((api: API, options: Options, dirname: string) => unknown);\n  options: Options;\n  dirname: string;\n  alias: string;\n  ownPass?: boolean;\n  file?: {\n    request: string;\n    resolved: string;\n  };\n}\n\nfunction isEqualDescriptor<API>(\n  a: UnloadedDescriptor<API>,\n  b: UnloadedDescriptor<API>,\n): boolean {\n  return (\n    a.name === b.name &&\n    a.value === b.value &&\n    a.options === b.options &&\n    a.dirname === b.dirname &&\n    a.alias === b.alias &&\n    a.ownPass === b.ownPass &&\n    a.file?.request === b.file?.request &&\n    a.file?.resolved === b.file?.resolved\n  );\n}\n\nexport type ValidatedFile = {\n  filepath: string;\n  dirname: string;\n  options: ValidatedOptions;\n};\n\n// eslint-disable-next-line require-yield\nfunction* handlerOf<T>(value: T): Handler<T> {\n  return value;\n}\n\nfunction optionsWithResolvedBrowserslistConfigFile(\n  options: ValidatedOptions,\n  dirname: string,\n): ValidatedOptions {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = resolveBrowserslistConfigFile(\n      options.browserslistConfigFile,\n      dirname,\n    );\n  }\n  return options;\n}\n\n/**\n * Create a set of descriptors from a given options object, preserving\n * descriptor identity based on the identity of the plugin/preset arrays\n * themselves, and potentially on the identity of the plugins/presets + options.\n */\nexport function createCachedDescriptors(\n  dirname: string,\n  options: ValidatedOptions,\n  alias: string,\n): OptionsAndDescriptors {\n  const { plugins, presets, passPerPreset } = options;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins\n      ? () =>\n          // @ts-expect-error todo(flow->ts) ts complains about incorrect arguments\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          createCachedPluginDescriptors(plugins, dirname)(alias)\n      : () => handlerOf([]),\n    presets: presets\n      ? () =>\n          // @ts-expect-error todo(flow->ts) ts complains about incorrect arguments\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          createCachedPresetDescriptors(presets, dirname)(alias)(\n            !!passPerPreset,\n          )\n      : () => handlerOf([]),\n  };\n}\n\n/**\n * Create a set of descriptors from a given options object, with consistent\n * identity for the descriptors, but not caching based on any specific identity.\n */\nexport function createUncachedDescriptors(\n  dirname: string,\n  options: ValidatedOptions,\n  alias: string,\n): OptionsAndDescriptors {\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    // The returned result here is cached to represent a config object in\n    // memory, so we build and memoize the descriptors to ensure the same\n    // values are returned consistently.\n    plugins: once(() =>\n      createPluginDescriptors(options.plugins || [], dirname, alias),\n    ),\n    presets: once(() =>\n      createPresetDescriptors(\n        options.presets || [],\n        dirname,\n        alias,\n        !!options.passPerPreset,\n      ),\n    ),\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = makeWeakCacheSync(\n  (items: PluginList, cache: CacheConfigurator<string>) => {\n    const dirname = cache.using(dir => dir);\n    return makeStrongCacheSync((alias: string) =>\n      makeStrongCache(function* (\n        passPerPreset: boolean,\n      ): Handler<Array<UnloadedDescriptor<PresetAPI>>> {\n        const descriptors = yield* createPresetDescriptors(\n          items,\n          dirname,\n          alias,\n          passPerPreset,\n        );\n        return descriptors.map(\n          // Items are cached using the overall preset array identity when\n          // possibly, but individual descriptors are also cached if a match\n          // can be found in the previously-used descriptor lists.\n          desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc),\n        );\n      }),\n    );\n  },\n);\n\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = makeWeakCacheSync(\n  (items: PluginList, cache: CacheConfigurator<string>) => {\n    const dirname = cache.using(dir => dir);\n    return makeStrongCache(function* (\n      alias: string,\n    ): Handler<Array<UnloadedDescriptor<PluginAPI>>> {\n      const descriptors = yield* createPluginDescriptors(items, dirname, alias);\n      return descriptors.map(\n        // Items are cached using the overall plugin array identity when\n        // possibly, but individual descriptors are also cached if a match\n        // can be found in the previously-used descriptor lists.\n        desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc),\n      );\n    });\n  },\n);\n\n/**\n * When no options object is given in a descriptor, this object is used\n * as a WeakMap key in order to have consistent identity.\n */\nconst DEFAULT_OPTIONS = {};\n\n/**\n * Given the cache and a descriptor, returns a matching descriptor from the\n * cache, or else returns the input descriptor and adds it to the cache for\n * next time.\n */\nfunction loadCachedDescriptor<API>(\n  cache: WeakMap<\n    object | Function,\n    WeakMap<object, Array<UnloadedDescriptor<API>>>\n  >,\n  desc: UnloadedDescriptor<API>,\n) {\n  const { value, options = DEFAULT_OPTIONS } = desc;\n  if (options === false) return desc;\n\n  let cacheByOptions = cache.get(value);\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (!possibilities.includes(desc)) {\n    const matches = possibilities.filter(possibility =>\n      isEqualDescriptor(possibility, desc),\n    );\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction* createPresetDescriptors(\n  items: PluginList,\n  dirname: string,\n  alias: string,\n  passPerPreset: boolean,\n): Handler<Array<UnloadedDescriptor<PresetAPI>>> {\n  return yield* createDescriptors(\n    \"preset\",\n    items,\n    dirname,\n    alias,\n    passPerPreset,\n  );\n}\n\nfunction* createPluginDescriptors(\n  items: PluginList,\n  dirname: string,\n  alias: string,\n): Handler<Array<UnloadedDescriptor<PluginAPI>>> {\n  return yield* createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction* createDescriptors<API>(\n  type: \"plugin\" | \"preset\",\n  items: PluginList,\n  dirname: string,\n  alias: string,\n  ownPass?: boolean,\n): Handler<Array<UnloadedDescriptor<API>>> {\n  const descriptors = yield* gensync.all(\n    items.map((item, index) =>\n      createDescriptor(item, dirname, {\n        type,\n        alias: `${alias}$${index}`,\n        ownPass: !!ownPass,\n      }),\n    ),\n  );\n\n  assertNoDuplicates(descriptors);\n\n  return descriptors;\n}\n\n/**\n * Given a plugin/preset item, resolve it into a standard format.\n */\nexport function* createDescriptor<API>(\n  pair: PluginItem,\n  dirname: string,\n  {\n    type,\n    alias,\n    ownPass,\n  }: {\n    type?: \"plugin\" | \"preset\";\n    alias: string;\n    ownPass?: boolean;\n  },\n): Handler<UnloadedDescriptor<API>> {\n  const desc = getItemDescriptor(pair);\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  // todo(flow->ts) better type annotation\n  let value: any = pair;\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\n        \"To resolve a string-based item, the type of item must be given\",\n      );\n    }\n    const resolver = type === \"plugin\" ? loadPlugin : loadPreset;\n    const request = value;\n\n    ({ filepath, value } = yield* resolver(value, dirname));\n\n    file = {\n      request,\n      resolved: filepath,\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(\n      `Unsupported format: ${typeof value}. Expected an object or a function.`,\n    );\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    // We allow object values for plugins/presets nested directly within a\n    // config object, because it can be useful to define them in nested\n    // configuration contexts.\n    throw new Error(\n      `Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`,\n    );\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file,\n  };\n}\n\nfunction assertNoDuplicates<API>(items: Array<UnloadedDescriptor<API>>): void {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n\n    let nameMap = map.get(item.value);\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error(\n        [\n          `Duplicate plugin/preset detected.`,\n          `If you'd like to use two separate instances of a plugin,`,\n          `they need separate names, e.g.`,\n          ``,\n          `  plugins: [`,\n          `    ['some-plugin', {}],`,\n          `    ['some-plugin', {}, 'some unique name'],`,\n          `  ]`,\n          ``,\n          `Duplicates detected are:`,\n          `${JSON.stringify(conflicts, null, 2)}`,\n        ].join(\"\\n\"),\n      );\n    }\n\n    nameMap.add(item.name);\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/gensync-utils/functional.js":{"lineLengths":[13,0,46,13,3,20,35,19,13,14,32,23,18,20,33,51,7,44,13,20,21,30,12,25,20,22,24,12,9,14,28,45,24,23,11,13,20,21,30,12,25,55,25,20,22,24,12,25,47,9,7,5,63,4,1,7,0,38,0],"data":{"version":3,"names":["_async","require","once","fn","result","resultP","promiseReferenced","waitFor","isAsync","ok","value","error","resolve","reject","Promise","res","rej"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/gensync-utils/functional.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\n\nimport { isAsync, waitFor } from \"./async.ts\";\n\nexport function once<R>(fn: () => Handler<R>): () => Handler<R> {\n  let result: { ok: true; value: R } | { ok: false; value: unknown };\n  let resultP: Promise<R>;\n  let promiseReferenced = false;\n  return function* () {\n    if (!result) {\n      if (resultP) {\n        promiseReferenced = true;\n        return yield* waitFor(resultP);\n      }\n\n      if (!(yield* isAsync())) {\n        try {\n          result = { ok: true, value: yield* fn() };\n        } catch (error) {\n          result = { ok: false, value: error };\n        }\n      } else {\n        let resolve: (result: R) => void, reject: (error: unknown) => void;\n        resultP = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n\n        try {\n          result = { ok: true, value: yield* fn() };\n          // Avoid keeping the promise around\n          // now that we have the result.\n          resultP = null;\n          // We only resolve/reject the promise if it has been actually\n          // referenced. If there are no listeners we can forget about it.\n          // In the reject case, this avoid uncatchable unhandledRejection\n          // events.\n          if (promiseReferenced) resolve(result.value);\n        } catch (error) {\n          result = { ok: false, value: error };\n          resultP = null;\n          if (promiseReferenced) reject(error);\n        }\n      }\n    }\n\n    if (result.ok) return result.value;\n    else throw result.value;\n  };\n}\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAEO,SAASC,IAAIA,CAAIC,EAAoB,EAAoB;EAC9D,IAAIC,MAA8D;EAClE,IAAIC,OAAmB;EACvB,IAAIC,iBAAiB,GAAG,KAAK;EAC7B,OAAO,aAAa;IAClB,IAAI,CAACF,MAAM,EAAE;MACX,IAAIC,OAAO,EAAE;QACXC,iBAAiB,GAAG,IAAI;QACxB,OAAO,OAAO,IAAAC,cAAO,EAACF,OAAO,CAAC;MAChC;MAEA,IAAI,EAAE,OAAO,IAAAG,cAAO,EAAC,CAAC,CAAC,EAAE;QACvB,IAAI;UACFJ,MAAM,GAAG;YAAEK,EAAE,EAAE,IAAI;YAAEC,KAAK,EAAE,OAAOP,EAAE,CAAC;UAAE,CAAC;QAC3C,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdP,MAAM,GAAG;YAAEK,EAAE,EAAE,KAAK;YAAEC,KAAK,EAAEC;UAAM,CAAC;QACtC;MACF,CAAC,MAAM;QACL,IAAIC,OAA4B,EAAEC,MAAgC;QAClER,OAAO,GAAG,IAAIS,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UAClCJ,OAAO,GAAGG,GAAG;UACbF,MAAM,GAAGG,GAAG;QACd,CAAC,CAAC;QAEF,IAAI;UACFZ,MAAM,GAAG;YAAEK,EAAE,EAAE,IAAI;YAAEC,KAAK,EAAE,OAAOP,EAAE,CAAC;UAAE,CAAC;UAGzCE,OAAO,GAAG,IAAI;UAKd,IAAIC,iBAAiB,EAAEM,OAAO,CAACR,MAAM,CAACM,KAAK,CAAC;QAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdP,MAAM,GAAG;YAAEK,EAAE,EAAE,KAAK;YAAEC,KAAK,EAAEC;UAAM,CAAC;UACpCN,OAAO,GAAG,IAAI;UACd,IAAIC,iBAAiB,EAAEO,MAAM,CAACF,KAAK,CAAC;QACtC;MACF;IACF;IAEA,IAAIP,MAAM,CAACK,EAAE,EAAE,OAAOL,MAAM,CAACM,KAAK,CAAC,KAC9B,MAAMN,MAAM,CAACM,KAAK;EACzB,CAAC;AACH;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/resolve-targets.js":{"lineLengths":[13,0,46,13,3,70,40,18,31,23,16,4,14,1,38,60,43,16,4,14,1,5,79,64,1,40,37,14,68,15,26,6,26,36,47,30,9,12,27,5,3,9,26,14,17,39,51,40,10,64,3,60,29,15,21,44,5,1,7,0,43,0],"data":{"version":3,"names":["_path","data","require","_helperCompilationTargets","resolveBrowserslistConfigFile","browserslistConfigFile","configFileDir","path","resolve","resolveTargets","options","root","optTargets","targets","Array","isArray","browsers","Object","assign","esmodules","configFile","ignoreBrowserslistConfig","getTargets","configPath","browserslistEnv"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/resolve-targets.ts"],"sourcesContent":["type browserType = typeof import(\"./resolve-targets-browser\");\ntype nodeType = typeof import(\"./resolve-targets\");\n\n// Kind of gross, but essentially asserting that the exports of this module are the same as the\n// exports of index-browser, since this file may be replaced at bundle time with index-browser.\n({}) as any as browserType as nodeType;\n\nimport type { ValidatedOptions } from \"./validation/options.ts\";\nimport path from \"node:path\";\nimport getTargets, {\n  type InputTargets,\n} from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"@babel/helper-compilation-targets\";\n\nexport function resolveBrowserslistConfigFile(\n  browserslistConfigFile: string,\n  configFileDir: string,\n): string | undefined {\n  return path.resolve(configFileDir, browserslistConfigFile);\n}\n\nexport function resolveTargets(\n  options: ValidatedOptions,\n  root: string,\n): Targets {\n  const optTargets = options.targets;\n  let targets: InputTargets;\n\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = { browsers: optTargets };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = { ...optTargets, esmodules: \"intersect\" };\n    } else {\n      // https://github.com/microsoft/TypeScript/issues/17002\n      targets = optTargets as InputTargets;\n    }\n  }\n\n  const { browserslistConfigFile } = options;\n  let configFile;\n  let ignoreBrowserslistConfig = false;\n  if (typeof browserslistConfigFile === \"string\") {\n    configFile = browserslistConfigFile;\n  } else {\n    ignoreBrowserslistConfig = browserslistConfigFile === false;\n  }\n\n  return getTargets(targets, {\n    ignoreBrowserslistConfig,\n    configFile,\n    configPath: root,\n    browserslistEnv: options.browserslistEnv,\n  });\n}\n"],"mappings":";;;;;;;AAQA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,0BAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,yBAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAJA,CAAC,CAAC,CAAC;AAUI,SAASG,6BAA6BA,CAC3CC,sBAA8B,EAC9BC,aAAqB,EACD;EACpB,OAAOC,MAAGA,CAAC,CAACC,OAAO,CAACF,aAAa,EAAED,sBAAsB,CAAC;AAC5D;AAEO,SAASI,cAAcA,CAC5BC,OAAyB,EACzBC,IAAY,EACH;EACT,MAAMC,UAAU,GAAGF,OAAO,CAACG,OAAO;EAClC,IAAIA,OAAqB;EAEzB,IAAI,OAAOD,UAAU,KAAK,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;IAC/DC,OAAO,GAAG;MAAEG,QAAQ,EAAEJ;IAAW,CAAC;EACpC,CAAC,MAAM,IAAIA,UAAU,EAAE;IACrB,IAAI,WAAW,IAAIA,UAAU,EAAE;MAC7BC,OAAO,GAAAI,MAAA,CAAAC,MAAA,KAAQN,UAAU;QAAEO,SAAS,EAAE;MAAW,EAAE;IACrD,CAAC,MAAM;MAELN,OAAO,GAAGD,UAA0B;IACtC;EACF;EAEA,MAAM;IAAEP;EAAuB,CAAC,GAAGK,OAAO;EAC1C,IAAIU,UAAU;EACd,IAAIC,wBAAwB,GAAG,KAAK;EACpC,IAAI,OAAOhB,sBAAsB,KAAK,QAAQ,EAAE;IAC9Ce,UAAU,GAAGf,sBAAsB;EACrC,CAAC,MAAM;IACLgB,wBAAwB,GAAGhB,sBAAsB,KAAK,KAAK;EAC7D;EAEA,OAAO,IAAAiB,mCAAU,EAACT,OAAO,EAAE;IACzBQ,wBAAwB;IACxBD,UAAU;IACVG,UAAU,EAAEZ,IAAI;IAChBa,eAAe,EAAEd,OAAO,CAACc;EAC3B,CAAC,CAAC;AACJ;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/config-chain.js":{"lineLengths":[13,0,46,13,3,44,40,40,18,31,23,16,4,14,1,19,32,24,16,4,14,1,50,55,39,69,56,41,39,60,52,42,60,26,10,45,45,57,20,4,1,81,48,70,78,102,30,3,162,219,226,287,41,34,58,58,18,24,45,38,64,17,44,110,41,98,3,7,12,16,11,42,39,56,19,57,93,29,52,32,46,5,37,52,56,5,40,3,30,24,33,92,73,95,8,27,27,91,23,49,7,93,25,7,38,63,59,94,22,27,16,56,40,9,7,37,50,7,5,3,27,198,3,112,10,62,62,74,54,36,38,36,22,4,1,84,61,36,35,54,3,37,40,40,3,48,87,5,76,54,3,38,34,69,5,50,74,7,5,1,69,26,24,76,4,70,26,24,77,4,69,26,24,77,4,47,97,115,122,146,99,3,45,42,64,72,96,98,3,60,78,51,15,1,157,214,221,282,57,20,20,3,83,12,5,1,31,10,9,24,46,1,58,22,20,20,3,89,90,5,1,30,10,9,33,19,85,80,1,35,10,9,31,25,101,69,68,1,38,10,9,40,41,107,73,88,100,1,26,7,6,12,15,14,4,79,11,13,14,32,33,73,29,25,27,24,9,50,85,31,26,35,26,11,7,64,52,80,33,32,18,30,13,78,105,35,38,20,38,15,11,9,9,5,32,15,18,17,14,9,7,58,18,5,31,60,16,13,12,13,28,100,20,7,37,43,5,17,4,1,79,46,101,24,196,3,18,95,21,31,31,14,1,37,41,41,41,36,27,3,16,1,34,10,10,9,4,31,45,45,16,1,23,10,16,16,16,20,4,1,33,42,25,21,27,25,25,31,24,22,22,25,25,50,43,29,3,17,1,34,24,25,29,43,31,35,21,28,32,7,40,18,16,21,10,31,56,14,26,7,12,24,19,9,5,3,44,25,15,9,1,29,9,34,328,1,70,55,65,1,42,32,25,3,15,1,55,60,26,234,19,29,27,5,16,3,57,27,239,19,29,27,5,16,3,15,1,66,105,1,74,38,78,14,31,28,7,3,39,132,3,36,61,3,34,1,7,0,40,0],"data":{"version":3,"names":["_path","data","require","_debug","_options","_patternToRegex","_printer","_rewriteStackTrace","_configError","_index","_caching","_configDescriptors","debug","buildDebug","buildPresetChain","arg","context","chain","buildPresetChainWalker","plugins","dedupDescriptors","presets","options","map","o","normalizeOptions","files","Set","exports","makeChainWalker","root","preset","loadPresetDescriptors","env","envName","loadPresetEnvDescriptors","overrides","index","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","createLogger","makeWeakCacheSync","buildRootDescriptors","alias","createUncachedDescriptors","makeStrongCacheSync","buildEnvDescriptors","buildOverrideDescriptors","buildOverrideEnvDescriptors","buildRootChain","opts","configReport","babelRcReport","programmaticLogger","ConfigPrinter","programmaticChain","loadProgrammaticChain","dirname","cwd","undefined","programmaticReport","output","configFile","loadConfig","caller","findRootConfig","babelrc","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","configFileLogger","validatedFile","validateConfigFile","result","loadFileChain","mergeChain","ignoreFile","babelrcFile","isIgnored","fileChain","filename","pkgData","findPackageData","babelrcLoadEnabled","ignore","config","findRelativeConfig","add","filepath","shouldIgnore","validateBabelrcFile","babelrcLogger","showConfig","console","log","filter","x","join","fileHandling","absoluteRoot","directories","includes","babelrcPatterns","Array","isArray","pat","path","resolve","length","some","pathPatternToRegex","directory","matchPattern","file","validate","validateExtendFile","input","createCachedDescriptors","baseLogger","buildProgrammaticLogger","loadFileChainWalker","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","buildFileLogger","configure","ChainFormatter","Config","descriptors","_","_context$caller","Programmatic","callerName","name","_options$env","_options$overrides","Error","_options$overrides2","_override$env","override","chainWalker","flattenedConfigs","rootOpts","configIsApplicable","push","envOpts","forEach","overrideOps","overrideEnvOpts","only","logger","mergeExtendsChain","mergeChainOpts","extends","has","from","delete","target","source","Object","assign","passPerPreset","test","include","exclude","hasOwnProperty","call","sourceMaps","sourceMap","items","Map","item","value","fnKey","nameMap","get","set","desc","ownPass","reduce","acc","configName","configFieldIsApplicable","patterns","matchesPatterns","ignoreListReplacer","_key","RegExp","String","_context$filename","message","JSON","stringify","_context$filename2","pattern","pathToTest","endHiddenCallStack","ConfigError"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/config-chain.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport path from \"node:path\";\nimport buildDebug from \"debug\";\nimport type { Handler } from \"gensync\";\nimport { validate } from \"./validation/options.ts\";\nimport type {\n  ValidatedOptions,\n  IgnoreList,\n  ConfigApplicableTest,\n  BabelrcSearch,\n  CallerMetadata,\n  IgnoreItem,\n} from \"./validation/options.ts\";\nimport pathPatternToRegex from \"./pattern-to-regex.ts\";\nimport { ConfigPrinter, ChainFormatter } from \"./printer.ts\";\nimport type { ReadonlyDeepArray } from \"./helpers/deep-array.ts\";\n\nimport { endHiddenCallStack } from \"../errors/rewrite-stack-trace.ts\";\nimport ConfigError from \"../errors/config-error.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\nconst debug = buildDebug(\"babel:config:config-chain\");\n\nimport {\n  findPackageData,\n  findRelativeConfig,\n  findRootConfig,\n  loadConfig,\n} from \"./files/index.ts\";\nimport type { ConfigFile, IgnoreFile, FilePackageData } from \"./files/index.ts\";\n\nimport { makeWeakCacheSync, makeStrongCacheSync } from \"./caching.ts\";\n\nimport {\n  createCachedDescriptors,\n  createUncachedDescriptors,\n} from \"./config-descriptors.ts\";\nimport type {\n  UnloadedDescriptor,\n  OptionsAndDescriptors,\n  ValidatedFile,\n} from \"./config-descriptors.ts\";\n\nexport type ConfigChain = {\n  plugins: Array<UnloadedDescriptor<PluginAPI>>;\n  presets: Array<UnloadedDescriptor<PresetAPI>>;\n  options: Array<ValidatedOptions>;\n  files: Set<string>;\n};\n\nexport type PresetInstance = {\n  options: ValidatedOptions;\n  alias: string;\n  dirname: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type ConfigContext = {\n  filename: string | undefined;\n  cwd: string;\n  root: string;\n  envName: string;\n  caller: CallerMetadata | undefined;\n  showConfig: boolean;\n};\n\n/**\n * Build a config chain for a given preset.\n */\nexport function* buildPresetChain(\n  arg: PresetInstance,\n  context: any,\n): Handler<ConfigChain | null> {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set(),\n  };\n}\n\nexport const buildPresetChainWalker = makeChainWalker<PresetInstance>({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) =>\n    loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}, // Currently we don't support logging how preset is expanded\n});\nconst loadPresetDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  buildRootDescriptors(preset, preset.alias, createUncachedDescriptors),\n);\nconst loadPresetEnvDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      preset,\n      preset.alias,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadPresetOverridesDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      buildOverrideDescriptors(\n        preset,\n        preset.alias,\n        createUncachedDescriptors,\n        index,\n      ),\n    ),\n);\nconst loadPresetOverridesEnvDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          preset,\n          preset.alias,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nexport type FileHandling = \"transpile\" | \"ignored\" | \"unsupported\";\nexport type RootConfigChain = ConfigChain & {\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  ignore: IgnoreFile | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n};\n\n/**\n * Build a config chain for Babel's full root configuration.\n */\nexport function* buildRootChain(\n  opts: ValidatedOptions,\n  context: ConfigContext,\n): Handler<RootConfigChain | null> {\n  let configReport, babelRcReport;\n  const programmaticLogger = new ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain(\n    {\n      options: opts,\n      dirname: context.cwd,\n    },\n    context,\n    undefined,\n    programmaticLogger,\n  );\n  if (!programmaticChain) return null;\n  const programmaticReport = yield* programmaticLogger.output();\n\n  let configFile;\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* loadConfig(\n      opts.configFile,\n      context.cwd,\n      context.envName,\n      context.caller,\n    );\n  } else if (opts.configFile !== false) {\n    configFile = yield* findRootConfig(\n      context.root,\n      context.envName,\n      context.caller,\n    );\n  }\n\n  let { babelrc, babelrcRoots } = opts;\n  let babelrcRootsDirectory = context.cwd;\n\n  const configFileChain = emptyChain();\n  const configFileLogger = new ConfigPrinter();\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(\n      validatedFile,\n      context,\n      undefined,\n      configFileLogger,\n    );\n    if (!result) return null;\n    configReport = yield* configFileLogger.output();\n\n    // Allow config files to toggle `.babelrc` resolution on and off and\n    // specify where the roots are.\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n  // resolve all .babelrc files\n  if (\n    (babelrc === true || babelrc === undefined) &&\n    typeof context.filename === \"string\"\n  ) {\n    const pkgData = yield* findPackageData(context.filename);\n\n    if (\n      pkgData &&\n      babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)\n    ) {\n      ({ ignore: ignoreFile, config: babelrcFile } = yield* findRelativeConfig(\n        pkgData,\n        context.envName,\n        context.caller,\n      ));\n\n      if (ignoreFile) {\n        fileChain.files.add(ignoreFile.filepath);\n      }\n\n      if (\n        ignoreFile &&\n        shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)\n      ) {\n        isIgnored = true;\n      }\n\n      if (babelrcFile && !isIgnored) {\n        const validatedFile = validateBabelrcFile(babelrcFile);\n        const babelrcLogger = new ConfigPrinter();\n        const result = yield* loadFileChain(\n          validatedFile,\n          context,\n          undefined,\n          babelrcLogger,\n        );\n        if (!result) {\n          isIgnored = true;\n        } else {\n          babelRcReport = yield* babelrcLogger.output();\n          mergeChain(fileChain, result);\n        }\n      }\n\n      if (babelrcFile && isIgnored) {\n        fileChain.files.add(babelrcFile.filepath);\n      }\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(\n      `Babel configs on \"${context.filename}\" (ascending priority):\\n` +\n        // print config by the order of ascending priority\n        [configReport, babelRcReport, programmaticReport]\n          .filter(x => !!x)\n          .join(\"\\n\\n\") +\n        \"\\n-----End Babel configs-----\",\n    );\n  }\n  // Insert file chain in front so programmatic options have priority\n  // over configuration file chain items.\n  const chain = mergeChain(\n    mergeChain(mergeChain(emptyChain(), configFileChain), fileChain),\n    programmaticChain,\n  );\n\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files,\n  };\n}\n\nfunction babelrcLoadEnabled(\n  context: ConfigContext,\n  pkgData: FilePackageData,\n  babelrcRoots: BabelrcSearch | undefined,\n  babelrcRootsDirectory: string,\n): boolean {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n\n  const absoluteRoot = context.root;\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.includes(absoluteRoot);\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns as IgnoreItem];\n  }\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\"\n      ? path.resolve(babelrcRootsDirectory, pat)\n      : pat;\n  });\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.includes(absoluteRoot);\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = pathPatternToRegex(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"configfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateBabelrcFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"babelrcfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateExtendFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"extendsfile\", file.options, file.filepath),\n  }),\n);\n\n/**\n * Build a config chain for just the programmatic options passed into Babel.\n */\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", createCachedDescriptors),\n  env: (input, envName) =>\n    buildEnvDescriptors(input, \"base\", createCachedDescriptors, envName),\n  overrides: (input, index) =>\n    buildOverrideDescriptors(input, \"base\", createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) =>\n    buildOverrideEnvDescriptors(\n      input,\n      \"base\",\n      createCachedDescriptors,\n      index,\n      envName,\n    ),\n  createLogger: (input, context, baseLogger) =>\n    buildProgrammaticLogger(input, context, baseLogger),\n});\n\n/**\n * Build a config chain for a given file.\n */\nconst loadFileChainWalker = makeChainWalker<ValidatedFile>({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) =>\n    loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) =>\n    buildFileLogger(file.filepath, context, baseLogger),\n});\n\nfunction* loadFileChain(\n  input: ValidatedFile,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger: ConfigPrinter,\n) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n  chain?.files.add(input.filepath);\n\n  return chain;\n}\n\nconst loadFileDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  buildRootDescriptors(file, file.filepath, createUncachedDescriptors),\n);\nconst loadFileEnvDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadFileOverridesDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((index: number) =>\n    buildOverrideDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      index,\n    ),\n  ),\n);\nconst loadFileOverridesEnvDescriptors = makeWeakCacheSync(\n  (file: ValidatedFile) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          file,\n          file.filepath,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nfunction buildFileLogger(\n  filepath: string,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Config, {\n    filepath,\n  });\n}\n\nfunction buildRootDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(\n  _: unknown,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Programmatic, {\n    callerName: context.caller?.name,\n  });\n}\n\nfunction buildEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  envName: string,\n) {\n  const opts = options.env?.[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n) {\n  const opts = options.overrides?.[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n  envName: string,\n) {\n  const override = options.overrides?.[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n\n  const opts = override.env?.[envName];\n  return opts\n    ? descriptors(\n        dirname,\n        opts,\n        `${alias}.overrides[${index}].env[\"${envName}\"]`,\n      )\n    : null;\n}\n\nfunction makeChainWalker<\n  ArgT extends {\n    options: ValidatedOptions;\n    dirname: string;\n    filepath?: string;\n  },\n>({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger,\n}: {\n  root: (configEntry: ArgT) => OptionsAndDescriptors;\n  env: (configEntry: ArgT, env: string) => OptionsAndDescriptors | null;\n  overrides: (configEntry: ArgT, index: number) => OptionsAndDescriptors;\n  overridesEnv: (\n    configEntry: ArgT,\n    index: number,\n    env: string,\n  ) => OptionsAndDescriptors | null;\n  createLogger: (\n    configEntry: ArgT,\n    context: ConfigContext,\n    printer: ConfigPrinter | void,\n  ) => (\n    opts: OptionsAndDescriptors,\n    index?: number | null,\n    env?: string | null,\n  ) => void;\n}): (\n  configEntry: ArgT,\n  context: ConfigContext,\n  files?: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n) => Handler<ConfigChain | null> {\n  return function* chainWalker(input, context, files = new Set(), baseLogger) {\n    const { dirname } = input;\n\n    const flattenedConfigs: Array<{\n      config: OptionsAndDescriptors;\n      index: number | undefined | null;\n      envName: string | undefined | null;\n    }> = [];\n\n    const rootOpts = root(input);\n    if (configIsApplicable(rootOpts, dirname, context, input.filepath)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined,\n      });\n\n      const envOpts = env(input, context.envName);\n      if (\n        envOpts &&\n        configIsApplicable(envOpts, dirname, context, input.filepath)\n      ) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined,\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n        if (configIsApplicable(overrideOps, dirname, context, input.filepath)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined,\n          });\n\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n          if (\n            overrideEnvOpts &&\n            configIsApplicable(\n              overrideEnvOpts,\n              dirname,\n              context,\n              input.filepath,\n            )\n          ) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName,\n            });\n          }\n        }\n      });\n    }\n\n    // Process 'ignore' and 'only' before 'extends' items are processed so\n    // that we don't do extra work loading extended configs if a file is\n    // ignored.\n    if (\n      flattenedConfigs.some(\n        ({\n          config: {\n            options: { ignore, only },\n          },\n        }) => shouldIgnore(context, ignore, only, dirname),\n      )\n    ) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const { config, index, envName } of flattenedConfigs) {\n      if (\n        !(yield* mergeExtendsChain(\n          chain,\n          config.options,\n          dirname,\n          context,\n          files,\n          baseLogger,\n        ))\n      ) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      yield* mergeChainOpts(chain, config);\n    }\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(\n  chain: ConfigChain,\n  opts: ValidatedOptions,\n  dirname: string,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n): Handler<boolean> {\n  if (opts.extends === undefined) return true;\n\n  const file = yield* loadConfig(\n    opts.extends,\n    dirname,\n    context.envName,\n    context.caller,\n  );\n\n  if (files.has(file)) {\n    throw new Error(\n      `Configuration cycle detected loading ${file.filepath}.\\n` +\n        `File already loaded following the config chain:\\n` +\n        Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"),\n    );\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(\n    validateExtendFile(file),\n    context,\n    files,\n    baseLogger,\n  );\n  files.delete(file);\n\n  if (!fileChain) return false;\n\n  mergeChain(chain, fileChain);\n\n  return true;\n}\n\nfunction mergeChain(target: ConfigChain, source: ConfigChain): ConfigChain {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction* mergeChainOpts(\n  target: ConfigChain,\n  { options, plugins, presets }: OptionsAndDescriptors,\n): Handler<ConfigChain> {\n  target.options.push(options);\n  target.plugins.push(...(yield* plugins()));\n  target.presets.push(...(yield* presets()));\n\n  return target;\n}\n\nfunction emptyChain(): ConfigChain {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set(),\n  };\n}\n\nfunction normalizeOptions(opts: ValidatedOptions): ValidatedOptions {\n  const options = {\n    ...opts,\n  };\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  // \"sourceMap\" is just aliased to sourceMap, so copy it over as\n  // we merge the options together.\n  if (Object.hasOwn(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n  return options;\n}\n\nfunction dedupDescriptors<API>(\n  items: Array<UnloadedDescriptor<API>>,\n): Array<UnloadedDescriptor<API>> {\n  const map: Map<\n    Function,\n    Map<string | void, { value: UnloadedDescriptor<API> }>\n  > = new Map();\n\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n      let desc = nameMap.get(item.name);\n      if (!desc) {\n        desc = { value: item };\n        descriptors.push(desc);\n\n        // Treat passPerPreset presets as unique, skipping them\n        // in the merge processing steps.\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({ value: item });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable(\n  { options }: OptionsAndDescriptors,\n  dirname: string,\n  context: ConfigContext,\n  configName: string,\n): boolean {\n  return (\n    (options.test === undefined ||\n      configFieldIsApplicable(context, options.test, dirname, configName)) &&\n    (options.include === undefined ||\n      configFieldIsApplicable(context, options.include, dirname, configName)) &&\n    (options.exclude === undefined ||\n      !configFieldIsApplicable(context, options.exclude, dirname, configName))\n  );\n}\n\nfunction configFieldIsApplicable(\n  context: ConfigContext,\n  test: ConfigApplicableTest,\n  dirname: string,\n  configName: string,\n): boolean {\n  const patterns = Array.isArray(test) ? test : [test];\n\n  return matchesPatterns(context, patterns, dirname, configName);\n}\n\n/**\n * Print the ignoreList-values in a more helpful way than the default.\n */\nfunction ignoreListReplacer(\n  _key: string,\n  value: IgnoreList | IgnoreItem,\n): IgnoreList | IgnoreItem | string {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n\n  return value;\n}\n\n/**\n * Tests if a filename should be ignored based on \"ignore\" and \"only\" options.\n */\nfunction shouldIgnore(\n  context: ConfigContext,\n  ignore: IgnoreList | undefined | null,\n  only: IgnoreList | undefined | null,\n  dirname: string,\n): boolean {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it matches one of \\`ignore: ${JSON.stringify(\n      ignore,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it fails to match one of \\`only: ${JSON.stringify(\n      only,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns result of calling function with filename if pattern is a function.\n * Otherwise returns result of matching pattern Regex with filename.\n */\nfunction matchesPatterns(\n  context: ConfigContext,\n  patterns: IgnoreList,\n  dirname: string,\n  configName?: string,\n): boolean {\n  return patterns.some(pattern =>\n    matchPattern(pattern, dirname, context.filename, context, configName),\n  );\n}\n\nfunction matchPattern(\n  pattern: IgnoreItem,\n  dirname: string,\n  pathToTest: string | undefined,\n  context: ConfigContext,\n  configName?: string,\n): boolean {\n  if (typeof pattern === \"function\") {\n    return !!endHiddenCallStack(pattern)(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller,\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new ConfigError(\n      `Configuration contains string/RegExp pattern, but no filename was passed to Babel`,\n      configName,\n    );\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = pathPatternToRegex(pattern, dirname);\n  }\n  return pattern.test(pathToTest);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/options.js":{"lineLengths":[13,0,46,13,3,34,74,28,39,58,59,25,38,39,45,55,49,43,51,40,39,49,41,2,28,43,53,2,30,42,45,43,43,67,49,2,27,57,46,46,49,51,20,33,53,56,56,47,44,55,43,44,57,56,49,60,49,49,48,49,45,45,47,2,1,36,50,47,47,44,5,1,564,78,25,66,1,41,7,27,19,18,13,19,74,50,22,3,1,36,30,35,36,20,21,16,17,6,57,96,5,55,108,5,83,61,193,7,148,5,146,33,5,14,1,33,23,30,11,14,17,30,110,10,184,48,24,3,1,43,90,79,3,1,35,34,102,3,28,62,12,45,113,25,22,20,22,14,8,34,5,3,13,1,42,34,94,3,40,100,3,28,61,12,48,63,68,91,28,26,14,14,8,40,5,3,13,1,65,26,36,32,94,240,3,1,7,0,35,0],"data":{"version":3,"names":["_removed","require","_optionAssertions","_configError","ROOT_VALIDATORS","cwd","assertString","root","rootMode","assertRootMode","configFile","assertConfigFileSearch","caller","assertCallerMetadata","filename","filenameRelative","code","assertBoolean","ast","cloneInputAst","envName","BABELRC_VALIDATORS","babelrc","babelrcRoots","assertBabelrcSearch","NONPRESET_VALIDATORS","extends","ignore","assertIgnoreList","only","targets","assertTargets","browserslistConfigFile","browserslistEnv","COMMON_VALIDATORS","inputSourceMap","assertInputSourceMap","presets","assertPluginList","plugins","passPerPreset","assumptions","assertAssumptions","env","assertEnvSet","overrides","assertOverridesList","test","assertConfigApplicableTest","include","exclude","retainLines","comments","shouldPrintComment","assertFunction","compact","assertCompact","minified","auxiliaryCommentBefore","auxiliaryCommentAfter","sourceType","assertSourceType","wrapPluginVisitorMethod","highlightCode","sourceMaps","assertSourceMaps","sourceMap","sourceFileName","sourceRoot","parserOpts","assertObject","generatorOpts","Object","assign","getModuleId","moduleRoot","moduleIds","moduleId","knownAssumptions","assumptionsNames","exports","Set","getSource","loc","type","source","parent","validate","opts","validateNested","error","configError","ConfigError","message","assertNoDuplicateSourcemap","keys","forEach","key","optLoc","name","Error","msg","validator","throwUnknownError","removed","version","unknownOptErr","hasOwnProperty","call","value","obj","access","envLoc","arr","assertArray","index","item","entries","objLoc","overridesLoc","checkNoUnwrappedItemOptionPairs","items","e","lastItem","thisItem","file","options","undefined","request","JSON","stringify"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/validation/options.ts"],"sourcesContent":["import type { InputTargets, Targets } from \"@babel/helper-compilation-targets\";\n\nimport type { ConfigItem } from \"../item.ts\";\nimport type Plugin from \"../plugin.ts\";\n\nimport removed from \"./removed.ts\";\nimport {\n  msg,\n  access,\n  assertString,\n  assertBoolean,\n  assertObject,\n  assertArray,\n  assertCallerMetadata,\n  assertInputSourceMap,\n  assertIgnoreList,\n  assertPluginList,\n  assertConfigApplicableTest,\n  assertConfigFileSearch,\n  assertBabelrcSearch,\n  assertFunction,\n  assertRootMode,\n  assertSourceMaps,\n  assertCompact,\n  assertSourceType,\n  assertTargets,\n  assertAssumptions,\n} from \"./option-assertions.ts\";\nimport type {\n  ValidatorSet,\n  Validator,\n  OptionPath,\n} from \"./option-assertions.ts\";\nimport type { UnloadedDescriptor } from \"../config-descriptors.ts\";\nimport type { PluginAPI } from \"../helpers/config-api.ts\";\nimport type { ParserOptions } from \"@babel/parser\";\nimport type { GeneratorOptions } from \"@babel/generator\";\nimport ConfigError from \"../../errors/config-error.ts\";\n\nconst ROOT_VALIDATORS: ValidatorSet = {\n  cwd: assertString as Validator<ValidatedOptions[\"cwd\"]>,\n  root: assertString as Validator<ValidatedOptions[\"root\"]>,\n  rootMode: assertRootMode as Validator<ValidatedOptions[\"rootMode\"]>,\n  configFile: assertConfigFileSearch as Validator<\n    ValidatedOptions[\"configFile\"]\n  >,\n\n  caller: assertCallerMetadata as Validator<ValidatedOptions[\"caller\"]>,\n  filename: assertString as Validator<ValidatedOptions[\"filename\"]>,\n  filenameRelative: assertString as Validator<\n    ValidatedOptions[\"filenameRelative\"]\n  >,\n  code: assertBoolean as Validator<ValidatedOptions[\"code\"]>,\n  ast: assertBoolean as Validator<ValidatedOptions[\"ast\"]>,\n\n  cloneInputAst: assertBoolean as Validator<ValidatedOptions[\"cloneInputAst\"]>,\n\n  envName: assertString as Validator<ValidatedOptions[\"envName\"]>,\n};\n\nconst BABELRC_VALIDATORS: ValidatorSet = {\n  babelrc: assertBoolean as Validator<ValidatedOptions[\"babelrc\"]>,\n  babelrcRoots: assertBabelrcSearch as Validator<\n    ValidatedOptions[\"babelrcRoots\"]\n  >,\n};\n\nconst NONPRESET_VALIDATORS: ValidatorSet = {\n  extends: assertString as Validator<ValidatedOptions[\"extends\"]>,\n  ignore: assertIgnoreList as Validator<ValidatedOptions[\"ignore\"]>,\n  only: assertIgnoreList as Validator<ValidatedOptions[\"only\"]>,\n\n  targets: assertTargets as Validator<ValidatedOptions[\"targets\"]>,\n  browserslistConfigFile: assertConfigFileSearch as Validator<\n    ValidatedOptions[\"browserslistConfigFile\"]\n  >,\n  browserslistEnv: assertString as Validator<\n    ValidatedOptions[\"browserslistEnv\"]\n  >,\n};\n\nconst COMMON_VALIDATORS: ValidatorSet = {\n  // TODO: Should 'inputSourceMap' be moved to be a root-only option?\n  // We may want a boolean-only version to be a common option, with the\n  // object only allowed as a root config argument.\n  inputSourceMap: assertInputSourceMap as Validator<\n    ValidatedOptions[\"inputSourceMap\"]\n  >,\n  presets: assertPluginList as Validator<ValidatedOptions[\"presets\"]>,\n  plugins: assertPluginList as Validator<ValidatedOptions[\"plugins\"]>,\n  passPerPreset: assertBoolean as Validator<ValidatedOptions[\"passPerPreset\"]>,\n  assumptions: assertAssumptions as Validator<ValidatedOptions[\"assumptions\"]>,\n\n  env: assertEnvSet as Validator<ValidatedOptions[\"env\"]>,\n  overrides: assertOverridesList as Validator<ValidatedOptions[\"overrides\"]>,\n\n  // We could limit these to 'overrides' blocks, but it's not clear why we'd\n  // bother, when the ability to limit a config to a specific set of files\n  // is a fairly general useful feature.\n  test: assertConfigApplicableTest as Validator<ValidatedOptions[\"test\"]>,\n  include: assertConfigApplicableTest as Validator<ValidatedOptions[\"include\"]>,\n  exclude: assertConfigApplicableTest as Validator<ValidatedOptions[\"exclude\"]>,\n\n  retainLines: assertBoolean as Validator<ValidatedOptions[\"retainLines\"]>,\n  comments: assertBoolean as Validator<ValidatedOptions[\"comments\"]>,\n  shouldPrintComment: assertFunction as Validator<\n    ValidatedOptions[\"shouldPrintComment\"]\n  >,\n  compact: assertCompact as Validator<ValidatedOptions[\"compact\"]>,\n  minified: assertBoolean as Validator<ValidatedOptions[\"minified\"]>,\n  auxiliaryCommentBefore: assertString as Validator<\n    ValidatedOptions[\"auxiliaryCommentBefore\"]\n  >,\n  auxiliaryCommentAfter: assertString as Validator<\n    ValidatedOptions[\"auxiliaryCommentAfter\"]\n  >,\n  sourceType: assertSourceType as Validator<ValidatedOptions[\"sourceType\"]>,\n  wrapPluginVisitorMethod: assertFunction as Validator<\n    ValidatedOptions[\"wrapPluginVisitorMethod\"]\n  >,\n  highlightCode: assertBoolean as Validator<ValidatedOptions[\"highlightCode\"]>,\n  sourceMaps: assertSourceMaps as Validator<ValidatedOptions[\"sourceMaps\"]>,\n  sourceMap: assertSourceMaps as Validator<ValidatedOptions[\"sourceMap\"]>,\n  sourceFileName: assertString as Validator<ValidatedOptions[\"sourceFileName\"]>,\n  sourceRoot: assertString as Validator<ValidatedOptions[\"sourceRoot\"]>,\n  parserOpts: assertObject as Validator<ValidatedOptions[\"parserOpts\"]>,\n  generatorOpts: assertObject as Validator<ValidatedOptions[\"generatorOpts\"]>,\n};\nif (!process.env.BABEL_8_BREAKING) {\n  Object.assign(COMMON_VALIDATORS, {\n    getModuleId: assertFunction,\n    moduleRoot: assertString,\n    moduleIds: assertBoolean,\n    moduleId: assertString,\n  });\n}\n\nexport type InputOptions = ValidatedOptions;\n\nexport type ValidatedOptions = {\n  cwd?: string;\n  filename?: string;\n  filenameRelative?: string;\n  babelrc?: boolean;\n  babelrcRoots?: BabelrcSearch;\n  configFile?: ConfigFileSearch;\n  root?: string;\n  rootMode?: RootMode;\n  code?: boolean;\n  ast?: boolean;\n  cloneInputAst?: boolean;\n  inputSourceMap?: RootInputSourceMapOption;\n  envName?: string;\n  caller?: CallerMetadata;\n  extends?: string;\n  env?: EnvSet<ValidatedOptions>;\n  ignore?: IgnoreList;\n  only?: IgnoreList;\n  overrides?: OverridesList;\n  showIgnoredFiles?: boolean;\n  // Generally verify if a given config object should be applied to the given file.\n  test?: ConfigApplicableTest;\n  include?: ConfigApplicableTest;\n  exclude?: ConfigApplicableTest;\n  presets?: PluginList;\n  plugins?: PluginList;\n  passPerPreset?: boolean;\n  assumptions?: {\n    [name: string]: boolean;\n  };\n  // browserslists-related options\n  targets?: TargetsListOrObject;\n  browserslistConfigFile?: ConfigFileSearch;\n  browserslistEnv?: string;\n  // Options for @babel/generator\n  retainLines?: boolean;\n  comments?: boolean;\n  shouldPrintComment?: Function;\n  compact?: CompactOption;\n  minified?: boolean;\n  auxiliaryCommentBefore?: string;\n  auxiliaryCommentAfter?: string;\n  // Parser\n  sourceType?: SourceTypeOption;\n  wrapPluginVisitorMethod?: Function;\n  highlightCode?: boolean;\n  // Sourcemap generation options.\n  sourceMaps?: SourceMapsOption;\n  sourceMap?: SourceMapsOption;\n  sourceFileName?: string;\n  sourceRoot?: string;\n  // Deprecate top level parserOpts\n  parserOpts?: ParserOptions;\n  // Deprecate top level generatorOpts\n  generatorOpts?: GeneratorOptions;\n};\n\nexport type NormalizedOptions = {\n  readonly targets: Targets;\n} & Omit<ValidatedOptions, \"targets\">;\n\nexport type CallerMetadata = {\n  // If 'caller' is specified, require that the name is given for debugging\n  // messages.\n  name: string;\n};\nexport type EnvSet<T> = {\n  [x: string]: T;\n};\nexport type IgnoreItem =\n  | string\n  | RegExp\n  | ((\n      path: string | undefined,\n      context: { dirname: string; caller: CallerMetadata; envName: string },\n    ) => unknown);\nexport type IgnoreList = ReadonlyArray<IgnoreItem>;\n\nexport type PluginOptions = object | void | false;\nexport type PluginTarget = string | object | Function;\nexport type PluginItem =\n  | ConfigItem<PluginAPI>\n  | Plugin\n  | PluginTarget\n  | [PluginTarget, PluginOptions]\n  | [PluginTarget, PluginOptions, string | void];\nexport type PluginList = ReadonlyArray<PluginItem>;\n\nexport type OverridesList = Array<ValidatedOptions>;\nexport type ConfigApplicableTest = IgnoreItem | Array<IgnoreItem>;\n\nexport type ConfigFileSearch = string | boolean;\nexport type BabelrcSearch = boolean | IgnoreItem | IgnoreList;\nexport type SourceMapsOption = boolean | \"inline\" | \"both\";\nexport type SourceTypeOption = \"module\" | \"script\" | \"unambiguous\";\nexport type CompactOption = boolean | \"auto\";\nexport type RootInputSourceMapOption = object | boolean;\nexport type RootMode = \"root\" | \"upward\" | \"upward-optional\";\n\nexport type TargetsListOrObject =\n  | Targets\n  | InputTargets\n  | InputTargets[\"browsers\"];\n\nexport type OptionsSource =\n  | \"arguments\"\n  | \"configfile\"\n  | \"babelrcfile\"\n  | \"extendsfile\"\n  | \"preset\"\n  | \"plugin\";\n\nexport type RootPath = Readonly<{\n  type: \"root\";\n  source: OptionsSource;\n}>;\n\ntype OverridesPath = Readonly<{\n  type: \"overrides\";\n  index: number;\n  parent: RootPath;\n}>;\n\ntype EnvPath = Readonly<{\n  type: \"env\";\n  name: string;\n  parent: RootPath | OverridesPath;\n}>;\n\nexport type NestingPath = RootPath | OverridesPath | EnvPath;\n\nconst knownAssumptions = [\n  \"arrayLikeIsIterable\",\n  \"constantReexports\",\n  \"constantSuper\",\n  \"enumerableModuleMeta\",\n  \"ignoreFunctionLength\",\n  \"ignoreToPrimitiveHint\",\n  \"iterableIsArray\",\n  \"mutableTemplateObject\",\n  \"noClassCalls\",\n  \"noDocumentAll\",\n  \"noIncompleteNsImportDetection\",\n  \"noNewArrows\",\n  \"noUninitializedPrivateFieldAccess\",\n  \"objectRestNoSymbols\",\n  \"privateFieldsAsSymbols\",\n  \"privateFieldsAsProperties\",\n  \"pureGetters\",\n  \"setClassMethods\",\n  \"setComputedProperties\",\n  \"setPublicClassFields\",\n  \"setSpreadProperties\",\n  \"skipForOfIteratorClosing\",\n  \"superIsCallableConstructor\",\n] as const;\nexport type AssumptionName = (typeof knownAssumptions)[number];\nexport const assumptionsNames = new Set(knownAssumptions);\n\nfunction getSource(loc: NestingPath): OptionsSource {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\n\nexport function validate(\n  type: OptionsSource,\n  opts: any,\n  filename?: string,\n): ValidatedOptions {\n  try {\n    return validateNested(\n      {\n        type: \"root\",\n        source: type,\n      },\n      opts,\n    );\n  } catch (error) {\n    const configError = new ConfigError(error.message, filename);\n    // @ts-expect-error TODO: .code is not defined on ConfigError or Error\n    if (error.code) configError.code = error.code;\n    throw configError;\n  }\n}\n\nfunction validateNested(loc: NestingPath, opts: { [key: string]: unknown }) {\n  const type = getSource(loc);\n\n  assertNoDuplicateSourcemap(opts);\n\n  Object.keys(opts).forEach((key: string) => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc,\n    } as const;\n\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${msg(optLoc)} is not allowed in preset options`);\n    }\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(\n        `${msg(optLoc)} is only allowed in root programmatic options`,\n      );\n    }\n    if (\n      type !== \"arguments\" &&\n      type !== \"configfile\" &&\n      BABELRC_VALIDATORS[key]\n    ) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(\n          `${msg(\n            optLoc,\n          )} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` +\n            `or babel.config.js/config file options`,\n        );\n      }\n\n      throw new Error(\n        `${msg(\n          optLoc,\n        )} is only allowed in root programmatic options, or babel.config.js/config file options`,\n      );\n    }\n\n    const validator =\n      COMMON_VALIDATORS[key] ||\n      NONPRESET_VALIDATORS[key] ||\n      BABELRC_VALIDATORS[key] ||\n      ROOT_VALIDATORS[key] ||\n      (throwUnknownError as Validator<void>);\n\n    validator(optLoc, opts[key]);\n  });\n\n  return opts;\n}\n\nfunction throwUnknownError(loc: OptionPath) {\n  const key = loc.name;\n\n  if (removed[key]) {\n    const { message, version = 5 } = removed[key];\n\n    throw new Error(\n      `Using removed Babel ${version} option: ${msg(loc)} - ${message}`,\n    );\n  } else {\n    const unknownOptErr = new Error(\n      `Unknown option: ${msg(\n        loc,\n      )}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`,\n    );\n    // @ts-expect-error todo(flow->ts): consider creating something like BabelConfigError with code field in it\n    unknownOptErr.code = \"BABEL_UNKNOWN_OPTION\";\n\n    throw unknownOptErr;\n  }\n}\n\nfunction assertNoDuplicateSourcemap(opts: any): void {\n  if (Object.hasOwn(opts, \"sourceMap\") && Object.hasOwn(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\n\nfunction assertEnvSet(\n  loc: OptionPath,\n  value: unknown,\n): void | EnvSet<ValidatedOptions> {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${msg(loc)} is not allowed inside of another .env block`);\n  }\n  const parent: RootPath | OverridesPath = loc.parent;\n\n  const obj = assertObject(loc, value);\n  if (obj) {\n    // Validate but don't copy the .env object in order to preserve\n    // object identity for use during config chain processing.\n    for (const envName of Object.keys(obj)) {\n      const env = assertObject(access(loc, envName), obj[envName]);\n      if (!env) continue;\n\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent,\n      } as const;\n      validateNested(envLoc, env);\n    }\n  }\n  return obj;\n}\n\nfunction assertOverridesList(\n  loc: OptionPath,\n  value: unknown[],\n): undefined | OverridesList {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${msg(loc)} is not allowed inside an .env block`);\n  }\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${msg(loc)} is not allowed inside an .overrides block`);\n  }\n  const parent: RootPath = loc.parent;\n\n  const arr = assertArray(loc, value);\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = access(loc, index);\n      const env = assertObject(objLoc, item);\n      if (!env) throw new Error(`${msg(objLoc)} must be an object`);\n\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent,\n      } as const;\n      validateNested(overridesLoc, env);\n    }\n  }\n  return arr as OverridesList;\n}\n\nexport function checkNoUnwrappedItemOptionPairs<API>(\n  items: Array<UnloadedDescriptor<API>>,\n  index: number,\n  type: \"plugin\" | \"preset\",\n  e: Error,\n): void {\n  if (index === 0) return;\n\n  const lastItem = items[index - 1];\n  const thisItem = items[index];\n\n  if (\n    lastItem.file &&\n    lastItem.options === undefined &&\n    typeof thisItem.value === \"object\"\n  ) {\n    e.message +=\n      `\\n- Maybe you meant to use\\n` +\n      `\"${type}s\": [\\n  [\"${lastItem.file.request}\", ${JSON.stringify(\n        thisItem.value,\n        undefined,\n        2,\n      )}]\\n]\\n` +\n      `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/removed.js":{"lineLengths":[13,0,46,13,3,25,34,21,70,4,14,75,4,16,56,4,17,75,4,20,121,4,10,15,4,14,132,4,10,122,4,24,65,4,12,140,4,16,172,4,13,75,4,18,157,4,10,98,4,14,75,4,24,15,75,4,13,15,80,4,20,15,159,3,2,7,0,35,0],"data":{"version":3,"names":["auxiliaryComment","message","blacklist","breakConfig","experimental","externalHelpers","extra","jsxPragma","loose","metadataUsedHelpers","modules","nonStandard","optional","sourceMapName","stage","whitelist","resolveModuleSource","version","metadata","sourceMapTarget"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/validation/removed.ts"],"sourcesContent":["export default {\n  auxiliaryComment: {\n    message: \"Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`\",\n  },\n  blacklist: {\n    message: \"Put the specific transforms you want in the `plugins` option\",\n  },\n  breakConfig: {\n    message: \"This is not a necessary option in Babel 6\",\n  },\n  experimental: {\n    message: \"Put the specific transforms you want in the `plugins` option\",\n  },\n  externalHelpers: {\n    message:\n      \"Use the `external-helpers` plugin instead. \" +\n      \"Check out http://babeljs.io/docs/plugins/external-helpers/\",\n  },\n  extra: {\n    message: \"\",\n  },\n  jsxPragma: {\n    message:\n      \"use the `pragma` option in the `react-jsx` plugin. \" +\n      \"Check out http://babeljs.io/docs/plugins/transform-react-jsx/\",\n  },\n  loose: {\n    message:\n      \"Specify the `loose` option for the relevant plugin you are using \" +\n      \"or use a preset that sets the option.\",\n  },\n  metadataUsedHelpers: {\n    message: \"Not required anymore as this is enabled by default\",\n  },\n  modules: {\n    message:\n      \"Use the corresponding module transform plugin in the `plugins` option. \" +\n      \"Check out http://babeljs.io/docs/plugins/#modules\",\n  },\n  nonStandard: {\n    message:\n      \"Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. \" +\n      \"Also check out the react preset http://babeljs.io/docs/plugins/preset-react/\",\n  },\n  optional: {\n    message: \"Put the specific transforms you want in the `plugins` option\",\n  },\n  sourceMapName: {\n    message:\n      \"The `sourceMapName` option has been removed because it makes more sense for the \" +\n      \"tooling that calls Babel to assign `map.file` themselves.\",\n  },\n  stage: {\n    message:\n      \"Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets\",\n  },\n  whitelist: {\n    message: \"Put the specific transforms you want in the `plugins` option\",\n  },\n\n  resolveModuleSource: {\n    version: 6,\n    message: \"Use `babel-plugin-module-resolver@3`'s 'resolvePath' options\",\n  },\n  metadata: {\n    version: 6,\n    message:\n      \"Generated plugin metadata is always included in the output result\",\n  },\n  sourceMapTarget: {\n    version: 6,\n    message:\n      \"The `sourceMapTarget` option has been removed because it makes more sense for the tooling \" +\n      \"that calls Babel to assign `map.file` themselves.\",\n  },\n} as { [name: string]: { version?: number; message: string } };\n"],"mappings":";;;;;;iCAAe;EACbA,gBAAgB,EAAE;IAChBC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTD,OAAO,EAAE;EACX,CAAC;EACDE,WAAW,EAAE;IACXF,OAAO,EAAE;EACX,CAAC;EACDG,YAAY,EAAE;IACZH,OAAO,EAAE;EACX,CAAC;EACDI,eAAe,EAAE;IACfJ,OAAO,EACL,6CAA6C,GAC7C;EACJ,CAAC;EACDK,KAAK,EAAE;IACLL,OAAO,EAAE;EACX,CAAC;EACDM,SAAS,EAAE;IACTN,OAAO,EACL,qDAAqD,GACrD;EACJ,CAAC;EACDO,KAAK,EAAE;IACLP,OAAO,EACL,mEAAmE,GACnE;EACJ,CAAC;EACDQ,mBAAmB,EAAE;IACnBR,OAAO,EAAE;EACX,CAAC;EACDS,OAAO,EAAE;IACPT,OAAO,EACL,yEAAyE,GACzE;EACJ,CAAC;EACDU,WAAW,EAAE;IACXV,OAAO,EACL,8EAA8E,GAC9E;EACJ,CAAC;EACDW,QAAQ,EAAE;IACRX,OAAO,EAAE;EACX,CAAC;EACDY,aAAa,EAAE;IACbZ,OAAO,EACL,kFAAkF,GAClF;EACJ,CAAC;EACDa,KAAK,EAAE;IACLb,OAAO,EACL;EACJ,CAAC;EACDc,SAAS,EAAE;IACTd,OAAO,EAAE;EACX,CAAC;EAEDe,mBAAmB,EAAE;IACnBC,OAAO,EAAE,CAAC;IACVhB,OAAO,EAAE;EACX,CAAC;EACDiB,QAAQ,EAAE;IACRD,OAAO,EAAE,CAAC;IACVhB,OAAO,EACL;EACJ,CAAC;EACDkB,eAAe,EAAE;IACfF,OAAO,EAAE,CAAC;IACVhB,OAAO,EACL,4FAA4F,GAC5F;EACJ;AACF,CAAC;AAAA","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/option-assertions.js":{"lineLengths":[13,0,46,13,3,24,34,46,50,38,52,38,64,56,40,44,52,36,44,40,44,44,36,38,18,38,60,43,16,4,14,1,39,19,21,16,16,15,53,21,58,18,46,18,63,12,69,3,1,28,10,19,9,15,4,1,37,101,94,3,15,1,39,100,85,3,15,1,36,78,75,3,15,1,39,99,91,3,15,1,43,39,12,39,85,5,42,40,30,114,102,7,5,3,15,1,43,99,75,3,15,1,35,57,66,3,15,1,37,59,68,3,15,1,36,58,67,3,15,1,35,93,67,3,15,1,34,47,66,3,15,1,39,38,82,13,1,39,95,99,3,15,1,49,28,17,3,29,32,34,84,7,7,38,90,3,15,1,32,93,1,45,87,111,3,15,1,42,58,17,3,29,32,34,84,7,7,38,148,3,15,1,39,38,12,69,3,13,1,39,29,29,60,5,27,76,5,49,27,28,119,89,7,5,29,28,59,81,7,5,10,35,3,15,1,41,106,70,3,15,1,36,81,68,86,3,46,48,50,47,41,27,36,195,91,101,45,3,15,1,41,93,86,3,1,43,71,40,71,1,40,34,52,67,3,17,6,23,33,44,42,37,47,71,5,43,59,5,44,81,5,3,15,1,7,0,45,0],"data":{"version":3,"names":["_helperCompilationTargets","data","require","_options","msg","loc","type","parent","name","index","JSON","stringify","Error","access","assertRootMode","value","undefined","assertSourceMaps","assertCompact","assertSourceType","assertCallerMetadata","obj","assertObject","prop","Object","keys","propLoc","assertInputSourceMap","assertString","assertFunction","assertBoolean","Array","isArray","assertArray","assertIgnoreList","arr","forEach","item","i","assertIgnoreItem","RegExp","assertConfigApplicableTest","checkValidTest","assertConfigFileSearch","assertBabelrcSearch","assertPluginList","assertPluginItem","length","assertPluginTarget","opts","assertTargets","isBrowsersQueryValid","browsersLoc","esmodulesLoc","assertBrowsersList","browsers","esmodules","key","val","subLoc","hasOwnProperty","call","TargetNames","validTargets","join","assertBrowserVersion","Math","round","assertAssumptions","root","inPreset","source","assumptionsNames","has"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/validation/option-assertions.ts"],"sourcesContent":["import {\n  isBrowsersQueryValid,\n  TargetNames,\n} from \"@babel/helper-compilation-targets\";\n\nimport type {\n  ConfigFileSearch,\n  BabelrcSearch,\n  IgnoreList,\n  IgnoreItem,\n  PluginList,\n  PluginItem,\n  PluginTarget,\n  ConfigApplicableTest,\n  SourceMapsOption,\n  SourceTypeOption,\n  CompactOption,\n  RootInputSourceMapOption,\n  NestingPath,\n  CallerMetadata,\n  RootMode,\n  TargetsListOrObject,\n  AssumptionName,\n} from \"./options.ts\";\n\nimport { assumptionsNames } from \"./options.ts\";\n\nexport type { RootPath } from \"./options.ts\";\n\nexport type ValidatorSet = {\n  [name: string]: Validator<any>;\n};\n\nexport type Validator<T> = (loc: OptionPath, value: unknown) => T;\n\nexport function msg(loc: NestingPath | GeneralPath): string {\n  switch (loc.type) {\n    case \"root\":\n      return ``;\n    case \"env\":\n      return `${msg(loc.parent)}.env[\"${loc.name}\"]`;\n    case \"overrides\":\n      return `${msg(loc.parent)}.overrides[${loc.index}]`;\n    case \"option\":\n      return `${msg(loc.parent)}.${loc.name}`;\n    case \"access\":\n      return `${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;\n    default:\n      // @ts-expect-error should not happen when code is type checked\n      throw new Error(`Assertion failure: Unknown type ${loc.type}`);\n  }\n}\n\nexport function access(loc: GeneralPath, name: string | number): AccessPath {\n  return {\n    type: \"access\",\n    name,\n    parent: loc,\n  };\n}\n\nexport type OptionPath = Readonly<{\n  type: \"option\";\n  name: string;\n  parent: NestingPath;\n}>;\ntype AccessPath = Readonly<{\n  type: \"access\";\n  name: string | number;\n  parent: GeneralPath;\n}>;\ntype GeneralPath = OptionPath | AccessPath;\n\nexport function assertRootMode(\n  loc: OptionPath,\n  value: unknown,\n): RootMode | void {\n  if (\n    value !== undefined &&\n    value !== \"root\" &&\n    value !== \"upward\" &&\n    value !== \"upward-optional\"\n  ) {\n    throw new Error(\n      `${msg(loc)} must be a \"root\", \"upward\", \"upward-optional\" or undefined`,\n    );\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertSourceMaps(\n  loc: OptionPath,\n  value: unknown,\n): SourceMapsOption | void {\n  if (\n    value !== undefined &&\n    typeof value !== \"boolean\" &&\n    value !== \"inline\" &&\n    value !== \"both\"\n  ) {\n    throw new Error(\n      `${msg(loc)} must be a boolean, \"inline\", \"both\", or undefined`,\n    );\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertCompact(\n  loc: OptionPath,\n  value: unknown,\n): CompactOption | void {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"auto\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"auto\", or undefined`);\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertSourceType(\n  loc: OptionPath,\n  value: unknown,\n): SourceTypeOption | void {\n  if (\n    value !== undefined &&\n    value !== \"module\" &&\n    value !== \"script\" &&\n    value !== \"unambiguous\"\n  ) {\n    throw new Error(\n      `${msg(loc)} must be \"module\", \"script\", \"unambiguous\", or undefined`,\n    );\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertCallerMetadata(\n  loc: OptionPath,\n  value: unknown,\n): CallerMetadata | undefined {\n  const obj = assertObject(loc, value);\n  if (obj) {\n    if (typeof obj.name !== \"string\") {\n      throw new Error(\n        `${msg(loc)} set but does not contain \"name\" property string`,\n      );\n    }\n\n    for (const prop of Object.keys(obj)) {\n      const propLoc = access(loc, prop);\n      const value = obj[prop];\n      if (\n        value != null &&\n        typeof value !== \"boolean\" &&\n        typeof value !== \"string\" &&\n        typeof value !== \"number\"\n      ) {\n        // NOTE(logan): I'm limiting the type here so that we can guarantee that\n        // the \"caller\" value will serialize to JSON nicely. We can always\n        // allow more complex structures later though.\n        throw new Error(\n          `${msg(\n            propLoc,\n          )} must be null, undefined, a boolean, a string, or a number.`,\n        );\n      }\n    }\n  }\n  // @ts-expect-error todo(flow->ts)\n  return value;\n}\n\nexport function assertInputSourceMap(\n  loc: OptionPath,\n  value: unknown,\n): RootInputSourceMapOption {\n  if (\n    value !== undefined &&\n    typeof value !== \"boolean\" &&\n    (typeof value !== \"object\" || !value)\n  ) {\n    throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);\n  }\n  return value as RootInputSourceMapOption;\n}\n\nexport function assertString(loc: GeneralPath, value: unknown): string | void {\n  if (value !== undefined && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a string, or undefined`);\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertFunction(\n  loc: GeneralPath,\n  value: unknown,\n): Function | void {\n  if (value !== undefined && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a function, or undefined`);\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertBoolean(\n  loc: GeneralPath,\n  value: unknown,\n): boolean | void {\n  if (value !== undefined && typeof value !== \"boolean\") {\n    throw new Error(`${msg(loc)} must be a boolean, or undefined`);\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertObject(\n  loc: GeneralPath,\n  value: unknown,\n): { readonly [key: string]: unknown } | void {\n  if (\n    value !== undefined &&\n    (typeof value !== \"object\" || Array.isArray(value) || !value)\n  ) {\n    throw new Error(`${msg(loc)} must be an object, or undefined`);\n  }\n  // @ts-expect-error todo(flow->ts) value is still typed as unknown, also assert function typically should not return a value\n  return value;\n}\n\nexport function assertArray<T>(\n  loc: GeneralPath,\n  value: Array<T> | undefined | null,\n): ReadonlyArray<T> | undefined | null {\n  if (value != null && !Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be an array, or undefined`);\n  }\n  return value;\n}\n\nexport function assertIgnoreList(\n  loc: OptionPath,\n  value: unknown[] | undefined,\n): IgnoreList | void {\n  const arr = assertArray(loc, value);\n  arr?.forEach((item, i) => assertIgnoreItem(access(loc, i), item));\n  // @ts-expect-error todo(flow->ts)\n  return arr;\n}\nfunction assertIgnoreItem(loc: GeneralPath, value: unknown): IgnoreItem {\n  if (\n    typeof value !== \"string\" &&\n    typeof value !== \"function\" &&\n    !(value instanceof RegExp)\n  ) {\n    throw new Error(\n      `${msg(\n        loc,\n      )} must be an array of string/Function/RegExp values, or undefined`,\n    );\n  }\n  return value as IgnoreItem;\n}\n\nexport function assertConfigApplicableTest(\n  loc: OptionPath,\n  value: unknown,\n): ConfigApplicableTest | void {\n  if (value === undefined) {\n    // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n    return value;\n  }\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(\n          `${msg(access(loc, i))} must be a string/Function/RegExp.`,\n        );\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(\n      `${msg(loc)} must be a string/Function/RegExp, or an array of those`,\n    );\n  }\n  return value as ConfigApplicableTest;\n}\n\nfunction checkValidTest(value: unknown): value is string | Function | RegExp {\n  return (\n    typeof value === \"string\" ||\n    typeof value === \"function\" ||\n    value instanceof RegExp\n  );\n}\n\nexport function assertConfigFileSearch(\n  loc: OptionPath,\n  value: unknown,\n): ConfigFileSearch | void {\n  if (\n    value !== undefined &&\n    typeof value !== \"boolean\" &&\n    typeof value !== \"string\"\n  ) {\n    throw new Error(\n      `${msg(loc)} must be a undefined, a boolean, a string, ` +\n        `got ${JSON.stringify(value)}`,\n    );\n  }\n  // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n  return value;\n}\n\nexport function assertBabelrcSearch(\n  loc: OptionPath,\n  value: unknown,\n): BabelrcSearch | void {\n  if (value === undefined || typeof value === \"boolean\") {\n    // @ts-expect-error: TS can only narrow down the type when \"strictNullCheck\" is true\n    return value;\n  }\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(\n          `${msg(access(loc, i))} must be a string/Function/RegExp.`,\n        );\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(\n      `${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp ` +\n        `or an array of those, got ${JSON.stringify(value as any)}`,\n    );\n  }\n  return value as BabelrcSearch;\n}\n\nexport function assertPluginList(\n  loc: OptionPath,\n  value: unknown[] | null | undefined,\n): PluginList | void {\n  const arr = assertArray(loc, value);\n  if (arr) {\n    // Loop instead of using `.map` in order to preserve object identity\n    // for plugin array for use during config chain processing.\n    arr.forEach((item, i) => assertPluginItem(access(loc, i), item));\n  }\n  return arr as any;\n}\nfunction assertPluginItem(loc: GeneralPath, value: unknown): PluginItem {\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      throw new Error(`${msg(loc)} must include an object`);\n    }\n\n    if (value.length > 3) {\n      throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);\n    }\n\n    assertPluginTarget(access(loc, 0), value[0]);\n\n    if (value.length > 1) {\n      const opts = value[1];\n      if (\n        opts !== undefined &&\n        opts !== false &&\n        (typeof opts !== \"object\" || Array.isArray(opts) || opts === null)\n      ) {\n        throw new Error(\n          `${msg(access(loc, 1))} must be an object, false, or undefined`,\n        );\n      }\n    }\n    if (value.length === 3) {\n      const name = value[2];\n      if (name !== undefined && typeof name !== \"string\") {\n        throw new Error(\n          `${msg(access(loc, 2))} must be a string, or undefined`,\n        );\n      }\n    }\n  } else {\n    assertPluginTarget(loc, value);\n  }\n\n  // @ts-expect-error todo(flow->ts)\n  return value;\n}\nfunction assertPluginTarget(loc: GeneralPath, value: unknown): PluginTarget {\n  if (\n    (typeof value !== \"object\" || !value) &&\n    typeof value !== \"string\" &&\n    typeof value !== \"function\"\n  ) {\n    throw new Error(`${msg(loc)} must be a string, object, function`);\n  }\n  return value;\n}\n\nexport function assertTargets(\n  loc: GeneralPath,\n  value: any,\n): TargetsListOrObject {\n  if (isBrowsersQueryValid(value)) return value;\n\n  if (typeof value !== \"object\" || !value || Array.isArray(value)) {\n    throw new Error(\n      `${msg(loc)} must be a string, an array of strings or an object`,\n    );\n  }\n\n  const browsersLoc = access(loc, \"browsers\");\n  const esmodulesLoc = access(loc, \"esmodules\");\n\n  assertBrowsersList(browsersLoc, value.browsers);\n  assertBoolean(esmodulesLoc, value.esmodules);\n\n  for (const key of Object.keys(value)) {\n    const val = value[key];\n    const subLoc = access(loc, key);\n\n    if (key === \"esmodules\") assertBoolean(subLoc, val);\n    else if (key === \"browsers\") assertBrowsersList(subLoc, val);\n    else if (!Object.hasOwn(TargetNames, key)) {\n      const validTargets = Object.keys(TargetNames).join(\", \");\n      throw new Error(\n        `${msg(\n          subLoc,\n        )} is not a valid target. Supported targets are ${validTargets}`,\n      );\n    } else assertBrowserVersion(subLoc, val);\n  }\n\n  return value;\n}\n\nfunction assertBrowsersList(loc: GeneralPath, value: unknown) {\n  if (value !== undefined && !isBrowsersQueryValid(value)) {\n    throw new Error(\n      `${msg(loc)} must be undefined, a string or an array of strings`,\n    );\n  }\n}\n\nfunction assertBrowserVersion(loc: GeneralPath, value: unknown) {\n  if (typeof value === \"number\" && Math.round(value) === value) return;\n  if (typeof value === \"string\") return;\n\n  throw new Error(`${msg(loc)} must be a string or an integer number`);\n}\n\nexport function assertAssumptions(\n  loc: GeneralPath,\n  value: { [key: string]: unknown },\n): { [name: string]: boolean } | void {\n  if (value === undefined) return;\n\n  if (typeof value !== \"object\" || value === null) {\n    throw new Error(`${msg(loc)} must be an object or undefined.`);\n  }\n\n  // todo(flow->ts): remove any\n  let root: any = loc;\n  do {\n    root = root.parent;\n  } while (root.type !== \"root\");\n  const inPreset = root.source === \"preset\";\n\n  for (const name of Object.keys(value)) {\n    const subLoc = access(loc, name);\n    if (!assumptionsNames.has(name as AssumptionName)) {\n      throw new Error(`${msg(subLoc)} is not a supported assumption.`);\n    }\n    if (typeof value[name] !== \"boolean\") {\n      throw new Error(`${msg(subLoc)} must be a boolean.`);\n    }\n    if (inPreset && value[name] === false) {\n      throw new Error(\n        `${msg(subLoc)} cannot be set to 'false' inside presets.`,\n      );\n    }\n  }\n\n  // @ts-expect-error todo(flow->ts)\n  return value;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/pattern-to-regex.js":{"lineLengths":[13,0,46,13,3,32,18,31,23,16,4,14,1,31,30,34,44,51,35,54,31,55,1,42,69,53,40,67,58,35,80,5,54,16,1,7,0,44,0],"data":{"version":3,"names":["_path","data","require","sep","path","endSep","substitution","starPat","starPatLast","starStarPat","starStarPatLast","escapeRegExp","string","replace","pathToPattern","pattern","dirname","parts","resolve","split","RegExp","map","part","i","last","length","indexOf","slice","join"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/pattern-to-regex.ts"],"sourcesContent":["import path from \"node:path\";\n\nconst sep = `\\\\${path.sep}`;\nconst endSep = `(?:${sep}|$)`;\n\nconst substitution = `[^${sep}]+`;\n\nconst starPat = `(?:${substitution}${sep})`;\nconst starPatLast = `(?:${substitution}${endSep})`;\n\nconst starStarPat = `${starPat}*?`;\nconst starStarPatLast = `${starPat}*?${starPatLast}?`;\n\nfunction escapeRegExp(string: string) {\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n}\n\n/**\n * Implement basic pattern matching that will allow users to do the simple\n * tests with * and **. If users want full complex pattern matching, then can\n * always use regex matching, or function validation.\n */\nexport default function pathToPattern(\n  pattern: string,\n  dirname: string,\n): RegExp {\n  const parts = path.resolve(dirname, pattern).split(path.sep);\n\n  return new RegExp(\n    [\n      \"^\",\n      ...parts.map((part, i) => {\n        const last = i === parts.length - 1;\n\n        // ** matches 0 or more path parts.\n        if (part === \"**\") return last ? starStarPatLast : starStarPat;\n\n        // * matches 1 path part.\n        if (part === \"*\") return last ? starPatLast : starPat;\n\n        // *.ext matches a wildcard with an extension.\n        if (part.indexOf(\"*.\") === 0) {\n          return (\n            substitution + escapeRegExp(part.slice(1)) + (last ? endSep : sep)\n          );\n        }\n\n        // Otherwise match the pattern text.\n        return escapeRegExp(part) + (last ? endSep : sep);\n      }),\n    ].join(\"\"),\n  );\n}\n"],"mappings":";;;;;;AAAA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,MAAME,GAAG,GAAG,KAAKC,MAAGA,CAAC,CAACD,GAAG,EAAE;AAC3B,MAAME,MAAM,GAAG,MAAMF,GAAG,KAAK;AAE7B,MAAMG,YAAY,GAAG,KAAKH,GAAG,IAAI;AAEjC,MAAMI,OAAO,GAAG,MAAMD,YAAY,GAAGH,GAAG,GAAG;AAC3C,MAAMK,WAAW,GAAG,MAAMF,YAAY,GAAGD,MAAM,GAAG;AAElD,MAAMI,WAAW,GAAG,GAAGF,OAAO,IAAI;AAClC,MAAMG,eAAe,GAAG,GAAGH,OAAO,KAAKC,WAAW,GAAG;AAErD,SAASG,YAAYA,CAACC,MAAc,EAAE;EACpC,OAAOA,MAAM,CAACC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;AACtD;AAOe,SAASC,aAAaA,CACnCC,OAAe,EACfC,OAAe,EACP;EACR,MAAMC,KAAK,GAAGb,MAAGA,CAAC,CAACc,OAAO,CAACF,OAAO,EAAED,OAAO,CAAC,CAACI,KAAK,CAACf,MAAGA,CAAC,CAACD,GAAG,CAAC;EAE5D,OAAO,IAAIiB,MAAM,CACf,CACE,GAAG,EACH,GAAGH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACxB,MAAMC,IAAI,GAAGD,CAAC,KAAKN,KAAK,CAACQ,MAAM,GAAG,CAAC;IAGnC,IAAIH,IAAI,KAAK,IAAI,EAAE,OAAOE,IAAI,GAAGd,eAAe,GAAGD,WAAW;IAG9D,IAAIa,IAAI,KAAK,GAAG,EAAE,OAAOE,IAAI,GAAGhB,WAAW,GAAGD,OAAO;IAGrD,IAAIe,IAAI,CAACI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MAC5B,OACEpB,YAAY,GAAGK,YAAY,CAACW,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIH,IAAI,GAAGnB,MAAM,GAAGF,GAAG,CAAC;IAEtE;IAGA,OAAOQ,YAAY,CAACW,IAAI,CAAC,IAAIE,IAAI,GAAGnB,MAAM,GAAGF,GAAG,CAAC;EACnD,CAAC,CAAC,CACH,CAACyB,IAAI,CAAC,EAAE,CACX,CAAC;AACH;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/printer.js":{"lineLengths":[13,0,46,13,3,56,21,34,26,16,4,14,1,49,18,11,2,19,37,19,47,37,23,39,7,12,35,5,17,4,23,17,24,36,5,26,34,5,15,4,31,51,29,23,58,35,74,5,58,35,79,5,49,3,2,32,14,67,21,38,21,47,67,5,3,21,23,3,32,16,30,29,10,37,3,1,21,17,21,3,28,15,12,6,34,41,24,13,19,17,16,14,15,9,6,3,26,81,60,32,75,34,3,13,44,89,32,3,1,38,7,0,35,0],"data":{"version":3,"names":["_gensync","data","require","ChainFormatter","exports","Programmatic","Config","Formatter","title","type","callerName","filepath","loc","index","envName","optionsAndDescriptors","opt","content","Object","assign","options","overrides","env","pluginDescriptors","plugins","length","map","d","descriptorToConfig","presetDescriptors","presets","JSON","stringify","undefined","_d$file","name","file","request","value","toString","slice","ConfigPrinter","constructor","_stack","configure","enabled","push","format","config","output","configs","gensync","all","s","join"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/printer.ts"],"sourcesContent":["import gensync from \"gensync\";\n\nimport type { Handler } from \"gensync\";\n\nimport type {\n  OptionsAndDescriptors,\n  UnloadedDescriptor,\n} from \"./config-descriptors.ts\";\n\n// todo: Use flow enums when @babel/transform-flow-types supports it\nexport const ChainFormatter = {\n  Programmatic: 0,\n  Config: 1,\n};\n\ntype PrintableConfig = {\n  content: OptionsAndDescriptors;\n  type: (typeof ChainFormatter)[keyof typeof ChainFormatter];\n  callerName: string | undefined | null;\n  filepath: string | undefined | null;\n  index: number | undefined | null;\n  envName: string | undefined | null;\n};\n\nconst Formatter = {\n  title(\n    type: (typeof ChainFormatter)[keyof typeof ChainFormatter],\n    callerName?: string | null,\n    filepath?: string | null,\n  ): string {\n    let title = \"\";\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n    return title;\n  },\n  loc(index?: number | null, envName?: string | null): string {\n    let loc = \"\";\n    if (index != null) {\n      loc += `.overrides[${index}]`;\n    }\n    if (envName != null) {\n      loc += `.env[\"${envName}\"]`;\n    }\n    return loc;\n  },\n\n  *optionsAndDescriptors(opt: OptionsAndDescriptors) {\n    const content = { ...opt.options };\n    // overrides and env will be printed as separated config items\n    delete content.overrides;\n    delete content.env;\n    // resolve to descriptors\n    const pluginDescriptors = [...(yield* opt.plugins())];\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));\n    }\n    const presetDescriptors = [...(yield* opt.presets())];\n    if (presetDescriptors.length) {\n      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));\n    }\n    return JSON.stringify(content, undefined, 2);\n  },\n};\n\nfunction descriptorToConfig<API>(\n  d: UnloadedDescriptor<API>,\n): object | string | [string, unknown] | [string, unknown, string] {\n  let name: object | string = d.file?.request;\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      // If the unloaded descriptor is a function, i.e. `plugins: [ require(\"my-plugin\") ]`,\n      // we print the first 50 characters of the function source code and hopefully we can see\n      // `name: 'my-plugin'` in the source\n      name = `[Function: ${d.value.toString().slice(0, 50)} ... ]`;\n    }\n  }\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nexport class ConfigPrinter {\n  _stack: Array<PrintableConfig> = [];\n  configure(\n    enabled: boolean,\n    type: (typeof ChainFormatter)[keyof typeof ChainFormatter],\n    {\n      callerName,\n      filepath,\n    }: {\n      callerName?: string;\n      filepath?: string;\n    },\n  ) {\n    if (!enabled) return () => {};\n    return (\n      content: OptionsAndDescriptors,\n      index?: number | null,\n      envName?: string | null,\n    ) => {\n      this._stack.push({\n        type,\n        callerName,\n        filepath,\n        content,\n        index,\n        envName,\n      });\n    };\n  }\n  static *format(config: PrintableConfig): Handler<string> {\n    let title = Formatter.title(\n      config.type,\n      config.callerName,\n      config.filepath,\n    );\n    const loc = Formatter.loc(config.index, config.envName);\n    if (loc) title += ` ${loc}`;\n    const content = yield* Formatter.optionsAndDescriptors(config.content);\n    return `${title}\\n${content}`;\n  }\n\n  *output(): Handler<string> {\n    if (this._stack.length === 0) return \"\";\n    const configs = yield* gensync.all(\n      this._stack.map(s => ConfigPrinter.format(s)),\n    );\n    return configs.join(\"\\n\\n\");\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/validation/plugins.js":{"lineLengths":[13,0,46,13,3,52,58,20,39,54,40,41,45,28,51,53,2,39,62,12,38,57,46,7,7,32,145,5,3,13,1,43,43,43,54,90,7,7,43,61,3,1,36,20,17,20,4,35,38,20,22,23,18,24,8,34,12,93,72,39,5,5,13,1,7,0,35,0],"data":{"version":3,"names":["_optionAssertions","require","VALIDATORS","name","assertString","manipulateOptions","assertFunction","pre","post","inherits","visitor","assertVisitorMap","parserOverride","generatorOverride","loc","value","obj","assertObject","Object","keys","forEach","prop","assertVisitorHandler","enter","exit","Error","msg","key","handler","validatePluginObject","rootPath","type","source","validator","optLoc","parent","invalidPluginPropertyError","code"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/validation/plugins.ts"],"sourcesContent":["import {\n  assertString,\n  assertFunction,\n  assertObject,\n  msg,\n} from \"./option-assertions.ts\";\n\nimport type {\n  ValidatorSet,\n  Validator,\n  OptionPath,\n  RootPath,\n} from \"./option-assertions.ts\";\nimport type { parse, ParserOptions } from \"@babel/parser\";\nimport type { Visitor } from \"@babel/traverse\";\nimport type { ValidatedOptions } from \"./options.ts\";\nimport type { File, PluginAPI, PluginPass } from \"../../index.ts\";\n\n// Note: The casts here are just meant to be static assertions to make sure\n// that the assertion functions actually assert that the value's type matches\n// the declared types.\nconst VALIDATORS: ValidatorSet = {\n  name: assertString as Validator<PluginObject[\"name\"]>,\n  manipulateOptions: assertFunction as Validator<\n    PluginObject[\"manipulateOptions\"]\n  >,\n  pre: assertFunction as Validator<PluginObject[\"pre\"]>,\n  post: assertFunction as Validator<PluginObject[\"post\"]>,\n  inherits: assertFunction as Validator<PluginObject[\"inherits\"]>,\n  visitor: assertVisitorMap as Validator<PluginObject[\"visitor\"]>,\n\n  parserOverride: assertFunction as Validator<PluginObject[\"parserOverride\"]>,\n  generatorOverride: assertFunction as Validator<\n    PluginObject[\"generatorOverride\"]\n  >,\n};\n\nfunction assertVisitorMap(loc: OptionPath, value: unknown): Visitor {\n  const obj = assertObject(loc, value);\n  if (obj) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"_exploded\" && prop !== \"_verified\") {\n        assertVisitorHandler(prop, obj[prop]);\n      }\n    });\n\n    if (obj.enter || obj.exit) {\n      throw new Error(\n        `${msg(\n          loc,\n        )} cannot contain catch-all \"enter\" or \"exit\" handlers. Please target individual nodes.`,\n      );\n    }\n  }\n  return obj as Visitor;\n}\n\nfunction assertVisitorHandler(\n  key: string,\n  value: unknown,\n): asserts value is VisitorHandler {\n  if (value && typeof value === \"object\") {\n    Object.keys(value).forEach((handler: string) => {\n      if (handler !== \"enter\" && handler !== \"exit\") {\n        throw new Error(\n          `.visitor[\"${key}\"] may only have .enter and/or .exit handlers.`,\n        );\n      }\n    });\n  } else if (typeof value !== \"function\") {\n    throw new Error(`.visitor[\"${key}\"] must be a function`);\n  }\n}\n\ntype VisitorHandler =\n  | Function\n  | {\n      enter?: Function;\n      exit?: Function;\n    };\n\nexport type PluginObject<S extends PluginPass = PluginPass> = {\n  name?: string;\n  manipulateOptions?: (\n    options: ValidatedOptions,\n    parserOpts: ParserOptions,\n  ) => void;\n  pre?: (this: S, file: File) => void | Promise<void>;\n  post?: (this: S, file: File) => void | Promise<void>;\n  inherits?: (\n    api: PluginAPI,\n    options: unknown,\n    dirname: string,\n  ) => PluginObject;\n  visitor?: Visitor<S>;\n  parserOverride?: (\n    ...args: [...Parameters<typeof parse>, typeof parse]\n  ) => ReturnType<typeof parse>;\n  generatorOverride?: Function;\n};\n\nexport function validatePluginObject(obj: {\n  [key: string]: unknown;\n}): PluginObject {\n  const rootPath: RootPath = {\n    type: \"root\",\n    source: \"plugin\",\n  };\n  Object.keys(obj).forEach((key: string) => {\n    const validator = VALIDATORS[key];\n\n    if (validator) {\n      const optLoc: OptionPath = {\n        type: \"option\",\n        name: key,\n        parent: rootPath,\n      };\n      validator(optLoc, obj[key]);\n    } else {\n      const invalidPluginPropertyError = new Error(\n        `.${key} is not a valid Plugin property`,\n      );\n      // @ts-expect-error todo(flow->ts) consider adding BabelConfigError with code field\n      invalidPluginPropertyError.code = \"BABEL_UNKNOWN_PLUGIN_PROPERTY\";\n      throw invalidPluginPropertyError;\n    }\n  });\n\n  return obj as any;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAqBA,MAAMC,UAAwB,GAAG;EAC/BC,IAAI,EAAEC,8BAA+C;EACrDC,iBAAiB,EAAEC,gCAElB;EACDC,GAAG,EAAED,gCAAgD;EACrDE,IAAI,EAAEF,gCAAiD;EACvDG,QAAQ,EAAEH,gCAAqD;EAC/DI,OAAO,EAAEC,gBAAsD;EAE/DC,cAAc,EAAEN,gCAA2D;EAC3EO,iBAAiB,EAAEP;AAGrB,CAAC;AAED,SAASK,gBAAgBA,CAACG,GAAe,EAAEC,KAAc,EAAW;EAClE,MAAMC,GAAG,GAAG,IAAAC,8BAAY,EAACH,GAAG,EAAEC,KAAK,CAAC;EACpC,IAAIC,GAAG,EAAE;IACPE,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACI,OAAO,CAACC,IAAI,IAAI;MAC/B,IAAIA,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,WAAW,EAAE;QAChDC,oBAAoB,CAACD,IAAI,EAAEL,GAAG,CAACK,IAAI,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;IAEF,IAAIL,GAAG,CAACO,KAAK,IAAIP,GAAG,CAACQ,IAAI,EAAE;MACzB,MAAM,IAAIC,KAAK,CACb,GAAG,IAAAC,qBAAG,EACJZ,GACF,CAAC,uFACH,CAAC;IACH;EACF;EACA,OAAOE,GAAG;AACZ;AAEA,SAASM,oBAAoBA,CAC3BK,GAAW,EACXZ,KAAc,EACmB;EACjC,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACtCG,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAEQ,OAAe,IAAK;MAC9C,IAAIA,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,MAAM,EAAE;QAC7C,MAAM,IAAIH,KAAK,CACb,aAAaE,GAAG,gDAClB,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,OAAOZ,KAAK,KAAK,UAAU,EAAE;IACtC,MAAM,IAAIU,KAAK,CAAC,aAAaE,GAAG,uBAAuB,CAAC;EAC1D;AACF;AA6BO,SAASE,oBAAoBA,CAACb,GAEpC,EAAgB;EACf,MAAMc,QAAkB,GAAG;IACzBC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE;EACV,CAAC;EACDd,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACI,OAAO,CAAEO,GAAW,IAAK;IACxC,MAAMM,SAAS,GAAG/B,UAAU,CAACyB,GAAG,CAAC;IAEjC,IAAIM,SAAS,EAAE;MACb,MAAMC,MAAkB,GAAG;QACzBH,IAAI,EAAE,QAAQ;QACd5B,IAAI,EAAEwB,GAAG;QACTQ,MAAM,EAAEL;MACV,CAAC;MACDG,SAAS,CAACC,MAAM,EAAElB,GAAG,CAACW,GAAG,CAAC,CAAC;IAC7B,CAAC,MAAM;MACL,MAAMS,0BAA0B,GAAG,IAAIX,KAAK,CAC1C,IAAIE,GAAG,iCACT,CAAC;MAEDS,0BAA0B,CAACC,IAAI,GAAG,+BAA+B;MACjE,MAAMD,0BAA0B;IAClC;EACF,CAAC,CAAC;EAEF,OAAOpB,GAAG;AACZ;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/partial.js":{"lineLengths":[13,0,46,13,3,43,46,18,31,23,16,4,14,1,37,33,33,48,55,50,41,54,39,199,45,21,16,21,27,7,69,64,7,18,7,69,57,278,39,26,11,7,12,69,3,1,47,89,75,3,79,9,41,14,24,22,11,24,11,43,91,103,79,19,13,21,26,12,11,43,4,77,32,18,19,4,39,42,5,45,74,18,19,22,34,25,29,21,23,21,82,100,99,5,10,12,12,43,31,33,31,28,4,1,35,31,74,21,6,22,15,59,10,3,55,27,9,12,12,11,11,17,9,13,56,16,3,43,48,108,5,5,173,1,21,70,26,26,30,25,31,24,27,30,27,25,37,23,24,3,25,67,3,1,39,7,0,35,0],"data":{"version":3,"names":["_path","data","require","_plugin","_util","_item","_configChain","_environment","_options","_index","_resolveTargets","_excluded","_objectWithoutPropertiesLoose","r","e","t","n","hasOwnProperty","call","indexOf","resolveRootMode","rootDir","rootMode","upwardRootDir","findConfigUpwards","Object","assign","Error","ROOT_CONFIG_FILENAMES","join","code","dirname","loadPrivatePartialConfig","inputOpts","Array","isArray","args","validate","envName","getEnv","cwd","root","caller","cloneInputAst","absoluteCwd","path","resolve","absoluteRootDir","filename","undefined","showConfigPath","resolveShowConfigPath","context","showConfig","configChain","buildRootChain","merged","assumptions","options","forEach","opts","mergeOptions","targets","resolveTargets","babelrc","configFile","browserslistConfigFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","fileHandling","ignore","config","files","loadPartialConfig","showIgnoredFiles","_opts","result","item","value","Plugin","PartialConfig","filepath","constructor","babelignore","freeze","hasFilesystemConfig","prototype"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/partial.ts"],"sourcesContent":["import path from \"node:path\";\nimport type { Handler } from \"gensync\";\nimport Plugin from \"./plugin.ts\";\nimport { mergeOptions } from \"./util.ts\";\nimport { createItemFromDescriptor } from \"./item.ts\";\nimport { buildRootChain } from \"./config-chain.ts\";\nimport type { ConfigContext, FileHandling } from \"./config-chain.ts\";\nimport { getEnv } from \"./helpers/environment.ts\";\nimport { validate } from \"./validation/options.ts\";\n\nimport type {\n  ValidatedOptions,\n  NormalizedOptions,\n  RootMode,\n  InputOptions,\n} from \"./validation/options.ts\";\n\nimport {\n  findConfigUpwards,\n  resolveShowConfigPath,\n  ROOT_CONFIG_FILENAMES,\n} from \"./files/index.ts\";\nimport type { ConfigFile, IgnoreFile } from \"./files/index.ts\";\nimport { resolveTargets } from \"./resolve-targets.ts\";\n\nfunction resolveRootMode(rootDir: string, rootMode: RootMode): string {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      return upwardRootDir === null ? rootDir : upwardRootDir;\n    }\n\n    case \"upward\": {\n      const upwardRootDir = findConfigUpwards(rootDir);\n      if (upwardRootDir !== null) return upwardRootDir;\n\n      throw Object.assign(\n        new Error(\n          `Babel was run with rootMode:\"upward\" but a root could not ` +\n            `be found when searching upward from \"${rootDir}\".\\n` +\n            `One of the following config files must be in the directory tree: ` +\n            `\"${ROOT_CONFIG_FILENAMES.join(\", \")}\".`,\n        ) as any,\n        {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir,\n        },\n      );\n    }\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nexport type PrivPartialConfig = {\n  showIgnoredFiles?: boolean;\n  options: NormalizedOptions;\n  context: ConfigContext;\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  ignore: IgnoreFile | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n};\n\nexport default function* loadPrivatePartialConfig(\n  inputOpts: InputOptions,\n): Handler<PrivPartialConfig | null> {\n  if (\n    inputOpts != null &&\n    (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))\n  ) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? validate(\"arguments\", inputOpts) : {};\n\n  const {\n    envName = getEnv(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true,\n  } = args;\n  const absoluteCwd = path.resolve(cwd);\n  const absoluteRootDir = resolveRootMode(\n    path.resolve(absoluteCwd, rootDir),\n    rootMode,\n  );\n\n  const filename =\n    typeof args.filename === \"string\"\n      ? path.resolve(cwd, args.filename)\n      : undefined;\n\n  const showConfigPath = yield* resolveShowConfigPath(absoluteCwd);\n\n  const context: ConfigContext = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename,\n  };\n\n  const configChain = yield* buildRootChain(args, context);\n  if (!configChain) return null;\n\n  const merged: ValidatedOptions = {\n    assumptions: {},\n  };\n  configChain.options.forEach(opts => {\n    mergeOptions(merged as any, opts);\n  });\n\n  const options: NormalizedOptions = {\n    ...merged,\n    targets: resolveTargets(merged, absoluteRootDir),\n\n    // Tack the passes onto the object itself so that, if this object is\n    // passed back to Babel a second time, it will be in the right structure\n    // to not change behavior.\n    cloneInputAst,\n    babelrc: false,\n    configFile: false,\n    browserslistConfigFile: false,\n    passPerPreset: false,\n    envName: context.envName,\n    cwd: context.cwd,\n    root: context.root,\n    rootMode: \"root\",\n    filename:\n      typeof context.filename === \"string\" ? context.filename : undefined,\n\n    plugins: configChain.plugins.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n    presets: configChain.presets.map(descriptor =>\n      createItemFromDescriptor(descriptor),\n    ),\n  };\n\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files,\n  };\n}\n\nexport function* loadPartialConfig(\n  opts?: InputOptions,\n): Handler<PartialConfig | null> {\n  let showIgnoredFiles = false;\n  // We only extract showIgnoredFiles if opts is an object, so that\n  // loadPrivatePartialConfig can throw the appropriate error if it's not.\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    ({ showIgnoredFiles, ...opts } = opts);\n  }\n\n  const result: PrivPartialConfig | undefined | null =\n    yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n\n  const { options, babelrc, ignore, config, fileHandling, files } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    // @ts-expect-error todo(flow->ts): better type annotation for `item.value`\n    if (item.value instanceof Plugin) {\n      throw new Error(\n        \"Passing cached plugin instances is not supported in \" +\n          \"babel.loadPartialConfig()\",\n      );\n    }\n  });\n\n  return new PartialConfig(\n    options,\n    babelrc ? babelrc.filepath : undefined,\n    ignore ? ignore.filepath : undefined,\n    config ? config.filepath : undefined,\n    fileHandling,\n    files,\n  );\n}\n\nexport type { PartialConfig };\n\nclass PartialConfig {\n  /**\n   * These properties are public, so any changes to them should be considered\n   * a breaking change to Babel's API.\n   */\n  options: NormalizedOptions;\n  babelrc: string | void;\n  babelignore: string | void;\n  config: string | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n\n  constructor(\n    options: NormalizedOptions,\n    babelrc: string | void,\n    ignore: string | void,\n    config: string | void,\n    fileHandling: FileHandling,\n    files: Set<string>,\n  ) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n\n    // Freeze since this is a public API and it should be extremely obvious that\n    // reassigning properties on here does nothing.\n    Object.freeze(this);\n  }\n\n  /**\n   * Returns true if there is a config file in the filesystem for this config.\n   */\n  hasFilesystemConfig(): boolean {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n}\nObject.freeze(PartialConfig.prototype);\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/helpers/environment.js":{"lineLengths":[13,0,46,13,3,24,47,71,1,7,0,39,0],"data":{"version":3,"names":["getEnv","defaultValue","process","env","BABEL_ENV","NODE_ENV"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/helpers/environment.ts"],"sourcesContent":["export function getEnv(defaultValue: string = \"development\"): string {\n  return process.env.BABEL_ENV || process.env.NODE_ENV || defaultValue;\n}\n"],"mappings":";;;;;;AAAO,SAASA,MAAMA,CAACC,YAAoB,GAAG,aAAa,EAAU;EACnE,OAAOC,OAAO,CAACC,GAAG,CAACC,SAAS,IAAIF,OAAO,CAACC,GAAG,CAACE,QAAQ,IAAIJ,YAAY;AACtE;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/index.js":{"lineLengths":[13,0,46,13,3,18,22,42,27,16,4,14,1,46,59,52,52,46,60,50,34,113,25,7,46,15,23,110,18,39,5,12,3,28,7,30,8,19,17,55,5,15,24,112,18,38,5,12,3,10,28,18,45,55,52,44,83,4,1,45,45,43,25,22,24,82,84,37,24,36,5,45,23,144,35,7,5,108,5,62,5,45,24,145,35,7,5,3,1,7,0,33,0],"data":{"version":3,"names":["_traverse","data","require","_pluginPass","_blockHoistPlugin","_normalizeOpts","_normalizeFile","_generate","_deepArray","_async","run","config","code","ast","file","normalizeFile","passes","normalizeOptions","opts","transformFile","e","_opts$filename","message","filename","outputCode","outputMap","generateCode","_opts$filename2","metadata","options","undefined","map","sourceType","program","externalDependencies","flattenToSet","pluginPasses","async","isAsync","pluginPairs","passPairs","visitors","plugin","concat","loadBlockHoistPlugin","pass","PluginPass","key","push","visitor","pre","fn","maybeAsync","call","traverse","merge","wrapPluginVisitorMethod","scope","post"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/index.ts"],"sourcesContent":["import traverse from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\nimport type { GeneratorResult } from \"@babel/generator\";\n\nimport type { Handler } from \"gensync\";\n\nimport type { ResolvedConfig, Plugin, PluginPasses } from \"../config/index.ts\";\n\nimport PluginPass from \"./plugin-pass.ts\";\nimport loadBlockHoistPlugin from \"./block-hoist-plugin.ts\";\nimport normalizeOptions from \"./normalize-opts.ts\";\nimport normalizeFile from \"./normalize-file.ts\";\n\nimport generateCode from \"./file/generate.ts\";\nimport type File from \"./file/file.ts\";\n\nimport { flattenToSet } from \"../config/helpers/deep-array.ts\";\nimport { isAsync, maybeAsync } from \"../gensync-utils/async.ts\";\n\nexport type FileResultCallback = {\n  (err: Error, file: null): void;\n  (err: null, file: FileResult | null): void;\n};\n\nexport type FileResult = {\n  metadata: { [key: string]: any };\n  options: { [key: string]: any };\n  ast: t.File | null;\n  code: string | null;\n  map: GeneratorResult[\"map\"] | null;\n  sourceType: \"script\" | \"module\";\n  externalDependencies: Set<string>;\n};\n\nexport function* run(\n  config: ResolvedConfig,\n  code: string,\n  ast?: t.File | t.Program | null,\n): Handler<FileResult> {\n  const file = yield* normalizeFile(\n    config.passes,\n    normalizeOptions(config),\n    code,\n    ast,\n  );\n\n  const opts = file.opts;\n  try {\n    yield* transformFile(file, config.passes);\n  } catch (e) {\n    e.message = `${opts.filename ?? \"unknown file\"}: ${e.message}`;\n    if (!e.code) {\n      e.code = \"BABEL_TRANSFORM_ERROR\";\n    }\n    throw e;\n  }\n\n  let outputCode, outputMap;\n  try {\n    if (opts.code !== false) {\n      ({ outputCode, outputMap } = generateCode(config.passes, file));\n    }\n  } catch (e) {\n    e.message = `${opts.filename ?? \"unknown file\"}: ${e.message}`;\n    if (!e.code) {\n      e.code = \"BABEL_GENERATE_ERROR\";\n    }\n    throw e;\n  }\n\n  return {\n    metadata: file.metadata,\n    options: opts,\n    ast: opts.ast === true ? file.ast : null,\n    code: outputCode === undefined ? null : outputCode,\n    map: outputMap === undefined ? null : outputMap,\n    sourceType: file.ast.program.sourceType,\n    externalDependencies: flattenToSet(config.externalDependencies),\n  };\n}\n\nfunction* transformFile(file: File, pluginPasses: PluginPasses): Handler<void> {\n  const async = yield* isAsync();\n\n  for (const pluginPairs of pluginPasses) {\n    const passPairs: [Plugin, PluginPass][] = [];\n    const passes = [];\n    const visitors = [];\n\n    for (const plugin of pluginPairs.concat([loadBlockHoistPlugin()])) {\n      const pass = new PluginPass(file, plugin.key, plugin.options, async);\n\n      passPairs.push([plugin, pass]);\n      passes.push(pass);\n      visitors.push(plugin.visitor);\n    }\n\n    for (const [plugin, pass] of passPairs) {\n      if (plugin.pre) {\n        const fn = maybeAsync(\n          plugin.pre,\n          `You appear to be using an async plugin/preset, but Babel has been called synchronously`,\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        yield* fn.call(pass, file);\n      }\n    }\n\n    // merge all plugin visitors into a single visitor\n    const visitor = traverse.visitors.merge(\n      visitors,\n      passes,\n      file.opts.wrapPluginVisitorMethod,\n    );\n    if (process.env.BABEL_8_BREAKING) {\n      traverse(file.ast.program, visitor, file.scope, null, file.path, true);\n    } else {\n      traverse(file.ast, visitor, file.scope);\n    }\n\n    for (const [plugin, pass] of passPairs) {\n      if (plugin.post) {\n        const fn = maybeAsync(\n          plugin.post,\n          `You appear to be using an async plugin/preset, but Babel has been called synchronously`,\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        yield* fn.call(pass, file);\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/plugin-pass.js":{"lineLengths":[13,0,46,13,3,25,18,44,26,22,23,23,22,27,26,19,21,30,29,39,27,3,17,28,3,12,30,3,39,57,3,19,37,3,42,60,3,1,29,1,65,37,4,57,26,4,1,7,0,39,0],"data":{"version":3,"names":["PluginPass","constructor","file","key","options","isAsync","_map","Map","opts","cwd","filename","set","val","get","availableHelper","name","versionRange","addHelper","buildCodeFrameError","node","msg","_Error","exports","default","prototype","getModuleName","addImport"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/plugin-pass.ts"],"sourcesContent":["import type * as t from \"@babel/types\";\nimport type File from \"./file/file.ts\";\n\nexport default class PluginPass<Options = object> {\n  _map: Map<unknown, unknown> = new Map();\n  key: string | undefined | null;\n  file: File;\n  opts: Partial<Options>;\n\n  /**\n   * The working directory that Babel's programmatic options are loaded\n   * relative to.\n   */\n  cwd: string;\n\n  /** The absolute path of the file being compiled. */\n  filename: string | void;\n\n  /**\n   * Is Babel executed in async mode or not.\n   */\n  isAsync: boolean;\n\n  constructor(\n    file: File,\n    key: string | null,\n    options: Options | undefined,\n    isAsync: boolean,\n  ) {\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n    this.isAsync = isAsync;\n  }\n\n  set(key: unknown, val: unknown) {\n    this._map.set(key, val);\n  }\n\n  get(key: unknown): any {\n    return this._map.get(key);\n  }\n\n  availableHelper(name: string, versionRange?: string | null) {\n    return this.file.availableHelper(name, versionRange);\n  }\n\n  addHelper(name: string) {\n    return this.file.addHelper(name);\n  }\n\n  buildCodeFrameError(\n    node: t.Node | undefined | null,\n    msg: string,\n    _Error?: typeof Error,\n  ) {\n    return this.file.buildCodeFrameError(node, msg, _Error);\n  }\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  (PluginPass as any).prototype.getModuleName = function getModuleName(\n    this: PluginPass,\n  ): string | undefined {\n    // @ts-expect-error only exists in Babel 7\n    return this.file.getModuleName();\n  };\n  (PluginPass as any).prototype.addImport = function addImport(\n    this: PluginPass,\n  ): void {\n    // @ts-expect-error only exists in Babel 7\n    this.file.addImport();\n  };\n}\n"],"mappings":";;;;;;AAGe,MAAMA,UAAU,CAAmB;EAoBhDC,WAAWA,CACTC,IAAU,EACVC,GAAkB,EAClBC,OAA4B,EAC5BC,OAAgB,EAChB;IAAA,KAxBFC,IAAI,GAA0B,IAAIC,GAAG,CAAC,CAAC;IAAA,KACvCJ,GAAG;IAAA,KACHD,IAAI;IAAA,KACJM,IAAI;IAAA,KAMJC,GAAG;IAAA,KAGHC,QAAQ;IAAA,KAKRL,OAAO;IAQL,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACM,IAAI,GAAGJ,OAAO,IAAI,CAAC,CAAC;IACzB,IAAI,CAACK,GAAG,GAAGP,IAAI,CAACM,IAAI,CAACC,GAAG;IACxB,IAAI,CAACC,QAAQ,GAAGR,IAAI,CAACM,IAAI,CAACE,QAAQ;IAClC,IAAI,CAACL,OAAO,GAAGA,OAAO;EACxB;EAEAM,GAAGA,CAACR,GAAY,EAAES,GAAY,EAAE;IAC9B,IAAI,CAACN,IAAI,CAACK,GAAG,CAACR,GAAG,EAAES,GAAG,CAAC;EACzB;EAEAC,GAAGA,CAACV,GAAY,EAAO;IACrB,OAAO,IAAI,CAACG,IAAI,CAACO,GAAG,CAACV,GAAG,CAAC;EAC3B;EAEAW,eAAeA,CAACC,IAAY,EAAEC,YAA4B,EAAE;IAC1D,OAAO,IAAI,CAACd,IAAI,CAACY,eAAe,CAACC,IAAI,EAAEC,YAAY,CAAC;EACtD;EAEAC,SAASA,CAACF,IAAY,EAAE;IACtB,OAAO,IAAI,CAACb,IAAI,CAACe,SAAS,CAACF,IAAI,CAAC;EAClC;EAEAG,mBAAmBA,CACjBC,IAA+B,EAC/BC,GAAW,EACXC,MAAqB,EACrB;IACA,OAAO,IAAI,CAACnB,IAAI,CAACgB,mBAAmB,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;EACzD;AACF;AAACC,OAAA,CAAAC,OAAA,GAAAvB,UAAA;AAEkC;EAChCA,UAAU,CAASwB,SAAS,CAACC,aAAa,GAAG,SAASA,aAAaA,CAAA,EAE9C;IAEpB,OAAO,IAAI,CAACvB,IAAI,CAACuB,aAAa,CAAC,CAAC;EAClC,CAAC;EACAzB,UAAU,CAASwB,SAAS,CAACE,SAAS,GAAG,SAASA,SAASA,CAAA,EAEpD;IAEN,IAAI,CAACxB,IAAI,CAACwB,SAAS,CAAC,CAAC;EACvB,CAAC;AACH;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js":{"lineLengths":[13,0,46,13,3,39,22,42,27,16,4,14,1,45,18,26,30,12,12,12,12,10,47,7,6,17,12,12,10,59,7,5,3,2,32,32,24,41,22,26,18,23,12,5,12,3,30,34,1,33,23,77,68,12,3,23,1,29,68,33,34,18,1,27,38,41,22,26,51,19,3,71,16,27,32,29,24,5,3,14,1,7,0,46,0],"data":{"version":3,"names":["_traverse","data","require","_plugin","LOADED_PLUGIN","blockHoistPlugin","name","visitor","Block","exit","node","body","performHoisting","SwitchCase","consequent","max","Math","pow","hasChange","i","length","n","p","priority","stableSort","slice","loadBlockHoistPlugin","Plugin","Object","assign","traverse","explode","bodyNode","_blockHoist","buckets","create","bucket","push","keys","map","k","sort","a","b","index","key"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/block-hoist-plugin.ts"],"sourcesContent":["import traverse from \"@babel/traverse\";\nimport type { Statement } from \"@babel/types\";\nimport type { PluginObject } from \"../config/index.ts\";\nimport Plugin from \"../config/plugin.ts\";\n\nlet LOADED_PLUGIN: Plugin | void;\n\nconst blockHoistPlugin: PluginObject = {\n  /**\n   * [Please add a description.]\n   *\n   * Priority:\n   *\n   *  - 0 We want this to be at the **very** bottom\n   *  - 1 Default node position\n   *  - 2 Priority over normal nodes\n   *  - 3 We want this to be at the **very** top\n   *  - 4 Reserved for the helpers used to implement module imports.\n   */\n\n  name: \"internal.blockHoist\",\n\n  visitor: {\n    Block: {\n      exit({ node }) {\n        node.body = performHoisting(node.body);\n      },\n    },\n    SwitchCase: {\n      exit({ node }) {\n        // In case statements, hoisting is difficult to perform correctly due to\n        // functions that are declared and referenced in different blocks.\n        // Nevertheless, hoisting the statements *inside* of each case should at\n        // least mitigate the failure cases.\n        node.consequent = performHoisting(node.consequent);\n      },\n    },\n  },\n};\n\nfunction performHoisting(body: Statement[]): Statement[] {\n  // Largest SMI\n  let max = 2 ** 30 - 1;\n  let hasChange = false;\n  for (let i = 0; i < body.length; i++) {\n    const n = body[i];\n    const p = priority(n);\n    if (p > max) {\n      hasChange = true;\n      break;\n    }\n    max = p;\n  }\n  if (!hasChange) return body;\n\n  // My kingdom for a stable sort!\n  return stableSort(body.slice());\n}\n\nexport default function loadBlockHoistPlugin(): Plugin {\n  if (!LOADED_PLUGIN) {\n    // cache the loaded blockHoist plugin plugin\n    LOADED_PLUGIN = new Plugin(\n      {\n        ...blockHoistPlugin,\n        visitor: traverse.explode(blockHoistPlugin.visitor),\n      },\n      {},\n    );\n  }\n\n  return LOADED_PLUGIN;\n}\n\nfunction priority(bodyNode: Statement & { _blockHoist?: number | true }) {\n  const priority = bodyNode?._blockHoist;\n  if (priority == null) return 1;\n  if (priority === true) return 2;\n  return priority;\n}\n\nfunction stableSort(body: Statement[]) {\n  // By default, we use priorities of 0-4.\n  const buckets = Object.create(null);\n\n  // By collecting into buckets, we can guarantee a stable sort.\n  for (let i = 0; i < body.length; i++) {\n    const n = body[i];\n    const p = priority(n);\n\n    // In case some plugin is setting an unexpected priority.\n    const bucket = buckets[p] || (buckets[p] = []);\n    bucket.push(n);\n  }\n\n  // Sort our keys in descending order. Keys are unique, so we don't have to\n  // worry about stability.\n  const keys = Object.keys(buckets)\n    .map(k => +k)\n    .sort((a, b) => b - a);\n\n  let index = 0;\n  for (const key of keys) {\n    const bucket = buckets[key];\n    for (const n of bucket) {\n      body[index++] = n;\n    }\n  }\n  return body;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/normalize-opts.js":{"lineLengths":[13,0,46,13,3,35,18,31,23,16,4,14,1,35,9,13,8,98,26,19,34,43,56,20,20,21,30,43,31,87,31,17,24,34,15,58,56,36,15,50,14,30,17,17,20,26,5,40,35,37,62,7,5,3,17,1,7,0,42,0],"data":{"version":3,"names":["_path","data","require","normalizeOptions","config","filename","cwd","filenameRelative","path","relative","sourceType","inputSourceMap","sourceMaps","sourceRoot","options","moduleRoot","sourceFileName","basename","comments","compact","opts","Object","assign","parserOpts","extname","plugins","generatorOpts","auxiliaryCommentBefore","auxiliaryCommentAfter","retainLines","shouldPrintComment","minified","passes","plugin","manipulateOptions"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/normalize-opts.ts"],"sourcesContent":["import path from \"node:path\";\nimport type { ResolvedConfig } from \"../config/index.ts\";\n\nexport default function normalizeOptions(config: ResolvedConfig) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\"\n      ? path.relative(cwd, filename)\n      : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    sourceRoot = process.env.BABEL_8_BREAKING\n      ? undefined\n      : config.options.moduleRoot,\n\n    sourceFileName = path.basename(filenameRelative),\n\n    comments = true,\n    compact = \"auto\",\n  } = config.options;\n\n  const opts = config.options;\n\n  const options = {\n    ...opts,\n\n    parserOpts: {\n      sourceType:\n        path.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n\n      sourceFileName: filename,\n      plugins: [],\n      ...opts.parserOpts,\n    },\n\n    generatorOpts: {\n      // General generator flags.\n      filename,\n\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n\n      // Source-map generation flags.\n      sourceMaps,\n\n      sourceRoot,\n      sourceFileName,\n      ...opts.generatorOpts,\n    },\n  };\n\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}\n"],"mappings":";;;;;;AAAA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGe,SAASE,gBAAgBA,CAACC,MAAsB,EAAE;EAC/D,MAAM;IACJC,QAAQ;IACRC,GAAG;IACHC,gBAAgB,GAAG,OAAOF,QAAQ,KAAK,QAAQ,GAC3CG,MAAGA,CAAC,CAACC,QAAQ,CAACH,GAAG,EAAED,QAAQ,CAAC,GAC5B,SAAS;IACbK,UAAU,GAAG,QAAQ;IACrBC,cAAc;IACdC,UAAU,GAAG,CAAC,CAACD,cAAc;IAC7BE,UAAU,GAENT,MAAM,CAACU,OAAO,CAACC,UAAU;IAE7BC,cAAc,GAAGR,MAAGA,CAAC,CAACS,QAAQ,CAACV,gBAAgB,CAAC;IAEhDW,QAAQ,GAAG,IAAI;IACfC,OAAO,GAAG;EACZ,CAAC,GAAGf,MAAM,CAACU,OAAO;EAElB,MAAMM,IAAI,GAAGhB,MAAM,CAACU,OAAO;EAE3B,MAAMA,OAAO,GAAAO,MAAA,CAAAC,MAAA,KACRF,IAAI;IAEPG,UAAU,EAAAF,MAAA,CAAAC,MAAA;MACRZ,UAAU,EACRF,MAAGA,CAAC,CAACgB,OAAO,CAACjB,gBAAgB,CAAC,KAAK,MAAM,GAAG,QAAQ,GAAGG,UAAU;MAEnEM,cAAc,EAAEX,QAAQ;MACxBoB,OAAO,EAAE;IAAE,GACRL,IAAI,CAACG,UAAU,CACnB;IAEDG,aAAa,EAAAL,MAAA,CAAAC,MAAA;MAEXjB,QAAQ;MAERsB,sBAAsB,EAAEP,IAAI,CAACO,sBAAsB;MACnDC,qBAAqB,EAAER,IAAI,CAACQ,qBAAqB;MACjDC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BX,QAAQ;MACRY,kBAAkB,EAAEV,IAAI,CAACU,kBAAkB;MAC3CX,OAAO;MACPY,QAAQ,EAAEX,IAAI,CAACW,QAAQ;MAGvBnB,UAAU;MAEVC,UAAU;MACVG;IAAc,GACXI,IAAI,CAACM,aAAa;EACtB,EACF;EAED,KAAK,MAAMD,OAAO,IAAIrB,MAAM,CAAC4B,MAAM,EAAE;IACnC,KAAK,MAAMC,MAAM,IAAIR,OAAO,EAAE;MAC5B,IAAIQ,MAAM,CAACC,iBAAiB,EAAE;QAC5BD,MAAM,CAACC,iBAAiB,CAACpB,OAAO,EAAEA,OAAO,CAACS,UAAU,CAAC;MACvD;IACF;EACF;EAEA,OAAOT,OAAO;AAChB;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/normalize-file.js":{"lineLengths":[13,0,46,13,3,32,16,29,21,16,4,14,1,18,31,23,16,4,14,1,19,32,24,16,4,14,1,15,39,20,16,4,14,1,30,45,35,16,4,14,1,38,43,49,7,7,14,9,47,122,82,59,25,12,33,30,37,65,5,32,41,5,10,66,3,22,41,53,72,5,20,71,24,13,73,23,11,63,11,9,7,5,20,73,64,13,67,123,67,23,64,9,31,61,7,5,3,37,9,13,12,5,1,64,17,33,11,11,30,28,21,7,18,7,3,33,1,38,25,29,108,104,110,5,21,1,7,0,42,0],"data":{"version":3,"names":["_fs","data","require","_path","_debug","_t","_convertSourceMap","_file","_index","_cloneDeep","file","traverseFast","debug","buildDebug","INLINE_SOURCEMAP_REGEX","EXTERNAL_SOURCEMAP_REGEX","normalizeFile","pluginPasses","options","code","ast","type","Error","cloneInputAst","cloneDeep","parser","inputMap","inputSourceMap","convertSourceMap","fromObject","lastComment","extractComments","fromComment","err","filename","match","exec","inputMapContent","fs","readFileSync","path","resolve","dirname","fromJSON","File","extractCommentsFromList","regex","comments","filter","value","test","node","leadingComments","innerComments","trailingComments"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/normalize-file.ts"],"sourcesContent":["import fs from \"node:fs\";\nimport path from \"node:path\";\nimport buildDebug from \"debug\";\nimport type { Handler } from \"gensync\";\nimport { file, traverseFast } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { PluginPasses } from \"../config/index.ts\";\nimport convertSourceMap from \"convert-source-map\";\nimport type { SourceMapConverter as Converter } from \"convert-source-map\";\nimport File from \"./file/file.ts\";\nimport parser from \"../parser/index.ts\";\nimport cloneDeep from \"./util/clone-deep.ts\";\n\nconst debug = buildDebug(\"babel:transform:file\");\n\n// These regexps are copied from the convert-source-map package,\n// but without // or /* at the beginning of the comment.\n\nconst INLINE_SOURCEMAP_REGEX =\n  /^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,.*$/;\nconst EXTERNAL_SOURCEMAP_REGEX =\n  /^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;\n\nexport type NormalizedFile = {\n  code: string;\n  ast: t.File;\n  inputMap: Converter | null;\n};\n\nexport default function* normalizeFile(\n  pluginPasses: PluginPasses,\n  options: { [key: string]: any },\n  code: string,\n  ast?: t.File | t.Program | null,\n): Handler<File> {\n  code = `${code || \"\"}`;\n\n  if (ast) {\n    if (ast.type === \"Program\") {\n      ast = file(ast, [], []);\n    } else if (ast.type !== \"File\") {\n      throw new Error(\"AST root must be a Program or File node\");\n    }\n\n    if (options.cloneInputAst) {\n      ast = cloneDeep(ast);\n    }\n  } else {\n    ast = yield* parser(pluginPasses, options, code);\n  }\n\n  let inputMap = null;\n  if (options.inputSourceMap !== false) {\n    // If an explicit object is passed in, it overrides the processing of\n    // source maps that may be in the file itself.\n    if (typeof options.inputSourceMap === \"object\") {\n      inputMap = convertSourceMap.fromObject(options.inputSourceMap);\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);\n      if (lastComment) {\n        try {\n          inputMap = convertSourceMap.fromComment(\"//\" + lastComment);\n        } catch (err) {\n          if (process.env.BABEL_8_BREAKING) {\n            console.warn(\n              \"discarding unknown inline input sourcemap\",\n              options.filename,\n              err,\n            );\n          } else {\n            debug(\"discarding unknown inline input sourcemap\");\n          }\n        }\n      }\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);\n      if (typeof options.filename === \"string\" && lastComment) {\n        try {\n          // when `lastComment` is non-null, EXTERNAL_SOURCEMAP_REGEX must have matches\n          const match: [string, string] = EXTERNAL_SOURCEMAP_REGEX.exec(\n            lastComment,\n          ) as any;\n          const inputMapContent = fs.readFileSync(\n            path.resolve(path.dirname(options.filename), match[1]),\n            \"utf8\",\n          );\n          inputMap = convertSourceMap.fromJSON(inputMapContent);\n        } catch (err) {\n          debug(\"discarding unknown file input sourcemap\", err);\n        }\n      } else if (lastComment) {\n        debug(\"discarding un-loadable file input sourcemap\");\n      }\n    }\n  }\n\n  return new File(options, {\n    code,\n    ast: ast,\n    inputMap,\n  });\n}\n\nfunction extractCommentsFromList(\n  regex: RegExp,\n  comments: t.Comment[],\n  lastComment: string | null,\n): [t.Comment[], string | null] {\n  if (comments) {\n    comments = comments.filter(({ value }) => {\n      if (regex.test(value)) {\n        lastComment = value;\n        return false;\n      }\n      return true;\n    });\n  }\n  return [comments, lastComment];\n}\n\nfunction extractComments(regex: RegExp, ast: t.Node) {\n  let lastComment: string = null;\n  traverseFast(ast, node => {\n    [node.leadingComments, lastComment] = extractCommentsFromList(\n      regex,\n      node.leadingComments,\n      lastComment,\n    );\n    [node.innerComments, lastComment] = extractCommentsFromList(\n      regex,\n      node.innerComments,\n      lastComment,\n    );\n    [node.trailingComments, lastComment] = extractCommentsFromList(\n      regex,\n      node.trailingComments,\n      lastComment,\n    );\n  });\n  return lastComment;\n}\n"],"mappings":";;;;;;AAAA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,MAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,KAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,OAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,MAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,GAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,EAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAK,kBAAA;EAAA,MAAAL,IAAA,GAAAC,OAAA;EAAAI,iBAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAM,KAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AACA,IAAAO,UAAA,GAAAP,OAAA;AAA6C;EAPpCQ,IAAI;EAAEC;AAAY,IAAAN,EAAA;AAS3B,MAAMO,KAAK,GAAGC,OAASA,CAAC,CAAC,sBAAsB,CAAC;AAKhD,MAAMC,sBAAsB,GAC1B,0FAA0F;AAC5F,MAAMC,wBAAwB,GAC5B,gDAAgD;AAQnC,UAAUC,aAAaA,CACpCC,YAA0B,EAC1BC,OAA+B,EAC/BC,IAAY,EACZC,GAA+B,EAChB;EACfD,IAAI,GAAG,GAAGA,IAAI,IAAI,EAAE,EAAE;EAEtB,IAAIC,GAAG,EAAE;IACP,IAAIA,GAAG,CAACC,IAAI,KAAK,SAAS,EAAE;MAC1BD,GAAG,GAAGV,IAAI,CAACU,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;IACzB,CAAC,MAAM,IAAIA,GAAG,CAACC,IAAI,KAAK,MAAM,EAAE;MAC9B,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,IAAIJ,OAAO,CAACK,aAAa,EAAE;MACzBH,GAAG,GAAG,IAAAI,kBAAS,EAACJ,GAAG,CAAC;IACtB;EACF,CAAC,MAAM;IACLA,GAAG,GAAG,OAAO,IAAAK,cAAM,EAACR,YAAY,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAClD;EAEA,IAAIO,QAAQ,GAAG,IAAI;EACnB,IAAIR,OAAO,CAACS,cAAc,KAAK,KAAK,EAAE;IAGpC,IAAI,OAAOT,OAAO,CAACS,cAAc,KAAK,QAAQ,EAAE;MAC9CD,QAAQ,GAAGE,kBAAeA,CAAC,CAACC,UAAU,CAACX,OAAO,CAACS,cAAc,CAAC;IAChE;IAEA,IAAI,CAACD,QAAQ,EAAE;MACb,MAAMI,WAAW,GAAGC,eAAe,CAACjB,sBAAsB,EAAEM,GAAG,CAAC;MAChE,IAAIU,WAAW,EAAE;QACf,IAAI;UACFJ,QAAQ,GAAGE,kBAAeA,CAAC,CAACI,WAAW,CAAC,IAAI,GAAGF,WAAW,CAAC;QAC7D,CAAC,CAAC,OAAOG,GAAG,EAAE;UAOL;YACLrB,KAAK,CAAC,2CAA2C,CAAC;UACpD;QACF;MACF;IACF;IAEA,IAAI,CAACc,QAAQ,EAAE;MACb,MAAMI,WAAW,GAAGC,eAAe,CAAChB,wBAAwB,EAAEK,GAAG,CAAC;MAClE,IAAI,OAAOF,OAAO,CAACgB,QAAQ,KAAK,QAAQ,IAAIJ,WAAW,EAAE;QACvD,IAAI;UAEF,MAAMK,KAAuB,GAAGpB,wBAAwB,CAACqB,IAAI,CAC3DN,WACF,CAAQ;UACR,MAAMO,eAAe,GAAGC,IAACA,CAAC,CAACC,YAAY,CACrCC,MAAGA,CAAC,CAACC,OAAO,CAACD,MAAGA,CAAC,CAACE,OAAO,CAACxB,OAAO,CAACgB,QAAQ,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,MACF,CAAC;UACDT,QAAQ,GAAGE,kBAAeA,CAAC,CAACe,QAAQ,CAACN,eAAe,CAAC;QACvD,CAAC,CAAC,OAAOJ,GAAG,EAAE;UACZrB,KAAK,CAAC,yCAAyC,EAAEqB,GAAG,CAAC;QACvD;MACF,CAAC,MAAM,IAAIH,WAAW,EAAE;QACtBlB,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF;EACF;EAEA,OAAO,IAAIgC,aAAI,CAAC1B,OAAO,EAAE;IACvBC,IAAI;IACJC,GAAG,EAAEA,GAAG;IACRM;EACF,CAAC,CAAC;AACJ;AAEA,SAASmB,uBAAuBA,CAC9BC,KAAa,EACbC,QAAqB,EACrBjB,WAA0B,EACI;EAC9B,IAAIiB,QAAQ,EAAE;IACZA,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAAC,CAAC;MAAEC;IAAM,CAAC,KAAK;MACxC,IAAIH,KAAK,CAACI,IAAI,CAACD,KAAK,CAAC,EAAE;QACrBnB,WAAW,GAAGmB,KAAK;QACnB,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EACA,OAAO,CAACF,QAAQ,EAAEjB,WAAW,CAAC;AAChC;AAEA,SAASC,eAAeA,CAACe,KAAa,EAAE1B,GAAW,EAAE;EACnD,IAAIU,WAAmB,GAAG,IAAI;EAC9BnB,YAAY,CAACS,GAAG,EAAE+B,IAAI,IAAI;IACxB,CAACA,IAAI,CAACC,eAAe,EAAEtB,WAAW,CAAC,GAAGe,uBAAuB,CAC3DC,KAAK,EACLK,IAAI,CAACC,eAAe,EACpBtB,WACF,CAAC;IACD,CAACqB,IAAI,CAACE,aAAa,EAAEvB,WAAW,CAAC,GAAGe,uBAAuB,CACzDC,KAAK,EACLK,IAAI,CAACE,aAAa,EAClBvB,WACF,CAAC;IACD,CAACqB,IAAI,CAACG,gBAAgB,EAAExB,WAAW,CAAC,GAAGe,uBAAuB,CAC5DC,KAAK,EACLK,IAAI,CAACG,gBAAgB,EACrBxB,WACF,CAAC;EACH,CAAC,CAAC;EACF,OAAOA,WAAW;AACpB;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parser/index.js":{"lineLengths":[13,0,46,13,3,25,20,40,25,16,4,14,1,23,44,28,16,4,14,1,70,32,13,23,22,10,7,23,41,37,15,24,19,29,72,51,9,7,5,31,52,38,16,50,229,7,24,5,75,17,65,159,5,11,10,19,12,14,66,16,25,32,9,10,21,9,26,118,14,68,7,37,5,14,3,1,7,0,33,0],"data":{"version":3,"names":["_parser","data","require","_codeFrame","_missingPluginHelper","parser","pluginPasses","parserOpts","highlightCode","filename","code","results","plugins","plugin","parserOverride","ast","parse","undefined","push","length","then","Error","err","message","loc","missingPlugin","codeFrame","codeFrameColumns","start","line","column","generateMissingPluginMessage"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/parser/index.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\nimport { parse, type ParseResult } from \"@babel/parser\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport generateMissingPluginMessage from \"./util/missing-plugin-helper.ts\";\nimport type { PluginPasses } from \"../config/index.ts\";\n\nexport type { ParseResult };\n\nexport default function* parser(\n  pluginPasses: PluginPasses,\n  { parserOpts, highlightCode = true, filename = \"unknown\" }: any,\n  code: string,\n): Handler<ParseResult> {\n  try {\n    const results = [];\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const { parserOverride } = plugin;\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, parse);\n\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return parse(code, parserOpts);\n    } else if (results.length === 1) {\n      // If we want to allow async parsers\n      yield* [];\n      if (typeof (results[0] as any).then === \"function\") {\n        throw new Error(\n          `You appear to be using an async parser plugin, ` +\n            `which your current version of Babel does not support. ` +\n            `If you're using a published plugin, you may need to upgrade ` +\n            `your @babel/core version.`,\n        );\n      }\n      return results[0];\n    }\n    // TODO: Add an error code\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message +=\n        \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" +\n        \"or sourceType:unambiguous in your Babel config for this file.\";\n      // err.code will be changed to BABEL_PARSE_ERROR later.\n    }\n\n    const { loc, missingPlugin } = err;\n    if (loc) {\n      const codeFrame = codeFrameColumns(\n        code,\n        {\n          start: {\n            line: loc.line,\n            column: loc.column + 1,\n          },\n        },\n        {\n          highlightCode,\n        },\n      );\n      if (missingPlugin) {\n        err.message =\n          `${filename}: ` +\n          generateMissingPluginMessage(\n            missingPlugin[0],\n            loc,\n            codeFrame,\n            filename,\n          );\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n    throw err;\n  }\n}\n"],"mappings":";;;;;;AACA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,WAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,UAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,IAAAG,oBAAA,GAAAF,OAAA;AAKe,UAAUG,MAAMA,CAC7BC,YAA0B,EAC1B;EAAEC,UAAU;EAAEC,aAAa,GAAG,IAAI;EAAEC,QAAQ,GAAG;AAAe,CAAC,EAC/DC,IAAY,EACU;EACtB,IAAI;IACF,MAAMC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAMC,OAAO,IAAIN,YAAY,EAAE;MAClC,KAAK,MAAMO,MAAM,IAAID,OAAO,EAAE;QAC5B,MAAM;UAAEE;QAAe,CAAC,GAAGD,MAAM;QACjC,IAAIC,cAAc,EAAE;UAClB,MAAMC,GAAG,GAAGD,cAAc,CAACJ,IAAI,EAAEH,UAAU,EAAES,eAAK,CAAC;UAEnD,IAAID,GAAG,KAAKE,SAAS,EAAEN,OAAO,CAACO,IAAI,CAACH,GAAG,CAAC;QAC1C;MACF;IACF;IAEA,IAAIJ,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;MACxB,OAAO,IAAAH,eAAK,EAACN,IAAI,EAAEH,UAAU,CAAC;IAChC,CAAC,MAAM,IAAII,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;MAE/B,OAAO,EAAE;MACT,IAAI,OAAQR,OAAO,CAAC,CAAC,CAAC,CAASS,IAAI,KAAK,UAAU,EAAE;QAClD,MAAM,IAAIC,KAAK,CACb,iDAAiD,GAC/C,wDAAwD,GACxD,8DAA8D,GAC9D,2BACJ,CAAC;MACH;MACA,OAAOV,OAAO,CAAC,CAAC,CAAC;IACnB;IAEA,MAAM,IAAIU,KAAK,CAAC,qDAAqD,CAAC;EACxE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACZ,IAAI,KAAK,yCAAyC,EAAE;MAC1DY,GAAG,CAACC,OAAO,IACT,uEAAuE,GACvE,+DAA+D;IAEnE;IAEA,MAAM;MAAEC,GAAG;MAAEC;IAAc,CAAC,GAAGH,GAAG;IAClC,IAAIE,GAAG,EAAE;MACP,MAAME,SAAS,GAAG,IAAAC,6BAAgB,EAChCjB,IAAI,EACJ;QACEkB,KAAK,EAAE;UACLC,IAAI,EAAEL,GAAG,CAACK,IAAI;UACdC,MAAM,EAAEN,GAAG,CAACM,MAAM,GAAG;QACvB;MACF,CAAC,EACD;QACEtB;MACF,CACF,CAAC;MACD,IAAIiB,aAAa,EAAE;QACjBH,GAAG,CAACC,OAAO,GACT,GAAGd,QAAQ,IAAI,GACf,IAAAsB,4BAA4B,EAC1BN,aAAa,CAAC,CAAC,CAAC,EAChBD,GAAG,EACHE,SAAS,EACTjB,QACF,CAAC;MACL,CAAC,MAAM;QACLa,GAAG,CAACC,OAAO,GAAG,GAAGd,QAAQ,KAAKa,GAAG,CAACC,OAAO,MAAM,GAAGG,SAAS;MAC7D;MACAJ,GAAG,CAACZ,IAAI,GAAG,mBAAmB;IAChC;IACA,MAAMY,GAAG;EACX;AACF;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js":{"lineLengths":[13,0,46,13,3,47,23,23,13,56,103,5,4,12,13,43,90,5,4,15,13,46,93,6,16,48,95,5,4,18,13,50,97,6,16,52,99,5,4,22,13,55,102,6,16,57,104,5,4,9,13,40,87,6,16,33,80,5,4,17,13,49,96,6,16,51,98,5,4,17,13,49,96,6,16,51,98,5,4,8,13,39,86,6,16,34,81,5,4,21,13,53,100,6,16,55,102,5,4,19,13,52,99,5,4,21,13,53,100,6,16,55,102,5,4,15,13,46,93,6,16,39,86,5,3,2,1,32,22,15,54,101,8,18,66,113,7,6,22,15,54,101,8,18,57,104,7,6,29,15,54,101,8,18,57,104,7,6,26,15,54,101,8,18,56,103,7,6,23,15,56,103,8,18,59,106,7,6,20,15,52,99,7,6,26,15,59,106,8,18,62,109,7,6,23,15,55,102,7,6,23,15,55,102,7,6,17,15,49,96,7,6,24,15,66,113,8,18,69,116,7,6,24,15,57,104,7,6,23,15,55,102,8,18,58,105,7,6,32,15,65,112,8,18,68,116,7,6,23,15,56,103,8,18,59,106,7,6,27,15,60,107,8,18,63,110,7,6,23,15,55,102,8,18,58,105,7,6,16,15,64,111,8,18,67,114,7,6,24,15,56,113,8,18,59,114,7,5,5,1,32,7,5,25,84,159,54,19,11,27,32,19,23,67,28,75,101,133,100,14,123,7,5,3,85,18,0,96,19,93,14,73,80,2,21,1,7,0,49,0],"data":{"version":3,"names":["pluginNameMap","asyncDoExpressions","syntax","name","url","decimal","decorators","transform","doExpressions","exportDefaultFrom","flow","functionBind","functionSent","jsx","pipelineOperator","recordAndTuple","throwExpressions","typescript","Object","assign","asyncGenerators","classProperties","classPrivateProperties","classPrivateMethods","classStaticBlock","dynamicImport","exportNamespaceFrom","importAssertions","importAttributes","importMeta","logicalAssignment","moduleStringNames","numericSeparator","nullishCoalescingOperator","objectRestSpread","optionalCatchBinding","optionalChaining","privateIn","regexpUnicodeSets","getNameURLCombination","generateMissingPluginMessage","missingPluginName","loc","codeFrame","filename","helpMessage","line","column","pluginInfo","syntaxPlugin","transformPlugin","syntaxPluginInfo","transformPluginInfo","sectionType","startsWith","msgFilename"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/parser/util/missing-plugin-helper.ts"],"sourcesContent":["const pluginNameMap: Record<\n  string,\n  Partial<Record<\"syntax\" | \"transform\", Record<\"name\" | \"url\", string>>>\n> = {\n  asyncDoExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-async-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-do-expressions\",\n    },\n  },\n  decimal: {\n    syntax: {\n      name: \"@babel/plugin-syntax-decimal\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decimal\",\n    },\n  },\n  decorators: {\n    syntax: {\n      name: \"@babel/plugin-syntax-decorators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decorators\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-decorators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-decorators\",\n    },\n  },\n  doExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-do-expressions\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-do-expressions\",\n    },\n  },\n  exportDefaultFrom: {\n    syntax: {\n      name: \"@babel/plugin-syntax-export-default-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-default-from\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-export-default-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-export-default-from\",\n    },\n  },\n  flow: {\n    syntax: {\n      name: \"@babel/plugin-syntax-flow\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-flow\",\n    },\n    transform: {\n      name: \"@babel/preset-flow\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-flow\",\n    },\n  },\n  functionBind: {\n    syntax: {\n      name: \"@babel/plugin-syntax-function-bind\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-bind\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-function-bind\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-bind\",\n    },\n  },\n  functionSent: {\n    syntax: {\n      name: \"@babel/plugin-syntax-function-sent\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-sent\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-function-sent\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-sent\",\n    },\n  },\n  jsx: {\n    syntax: {\n      name: \"@babel/plugin-syntax-jsx\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx\",\n    },\n    transform: {\n      name: \"@babel/preset-react\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-react\",\n    },\n  },\n  pipelineOperator: {\n    syntax: {\n      name: \"@babel/plugin-syntax-pipeline-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-pipeline-operator\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-pipeline-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-pipeline-operator\",\n    },\n  },\n  recordAndTuple: {\n    syntax: {\n      name: \"@babel/plugin-syntax-record-and-tuple\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-record-and-tuple\",\n    },\n  },\n  throwExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-throw-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-throw-expressions\",\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-throw-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-throw-expressions\",\n    },\n  },\n  typescript: {\n    syntax: {\n      name: \"@babel/plugin-syntax-typescript\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-typescript\",\n    },\n    transform: {\n      name: \"@babel/preset-typescript\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-typescript\",\n    },\n  },\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  // TODO: This plugins are now supported by default by @babel/parser.\n  Object.assign(pluginNameMap, {\n    asyncGenerators: {\n      syntax: {\n        name: \"@babel/plugin-syntax-async-generators\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-generators\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-async-generator-functions\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-async-generator-functions\",\n      },\n    },\n    classProperties: {\n      syntax: {\n        name: \"@babel/plugin-syntax-class-properties\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-class-properties\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties\",\n      },\n    },\n    classPrivateProperties: {\n      syntax: {\n        name: \"@babel/plugin-syntax-class-properties\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-class-properties\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties\",\n      },\n    },\n    classPrivateMethods: {\n      syntax: {\n        name: \"@babel/plugin-syntax-class-properties\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-private-methods\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-methods\",\n      },\n    },\n    classStaticBlock: {\n      syntax: {\n        name: \"@babel/plugin-syntax-class-static-block\",\n        url: \"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-syntax-class-static-block\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-class-static-block\",\n        url: \"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-class-static-block\",\n      },\n    },\n    dynamicImport: {\n      syntax: {\n        name: \"@babel/plugin-syntax-dynamic-import\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-dynamic-import\",\n      },\n    },\n    exportNamespaceFrom: {\n      syntax: {\n        name: \"@babel/plugin-syntax-export-namespace-from\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-namespace-from\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-export-namespace-from\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-export-namespace-from\",\n      },\n    },\n    // Will be removed\n    importAssertions: {\n      syntax: {\n        name: \"@babel/plugin-syntax-import-assertions\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-assertions\",\n      },\n    },\n    importAttributes: {\n      syntax: {\n        name: \"@babel/plugin-syntax-import-attributes\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-attributes\",\n      },\n    },\n    importMeta: {\n      syntax: {\n        name: \"@babel/plugin-syntax-import-meta\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-meta\",\n      },\n    },\n    logicalAssignment: {\n      syntax: {\n        name: \"@babel/plugin-syntax-logical-assignment-operators\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-logical-assignment-operators\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-logical-assignment-operators\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-logical-assignment-operators\",\n      },\n    },\n    moduleStringNames: {\n      syntax: {\n        name: \"@babel/plugin-syntax-module-string-names\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-module-string-names\",\n      },\n    },\n    numericSeparator: {\n      syntax: {\n        name: \"@babel/plugin-syntax-numeric-separator\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-numeric-separator\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-numeric-separator\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-numeric-separator\",\n      },\n    },\n    nullishCoalescingOperator: {\n      syntax: {\n        name: \"@babel/plugin-syntax-nullish-coalescing-operator\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-nullish-coalescing-operator\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-nullish-coalescing-operator\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-nullish-coalescing-opearator\",\n      },\n    },\n    objectRestSpread: {\n      syntax: {\n        name: \"@babel/plugin-syntax-object-rest-spread\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-object-rest-spread\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-object-rest-spread\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-object-rest-spread\",\n      },\n    },\n    optionalCatchBinding: {\n      syntax: {\n        name: \"@babel/plugin-syntax-optional-catch-binding\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-catch-binding\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-optional-catch-binding\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-catch-binding\",\n      },\n    },\n    optionalChaining: {\n      syntax: {\n        name: \"@babel/plugin-syntax-optional-chaining\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-chaining\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-optional-chaining\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-chaining\",\n      },\n    },\n    privateIn: {\n      syntax: {\n        name: \"@babel/plugin-syntax-private-property-in-object\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-private-property-in-object\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-private-property-in-object\",\n        url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-property-in-object\",\n      },\n    },\n    regexpUnicodeSets: {\n      syntax: {\n        name: \"@babel/plugin-syntax-unicode-sets-regex\",\n        url: \"https://github.com/babel/babel/blob/main/packages/babel-plugin-syntax-unicode-sets-regex/README.md\",\n      },\n      transform: {\n        name: \"@babel/plugin-transform-unicode-sets-regex\",\n        url: \"https://github.com/babel/babel/blob/main/packages/babel-plugin-proposalunicode-sets-regex/README.md\",\n      },\n    },\n  });\n}\n\nconst getNameURLCombination = ({ name, url }: { name: string; url: string }) =>\n  `${name} (${url})`;\n\n/*\nReturns a string of the format:\nSupport for the experimental syntax [@babel/parser plugin name] isn't currently enabled ([loc]):\n\n[code frame]\n\nAdd [npm package name] ([url]) to the 'plugins' section of your Babel config\nto enable [parsing|transformation].\n*/\nexport default function generateMissingPluginMessage(\n  missingPluginName: string,\n  loc: {\n    line: number;\n    column: number;\n  },\n  codeFrame: string,\n  filename: string,\n): string {\n  let helpMessage =\n    `Support for the experimental syntax '${missingPluginName}' isn't currently enabled ` +\n    `(${loc.line}:${loc.column + 1}):\\n\\n` +\n    codeFrame;\n  const pluginInfo = pluginNameMap[missingPluginName];\n  if (pluginInfo) {\n    const { syntax: syntaxPlugin, transform: transformPlugin } = pluginInfo;\n    if (syntaxPlugin) {\n      const syntaxPluginInfo = getNameURLCombination(syntaxPlugin);\n      if (transformPlugin) {\n        const transformPluginInfo = getNameURLCombination(transformPlugin);\n        const sectionType = transformPlugin.name.startsWith(\"@babel/plugin\")\n          ? \"plugins\"\n          : \"presets\";\n        helpMessage += `\\n\\nAdd ${transformPluginInfo} to the '${sectionType}' section of your Babel config to enable transformation.\nIf you want to leave it as-is, add ${syntaxPluginInfo} to the 'plugins' section to enable parsing.`;\n      } else {\n        helpMessage +=\n          `\\n\\nAdd ${syntaxPluginInfo} to the 'plugins' section of your Babel config ` +\n          `to enable parsing.`;\n      }\n    }\n  }\n\n  const msgFilename =\n    filename === \"unknown\" ? \"<name of the input file>\" : filename;\n  helpMessage += `\n\nIf you already added the plugin for this syntax to your config, it's possible that your config \\\nisn't being loaded.\nYou can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded \\\nconfiguration:\n\\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${msgFilename} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.\n`;\n  return helpMessage;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/util/clone-deep.js":{"lineLengths":[13,0,46,13,3,27,28,14,47,23,22,52,31,33,18,26,74,7,27,5,15,31,39,48,46,102,7,12,18,48,38,45,28,215,7,5,23,49,5,18,3,15,1,26,46,3,9,47,17,36,5,3,1,7,0,38,0],"data":{"version":3,"names":["circleSet","Set","depth","deepClone","value","cache","allowCircle","has","get","clear","Error","add","cloned","Array","isArray","length","set","i","keys","Object","key","delete","_default","Map","_","structuredClone"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/util/clone-deep.ts"],"sourcesContent":["const circleSet = new Set();\nlet depth = 0;\n// https://github.com/babel/babel/pull/14583#discussion_r882828856\nfunction deepClone(\n  value: any,\n  cache: Map<any, any>,\n  allowCircle: boolean,\n): any {\n  if (value !== null) {\n    if (allowCircle) {\n      if (cache.has(value)) return cache.get(value);\n    } else if (++depth > 250) {\n      if (circleSet.has(value)) {\n        depth = 0;\n        circleSet.clear();\n        throw new Error(\"Babel-deepClone: Cycles are not allowed in AST\");\n      }\n      circleSet.add(value);\n    }\n    let cloned: any;\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n      if (allowCircle) cache.set(value, cloned);\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] =\n          typeof value[i] !== \"object\"\n            ? value[i]\n            : deepClone(value[i], cache, allowCircle);\n      }\n    } else {\n      cloned = {};\n      if (allowCircle) cache.set(value, cloned);\n      const keys = Object.keys(value);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] =\n          typeof value[key] !== \"object\"\n            ? value[key]\n            : deepClone(\n                value[key],\n                cache,\n                allowCircle ||\n                  key === \"leadingComments\" ||\n                  key === \"innerComments\" ||\n                  key === \"trailingComments\" ||\n                  key === \"extra\",\n              );\n      }\n    }\n    if (!allowCircle) {\n      if (depth-- > 250) circleSet.delete(value);\n    }\n    return cloned;\n  }\n  return value;\n}\n\nexport default function <T>(value: T): T {\n  if (typeof value !== \"object\") return value;\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (!process.env.IS_PUBLISH && depth > 0) {\n      throw new Error(\"depth > 0\");\n    }\n    return deepClone(value, new Map(), false);\n  } else {\n    try {\n      return deepClone(value, new Map(), true);\n    } catch (_) {\n      return structuredClone(value);\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC3B,IAAIC,KAAK,GAAG,CAAC;AAEb,SAASC,SAASA,CAChBC,KAAU,EACVC,KAAoB,EACpBC,WAAoB,EACf;EACL,IAAIF,KAAK,KAAK,IAAI,EAAE;IAClB,IAAIE,WAAW,EAAE;MACf,IAAID,KAAK,CAACE,GAAG,CAACH,KAAK,CAAC,EAAE,OAAOC,KAAK,CAACG,GAAG,CAACJ,KAAK,CAAC;IAC/C,CAAC,MAAM,IAAI,EAAEF,KAAK,GAAG,GAAG,EAAE;MACxB,IAAIF,SAAS,CAACO,GAAG,CAACH,KAAK,CAAC,EAAE;QACxBF,KAAK,GAAG,CAAC;QACTF,SAAS,CAACS,KAAK,CAAC,CAAC;QACjB,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;MACnE;MACAV,SAAS,CAACW,GAAG,CAACP,KAAK,CAAC;IACtB;IACA,IAAIQ,MAAW;IACf,IAAIC,KAAK,CAACC,OAAO,CAACV,KAAK,CAAC,EAAE;MACxBQ,MAAM,GAAG,IAAIC,KAAK,CAACT,KAAK,CAACW,MAAM,CAAC;MAChC,IAAIT,WAAW,EAAED,KAAK,CAACW,GAAG,CAACZ,KAAK,EAAEQ,MAAM,CAAC;MACzC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,KAAK,CAACW,MAAM,EAAEE,CAAC,EAAE,EAAE;QACrCL,MAAM,CAACK,CAAC,CAAC,GACP,OAAOb,KAAK,CAACa,CAAC,CAAC,KAAK,QAAQ,GACxBb,KAAK,CAACa,CAAC,CAAC,GACRd,SAAS,CAACC,KAAK,CAACa,CAAC,CAAC,EAAEZ,KAAK,EAAEC,WAAW,CAAC;MAC/C;IACF,CAAC,MAAM;MACLM,MAAM,GAAG,CAAC,CAAC;MACX,IAAIN,WAAW,EAAED,KAAK,CAACW,GAAG,CAACZ,KAAK,EAAEQ,MAAM,CAAC;MACzC,MAAMM,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACd,KAAK,CAAC;MAC/B,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACH,MAAM,EAAEE,CAAC,EAAE,EAAE;QACpC,MAAMG,GAAG,GAAGF,IAAI,CAACD,CAAC,CAAC;QACnBL,MAAM,CAACQ,GAAG,CAAC,GACT,OAAOhB,KAAK,CAACgB,GAAG,CAAC,KAAK,QAAQ,GAC1BhB,KAAK,CAACgB,GAAG,CAAC,GACVjB,SAAS,CACPC,KAAK,CAACgB,GAAG,CAAC,EACVf,KAAK,EACLC,WAAW,IACTc,GAAG,KAAK,iBAAiB,IACzBA,GAAG,KAAK,eAAe,IACvBA,GAAG,KAAK,kBAAkB,IAC1BA,GAAG,KAAK,OACZ,CAAC;MACT;IACF;IACA,IAAI,CAACd,WAAW,EAAE;MAChB,IAAIJ,KAAK,EAAE,GAAG,GAAG,EAAEF,SAAS,CAACqB,MAAM,CAACjB,KAAK,CAAC;IAC5C;IACA,OAAOQ,MAAM;EACf;EACA,OAAOR,KAAK;AACd;AAEe,SAAAkB,SAAalB,KAAQ,EAAK;EACvC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK;EAOpC;IACL,IAAI;MACF,OAAOD,SAAS,CAACC,KAAK,EAAE,IAAImB,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAOC,eAAe,CAACrB,KAAK,CAAC;IAC/B;EACF;AACF;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/generate.js":{"lineLengths":[13,0,46,13,3,31,30,45,35,16,4,14,1,23,43,28,16,4,14,1,42,43,9,9,8,9,12,11,9,17,11,81,21,39,35,13,25,17,30,89,55,7,5,3,13,29,65,36,24,44,228,5,10,75,3,7,21,38,13,27,46,10,20,21,105,14,31,7,5,3,67,79,3,37,21,3,10,15,13,4,1,7,0,36,0],"data":{"version":3,"names":["_convertSourceMap","data","require","_generator","_mergeMap","generateCode","pluginPasses","file","opts","ast","code","inputMap","generatorOpts","inputSourceMap","toObject","results","plugins","plugin","generatorOverride","result","generate","undefined","push","length","then","Error","outputCode","decodedMap","outputMap","map","__mergedMap","Object","assign","mergeSourceMap","sourceFileName","sourceMaps","convertSourceMap","fromObject","toComment"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/file/generate.ts"],"sourcesContent":["import type { PluginPasses } from \"../../config/index.ts\";\nimport convertSourceMap from \"convert-source-map\";\nimport type { GeneratorResult } from \"@babel/generator\";\nimport generate from \"@babel/generator\";\n\nimport type File from \"./file.ts\";\nimport mergeSourceMap from \"./merge-map.ts\";\n\nexport default function generateCode(\n  pluginPasses: PluginPasses,\n  file: File,\n): {\n  outputCode: string;\n  outputMap: GeneratorResult[\"map\"] | null;\n} {\n  const { opts, ast, code, inputMap } = file;\n  const { generatorOpts } = opts;\n\n  generatorOpts.inputSourceMap = inputMap?.toObject();\n\n  const results = [];\n  for (const plugins of pluginPasses) {\n    for (const plugin of plugins) {\n      const { generatorOverride } = plugin;\n      if (generatorOverride) {\n        const result = generatorOverride(ast, generatorOpts, code, generate);\n\n        if (result !== undefined) results.push(result);\n      }\n    }\n  }\n\n  let result;\n  if (results.length === 0) {\n    result = generate(ast, generatorOpts, code);\n  } else if (results.length === 1) {\n    result = results[0];\n\n    if (typeof result.then === \"function\") {\n      throw new Error(\n        `You appear to be using an async codegen plugin, ` +\n          `which your current version of Babel does not support. ` +\n          `If you're using a published plugin, ` +\n          `you may need to upgrade your @babel/core version.`,\n      );\n    }\n  } else {\n    throw new Error(\"More than one plugin attempted to override codegen.\");\n  }\n\n  // Decoded maps are faster to merge, so we attempt to get use the decodedMap\n  // first. But to preserve backwards compat with older Generator, we'll fall\n  // back to the encoded map.\n  let { code: outputCode, decodedMap: outputMap = result.map } = result;\n\n  // For backwards compat.\n  if (result.__mergedMap) {\n    /**\n     * @see mergeSourceMap\n     */\n    outputMap = { ...result.map };\n  } else {\n    if (outputMap) {\n      if (inputMap) {\n        // mergeSourceMap returns an encoded map\n        outputMap = mergeSourceMap(\n          inputMap.toObject(),\n          outputMap,\n          generatorOpts.sourceFileName,\n        );\n      } else {\n        // We cannot output a decoded map, so retrieve the encoded form. Because\n        // the decoded form is free, it's fine to prioritize decoded first.\n        outputMap = result.map;\n      }\n    }\n  }\n\n  if (opts.sourceMaps === \"inline\" || opts.sourceMaps === \"both\") {\n    outputCode += \"\\n\" + convertSourceMap.fromObject(outputMap).toComment();\n  }\n\n  if (opts.sourceMaps === \"inline\") {\n    outputMap = null;\n  }\n\n  return { outputCode, outputMap };\n}\n"],"mappings":";;;;;;AACA,SAAAA,kBAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,iBAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAE,WAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,UAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,IAAAG,SAAA,GAAAF,OAAA;AAEe,SAASG,YAAYA,CAClCC,YAA0B,EAC1BC,IAAU,EAIV;EACA,MAAM;IAAEC,IAAI;IAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGJ,IAAI;EAC1C,MAAM;IAAEK;EAAc,CAAC,GAAGJ,IAAI;EAE9BI,aAAa,CAACC,cAAc,GAAGF,QAAQ,oBAARA,QAAQ,CAAEG,QAAQ,CAAC,CAAC;EAEnD,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAK,MAAMC,OAAO,IAAIV,YAAY,EAAE;IAClC,KAAK,MAAMW,MAAM,IAAID,OAAO,EAAE;MAC5B,MAAM;QAAEE;MAAkB,CAAC,GAAGD,MAAM;MACpC,IAAIC,iBAAiB,EAAE;QACrB,MAAMC,MAAM,GAAGD,iBAAiB,CAACT,GAAG,EAAEG,aAAa,EAAEF,IAAI,EAAEU,oBAAQ,CAAC;QAEpE,IAAID,MAAM,KAAKE,SAAS,EAAEN,OAAO,CAACO,IAAI,CAACH,MAAM,CAAC;MAChD;IACF;EACF;EAEA,IAAIA,MAAM;EACV,IAAIJ,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;IACxBJ,MAAM,GAAG,IAAAC,oBAAQ,EAACX,GAAG,EAAEG,aAAa,EAAEF,IAAI,CAAC;EAC7C,CAAC,MAAM,IAAIK,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;IAC/BJ,MAAM,GAAGJ,OAAO,CAAC,CAAC,CAAC;IAEnB,IAAI,OAAOI,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;MACrC,MAAM,IAAIC,KAAK,CACb,kDAAkD,GAChD,wDAAwD,GACxD,sCAAsC,GACtC,mDACJ,CAAC;IACH;EACF,CAAC,MAAM;IACL,MAAM,IAAIA,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAKA,IAAI;IAAEf,IAAI,EAAEgB,UAAU;IAAEC,UAAU,EAAEC,SAAS,GAAGT,MAAM,CAACU;EAAI,CAAC,GAAGV,MAAM;EAGrE,IAAIA,MAAM,CAACW,WAAW,EAAE;IAItBF,SAAS,GAAAG,MAAA,CAAAC,MAAA,KAAQb,MAAM,CAACU,GAAG,CAAE;EAC/B,CAAC,MAAM;IACL,IAAID,SAAS,EAAE;MACb,IAAIjB,QAAQ,EAAE;QAEZiB,SAAS,GAAG,IAAAK,iBAAc,EACxBtB,QAAQ,CAACG,QAAQ,CAAC,CAAC,EACnBc,SAAS,EACThB,aAAa,CAACsB,cAChB,CAAC;MACH,CAAC,MAAM;QAGLN,SAAS,GAAGT,MAAM,CAACU,GAAG;MACxB;IACF;EACF;EAEA,IAAIrB,IAAI,CAAC2B,UAAU,KAAK,QAAQ,IAAI3B,IAAI,CAAC2B,UAAU,KAAK,MAAM,EAAE;IAC9DT,UAAU,IAAI,IAAI,GAAGU,kBAAeA,CAAC,CAACC,UAAU,CAACT,SAAS,CAAC,CAACU,SAAS,CAAC,CAAC;EACzE;EAEA,IAAI9B,IAAI,CAAC2B,UAAU,KAAK,QAAQ,EAAE;IAChCP,SAAS,GAAG,IAAI;EAClB;EAEA,OAAO;IAAEF,UAAU;IAAEE;EAAU,CAAC;AAClC;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transformation/file/merge-map.js":{"lineLengths":[13,0,46,13,3,33,23,48,28,16,4,14,1,56,52,20,58,33,19,22,32,5,16,5,48,44,3,35,1,24,33,20,5,1,7,0,37,0],"data":{"version":3,"names":["_remapping","data","require","mergeSourceMap","inputMap","map","sourceFileName","source","replace","found","result","remapping","rootless","s","ctx","sourceRoot","Object","assign"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transformation/file/merge-map.ts"],"sourcesContent":["type SourceMap = any;\nimport remapping from \"@ampproject/remapping\";\n\nexport default function mergeSourceMap(\n  inputMap: SourceMap,\n  map: SourceMap,\n  sourceFileName: string,\n): SourceMap {\n  // On win32 machines, the sourceFileName uses backslash paths like\n  // `C:\\foo\\bar.js`. But sourcemaps are always posix paths, so we need to\n  // normalize to regular slashes before we can merge (else we won't find the\n  // source associated with our input map).\n  // This mirrors code done while generating the output map at\n  // https://github.com/babel/babel/blob/5c2fcadc9ae34fd20dd72b1111d5cf50476d700d/packages/babel-generator/src/source-map.ts#L102\n  const source = sourceFileName.replace(/\\\\/g, \"/\");\n\n  // Prevent an infinite recursion if one of the input map's sources has the\n  // same resolved path as the input map. In the case, it would keep find the\n  // input map, then get it's sources which will include a path like the input\n  // map, on and on.\n  let found = false;\n  const result = remapping(rootless(map), (s, ctx) => {\n    if (s === source && !found) {\n      found = true;\n      // We empty the source location, which will prevent the sourcemap from\n      // becoming relative to the input's location. Eg, if we're transforming a\n      // file 'foo/bar.js', and it is a transformation of a `baz.js` file in the\n      // same directory, the expected output is just `baz.js`. Without this step,\n      // it would become `foo/baz.js`.\n      ctx.source = \"\";\n\n      return rootless(inputMap);\n    }\n\n    return null;\n  });\n\n  if (typeof inputMap.sourceRoot === \"string\") {\n    result.sourceRoot = inputMap.sourceRoot;\n  }\n\n  // remapping returns a SourceMap class type, but this breaks code downstream in\n  // @babel/traverse and @babel/types that relies on data being plain objects.\n  // When it encounters the sourcemap type it outputs a \"don't know how to turn\n  // this value into a node\" error. As a result, we are converting the merged\n  // sourcemap to a plain js object.\n  return { ...result };\n}\n\nfunction rootless(map: SourceMap): SourceMap {\n  return {\n    ...map,\n\n    // This is a bit hack. Remapping will create absolute sources in our\n    // sourcemap, but we want to maintain sources relative to the sourceRoot.\n    // We'll re-add the sourceRoot after remapping.\n    sourceRoot: null,\n  };\n}\n"],"mappings":";;;;;;AACA,SAAAA,WAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,UAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEe,SAASE,cAAcA,CACpCC,QAAmB,EACnBC,GAAc,EACdC,cAAsB,EACX;EAOX,MAAMC,MAAM,GAAGD,cAAc,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EAMjD,IAAIC,KAAK,GAAG,KAAK;EACjB,MAAMC,MAAM,GAAGC,WAAQA,CAAC,CAACC,QAAQ,CAACP,GAAG,CAAC,EAAE,CAACQ,CAAC,EAAEC,GAAG,KAAK;IAClD,IAAID,CAAC,KAAKN,MAAM,IAAI,CAACE,KAAK,EAAE;MAC1BA,KAAK,GAAG,IAAI;MAMZK,GAAG,CAACP,MAAM,GAAG,EAAE;MAEf,OAAOK,QAAQ,CAACR,QAAQ,CAAC;IAC3B;IAEA,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,IAAI,OAAOA,QAAQ,CAACW,UAAU,KAAK,QAAQ,EAAE;IAC3CL,MAAM,CAACK,UAAU,GAAGX,QAAQ,CAACW,UAAU;EACzC;EAOA,OAAAC,MAAA,CAAAC,MAAA,KAAYP,MAAM;AACpB;AAEA,SAASE,QAAQA,CAACP,GAAc,EAAa;EAC3C,OAAAW,MAAA,CAAAC,MAAA,KACKZ,GAAG;IAKNU,UAAU,EAAE;EAAI;AAEpB;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/import.cjs":{"lineLengths":[45,26,2,7,0,35,0],"data":{"version":3,"names":["module","exports","import_","filepath"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/import.cjs"],"sourcesContent":["// We keep this in a separate file so that in older node versions, where\n// import() isn't supported, we can try/catch around the require() call\n// when loading this file.\n\nmodule.exports = function import_(filepath) {\n  return import(filepath);\n};\n"],"mappings":"AAIAA,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,QAAQ,EAAE;EAC1C,OAAO,OAAOA,QAAQ,CAAC;AACzB,CAAC;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/config/files/plugins.js":{"lineLengths":[13,0,46,13,3,32,32,55,19,32,24,16,4,14,1,18,31,23,16,4,14,1,53,48,17,30,22,16,4,14,1,72,18,16,29,21,16,4,14,1,61,28,70,70,61,61,92,92,52,91,91,37,9,13,10,65,65,52,10,13,9,4,1,37,9,13,10,65,65,52,10,13,9,4,1,38,44,37,330,1,49,55,9,10,9,29,27,53,57,82,3,63,58,3,63,59,85,3,26,80,77,62,5,3,22,62,67,65,68,68,31,2,14,1,41,7,18,14,20,169,20,38,66,26,56,38,18,16,26,10,8,12,14,20,34,8,5,19,12,12,17,6,3,1,44,7,12,18,57,6,19,12,12,17,6,3,1,65,51,22,21,57,3,10,22,23,4,1,64,109,51,22,21,62,3,10,19,50,4,1,67,49,66,3,7,75,52,89,32,9,5,20,15,9,68,18,49,51,14,5,3,1,1,34,1,45,3,71,283,5,3,7,5,32,5,5,391,5,17,72,14,13,5,35,5,3,1,7,0,35,0],"data":{"version":3,"names":["_debug","data","require","_path","_async","_moduleTypes","_url","_importMetaResolve","_fs","debug","buildDebug","EXACT_RE","BABEL_PLUGIN_PREFIX_RE","BABEL_PRESET_PREFIX_RE","BABEL_PLUGIN_ORG_RE","BABEL_PRESET_ORG_RE","OTHER_PLUGIN_ORG_RE","OTHER_PRESET_ORG_RE","OTHER_ORG_DEFAULT_RE","resolvePlugin","exports","resolveStandardizedName","bind","resolvePreset","loadPlugin","name","dirname","filepath","loader","isAsync","value","requireModule","loadPreset","standardizeName","type","path","isAbsolute","isPreset","replace","resolveAlternativesHelper","standardizedName","error","code","message","oppositeType","transformName","tryRequireResolve","id","v","w","split","process","versions","node","resolve","r","paths","b","M","f","_findPath","_nodeModulePaths","concat","Error","tryImportMetaResolve","options","importMetaResolve","resolveStandardizedNameForRequire","it","res","next","done","resolveStandardizedNameForImport","parentUrl","pathToFileURL","join","href","fileURLToPath","allowAsync","supportsESM","resolved","existsSync","Object","assign","e","e2","LOADING_MODULES","Set","has","add","loadCodeDefault","err","delete"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/config/files/plugins.ts"],"sourcesContent":["/**\n * This file handles all logic for converting string-based configuration references into loaded objects.\n */\n\nimport buildDebug from \"debug\";\nimport path from \"node:path\";\nimport type { Handler } from \"gensync\";\nimport { isAsync } from \"../../gensync-utils/async.ts\";\nimport loadCodeDefault, { supportsESM } from \"./module-types.ts\";\nimport { fileURLToPath, pathToFileURL } from \"node:url\";\n\nimport { resolve as importMetaResolve } from \"../../vendor/import-meta-resolve.js\";\n\nimport { createRequire } from \"node:module\";\nimport { existsSync } from \"node:fs\";\nconst require = createRequire(import.meta.url);\n\nconst debug = buildDebug(\"babel:config:loading:files:plugins\");\n\nconst EXACT_RE = /^module:/;\nconst BABEL_PLUGIN_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-plugin-)/;\nconst BABEL_PRESET_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-preset-)/;\nconst BABEL_PLUGIN_ORG_RE = /^(@babel\\/)(?!plugin-|[^/]+\\/)/;\nconst BABEL_PRESET_ORG_RE = /^(@babel\\/)(?!preset-|[^/]+\\/)/;\nconst OTHER_PLUGIN_ORG_RE =\n  /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-plugin(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_PRESET_ORG_RE =\n  /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-preset(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_ORG_DEFAULT_RE = /^(@(?!babel$)[^/]+)$/;\n\nexport const resolvePlugin = resolveStandardizedName.bind(null, \"plugin\");\nexport const resolvePreset = resolveStandardizedName.bind(null, \"preset\");\n\nexport function* loadPlugin(\n  name: string,\n  dirname: string,\n): Handler<{ filepath: string; value: unknown }> {\n  const { filepath, loader } = resolvePlugin(name, dirname, yield* isAsync());\n\n  const value = yield* requireModule(\"plugin\", loader, filepath);\n  debug(\"Loaded plugin %o from %o.\", name, dirname);\n\n  return { filepath, value };\n}\n\nexport function* loadPreset(\n  name: string,\n  dirname: string,\n): Handler<{ filepath: string; value: unknown }> {\n  const { filepath, loader } = resolvePreset(name, dirname, yield* isAsync());\n\n  const value = yield* requireModule(\"preset\", loader, filepath);\n\n  debug(\"Loaded preset %o from %o.\", name, dirname);\n\n  return { filepath, value };\n}\n\nfunction standardizeName(type: \"plugin\" | \"preset\", name: string) {\n  // Let absolute and relative paths through.\n  if (path.isAbsolute(name)) return name;\n\n  const isPreset = type === \"preset\";\n\n  return (\n    name\n      // foo -> babel-preset-foo\n      .replace(\n        isPreset ? BABEL_PRESET_PREFIX_RE : BABEL_PLUGIN_PREFIX_RE,\n        `babel-${type}-`,\n      )\n      // @babel/es2015 -> @babel/preset-es2015\n      .replace(\n        isPreset ? BABEL_PRESET_ORG_RE : BABEL_PLUGIN_ORG_RE,\n        `$1${type}-`,\n      )\n      // @foo/mypreset -> @foo/babel-preset-mypreset\n      .replace(\n        isPreset ? OTHER_PRESET_ORG_RE : OTHER_PLUGIN_ORG_RE,\n        `$1babel-${type}-`,\n      )\n      // @foo -> @foo/babel-preset\n      .replace(OTHER_ORG_DEFAULT_RE, `$1/babel-${type}`)\n      // module:mypreset -> mypreset\n      .replace(EXACT_RE, \"\")\n  );\n}\n\ntype Result<T> = { error: Error; value: null } | { error: null; value: T };\n\nfunction* resolveAlternativesHelper(\n  type: \"plugin\" | \"preset\",\n  name: string,\n): Iterator<string, string, Result<string>> {\n  const standardizedName = standardizeName(type, name);\n  const { error, value } = yield standardizedName;\n  if (!error) return value;\n\n  // @ts-expect-error code may not index error\n  if (error.code !== \"MODULE_NOT_FOUND\") throw error;\n\n  if (standardizedName !== name && !(yield name).error) {\n    error.message += `\\n- If you want to resolve \"${name}\", use \"module:${name}\"`;\n  }\n\n  if (!(yield standardizeName(type, \"@babel/\" + name)).error) {\n    error.message += `\\n- Did you mean \"@babel/${name}\"?`;\n  }\n\n  const oppositeType = type === \"preset\" ? \"plugin\" : \"preset\";\n  if (!(yield standardizeName(oppositeType, name)).error) {\n    error.message += `\\n- Did you accidentally pass a ${oppositeType} as a ${type}?`;\n  }\n\n  if (type === \"plugin\") {\n    const transformName = standardizedName.replace(\"-proposal-\", \"-transform-\");\n    if (transformName !== standardizedName && !(yield transformName).error) {\n      error.message += `\\n- Did you mean \"${transformName}\"?`;\n    }\n  }\n\n  error.message += `\\n\nMake sure that all the Babel plugins and presets you are using\nare defined as dependencies or devDependencies in your package.json\nfile. It's possible that the missing plugin is loaded by a preset\nyou are using that forgot to add the plugin to its dependencies: you\ncan workaround this problem by explicitly adding the missing package\nto your top-level package.json.\n`;\n\n  throw error;\n}\n\nfunction tryRequireResolve(\n  id: string,\n  dirname: string | undefined,\n): Result<string> {\n  try {\n    if (dirname) {\n      return { error: null, value: require.resolve(id, { paths: [dirname] }) };\n    } else {\n      return { error: null, value: require.resolve(id) };\n    }\n  } catch (error) {\n    return { error, value: null };\n  }\n}\n\nfunction tryImportMetaResolve(\n  id: Parameters<typeof importMetaResolve>[0],\n  options: Parameters<typeof importMetaResolve>[1],\n): Result<string> {\n  try {\n    return { error: null, value: importMetaResolve(id, options) };\n  } catch (error) {\n    return { error, value: null };\n  }\n}\n\nfunction resolveStandardizedNameForRequire(\n  type: \"plugin\" | \"preset\",\n  name: string,\n  dirname: string,\n) {\n  const it = resolveAlternativesHelper(type, name);\n  let res = it.next();\n  while (!res.done) {\n    res = it.next(tryRequireResolve(res.value, dirname));\n  }\n  return { loader: \"require\" as const, filepath: res.value };\n}\nfunction resolveStandardizedNameForImport(\n  type: \"plugin\" | \"preset\",\n  name: string,\n  dirname: string,\n) {\n  const parentUrl = pathToFileURL(\n    path.join(dirname, \"./babel-virtual-resolve-base.js\"),\n  ).href;\n\n  const it = resolveAlternativesHelper(type, name);\n  let res = it.next();\n  while (!res.done) {\n    res = it.next(tryImportMetaResolve(res.value, parentUrl));\n  }\n  return { loader: \"auto\" as const, filepath: fileURLToPath(res.value) };\n}\n\nfunction resolveStandardizedName(\n  type: \"plugin\" | \"preset\",\n  name: string,\n  dirname: string,\n  allowAsync: boolean,\n) {\n  if (!supportsESM || !allowAsync) {\n    return resolveStandardizedNameForRequire(type, name, dirname);\n  }\n\n  try {\n    const resolved = resolveStandardizedNameForImport(type, name, dirname);\n    // import-meta-resolve 4.0 does not throw if the module is not found.\n    if (!existsSync(resolved.filepath)) {\n      throw Object.assign(\n        new Error(`Could not resolve \"${name}\" in file ${dirname}.`),\n        { type: \"MODULE_NOT_FOUND\" },\n      );\n    }\n    return resolved;\n  } catch (e) {\n    try {\n      return resolveStandardizedNameForRequire(type, name, dirname);\n    } catch (e2) {\n      if (e.type === \"MODULE_NOT_FOUND\") throw e;\n      if (e2.type === \"MODULE_NOT_FOUND\") throw e2;\n      throw e;\n    }\n  }\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  // eslint-disable-next-line no-var\n  var LOADING_MODULES = new Set();\n}\nfunction* requireModule(\n  type: string,\n  loader: \"require\" | \"auto\",\n  name: string,\n): Handler<unknown> {\n  if (!process.env.BABEL_8_BREAKING) {\n    if (!(yield* isAsync()) && LOADING_MODULES.has(name)) {\n      throw new Error(\n        `Reentrant ${type} detected trying to load \"${name}\". This module is not ignored ` +\n          \"and is trying to load itself while compiling itself, leading to a dependency cycle. \" +\n          'We recommend adding it to your \"ignore\" list in your babelrc, or to a .babelignore.',\n      );\n    }\n  }\n\n  try {\n    if (!process.env.BABEL_8_BREAKING) {\n      LOADING_MODULES.add(name);\n    }\n\n    if (process.env.BABEL_8_BREAKING) {\n      return yield* loadCodeDefault(\n        name,\n        loader,\n        `You appear to be using a native ECMAScript module ${type}, ` +\n          \"which is only supported when running Babel asynchronously \" +\n          \"or when using the Node.js `--experimental-require-module` flag.\",\n        `You appear to be using a ${type} that contains top-level await, ` +\n          \"which is only supported when running Babel asynchronously.\",\n      );\n    } else {\n      return yield* loadCodeDefault(\n        name,\n        loader,\n        `You appear to be using a native ECMAScript module ${type}, ` +\n          \"which is only supported when running Babel asynchronously \" +\n          \"or when using the Node.js `--experimental-require-module` flag.\",\n        `You appear to be using a ${type} that contains top-level await, ` +\n          \"which is only supported when running Babel asynchronously.\",\n        // For backward compatibility, we need to support malformed presets\n        // defined as separate named exports rather than a single default\n        // export.\n        // See packages/babel-core/test/fixtures/option-manager/presets/es2015_named.js\n        // @ts-ignore(Babel 7 vs Babel 8) This param has been removed\n        true,\n      );\n    }\n  } catch (err) {\n    err.message = `[BABEL]: ${err.message} (While processing: ${name})`;\n    throw err;\n  } finally {\n    if (!process.env.BABEL_8_BREAKING) {\n      LOADING_MODULES.delete(name);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/vendor/import-meta-resolve.js":{"lineLengths":[13,0,46,13,3,38,26,20,33,25,16,4,14,1,16,60,21,16,4,14,1,21,34,26,16,4,14,1,17,30,22,16,4,14,1,18,31,23,16,4,14,1,20,33,25,16,4,14,1,15,29,20,16,4,14,1,18,31,23,16,4,14,1,204,579,32,41,120,17,42,125,1,27,46,24,94,65,33,26,3,23,35,26,10,62,36,3,24,19,23,19,33,91,28,38,50,88,24,12,28,5,3,29,40,21,26,31,5,3,25,92,68,3,29,63,44,3,25,27,53,12,64,31,5,3,59,17,14,121,88,14,103,115,10,144,112,20,34,225,3,254,10,100,90,10,135,120,150,14,128,127,137,10,169,209,99,61,14,108,46,31,48,3,60,66,14,47,27,49,1,43,19,37,40,68,29,72,55,36,16,23,26,23,26,8,17,17,58,10,26,23,26,7,7,35,21,17,3,1,43,7,52,19,5,22,73,27,38,3,110,1,43,59,50,17,5,25,1,66,69,34,48,53,3,33,77,15,3,44,36,69,38,180,52,3,30,25,56,179,46,30,57,1,39,46,25,3,50,36,3,34,54,56,5,43,15,9,3,47,17,5,30,47,3,47,1,43,7,58,10,24,25,7,11,4,39,17,20,3,13,7,84,19,28,38,22,5,3,18,18,24,20,20,17,23,22,4,29,15,9,34,22,27,163,26,18,5,25,83,32,5,83,32,5,51,38,5,51,38,5,108,32,5,3,30,16,1,42,57,16,52,64,12,5,75,25,7,31,27,5,46,64,66,12,5,3,68,10,31,18,16,4,1,30,41,1,7,28,10,41,28,18,21,18,18,18,2,29,106,49,14,1,26,18,39,39,39,40,13,21,3,2,46,9,11,86,28,1,23,32,30,19,45,22,16,5,22,81,5,3,12,1,67,29,24,44,33,25,5,22,3,21,44,63,24,5,20,3,43,28,21,21,3,50,56,1,41,54,32,57,16,3,64,1,7,23,10,61,59,33,28,1,36,32,1,39,74,37,85,5,31,3,35,1,70,7,32,31,29,29,23,33,32,29,33,10,30,199,208,43,27,41,41,36,106,33,11,3,62,77,423,1,70,33,11,3,53,24,5,34,54,87,51,14,306,62,349,3,1,28,7,37,23,1,26,42,25,5,52,66,1,65,12,41,65,40,225,15,32,57,35,24,5,16,82,19,5,3,63,13,30,55,33,22,3,14,80,17,3,132,1,63,63,146,3,15,7,51,19,24,43,29,7,44,25,7,16,3,84,37,92,33,16,3,34,121,33,16,3,26,51,11,13,10,17,93,29,25,3,18,1,60,172,1,57,159,1,78,175,99,1,80,106,174,1,125,145,33,75,24,11,33,21,27,19,129,72,7,5,78,3,59,71,23,86,121,108,7,12,80,5,3,60,41,69,119,38,51,82,63,23,121,109,7,12,74,5,3,16,107,3,45,1,28,32,43,50,1,128,35,135,3,30,30,45,22,15,37,39,24,11,146,23,32,34,70,20,7,48,35,29,17,7,27,5,64,18,5,24,3,54,52,15,31,26,30,145,7,5,11,31,26,67,46,159,50,29,7,5,16,3,24,16,3,85,1,71,73,68,51,33,12,20,36,31,67,20,53,66,295,5,3,28,1,69,33,11,3,56,66,54,322,1,97,38,69,15,18,6,3,108,43,130,64,66,5,25,3,21,28,51,13,29,24,42,87,41,82,7,57,175,24,109,7,5,3,18,38,161,64,66,5,25,3,62,1,34,39,39,74,74,43,42,37,38,37,36,11,1,56,68,68,90,3,21,52,29,72,42,18,59,130,68,31,9,14,27,34,57,19,35,30,48,73,63,161,30,95,13,11,9,24,44,143,70,33,11,9,7,5,3,53,1,44,46,30,23,29,20,58,31,12,66,5,3,93,59,29,3,26,118,3,94,10,16,19,12,4,1,54,53,49,3,9,16,19,12,40,52,29,78,118,100,5,3,97,66,15,6,60,39,33,157,66,15,5,49,11,15,7,80,100,5,33,68,5,60,55,86,1,41,29,68,83,18,5,3,15,1,61,37,40,40,1,71,33,38,75,15,59,9,51,22,73,27,18,5,60,66,10,9,45,22,70,75,29,20,7,61,5,3,62,38,20,3,62,1,70,24,52,68,63,73,90,133,9,16,60,10,7,57,131,7,130,5,3,1,22,191,1,45,32,11,3,59,84,3,1,50,9,13,14,75,37,22,18,9,52,25,3,13,15,7,141,31,31,14,25,20,8,5,23,82,38,41,31,3,29,12,20,6,3,53,18,4,58,87,10,18,48,15,6,4,1,37,16,88,3,7,38,23,11,19,28,142,27,5,16,3,1,7,0,47,0],"data":{"version":3,"names":["_assert","data","require","_fs","_interopRequireWildcard","_process","_url","_path","_module","_v","_util","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","own$1","classRegExp","kTypes","Set","codes","formatList","array","type","length","join","slice","messages","Map","nodeInternalPrefix","userStackTraceLimit","ERR_INVALID_ARG_TYPE","createError","name","expected","actual","assert","Array","isArray","message","endsWith","includes","types","instances","other","value","push","toLowerCase","exec","pos","indexOf","determineSpecificType","TypeError","ERR_INVALID_MODULE_SPECIFIER","request","reason","base","undefined","ERR_INVALID_PACKAGE_CONFIG","path","Error","ERR_INVALID_PACKAGE_TARGET","packagePath","key","target","isImport","relatedError","startsWith","JSON","stringify","ERR_MODULE_NOT_FOUND","exactUrl","ERR_NETWORK_IMPORT_DISALLOWED","ERR_PACKAGE_IMPORT_NOT_DEFINED","specifier","ERR_PACKAGE_PATH_NOT_EXPORTED","subpath","ERR_UNSUPPORTED_DIR_IMPORT","ERR_UNSUPPORTED_RESOLVE_REQUEST","ERR_UNKNOWN_FILE_EXTENSION","extension","ERR_INVALID_ARG_VALUE","inspected","inspect","sym","constructor","makeNodeErrorWithCode","Base","NodeError","parameters","limit","stackTraceLimit","isErrorStackTraceLimitWritable","error","getMessage","defineProperties","enumerable","writable","configurable","toString","captureLargerStackTrace","code","v8","startupSnapshot","isBuildingSnapshot","_unused","desc","isExtensible","hideStackFrames","wrappedFunction","hidden","stackTraceLimitIsWritable","Number","POSITIVE_INFINITY","captureStackTrace","self","Reflect","apply","regex","expectedLength","unshift","format","String","depth","colors","hasOwnProperty$1","ERR_INVALID_PACKAGE_CONFIG$1","cache","read","jsonPath","existing","string","fs","readFileSync","toNamespacedPath","exception","result","exists","pjsonPath","main","exports","imports","parsed","parse","error_","cause","fileURLToPath","getPackageScopeConfig","resolved","packageJSONUrl","URL","packageJSONPath","pathname","packageConfig","lastPackageJSONUrl","getPackageType","url","extensionFormatMap","mimeToFormat","mime","test","protocolHandlers","getDataProtocolModuleFormat","getFileProtocolModuleFormat","getHttpProtocolModuleFormat","node:","extname","index","codePointAt","_context","ignoreErrors","packageType","filepath","defaultGetFormatWithoutErrors","context","protocol","DEFAULT_CONDITIONS","freeze","DEFAULT_CONDITIONS_SET","getDefaultConditions","getDefaultConditionsSet","getConditionsSet","conditions","RegExpPrototypeSymbolReplace","RegExp","prototype","Symbol","replace","own","invalidSegmentRegEx","deprecatedInvalidSegmentRegEx","invalidPackageNameRegEx","patternRegEx","encodedSeparatorRegEx","emittedPackageWarnings","doubleSlashRegEx","emitInvalidSegmentDeprecation","match","packageJsonUrl","internal","isTarget","process","noDeprecation","double","emitWarning","emitLegacyIndexDeprecation","parentURL","href","urlPath","URL$1","basePath","resolve","tryStatSync","statSync","_unused2","fileExists","stats","throwIfNoEntry","isFile","legacyMainResolve","guess","tries","finalizeResolution","preserveSymlinks","filePath","isDirectory","real","realpathSync","search","hash","pathToFileURL","sep","importNotDefined","exportsNotFound","throwInvalidSubpath","invalidPackageTarget","resolvePackageTargetString","pattern","isPathMap","isURL","_unused3","exportTarget","packageResolve","resolvedTarget","resolvedPath","isArrayIndex","keyNumber","resolvePackageTarget","packageSubpath","targetList","lastException","targetItem","resolveResult","keys","getOwnPropertyNames","conditionalTarget","isConditionalExportsMainSugar","isConditionalSugar","keyIndex","currentIsConditionalSugar","emitTrailingSlashPatternDeprecation","pjsonUrl","add","packageExportsResolve","bestMatch","bestMatchSubpath","patternIndex","patternTrailer","patternKeyCompare","lastIndexOf","b","aPatternIndex","bPatternIndex","baseLengthA","baseLengthB","packageImportsResolve","parsePackageName","separatorIndex","validPackageName","isScoped","packageName","builtinModules","packageJsonPath","lastPath","stat","isRelativeSpecifier","shouldBeTreatedAsRelativeOrAbsolutePath","moduleResolve","isData","isRemote","checkIfDisallowedImport","parsedParentURL","parentProtocol","parsedProtocol","Boolean","throwIfInvalidParentURL","defaultResolve","_unused4","_unused5","maybeReturn","parent"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/vendor/import-meta-resolve.js"],"sourcesContent":["\n/****************************************************************************\\\n *                         NOTE FROM BABEL AUTHORS                          *\n * This file is inlined from https://github.com/wooorm/import-meta-resolve, *\n * because we need to compile it to CommonJS.                               *\n\\****************************************************************************/\n\n/*\n(The MIT License)\n\nCopyright (c) 2021 Titus Wormer <mailto:tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n---\n\nThis is a derivative work based on:\n<https://github.com/nodejs/node>.\nWhich is licensed:\n\n\"\"\"\nCopyright Node.js contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\"\"\"\n\nThis license applies to parts of Node.js originating from the\nhttps://github.com/joyent/node repository:\n\n\"\"\"\nCopyright Joyent, Inc. and other Node contributors. All rights reserved.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\"\"\"\n*/\n\nimport assert from 'assert';\nimport fs, { realpathSync, statSync } from 'fs';\nimport process from 'process';\nimport { fileURLToPath, URL as URL$1, pathToFileURL } from 'url';\nimport path from 'path';\nimport { builtinModules } from 'module';\nimport v8 from 'v8';\nimport { format, inspect } from 'util';\n\n/**\n * @typedef ErrnoExceptionFields\n * @property {number | undefined} [errnode]\n * @property {string | undefined} [code]\n * @property {string | undefined} [path]\n * @property {string | undefined} [syscall]\n * @property {string | undefined} [url]\n *\n * @typedef {Error & ErrnoExceptionFields} ErrnoException\n */\n\n\nconst own$1 = {}.hasOwnProperty;\n\nconst classRegExp = /^([A-Z][a-z\\d]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = new Set([\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]);\n\nconst codes = {};\n\n/**\n * Create a list string in the form like 'A and B' or 'A, B, ..., and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n *\n * @param {Array<string>} array\n *   An array of strings.\n * @param {string} [type]\n *   The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array, type = 'and') {\n  return array.length < 3\n    ? array.join(` ${type} `)\n    : `${array.slice(0, -1).join(', ')}, ${type} ${array[array.length - 1]}`\n}\n\n/** @type {Map<string, MessageFunction | string>} */\nconst messages = new Map();\nconst nodeInternalPrefix = '__node_internal_';\n/** @type {number} */\nlet userStackTraceLimit;\n\ncodes.ERR_INVALID_ARG_TYPE = createError(\n  'ERR_INVALID_ARG_TYPE',\n  /**\n   * @param {string} name\n   * @param {Array<string> | string} expected\n   * @param {unknown} actual\n   */\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\");\n    if (!Array.isArray(expected)) {\n      expected = [expected];\n    }\n\n    let message = 'The ';\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      message += `${name} `;\n    } else {\n      const type = name.includes('.') ? 'property' : 'argument';\n      message += `\"${name}\" ${type} `;\n    }\n\n    message += 'must be ';\n\n    /** @type {Array<string>} */\n    const types = [];\n    /** @type {Array<string>} */\n    const instances = [];\n    /** @type {Array<string>} */\n    const other = [];\n\n    for (const value of expected) {\n      assert(\n        typeof value === 'string',\n        'All expected entries have to be of type string'\n      );\n\n      if (kTypes.has(value)) {\n        types.push(value.toLowerCase());\n      } else if (classRegExp.exec(value) === null) {\n        assert(\n          value !== 'object',\n          'The value \"object\" should be written as \"Object\"'\n        );\n        other.push(value);\n      } else {\n        instances.push(value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object');\n      if (pos !== -1) {\n        types.slice(pos, 1);\n        instances.push('Object');\n      }\n    }\n\n    if (types.length > 0) {\n      message += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(\n        types,\n        'or'\n      )}`;\n      if (instances.length > 0 || other.length > 0) message += ' or ';\n    }\n\n    if (instances.length > 0) {\n      message += `an instance of ${formatList(instances, 'or')}`;\n      if (other.length > 0) message += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        message += `one of ${formatList(other, 'or')}`;\n      } else {\n        if (other[0].toLowerCase() !== other[0]) message += 'an ';\n        message += `${other[0]}`;\n      }\n    }\n\n    message += `. Received ${determineSpecificType(actual)}`;\n\n    return message\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_MODULE_SPECIFIER = createError(\n  'ERR_INVALID_MODULE_SPECIFIER',\n  /**\n   * @param {string} request\n   * @param {string} reason\n   * @param {string} [base]\n   */\n  (request, reason, base = undefined) => {\n    return `Invalid module \"${request}\" ${reason}${\n      base ? ` imported from ${base}` : ''\n    }`\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_PACKAGE_CONFIG = createError(\n  'ERR_INVALID_PACKAGE_CONFIG',\n  /**\n   * @param {string} path\n   * @param {string} [base]\n   * @param {string} [message]\n   */\n  (path, base, message) => {\n    return `Invalid package config ${path}${\n      base ? ` while importing ${base}` : ''\n    }${message ? `. ${message}` : ''}`\n  },\n  Error\n);\n\ncodes.ERR_INVALID_PACKAGE_TARGET = createError(\n  'ERR_INVALID_PACKAGE_TARGET',\n  /**\n   * @param {string} packagePath\n   * @param {string} key\n   * @param {unknown} target\n   * @param {boolean} [isImport=false]\n   * @param {string} [base]\n   */\n  (packagePath, key, target, isImport = false, base = undefined) => {\n    const relatedError =\n      typeof target === 'string' &&\n      !isImport &&\n      target.length > 0 &&\n      !target.startsWith('./');\n    if (key === '.') {\n      assert(isImport === false);\n      return (\n        `Invalid \"exports\" main target ${JSON.stringify(target)} defined ` +\n        `in the package config ${packagePath}package.json${\n          base ? ` imported from ${base}` : ''\n        }${relatedError ? '; targets must start with \"./\"' : ''}`\n      )\n    }\n\n    return `Invalid \"${\n      isImport ? 'imports' : 'exports'\n    }\" target ${JSON.stringify(\n      target\n    )} defined for '${key}' in the package config ${packagePath}package.json${\n      base ? ` imported from ${base}` : ''\n    }${relatedError ? '; targets must start with \"./\"' : ''}`\n  },\n  Error\n);\n\ncodes.ERR_MODULE_NOT_FOUND = createError(\n  'ERR_MODULE_NOT_FOUND',\n  /**\n   * @param {string} path\n   * @param {string} base\n   * @param {boolean} [exactUrl]\n   */\n  (path, base, exactUrl = false) => {\n    return `Cannot find ${\n      exactUrl ? 'module' : 'package'\n    } '${path}' imported from ${base}`\n  },\n  Error\n);\n\ncodes.ERR_NETWORK_IMPORT_DISALLOWED = createError(\n  'ERR_NETWORK_IMPORT_DISALLOWED',\n  \"import of '%s' by %s is not supported: %s\",\n  Error\n);\n\ncodes.ERR_PACKAGE_IMPORT_NOT_DEFINED = createError(\n  'ERR_PACKAGE_IMPORT_NOT_DEFINED',\n  /**\n   * @param {string} specifier\n   * @param {string} packagePath\n   * @param {string} base\n   */\n  (specifier, packagePath, base) => {\n    return `Package import specifier \"${specifier}\" is not defined${\n      packagePath ? ` in package ${packagePath}package.json` : ''\n    } imported from ${base}`\n  },\n  TypeError\n);\n\ncodes.ERR_PACKAGE_PATH_NOT_EXPORTED = createError(\n  'ERR_PACKAGE_PATH_NOT_EXPORTED',\n  /**\n   * @param {string} packagePath\n   * @param {string} subpath\n   * @param {string} [base]\n   */\n  (packagePath, subpath, base = undefined) => {\n    if (subpath === '.')\n      return `No \"exports\" main defined in ${packagePath}package.json${\n        base ? ` imported from ${base}` : ''\n      }`\n    return `Package subpath '${subpath}' is not defined by \"exports\" in ${packagePath}package.json${\n      base ? ` imported from ${base}` : ''\n    }`\n  },\n  Error\n);\n\ncodes.ERR_UNSUPPORTED_DIR_IMPORT = createError(\n  'ERR_UNSUPPORTED_DIR_IMPORT',\n  \"Directory import '%s' is not supported \" +\n    'resolving ES modules imported from %s',\n  Error\n);\n\ncodes.ERR_UNSUPPORTED_RESOLVE_REQUEST = createError(\n  'ERR_UNSUPPORTED_RESOLVE_REQUEST',\n  'Failed to resolve module specifier \"%s\" from \"%s\": Invalid relative URL or base scheme is not hierarchical.',\n  TypeError\n);\n\ncodes.ERR_UNKNOWN_FILE_EXTENSION = createError(\n  'ERR_UNKNOWN_FILE_EXTENSION',\n  /**\n   * @param {string} extension\n   * @param {string} path\n   */\n  (extension, path) => {\n    return `Unknown file extension \"${extension}\" for ${path}`\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_ARG_VALUE = createError(\n  'ERR_INVALID_ARG_VALUE',\n  /**\n   * @param {string} name\n   * @param {unknown} value\n   * @param {string} [reason='is invalid']\n   */\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value);\n\n    if (inspected.length > 128) {\n      inspected = `${inspected.slice(0, 128)}...`;\n    }\n\n    const type = name.includes('.') ? 'property' : 'argument';\n\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n  // Note: extra classes have been shaken out.\n  // , RangeError\n);\n\n/**\n * Utility function for registering the error codes. Only used here. Exported\n * *only* to allow for testing.\n * @param {string} sym\n * @param {MessageFunction | string} value\n * @param {ErrorConstructor} constructor\n * @returns {new (...parameters: Array<any>) => Error}\n */\nfunction createError(sym, value, constructor) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym, value);\n\n  return makeNodeErrorWithCode(constructor, sym)\n}\n\n/**\n * @param {ErrorConstructor} Base\n * @param {string} key\n * @returns {ErrorConstructor}\n */\nfunction makeNodeErrorWithCode(Base, key) {\n  // @ts-expect-error It’s a Node error.\n  return NodeError\n  /**\n   * @param {Array<unknown>} parameters\n   */\n  function NodeError(...parameters) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key, parameters, error);\n    Object.defineProperties(error, {\n      // Note: no need to implement `kIsNodeError` symbol, would be hard,\n      // probably.\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      toString: {\n        /** @this {Error} */\n        value() {\n          return `${this.name} [${key}]: ${this.message}`\n        },\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n\n    captureLargerStackTrace(error);\n    // @ts-expect-error It’s a Node error.\n    error.code = key;\n    return error\n  }\n}\n\n/**\n * @returns {boolean}\n */\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  try {\n    if (v8.startupSnapshot.isBuildingSnapshot()) {\n      return false\n    }\n  } catch {}\n\n  const desc = Object.getOwnPropertyDescriptor(Error, 'stackTraceLimit');\n  if (desc === undefined) {\n    return Object.isExtensible(Error)\n  }\n\n  return own$1.call(desc, 'writable') && desc.writable !== undefined\n    ? desc.writable\n    : desc.set !== undefined\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...parameters: unknown[]) => unknown} T\n * @param {T} wrappedFunction\n * @returns {T}\n */\nfunction hideStackFrames(wrappedFunction) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + wrappedFunction.name;\n  Object.defineProperty(wrappedFunction, 'name', {value: hidden});\n  return wrappedFunction\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  /**\n   * @param {Error} error\n   * @returns {Error}\n   */\n  // @ts-expect-error: fine\n  function (error) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Number.POSITIVE_INFINITY;\n    }\n\n    Error.captureStackTrace(error);\n\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return error\n  }\n);\n\n/**\n * @param {string} key\n * @param {Array<unknown>} parameters\n * @param {Error} self\n * @returns {string}\n */\nfunction getMessage(key, parameters, self) {\n  const message = messages.get(key);\n  assert(message !== undefined, 'expected `message` to be found');\n\n  if (typeof message === 'function') {\n    assert(\n      message.length <= parameters.length, // Default options do not count.\n      `Code: ${key}; The provided arguments length (${parameters.length}) does not ` +\n        `match the required ones (${message.length}).`\n    );\n    return Reflect.apply(message, self, parameters)\n  }\n\n  const regex = /%[dfijoOs]/g;\n  let expectedLength = 0;\n  while (regex.exec(message) !== null) expectedLength++;\n  assert(\n    expectedLength === parameters.length,\n    `Code: ${key}; The provided arguments length (${parameters.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (parameters.length === 0) return message\n\n  parameters.unshift(message);\n  return Reflect.apply(format, null, parameters)\n}\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {unknown} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null || value === undefined) {\n    return String(value)\n  }\n\n  if (typeof value === 'function' && value.name) {\n    return `function ${value.name}`\n  }\n\n  if (typeof value === 'object') {\n    if (value.constructor && value.constructor.name) {\n      return `an instance of ${value.constructor.name}`\n    }\n\n    return `${inspect(value, {depth: -1})}`\n  }\n\n  let inspected = inspect(value, {colors: false});\n\n  if (inspected.length > 28) {\n    inspected = `${inspected.slice(0, 25)}...`;\n  }\n\n  return `type ${typeof value} (${inspected})`\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/7c3dce0/lib/internal/modules/package_json_reader.js>\n// Last checked on: Apr 29, 2023.\n// Removed the native dependency.\n// Also: no need to cache, we do that in resolve already.\n\n\nconst hasOwnProperty$1 = {}.hasOwnProperty;\n\nconst {ERR_INVALID_PACKAGE_CONFIG: ERR_INVALID_PACKAGE_CONFIG$1} = codes;\n\n/** @type {Map<string, PackageConfig>} */\nconst cache = new Map();\n\n/**\n * @param {string} jsonPath\n * @param {{specifier: URL | string, base?: URL}} options\n * @returns {PackageConfig}\n */\nfunction read(jsonPath, {base, specifier}) {\n  const existing = cache.get(jsonPath);\n\n  if (existing) {\n    return existing\n  }\n\n  /** @type {string | undefined} */\n  let string;\n\n  try {\n    string = fs.readFileSync(path.toNamespacedPath(jsonPath), 'utf8');\n  } catch (error) {\n    const exception = /** @type {ErrnoException} */ (error);\n\n    if (exception.code !== 'ENOENT') {\n      throw exception\n    }\n  }\n\n  /** @type {PackageConfig} */\n  const result = {\n    exists: false,\n    pjsonPath: jsonPath,\n    main: undefined,\n    name: undefined,\n    type: 'none', // Ignore unknown types for forwards compatibility\n    exports: undefined,\n    imports: undefined\n  };\n\n  if (string !== undefined) {\n    /** @type {Record<string, unknown>} */\n    let parsed;\n\n    try {\n      parsed = JSON.parse(string);\n    } catch (error_) {\n      const cause = /** @type {ErrnoException} */ (error_);\n      const error = new ERR_INVALID_PACKAGE_CONFIG$1(\n        jsonPath,\n        (base ? `\"${specifier}\" from ` : '') + fileURLToPath(base || specifier),\n        cause.message\n      );\n      error.cause = cause;\n      throw error\n    }\n\n    result.exists = true;\n\n    if (\n      hasOwnProperty$1.call(parsed, 'name') &&\n      typeof parsed.name === 'string'\n    ) {\n      result.name = parsed.name;\n    }\n\n    if (\n      hasOwnProperty$1.call(parsed, 'main') &&\n      typeof parsed.main === 'string'\n    ) {\n      result.main = parsed.main;\n    }\n\n    if (hasOwnProperty$1.call(parsed, 'exports')) {\n      // @ts-expect-error: assume valid.\n      result.exports = parsed.exports;\n    }\n\n    if (hasOwnProperty$1.call(parsed, 'imports')) {\n      // @ts-expect-error: assume valid.\n      result.imports = parsed.imports;\n    }\n\n    // Ignore unknown types for forwards compatibility\n    if (\n      hasOwnProperty$1.call(parsed, 'type') &&\n      (parsed.type === 'commonjs' || parsed.type === 'module')\n    ) {\n      result.type = parsed.type;\n    }\n  }\n\n  cache.set(jsonPath, result);\n\n  return result\n}\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  // Note: in Node, this is now a native module.\n  let packageJSONUrl = new URL('package.json', resolved);\n\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (packageJSONPath.endsWith('node_modules/package.json')) {\n      break\n    }\n\n    const packageConfig = read(fileURLToPath(packageJSONUrl), {\n      specifier: resolved\n    });\n\n    if (packageConfig.exists) {\n      return packageConfig\n    }\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json', packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check \"/package.json\" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\n      break\n    }\n  }\n\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  // ^^ Note: in Node, this is now a native module.\n\n  return {\n    pjsonPath: packageJSONPath,\n    exists: false,\n    type: 'none'\n  }\n}\n\n/**\n * Returns the package type for a given URL.\n * @param {URL} url - The URL to get the package type for.\n * @returns {PackageType}\n */\nfunction getPackageType(url) {\n  // To do @anonrig: Write a C++ function that returns only \"type\".\n  return getPackageScopeConfig(url).type\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/7c3dce0/lib/internal/modules/esm/get_format.js>\n// Last checked on: Apr 29, 2023.\n\n\nconst {ERR_UNKNOWN_FILE_EXTENSION} = codes;\n\nconst hasOwnProperty = {}.hasOwnProperty;\n\n/** @type {Record<string, string>} */\nconst extensionFormatMap = {\n  // @ts-expect-error: hush.\n  __proto__: null,\n  '.cjs': 'commonjs',\n  '.js': 'module',\n  '.json': 'json',\n  '.mjs': 'module'\n};\n\n/**\n * @param {string | null} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    mime &&\n    /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i.test(mime)\n  )\n    return 'module'\n  if (mime === 'application/json') return 'json'\n  return null\n}\n\n/**\n * @callback ProtocolHandler\n * @param {URL} parsed\n * @param {{parentURL: string, source?: Buffer}} context\n * @param {boolean} ignoreErrors\n * @returns {string | null | void}\n */\n\n/**\n * @type {Record<string, ProtocolHandler>}\n */\nconst protocolHandlers = {\n  // @ts-expect-error: hush.\n  __proto__: null,\n  'data:': getDataProtocolModuleFormat,\n  'file:': getFileProtocolModuleFormat,\n  'http:': getHttpProtocolModuleFormat,\n  'https:': getHttpProtocolModuleFormat,\n  'node:'() {\n    return 'builtin'\n  }\n};\n\n/**\n * @param {URL} parsed\n */\nfunction getDataProtocolModuleFormat(parsed) {\n  const {1: mime} = /^([^/]+\\/[^;,]+)[^,]*?(;base64)?,/.exec(\n    parsed.pathname\n  ) || [null, null, null];\n  return mimeToFormat(mime)\n}\n\n/**\n * Returns the file extension from a URL.\n *\n * Should give similar result to\n * `require('node:path').extname(require('node:url').fileURLToPath(url))`\n * when used with a `file:` URL.\n *\n * @param {URL} url\n * @returns {string}\n */\nfunction extname(url) {\n  const pathname = url.pathname;\n  let index = pathname.length;\n\n  while (index--) {\n    const code = pathname.codePointAt(index);\n\n    if (code === 47 /* `/` */) {\n      return ''\n    }\n\n    if (code === 46 /* `.` */) {\n      return pathname.codePointAt(index - 1) === 47 /* `/` */\n        ? ''\n        : pathname.slice(index)\n    }\n  }\n\n  return ''\n}\n\n/**\n * @type {ProtocolHandler}\n */\nfunction getFileProtocolModuleFormat(url, _context, ignoreErrors) {\n  const value = extname(url);\n\n  if (value === '.js') {\n    const packageType = getPackageType(url);\n\n    if (packageType !== 'none') {\n      return packageType\n    }\n\n    return 'commonjs'\n  }\n\n  if (value === '') {\n    const packageType = getPackageType(url);\n\n    // Legacy behavior\n    if (packageType === 'none' || packageType === 'commonjs') {\n      return 'commonjs'\n    }\n\n    // Note: we don’t implement WASM, so we don’t need\n    // `getFormatOfExtensionlessFile` from `formats`.\n    return 'module'\n  }\n\n  const format = extensionFormatMap[value];\n  if (format) return format\n\n  // Explicit undefined return indicates load hook should rerun format check\n  if (ignoreErrors) {\n    return undefined\n  }\n\n  const filepath = fileURLToPath(url);\n  throw new ERR_UNKNOWN_FILE_EXTENSION(value, filepath)\n}\n\nfunction getHttpProtocolModuleFormat() {\n  // To do: HTTPS imports.\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {string | null}\n */\nfunction defaultGetFormatWithoutErrors(url, context) {\n  const protocol = url.protocol;\n\n  if (!hasOwnProperty.call(protocolHandlers, protocol)) {\n    return null\n  }\n\n  return protocolHandlers[protocol](url, context, true) || null\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/81a9a97/lib/internal/modules/esm/utils.js>\n// Last checked on: Apr 29, 2023.\n\n\nconst {ERR_INVALID_ARG_VALUE} = codes;\n\n// In Node itself these values are populated from CLI arguments, before any\n// user code runs.\n// Here we just define the defaults.\nconst DEFAULT_CONDITIONS = Object.freeze(['node', 'import']);\nconst DEFAULT_CONDITIONS_SET = new Set(DEFAULT_CONDITIONS);\n\n/**\n * Returns the default conditions for ES module loading.\n */\nfunction getDefaultConditions() {\n  return DEFAULT_CONDITIONS\n}\n\n/**\n * Returns the default conditions for ES module loading, as a Set.\n */\nfunction getDefaultConditionsSet() {\n  return DEFAULT_CONDITIONS_SET\n}\n\n/**\n * @param {Array<string>} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\n    if (!Array.isArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'conditions',\n        conditions,\n        'expected an array'\n      )\n    }\n\n    return new Set(conditions)\n  }\n\n  return getDefaultConditionsSet()\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/81a9a97/lib/internal/modules/esm/resolve.js>\n// Last checked on: Apr 29, 2023.\n\n\nconst RegExpPrototypeSymbolReplace = RegExp.prototype[Symbol.replace];\n\nconst {\n  ERR_NETWORK_IMPORT_DISALLOWED,\n  ERR_INVALID_MODULE_SPECIFIER,\n  ERR_INVALID_PACKAGE_CONFIG,\n  ERR_INVALID_PACKAGE_TARGET,\n  ERR_MODULE_NOT_FOUND,\n  ERR_PACKAGE_IMPORT_NOT_DEFINED,\n  ERR_PACKAGE_PATH_NOT_EXPORTED,\n  ERR_UNSUPPORTED_DIR_IMPORT,\n  ERR_UNSUPPORTED_RESOLVE_REQUEST\n} = codes;\n\nconst own = {}.hasOwnProperty;\n\nconst invalidSegmentRegEx =\n  /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\nconst deprecatedInvalidSegmentRegEx =\n  /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\nconst encodedSeparatorRegEx = /%2f|%5c/i;\n/** @type {Set<string>} */\nconst emittedPackageWarnings = new Set();\n\nconst doubleSlashRegEx = /[/\\\\]{2}/;\n\n/**\n *\n * @param {string} target\n * @param {string} request\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} base\n * @param {boolean} isTarget\n */\nfunction emitInvalidSegmentDeprecation(\n  target,\n  request,\n  match,\n  packageJsonUrl,\n  internal,\n  base,\n  isTarget\n) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process.noDeprecation) {\n    return\n  }\n\n  const pjsonPath = fileURLToPath(packageJsonUrl);\n  const double = doubleSlashRegEx.exec(isTarget ? target : request) !== null;\n  process.emitWarning(\n    `Use of deprecated ${\n      double ? 'double slash' : 'leading or trailing slash matching'\n    } resolving \"${target}\" for module ` +\n      `request \"${request}\" ${\n        request === match ? '' : `matched to \"${match}\" `\n      }in the \"${\n        internal ? 'imports' : 'exports'\n      }\" field module resolution of the package at ${pjsonPath}${\n        base ? ` imported from ${fileURLToPath(base)}` : ''\n      }.`,\n    'DeprecationWarning',\n    'DEP0166'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @param {string} [main]\n * @returns {void}\n */\nfunction emitLegacyIndexDeprecation(url, packageJsonUrl, base, main) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process.noDeprecation) {\n    return\n  }\n\n  const format = defaultGetFormatWithoutErrors(url, {parentURL: base.href});\n  if (format !== 'module') return\n  const urlPath = fileURLToPath(url.href);\n  const packagePath = fileURLToPath(new URL$1('.', packageJsonUrl));\n  const basePath = fileURLToPath(base);\n  if (!main) {\n    process.emitWarning(\n      `No \"main\" or \"exports\" field defined in the package.json for ${packagePath} resolving the main entry point \"${urlPath.slice(\n        packagePath.length\n      )}\", imported from ${basePath}.\\nDefault \"index\" lookups for the main are deprecated for ES modules.`,\n      'DeprecationWarning',\n      'DEP0151'\n    );\n  } else if (path.resolve(packagePath, main) !== urlPath) {\n    process.emitWarning(\n      `Package ${packagePath} has a \"main\" field set to \"${main}\", ` +\n        `excluding the full filename and extension to the resolved file at \"${urlPath.slice(\n          packagePath.length\n        )}\", imported from ${basePath}.\\n Automatic extension resolution of the \"main\" field is ` +\n        'deprecated for ES modules.',\n      'DeprecationWarning',\n      'DEP0151'\n    );\n  }\n}\n\n/**\n * @param {string} path\n * @returns {Stats | undefined}\n */\nfunction tryStatSync(path) {\n  // Note: from Node 15 onwards we can use `throwIfNoEntry: false` instead.\n  try {\n    return statSync(path)\n  } catch {\n    // Note: in Node code this returns `new Stats`,\n    // but in Node 22 that’s marked as a deprecated internal API.\n    // Which, well, we kinda are, but still to prevent that warning,\n    // just yield `undefined`.\n  }\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M, M.js, M.json, M.node)\n * 3. TRY(M/index.js, M/index.json, M/index.node)\n * 4. TRY(pkg_url/index.js, pkg_url/index.json, pkg_url/index.node)\n * 5. NOT_FOUND\n *\n * @param {URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  const stats = statSync(url, {throwIfNoEntry: false});\n  const isFile = stats ? stats.isFile() : undefined;\n  return isFile === null || isFile === undefined ? false : isFile\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {PackageConfig} packageConfig\n * @param {URL} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJsonUrl, packageConfig, base) {\n  /** @type {URL | undefined} */\n  let guess;\n  if (packageConfig.main !== undefined) {\n    guess = new URL$1(packageConfig.main, packageJsonUrl);\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess)) return guess\n\n    const tries = [\n      `./${packageConfig.main}.js`,\n      `./${packageConfig.main}.json`,\n      `./${packageConfig.main}.node`,\n      `./${packageConfig.main}/index.js`,\n      `./${packageConfig.main}/index.json`,\n      `./${packageConfig.main}/index.node`\n    ];\n    let i = -1;\n\n    while (++i < tries.length) {\n      guess = new URL$1(tries[i], packageJsonUrl);\n      if (fileExists(guess)) break\n      guess = undefined;\n    }\n\n    if (guess) {\n      emitLegacyIndexDeprecation(\n        guess,\n        packageJsonUrl,\n        base,\n        packageConfig.main\n      );\n      return guess\n    }\n    // Fallthrough.\n  }\n\n  const tries = ['./index.js', './index.json', './index.node'];\n  let i = -1;\n\n  while (++i < tries.length) {\n    guess = new URL$1(tries[i], packageJsonUrl);\n    if (fileExists(guess)) break\n    guess = undefined;\n  }\n\n  if (guess) {\n    emitLegacyIndexDeprecation(guess, packageJsonUrl, base, packageConfig.main);\n    return guess\n  }\n\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    fileURLToPath(base)\n  )\n}\n\n/**\n * @param {URL} resolved\n * @param {URL} base\n * @param {boolean} [preserveSymlinks]\n * @returns {URL}\n */\nfunction finalizeResolution(resolved, base, preserveSymlinks) {\n  if (encodedSeparatorRegEx.exec(resolved.pathname) !== null) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname,\n      'must not include encoded \"/\" or \"\\\\\" characters',\n      fileURLToPath(base)\n    )\n  }\n\n  /** @type {string} */\n  let filePath;\n\n  try {\n    filePath = fileURLToPath(resolved);\n  } catch (error) {\n    const cause = /** @type {ErrnoException} */ (error);\n    Object.defineProperty(cause, 'input', {value: String(resolved)});\n    Object.defineProperty(cause, 'module', {value: String(base)});\n    throw cause\n  }\n\n  const stats = tryStatSync(\n    filePath.endsWith('/') ? filePath.slice(-1) : filePath\n  );\n\n  if (stats && stats.isDirectory()) {\n    const error = new ERR_UNSUPPORTED_DIR_IMPORT(filePath, fileURLToPath(base));\n    // @ts-expect-error Add this for `import.meta.resolve`.\n    error.url = String(resolved);\n    throw error\n  }\n\n  if (!stats || !stats.isFile()) {\n    const error = new ERR_MODULE_NOT_FOUND(\n      filePath || resolved.pathname,\n      base && fileURLToPath(base),\n      true\n    );\n    // @ts-expect-error Add this for `import.meta.resolve`.\n    error.url = String(resolved);\n    throw error\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(filePath);\n    const {search, hash} = resolved;\n    resolved = pathToFileURL(real + (filePath.endsWith(path.sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved\n}\n\n/**\n * @param {string} specifier\n * @param {URL | undefined} packageJsonUrl\n * @param {URL} base\n * @returns {Error}\n */\nfunction importNotDefined(specifier, packageJsonUrl, base) {\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier,\n    packageJsonUrl && fileURLToPath(new URL$1('.', packageJsonUrl)),\n    fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} subpath\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @returns {Error}\n */\nfunction exportsNotFound(subpath, packageJsonUrl, base) {\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    subpath,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} request\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} [base]\n * @returns {never}\n */\nfunction throwInvalidSubpath(request, match, packageJsonUrl, internal, base) {\n  const reason = `request is not a valid match in pattern \"${match}\" for the \"${\n    internal ? 'imports' : 'exports'\n  }\" resolution of ${fileURLToPath(packageJsonUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(\n    request,\n    reason,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} subpath\n * @param {unknown} target\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} [base]\n * @returns {Error}\n */\nfunction invalidPackageTarget(subpath, target, packageJsonUrl, internal, base) {\n  target =\n    typeof target === 'object' && target !== null\n      ? JSON.stringify(target, null, '')\n      : `${target}`;\n\n  return new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    subpath,\n    target,\n    internal,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} target\n * @param {string} subpath\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @param {boolean} pattern\n * @param {boolean} internal\n * @param {boolean} isPathMap\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction resolvePackageTargetString(\n  target,\n  subpath,\n  match,\n  packageJsonUrl,\n  base,\n  pattern,\n  internal,\n  isPathMap,\n  conditions\n) {\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n\n  if (!target.startsWith('./')) {\n    if (internal && !target.startsWith('../') && !target.startsWith('/')) {\n      let isURL = false;\n\n      try {\n        new URL$1(target);\n        isURL = true;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (!isURL) {\n        const exportTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target + subpath;\n\n        return packageResolve(exportTarget, packageJsonUrl, conditions)\n      }\n    }\n\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n  }\n\n  if (invalidSegmentRegEx.exec(target.slice(2)) !== null) {\n    if (deprecatedInvalidSegmentRegEx.exec(target.slice(2)) === null) {\n      if (!isPathMap) {\n        const request = pattern\n          ? match.replace('*', () => subpath)\n          : match + subpath;\n        const resolvedTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target;\n        emitInvalidSegmentDeprecation(\n          resolvedTarget,\n          request,\n          match,\n          packageJsonUrl,\n          internal,\n          base,\n          true\n        );\n      }\n    } else {\n      throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n    }\n  }\n\n  const resolved = new URL$1(target, packageJsonUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL$1('.', packageJsonUrl).pathname;\n\n  if (!resolvedPath.startsWith(packagePath))\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n\n  if (subpath === '') return resolved\n\n  if (invalidSegmentRegEx.exec(subpath) !== null) {\n    const request = pattern\n      ? match.replace('*', () => subpath)\n      : match + subpath;\n    if (deprecatedInvalidSegmentRegEx.exec(subpath) === null) {\n      if (!isPathMap) {\n        const resolvedTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target;\n        emitInvalidSegmentDeprecation(\n          resolvedTarget,\n          request,\n          match,\n          packageJsonUrl,\n          internal,\n          base,\n          false\n        );\n      }\n    } else {\n      throwInvalidSubpath(request, match, packageJsonUrl, internal, base);\n    }\n  }\n\n  if (pattern) {\n    return new URL$1(\n      RegExpPrototypeSymbolReplace.call(\n        patternRegEx,\n        resolved.href,\n        () => subpath\n      )\n    )\n  }\n\n  return new URL$1(subpath, resolved)\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNumber = Number(key);\n  if (`${keyNumber}` !== key) return false\n  return keyNumber >= 0 && keyNumber < 0xff_ff_ff_ff\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {unknown} target\n * @param {string} subpath\n * @param {string} packageSubpath\n * @param {URL} base\n * @param {boolean} pattern\n * @param {boolean} internal\n * @param {boolean} isPathMap\n * @param {Set<string> | undefined} conditions\n * @returns {URL | null}\n */\nfunction resolvePackageTarget(\n  packageJsonUrl,\n  target,\n  subpath,\n  packageSubpath,\n  base,\n  pattern,\n  internal,\n  isPathMap,\n  conditions\n) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target,\n      subpath,\n      packageSubpath,\n      packageJsonUrl,\n      base,\n      pattern,\n      internal,\n      isPathMap,\n      conditions\n    )\n  }\n\n  if (Array.isArray(target)) {\n    /** @type {Array<unknown>} */\n    const targetList = target;\n    if (targetList.length === 0) return null\n\n    /** @type {ErrnoException | null | undefined} */\n    let lastException;\n    let i = -1;\n\n    while (++i < targetList.length) {\n      const targetItem = targetList[i];\n      /** @type {URL | null} */\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          targetItem,\n          subpath,\n          packageSubpath,\n          base,\n          pattern,\n          internal,\n          isPathMap,\n          conditions\n        );\n      } catch (error) {\n        const exception = /** @type {ErrnoException} */ (error);\n        lastException = exception;\n        if (exception.code === 'ERR_INVALID_PACKAGE_TARGET') continue\n        throw error\n      }\n\n      if (resolveResult === undefined) continue\n\n      if (resolveResult === null) {\n        lastException = null;\n        continue\n      }\n\n      return resolveResult\n    }\n\n    if (lastException === undefined || lastException === null) {\n      return null\n    }\n\n    throw lastException\n  }\n\n  if (typeof target === 'object' && target !== null) {\n    const keys = Object.getOwnPropertyNames(target);\n    let i = -1;\n\n    while (++i < keys.length) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJsonUrl),\n          base,\n          '\"exports\" cannot contain numeric property keys.'\n        )\n      }\n    }\n\n    i = -1;\n\n    while (++i < keys.length) {\n      const key = keys[i];\n      if (key === 'default' || (conditions && conditions.has(key))) {\n        // @ts-expect-error: indexable.\n        const conditionalTarget = /** @type {unknown} */ (target[key]);\n        const resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          conditionalTarget,\n          subpath,\n          packageSubpath,\n          base,\n          pattern,\n          internal,\n          isPathMap,\n          conditions\n        );\n        if (resolveResult === undefined) continue\n        return resolveResult\n      }\n    }\n\n    return null\n  }\n\n  if (target === null) {\n    return null\n  }\n\n  throw invalidPackageTarget(\n    packageSubpath,\n    target,\n    packageJsonUrl,\n    internal,\n    base\n  )\n}\n\n/**\n * @param {unknown} exports\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @returns {boolean}\n */\nfunction isConditionalExportsMainSugar(exports, packageJsonUrl, base) {\n  if (typeof exports === 'string' || Array.isArray(exports)) return true\n  if (typeof exports !== 'object' || exports === null) return false\n\n  const keys = Object.getOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  let keyIndex = -1;\n  while (++keyIndex < keys.length) {\n    const key = keys[keyIndex];\n    const currentIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = currentIsConditionalSugar;\n    } else if (isConditionalSugar !== currentIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJsonUrl),\n        base,\n        '\"exports\" cannot contain some keys starting with \\'.\\' and some not.' +\n          ' The exports object must either be an object of package subpath keys' +\n          ' or an object of main entry condition name keys only.'\n      )\n    }\n  }\n\n  return isConditionalSugar\n}\n\n/**\n * @param {string} match\n * @param {URL} pjsonUrl\n * @param {URL} base\n */\nfunction emitTrailingSlashPatternDeprecation(match, pjsonUrl, base) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process.noDeprecation) {\n    return\n  }\n\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) return\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping \"${match}\" in the ` +\n      `\"exports\" field module resolution of the package at ${pjsonPath}${\n        base ? ` imported from ${fileURLToPath(base)}` : ''\n      }. Mapping specifiers ending in \"/\" is no longer supported.`,\n    'DeprecationWarning',\n    'DEP0155'\n  );\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {string} packageSubpath\n * @param {Record<string, unknown>} packageConfig\n * @param {URL} base\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJsonUrl,\n  packageSubpath,\n  packageConfig,\n  base,\n  conditions\n) {\n  let exports = packageConfig.exports;\n\n  if (isConditionalExportsMainSugar(exports, packageJsonUrl, base)) {\n    exports = {'.': exports};\n  }\n\n  if (\n    own.call(exports, packageSubpath) &&\n    !packageSubpath.includes('*') &&\n    !packageSubpath.endsWith('/')\n  ) {\n    // @ts-expect-error: indexable.\n    const target = exports[packageSubpath];\n    const resolveResult = resolvePackageTarget(\n      packageJsonUrl,\n      target,\n      '',\n      packageSubpath,\n      base,\n      false,\n      false,\n      false,\n      conditions\n    );\n    if (resolveResult === null || resolveResult === undefined) {\n      throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n    }\n\n    return resolveResult\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath = '';\n  const keys = Object.getOwnPropertyNames(exports);\n  let i = -1;\n\n  while (++i < keys.length) {\n    const key = keys[i];\n    const patternIndex = key.indexOf('*');\n\n    if (\n      patternIndex !== -1 &&\n      packageSubpath.startsWith(key.slice(0, patternIndex))\n    ) {\n      // When this reaches EOL, this can throw at the top of the whole function:\n      //\n      // if (StringPrototypeEndsWith(packageSubpath, '/'))\n      //   throwInvalidSubpath(packageSubpath)\n      //\n      // To match \"imports\" and the spec.\n      if (packageSubpath.endsWith('/')) {\n        emitTrailingSlashPatternDeprecation(\n          packageSubpath,\n          packageJsonUrl,\n          base\n        );\n      }\n\n      const patternTrailer = key.slice(patternIndex + 1);\n\n      if (\n        packageSubpath.length >= key.length &&\n        packageSubpath.endsWith(patternTrailer) &&\n        patternKeyCompare(bestMatch, key) === 1 &&\n        key.lastIndexOf('*') === patternIndex\n      ) {\n        bestMatch = key;\n        bestMatchSubpath = packageSubpath.slice(\n          patternIndex,\n          packageSubpath.length - patternTrailer.length\n        );\n      }\n    }\n  }\n\n  if (bestMatch) {\n    // @ts-expect-error: indexable.\n    const target = /** @type {unknown} */ (exports[bestMatch]);\n    const resolveResult = resolvePackageTarget(\n      packageJsonUrl,\n      target,\n      bestMatchSubpath,\n      bestMatch,\n      base,\n      true,\n      false,\n      packageSubpath.endsWith('/'),\n      conditions\n    );\n\n    if (resolveResult === null || resolveResult === undefined) {\n      throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n    }\n\n    return resolveResult\n  }\n\n  throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n}\n\n/**\n * @param {string} a\n * @param {string} b\n */\nfunction patternKeyCompare(a, b) {\n  const aPatternIndex = a.indexOf('*');\n  const bPatternIndex = b.indexOf('*');\n  const baseLengthA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLengthB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLengthA > baseLengthB) return -1\n  if (baseLengthB > baseLengthA) return 1\n  if (aPatternIndex === -1) return 1\n  if (bPatternIndex === -1) return -1\n  if (a.length > b.length) return -1\n  if (b.length > a.length) return 1\n  return 0\n}\n\n/**\n * @param {string} name\n * @param {URL} base\n * @param {Set<string>} [conditions]\n * @returns {URL}\n */\nfunction packageImportsResolve(name, base, conditions) {\n  if (name === '#' || name.startsWith('#/') || name.endsWith('/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, fileURLToPath(base))\n  }\n\n  /** @type {URL | undefined} */\n  let packageJsonUrl;\n\n  const packageConfig = getPackageScopeConfig(base);\n\n  if (packageConfig.exists) {\n    packageJsonUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (own.call(imports, name) && !name.includes('*')) {\n        const resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          imports[name],\n          '',\n          name,\n          base,\n          false,\n          true,\n          false,\n          conditions\n        );\n        if (resolveResult !== null && resolveResult !== undefined) {\n          return resolveResult\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath = '';\n        const keys = Object.getOwnPropertyNames(imports);\n        let i = -1;\n\n        while (++i < keys.length) {\n          const key = keys[i];\n          const patternIndex = key.indexOf('*');\n\n          if (patternIndex !== -1 && name.startsWith(key.slice(0, -1))) {\n            const patternTrailer = key.slice(patternIndex + 1);\n            if (\n              name.length >= key.length &&\n              name.endsWith(patternTrailer) &&\n              patternKeyCompare(bestMatch, key) === 1 &&\n              key.lastIndexOf('*') === patternIndex\n            ) {\n              bestMatch = key;\n              bestMatchSubpath = name.slice(\n                patternIndex,\n                name.length - patternTrailer.length\n              );\n            }\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const resolveResult = resolvePackageTarget(\n            packageJsonUrl,\n            target,\n            bestMatchSubpath,\n            bestMatch,\n            base,\n            true,\n            true,\n            false,\n            conditions\n          );\n\n          if (resolveResult !== null && resolveResult !== undefined) {\n            return resolveResult\n          }\n        }\n      }\n    }\n  }\n\n  throw importNotDefined(name, packageJsonUrl, base)\n}\n\n/**\n * @param {string} specifier\n * @param {URL} base\n */\nfunction parsePackageName(specifier, base) {\n  let separatorIndex = specifier.indexOf('/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = specifier.indexOf('/', separatorIndex + 1);\n    }\n  }\n\n  const packageName =\n    separatorIndex === -1 ? specifier : specifier.slice(0, separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (invalidPackageNameRegEx.exec(packageName) !== null) {\n    validPackageName = false;\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier,\n      'is not a valid package name',\n      fileURLToPath(base)\n    )\n  }\n\n  const packageSubpath =\n    '.' + (separatorIndex === -1 ? '' : specifier.slice(separatorIndex));\n\n  return {packageName, packageSubpath, isScoped}\n}\n\n/**\n * @param {string} specifier\n * @param {URL} base\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier, base, conditions) {\n  if (builtinModules.includes(specifier)) {\n    return new URL$1('node:' + specifier)\n  }\n\n  const {packageName, packageSubpath, isScoped} = parsePackageName(\n    specifier,\n    base\n  );\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n\n  // Can’t test.\n  /* c8 ignore next 16 */\n  if (packageConfig.exists) {\n    const packageJsonUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (\n      packageConfig.name === packageName &&\n      packageConfig.exports !== undefined &&\n      packageConfig.exports !== null\n    ) {\n      return packageExportsResolve(\n        packageJsonUrl,\n        packageSubpath,\n        packageConfig,\n        base,\n        conditions\n      )\n    }\n  }\n\n  let packageJsonUrl = new URL$1(\n    './node_modules/' + packageName + '/package.json',\n    base\n  );\n  let packageJsonPath = fileURLToPath(packageJsonUrl);\n  /** @type {string} */\n  let lastPath;\n  do {\n    const stat = tryStatSync(packageJsonPath.slice(0, -13));\n    if (!stat || !stat.isDirectory()) {\n      lastPath = packageJsonPath;\n      packageJsonUrl = new URL$1(\n        (isScoped ? '../../../../node_modules/' : '../../../node_modules/') +\n          packageName +\n          '/package.json',\n        packageJsonUrl\n      );\n      packageJsonPath = fileURLToPath(packageJsonUrl);\n      continue\n    }\n\n    // Package match.\n    const packageConfig = read(packageJsonPath, {base, specifier});\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJsonUrl,\n        packageSubpath,\n        packageConfig,\n        base,\n        conditions\n      )\n    }\n\n    if (packageSubpath === '.') {\n      return legacyMainResolve(packageJsonUrl, packageConfig, base)\n    }\n\n    return new URL$1(packageSubpath, packageJsonUrl)\n    // Cross-platform root check.\n  } while (packageJsonPath.length !== lastPath.length)\n\n  throw new ERR_MODULE_NOT_FOUND(packageName, fileURLToPath(base), false)\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true\n    if (\n      specifier[1] === '.' &&\n      (specifier.length === 2 || specifier[2] === '/')\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false\n  if (specifier[0] === '/') return true\n  return isRelativeSpecifier(specifier)\n}\n\n/**\n * The “Resolver Algorithm Specification” as detailed in the Node docs (which is\n * sync and slightly lower-level than `resolve`).\n *\n * @param {string} specifier\n *   `/example.js`, `./example.js`, `../example.js`, `some-package`, `fs`, etc.\n * @param {URL} base\n *   Full URL (to a file) that `specifier` is resolved relative from.\n * @param {Set<string>} [conditions]\n *   Conditions.\n * @param {boolean} [preserveSymlinks]\n *   Keep symlinks instead of resolving them.\n * @returns {URL}\n *   A URL object to the found thing.\n */\nfunction moduleResolve(specifier, base, conditions, preserveSymlinks) {\n  // Note: The Node code supports `base` as a string (in this internal API) too,\n  // we don’t.\n  const protocol = base.protocol;\n  const isData = protocol === 'data:';\n  const isRemote = isData || protocol === 'http:' || protocol === 'https:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  /** @type {URL | undefined} */\n  let resolved;\n\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    try {\n      resolved = new URL$1(specifier, base);\n    } catch (error_) {\n      const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier, base);\n      error.cause = error_;\n      throw error\n    }\n  } else if (protocol === 'file:' && specifier[0] === '#') {\n    resolved = packageImportsResolve(specifier, base, conditions);\n  } else {\n    try {\n      resolved = new URL$1(specifier);\n    } catch (error_) {\n      // Note: actual code uses `canBeRequiredWithoutScheme`.\n      if (isRemote && !builtinModules.includes(specifier)) {\n        const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier, base);\n        error.cause = error_;\n        throw error\n      }\n\n      resolved = packageResolve(specifier, base, conditions);\n    }\n  }\n\n  assert(resolved !== undefined, 'expected to be defined');\n\n  if (resolved.protocol !== 'file:') {\n    return resolved\n  }\n\n  return finalizeResolution(resolved, base, preserveSymlinks)\n}\n\n/**\n * @param {string} specifier\n * @param {URL | undefined} parsed\n * @param {URL | undefined} parsedParentURL\n */\nfunction checkIfDisallowedImport(specifier, parsed, parsedParentURL) {\n  if (parsedParentURL) {\n    // Avoid accessing the `protocol` property due to the lazy getters.\n    const parentProtocol = parsedParentURL.protocol;\n\n    if (parentProtocol === 'http:' || parentProtocol === 'https:') {\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n        // Avoid accessing the `protocol` property due to the lazy getters.\n        const parsedProtocol = parsed?.protocol;\n\n        // `data:` and `blob:` disallowed due to allowing file: access via\n        // indirection\n        if (\n          parsedProtocol &&\n          parsedProtocol !== 'https:' &&\n          parsedProtocol !== 'http:'\n        ) {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            specifier,\n            parsedParentURL,\n            'remote imports cannot import from a local location.'\n          )\n        }\n\n        return {url: parsed?.href || ''}\n      }\n\n      if (builtinModules.includes(specifier)) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          specifier,\n          parsedParentURL,\n          'remote imports cannot import from a local location.'\n        )\n      }\n\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\n        specifier,\n        parsedParentURL,\n        'only relative and absolute specifiers are supported.'\n      )\n    }\n  }\n}\n\n// Note: this is from:\n// <https://github.com/nodejs/node/blob/3e74590/lib/internal/url.js#L687>\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * @template {unknown} Value\n * @param {Value} self\n * @returns {Value is URL}\n */\nfunction isURL(self) {\n  return Boolean(\n    self &&\n      typeof self === 'object' &&\n      'href' in self &&\n      typeof self.href === 'string' &&\n      'protocol' in self &&\n      typeof self.protocol === 'string' &&\n      self.href &&\n      self.protocol\n  )\n}\n\n/**\n * Validate user-input in `context` supplied by a custom loader.\n *\n * @param {unknown} parentURL\n * @returns {asserts parentURL is URL | string | undefined}\n */\nfunction throwIfInvalidParentURL(parentURL) {\n  if (parentURL === undefined) {\n    return // Main entry point, so no parent\n  }\n\n  if (typeof parentURL !== 'string' && !isURL(parentURL)) {\n    throw new codes.ERR_INVALID_ARG_TYPE(\n      'parentURL',\n      ['string', 'URL'],\n      parentURL\n    )\n  }\n}\n\n/**\n * @param {string} specifier\n * @param {{parentURL?: string, conditions?: Array<string>}} context\n * @returns {{url: string, format?: string | null}}\n */\nfunction defaultResolve(specifier, context = {}) {\n  const {parentURL} = context;\n  assert(parentURL !== undefined, 'expected `parentURL` to be defined');\n  throwIfInvalidParentURL(parentURL);\n\n  /** @type {URL | undefined} */\n  let parsedParentURL;\n  if (parentURL) {\n    try {\n      parsedParentURL = new URL$1(parentURL);\n    } catch {\n      // Ignore exception\n    }\n  }\n\n  /** @type {URL | undefined} */\n  let parsed;\n  /** @type {string | undefined} */\n  let protocol;\n\n  try {\n    parsed = shouldBeTreatedAsRelativeOrAbsolutePath(specifier)\n      ? new URL$1(specifier, parsedParentURL)\n      : new URL$1(specifier);\n\n    // Avoid accessing the `protocol` property due to the lazy getters.\n    protocol = parsed.protocol;\n\n    if (protocol === 'data:') {\n      return {url: parsed.href, format: null}\n    }\n  } catch {\n    // Ignore exception\n  }\n\n  // There are multiple deep branches that can either throw or return; instead\n  // of duplicating that deeply nested logic for the possible returns, DRY and\n  // check for a return. This seems the least gnarly.\n  const maybeReturn = checkIfDisallowedImport(\n    specifier,\n    parsed,\n    parsedParentURL\n  );\n\n  if (maybeReturn) return maybeReturn\n\n  // This must come after checkIfDisallowedImport\n  if (protocol === undefined && parsed) {\n    protocol = parsed.protocol;\n  }\n\n  if (protocol === 'node:') {\n    return {url: specifier}\n  }\n\n  // This must come after checkIfDisallowedImport\n  if (parsed && parsed.protocol === 'node:') return {url: specifier}\n\n  const conditions = getConditionsSet(context.conditions);\n\n  const url = moduleResolve(specifier, new URL$1(parentURL), conditions, false);\n\n  return {\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems, silencing them\n    url: url.href,\n    format: defaultGetFormatWithoutErrors(url, {parentURL})\n  }\n}\n\n/**\n * @typedef {import('./lib/errors.js').ErrnoException} ErrnoException\n */\n\n\n/**\n * Match `import.meta.resolve` except that `parent` is required (you can pass\n * `import.meta.url`).\n *\n * @param {string} specifier\n *   The module specifier to resolve relative to parent\n *   (`/example.js`, `./example.js`, `../example.js`, `some-package`, `fs`,\n *   etc).\n * @param {string} parent\n *   The absolute parent module URL to resolve from.\n *   You must pass `import.meta.url` or something else.\n * @returns {string}\n *   Returns a string to a full `file:`, `data:`, or `node:` URL\n *   to the found thing.\n */\nfunction resolve(specifier, parent) {\n  if (!parent) {\n    throw new Error(\n      'Please pass `parent`: `import-meta-resolve` cannot ponyfill that'\n    )\n  }\n\n  try {\n    return defaultResolve(specifier, {parentURL: parent}).url\n  } catch (error) {\n    // See: <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/initialize_import_meta.js#L34>\n    const exception = /** @type {ErrnoException} */ (error);\n\n    if (\n      (exception.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ||\n        exception.code === 'ERR_MODULE_NOT_FOUND') &&\n      typeof exception.url === 'string'\n    ) {\n      return exception.url\n    }\n\n    throw error\n  }\n}\n\nexport { moduleResolve, resolve };\n"],"mappings":"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","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform.js":{"lineLengths":[13,0,46,13,3,27,40,38,21,34,26,16,4,14,1,42,51,68,68,50,35,47,3,95,11,15,45,30,21,10,26,29,3,31,5,92,5,3,94,2,33,85,1,34,86,1,7,0,37,0],"data":{"version":3,"names":["_gensync","data","require","_index","_index2","_rewriteStackTrace","transformRunner","gensync","transform","code","opts","config","loadConfig","run","exports","optsOrCallback","maybeCallback","callback","undefined","beginHiddenCallStack","sync","errback","transformSync","args","transformAsync","async"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transform.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config/index.ts\";\nimport type { InputOptions, ResolvedConfig } from \"./config/index.ts\";\nimport { run } from \"./transformation/index.ts\";\n\nimport type { FileResult, FileResultCallback } from \"./transformation/index.ts\";\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace.ts\";\n\nexport type { FileResult } from \"./transformation/index.ts\";\n\ntype Transform = {\n  (code: string, callback: FileResultCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileResultCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): FileResult | null;\n};\n\nconst transformRunner = gensync(function* transform(\n  code: string,\n  opts?: InputOptions,\n): Handler<FileResult | null> {\n  const config: ResolvedConfig | null = yield* loadConfig(opts);\n  if (config === null) return null;\n\n  return yield* run(config, code);\n});\n\nexport const transform: Transform = function transform(\n  code,\n  optsOrCallback?: InputOptions | null | undefined | FileResultCallback,\n  maybeCallback?: FileResultCallback,\n) {\n  let opts: InputOptions | undefined | null;\n  let callback: FileResultCallback | undefined;\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'transform' function expects a callback. If you need to call it synchronously, please use 'transformSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'transform' function will expect a callback. If you need to call it synchronously, please use 'transformSync'.\",\n      // );\n      return beginHiddenCallStack(transformRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(transformRunner.errback)(code, opts, callback);\n};\n\nexport function transformSync(\n  ...args: Parameters<typeof transformRunner.sync>\n) {\n  return beginHiddenCallStack(transformRunner.sync)(...args);\n}\nexport function transformAsync(\n  ...args: Parameters<typeof transformRunner.async>\n) {\n  return beginHiddenCallStack(transformRunner.async)(...args);\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAE,MAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAGA,IAAAG,kBAAA,GAAAH,OAAA;AAcA,MAAMI,eAAe,GAAGC,SAAMA,CAAC,CAAC,UAAUC,SAASA,CACjDC,IAAY,EACZC,IAAmB,EACS;EAC5B,MAAMC,MAA6B,GAAG,OAAO,IAAAC,cAAU,EAACF,IAAI,CAAC;EAC7D,IAAIC,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,OAAO,OAAO,IAAAE,WAAG,EAACF,MAAM,EAAEF,IAAI,CAAC;AACjC,CAAC,CAAC;AAEK,MAAMD,SAAoB,GAAAM,OAAA,CAAAN,SAAA,GAAG,SAASA,SAASA,CACpDC,IAAI,EACJM,cAAqE,EACrEC,aAAkC,EAClC;EACA,IAAIN,IAAqC;EACzC,IAAIO,QAAwC;EAC5C,IAAI,OAAOF,cAAc,KAAK,UAAU,EAAE;IACxCE,QAAQ,GAAGF,cAAc;IACzBL,IAAI,GAAGQ,SAAS;EAClB,CAAC,MAAM;IACLR,IAAI,GAAGK,cAAc;IACrBE,QAAQ,GAAGD,aAAa;EAC1B;EAEA,IAAIC,QAAQ,KAAKC,SAAS,EAAE;IAKnB;MAIL,OAAO,IAAAC,uCAAoB,EAACb,eAAe,CAACc,IAAI,CAAC,CAACX,IAAI,EAAEC,IAAI,CAAC;IAC/D;EACF;EAEA,IAAAS,uCAAoB,EAACb,eAAe,CAACe,OAAO,CAAC,CAACZ,IAAI,EAAEC,IAAI,EAAEO,QAAQ,CAAC;AACrE,CAAC;AAEM,SAASK,aAAaA,CAC3B,GAAGC,IAA6C,EAChD;EACA,OAAO,IAAAJ,uCAAoB,EAACb,eAAe,CAACc,IAAI,CAAC,CAAC,GAAGG,IAAI,CAAC;AAC5D;AACO,SAASC,cAAcA,CAC5B,GAAGD,IAA8C,EACjD;EACA,OAAO,IAAAJ,uCAAoB,EAACb,eAAe,CAACmB,KAAK,CAAC,CAAC,GAAGF,IAAI,CAAC;AAC7D;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/transform-ast.js":{"lineLengths":[13,0,46,13,3,34,54,52,21,34,26,16,4,14,1,42,51,68,71,50,35,44,52,3,121,11,15,45,30,21,10,26,29,3,31,5,104,5,3,106,2,40,92,1,41,93,1,7,0,41,0],"data":{"version":3,"names":["_gensync","data","require","_index","_index2","_rewriteStackTrace","transformFromAstRunner","gensync","ast","code","opts","config","loadConfig","Error","run","transformFromAst","exports","optsOrCallback","maybeCallback","callback","undefined","beginHiddenCallStack","sync","errback","transformFromAstSync","args","transformFromAstAsync","async"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/transform-ast.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config/index.ts\";\nimport type { InputOptions, ResolvedConfig } from \"./config/index.ts\";\nimport { run } from \"./transformation/index.ts\";\nimport type * as t from \"@babel/types\";\n\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace.ts\";\n\nimport type { FileResult, FileResultCallback } from \"./transformation/index.ts\";\ntype AstRoot = t.File | t.Program;\n\ntype TransformFromAst = {\n  (ast: AstRoot, code: string, callback: FileResultCallback): void;\n  (\n    ast: AstRoot,\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileResultCallback,\n  ): void;\n  (ast: AstRoot, code: string, opts?: InputOptions | null): FileResult | null;\n};\n\nconst transformFromAstRunner = gensync(function* (\n  ast: AstRoot,\n  code: string,\n  opts: InputOptions | undefined | null,\n): Handler<FileResult | null> {\n  const config: ResolvedConfig | null = yield* loadConfig(opts);\n  if (config === null) return null;\n\n  if (!ast) throw new Error(\"No AST given\");\n\n  return yield* run(config, code, ast);\n});\n\nexport const transformFromAst: TransformFromAst = function transformFromAst(\n  ast,\n  code,\n  optsOrCallback?: InputOptions | null | undefined | FileResultCallback,\n  maybeCallback?: FileResultCallback,\n) {\n  let opts: InputOptions | undefined | null;\n  let callback: FileResultCallback | undefined;\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'transformFromAst' function expects a callback. If you need to call it synchronously, please use 'transformFromAstSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'transformFromAst' function will expect a callback. If you need to call it synchronously, please use 'transformFromAstSync'.\",\n      // );\n      return beginHiddenCallStack(transformFromAstRunner.sync)(ast, code, opts);\n    }\n  }\n\n  beginHiddenCallStack(transformFromAstRunner.errback)(\n    ast,\n    code,\n    opts,\n    callback,\n  );\n};\n\nexport function transformFromAstSync(\n  ...args: Parameters<typeof transformFromAstRunner.sync>\n) {\n  return beginHiddenCallStack(transformFromAstRunner.sync)(...args);\n}\n\nexport function transformFromAstAsync(\n  ...args: Parameters<typeof transformFromAstRunner.async>\n) {\n  return beginHiddenCallStack(transformFromAstRunner.async)(...args);\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAE,MAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAGA,IAAAG,kBAAA,GAAAH,OAAA;AAgBA,MAAMI,sBAAsB,GAAGC,SAAMA,CAAC,CAAC,WACrCC,GAAY,EACZC,IAAY,EACZC,IAAqC,EACT;EAC5B,MAAMC,MAA6B,GAAG,OAAO,IAAAC,cAAU,EAACF,IAAI,CAAC;EAC7D,IAAIC,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,IAAI,CAACH,GAAG,EAAE,MAAM,IAAIK,KAAK,CAAC,cAAc,CAAC;EAEzC,OAAO,OAAO,IAAAC,WAAG,EAACH,MAAM,EAAEF,IAAI,EAAED,GAAG,CAAC;AACtC,CAAC,CAAC;AAEK,MAAMO,gBAAkC,GAAAC,OAAA,CAAAD,gBAAA,GAAG,SAASA,gBAAgBA,CACzEP,GAAG,EACHC,IAAI,EACJQ,cAAqE,EACrEC,aAAkC,EAClC;EACA,IAAIR,IAAqC;EACzC,IAAIS,QAAwC;EAC5C,IAAI,OAAOF,cAAc,KAAK,UAAU,EAAE;IACxCE,QAAQ,GAAGF,cAAc;IACzBP,IAAI,GAAGU,SAAS;EAClB,CAAC,MAAM;IACLV,IAAI,GAAGO,cAAc;IACrBE,QAAQ,GAAGD,aAAa;EAC1B;EAEA,IAAIC,QAAQ,KAAKC,SAAS,EAAE;IAKnB;MAIL,OAAO,IAAAC,uCAAoB,EAACf,sBAAsB,CAACgB,IAAI,CAAC,CAACd,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAC3E;EACF;EAEA,IAAAW,uCAAoB,EAACf,sBAAsB,CAACiB,OAAO,CAAC,CAClDf,GAAG,EACHC,IAAI,EACJC,IAAI,EACJS,QACF,CAAC;AACH,CAAC;AAEM,SAASK,oBAAoBA,CAClC,GAAGC,IAAoD,EACvD;EACA,OAAO,IAAAJ,uCAAoB,EAACf,sBAAsB,CAACgB,IAAI,CAAC,CAAC,GAAGG,IAAI,CAAC;AACnE;AAEO,SAASC,qBAAqBA,CACnC,GAAGD,IAAqD,EACxD;EACA,OAAO,IAAAJ,uCAAoB,EAACf,sBAAsB,CAACqB,KAAK,CAAC,CAAC,GAAGF,IAAI,CAAC;AACpE;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/lib/parse.js":{"lineLengths":[13,0,46,13,3,23,32,30,21,34,26,16,4,14,1,42,43,67,68,60,50,24,16,3,95,3,68,35,20,21,3,31,5,88,5,3,90,2,29,81,1,30,82,1,7,0,33,0],"data":{"version":3,"names":["_gensync","data","require","_index","_index2","_normalizeOpts","_rewriteStackTrace","parseRunner","gensync","parse","code","opts","config","loadConfig","parser","passes","normalizeOptions","exports","callback","undefined","beginHiddenCallStack","sync","errback","parseSync","args","parseAsync","async"],"sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/core/src/parse.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig, { type InputOptions } from \"./config/index.ts\";\nimport parser, { type ParseResult } from \"./parser/index.ts\";\nimport normalizeOptions from \"./transformation/normalize-opts.ts\";\nimport type { ValidatedOptions } from \"./config/validation/options.ts\";\n\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace.ts\";\n\ntype FileParseCallback = {\n  (err: Error, ast: null): void;\n  (err: null, ast: ParseResult | null): void;\n};\n\ntype Parse = {\n  (code: string, callback: FileParseCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileParseCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): ParseResult | null;\n};\n\nconst parseRunner = gensync(function* parse(\n  code: string,\n  opts: InputOptions | undefined | null,\n): Handler<ParseResult | null> {\n  const config = yield* loadConfig(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* parser(config.passes, normalizeOptions(config), code);\n});\n\nexport const parse: Parse = function parse(\n  code,\n  opts?,\n  callback?: FileParseCallback,\n) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined as ValidatedOptions;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'parse' function expects a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'parse' function will expect a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      // );\n      return beginHiddenCallStack(parseRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(parseRunner.errback)(code, opts, callback);\n};\n\nexport function parseSync(...args: Parameters<typeof parseRunner.sync>) {\n  return beginHiddenCallStack(parseRunner.sync)(...args);\n}\nexport function parseAsync(...args: Parameters<typeof parseRunner.async>) {\n  return beginHiddenCallStack(parseRunner.async)(...args);\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAAE,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AAGA,IAAAI,kBAAA,GAAAJ,OAAA;AAiBA,MAAMK,WAAW,GAAGC,SAAMA,CAAC,CAAC,UAAUC,KAAKA,CACzCC,IAAY,EACZC,IAAqC,EACR;EAC7B,MAAMC,MAAM,GAAG,OAAO,IAAAC,cAAU,EAACF,IAAI,CAAC;EAEtC,IAAIC,MAAM,KAAK,IAAI,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OAAO,OAAO,IAAAE,eAAM,EAACF,MAAM,CAACG,MAAM,EAAE,IAAAC,sBAAgB,EAACJ,MAAM,CAAC,EAAEF,IAAI,CAAC;AACrE,CAAC,CAAC;AAEK,MAAMD,KAAY,GAAAQ,OAAA,CAAAR,KAAA,GAAG,SAASA,KAAKA,CACxCC,IAAI,EACJC,IAAK,EACLO,QAA4B,EAC5B;EACA,IAAI,OAAOP,IAAI,KAAK,UAAU,EAAE;IAC9BO,QAAQ,GAAGP,IAAI;IACfA,IAAI,GAAGQ,SAA6B;EACtC;EAEA,IAAID,QAAQ,KAAKC,SAAS,EAAE;IAKnB;MAIL,OAAO,IAAAC,uCAAoB,EAACb,WAAW,CAACc,IAAI,CAAC,CAACX,IAAI,EAAEC,IAAI,CAAC;IAC3D;EACF;EAEA,IAAAS,uCAAoB,EAACb,WAAW,CAACe,OAAO,CAAC,CAACZ,IAAI,EAAEC,IAAI,EAAEO,QAAQ,CAAC;AACjE,CAAC;AAEM,SAASK,SAASA,CAAC,GAAGC,IAAyC,EAAE;EACtE,OAAO,IAAAJ,uCAAoB,EAACb,WAAW,CAACc,IAAI,CAAC,CAAC,GAAGG,IAAI,CAAC;AACxD;AACO,SAASC,UAAUA,CAAC,GAAGD,IAA0C,EAAE;EACxE,OAAO,IAAAJ,uCAAoB,EAACb,WAAW,CAACmB,KAAK,CAAC,CAAC,GAAGF,IAAI,CAAC;AACzD;AAAC","ignoreList":[],"sourceRoot":""},"url":null},"file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/code-frame/lib/index.js":{"lineLengths":[13,0,62,0,39,36,78,0,29,151,4,1,39,28,10,25,31,33,30,27,25,26,25,71,24,45,46,23,4,1,56,58,27,36,1,0,79,44,30,13,1,35,55,32,168,25,7,111,31,7,60,29,7,5,67,23,5,83,26,5,22,4,31,14,49,49,13,53,26,8,5,4,1,26,29,29,23,14,9,9,24,23,83,12,27,5,3,21,1,0,36,42,44,34,14,12,16,54,9,19,18,17,34,38,30,34,56,58,25,14,3,23,24,3,39,25,17,41,39,25,39,27,59,80,34,49,14,59,52,7,5,10,36,24,50,14,38,7,12,70,5,3,10,10,8,15,4,1,53,86,40,40,9,10,8,15,39,71,44,76,91,37,61,40,42,52,20,26,37,98,50,141,45,57,9,7,109,12,75,5,16,36,73,3,24,29,10,17,3,1,61,33,35,122,30,57,12,50,51,39,5,3,37,20,12,24,22,5,4,52,1,0,44,24,30,33,0],"data":{"version":3,"file":"index.js","sources":["file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/code-frame/src/defs.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/code-frame/src/highlight.ts","file:///home/runner/work/prettier-dist-coverage/prettier-dist-coverage/node_modules/@babel/code-frame/src/index.ts"],"sourcesContent":["import picocolors, { createColors } from \"picocolors\";\nimport type { Colors, Formatter } from \"picocolors/types\";\n\nexport function isColorSupported() {\n  return (\n    // See https://github.com/alexeyraspopov/picocolors/issues/62\n    typeof process === \"object\" &&\n      (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\")\n      ? false\n      : picocolors.isColorSupported\n  );\n}\n\nexport type InternalTokenType =\n  | \"keyword\"\n  | \"capitalized\"\n  | \"jsxIdentifier\"\n  | \"punctuator\"\n  | \"number\"\n  | \"string\"\n  | \"regex\"\n  | \"comment\"\n  | \"invalid\";\n\ntype UITokens = \"gutter\" | \"marker\" | \"message\";\n\nexport type Defs = {\n  [_ in InternalTokenType | UITokens | \"reset\"]: Formatter;\n};\n\nconst compose: <T, U, V>(f: (gv: U) => V, g: (v: T) => U) => (v: T) => V =\n  (f, g) => v =>\n    f(g(v));\n\n/**\n * Styles for token types.\n */\nfunction buildDefs(colors: Colors): Defs {\n  return {\n    keyword: colors.cyan,\n    capitalized: colors.yellow,\n    jsxIdentifier: colors.yellow,\n    punctuator: colors.yellow,\n    number: colors.magenta,\n    string: colors.green,\n    regex: colors.magenta,\n    comment: colors.gray,\n    invalid: compose(compose(colors.white, colors.bgRed), colors.bold),\n\n    gutter: colors.gray,\n    marker: compose(colors.red, colors.bold),\n    message: compose(colors.red, colors.bold),\n\n    reset: colors.reset,\n  };\n}\n\nconst defsOn = buildDefs(createColors(true));\nconst defsOff = buildDefs(createColors(false));\n\nexport function getDefs(enabled: boolean): Defs {\n  return enabled ? defsOn : defsOff;\n}\n","import type { Token as JSToken, JSXToken } from \"js-tokens\";\nimport jsTokens from \"js-tokens\";\n\nimport {\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nimport { getDefs, type InternalTokenType } from \"./defs.ts\";\n\n/**\n * Names that are always allowed as identifiers, but also appear as keywords\n * within certain syntactic productions.\n *\n * https://tc39.es/ecma262/#sec-keywords-and-reserved-words\n *\n * `target` has been omitted since it is very likely going to be a false\n * positive.\n */\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\ntype Token = {\n  type: InternalTokenType | \"uncolored\";\n  value: string;\n};\n\n/**\n * RegExp to test for newlines in terminal.\n */\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * RegExp to test for the three types of brackets.\n */\nconst BRACKET = /^[()[\\]{}]$/;\n\nlet tokenize: (\n  text: string,\n) => Generator<{ type: InternalTokenType | \"uncolored\"; value: string }>;\n\nif (process.env.BABEL_8_BREAKING) {\n  /**\n   * Get the type of token, specifying punctuator type.\n   */\n  const getTokenType = function (\n    token: JSToken | JSXToken,\n  ): InternalTokenType | \"uncolored\" {\n    if (token.type === \"IdentifierName\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"Punctuator\" && BRACKET.test(token.value)) {\n      return \"uncolored\";\n    }\n\n    if (token.type === \"Invalid\" && token.value === \"@\") {\n      return \"punctuator\";\n    }\n\n    switch (token.type) {\n      case \"NumericLiteral\":\n        return \"number\";\n\n      case \"StringLiteral\":\n      case \"JSXString\":\n      case \"NoSubstitutionTemplate\":\n        return \"string\";\n\n      case \"RegularExpressionLiteral\":\n        return \"regex\";\n\n      case \"Punctuator\":\n      case \"JSXPunctuator\":\n        return \"punctuator\";\n\n      case \"MultiLineComment\":\n      case \"SingleLineComment\":\n        return \"comment\";\n\n      case \"Invalid\":\n      case \"JSXInvalid\":\n        return \"invalid\";\n\n      case \"JSXIdentifier\":\n        return \"jsxIdentifier\";\n\n      default:\n        return \"uncolored\";\n    }\n  };\n\n  /**\n   * Turn a string of JS into an array of objects.\n   */\n  tokenize = function* (text: string): Generator<Token> {\n    for (const token of jsTokens(text, { jsx: true })) {\n      switch (token.type) {\n        case \"TemplateHead\":\n          yield { type: \"string\", value: token.value.slice(0, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateMiddle\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateTail\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1) };\n          break;\n\n        default:\n          yield {\n            type: getTokenType(token),\n            value: token.value,\n          };\n      }\n    }\n  };\n} else {\n  /**\n   * RegExp to test for what seems to be a JSX tag name.\n   */\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  // The token here is defined in js-tokens@4. However we don't bother\n  // typing it since the whole block will be removed in Babel 8\n  const getTokenType = function (token: any, offset: number, text: string) {\n    if (token.type === \"name\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (\n        JSX_TAG.test(token.value) &&\n        (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) === \"</\")\n      ) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (\n      token.type === \"invalid\" &&\n      (token.value === \"@\" || token.value === \"#\")\n    ) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text: string) {\n    let match;\n    while ((match = (jsTokens as any).default.exec(text))) {\n      const token = (jsTokens as any).matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value,\n      };\n    }\n  };\n}\n\nexport function highlight(text: string) {\n  if (text === \"\") return \"\";\n\n  const defs = getDefs(true);\n\n  let highlighted = \"\";\n\n  for (const { type, value } of tokenize(text)) {\n    if (type in defs) {\n      highlighted += value\n        .split(NEWLINE)\n        .map(str => defs[type as InternalTokenType](str))\n        .join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n","import { getDefs, isColorSupported } from \"./defs.ts\";\nimport { highlight } from \"./highlight.ts\";\n\nexport { highlight };\n\nlet deprecationWarningShown = false;\n\ntype Location = {\n  column: number;\n  line: number;\n};\n\ntype NodeLocation = {\n  end?: Location;\n  start: Location;\n};\n\nexport interface Options {\n  /** Syntax highlight the code as JavaScript for terminals. default: false */\n  highlightCode?: boolean;\n  /**  The number of lines to show above the error. default: 2 */\n  linesAbove?: number;\n  /**  The number of lines to show below the error. default: 3 */\n  linesBelow?: number;\n  /**\n   * Forcibly syntax highlight the code as JavaScript (for non-terminals);\n   * overrides highlightCode.\n   * default: false\n   */\n  forceColor?: boolean;\n  /**\n   * Pass in a string to be displayed inline (if possible) next to the\n   * highlighted location in the code. If it can't be positioned inline,\n   * it will be placed above the code frame.\n   * default: nothing\n   */\n  message?: string;\n}\n\n/**\n * RegExp to test for newlines in terminal.\n */\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * Extract what lines should be marked and highlighted.\n */\n\ntype MarkerLines = Record<number, true | [number, number]>;\n\nfunction getMarkerLines(\n  loc: NodeLocation,\n  source: Array<string>,\n  opts: Options,\n): {\n  start: number;\n  end: number;\n  markerLines: MarkerLines;\n} {\n  const startLoc: Location = {\n    column: 0,\n    line: -1,\n    ...loc.start,\n  };\n  const endLoc: Location = {\n    ...startLoc,\n    ...loc.end,\n  };\n  const { linesAbove = 2, linesBelow = 3 } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines: MarkerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return { start, end, markerLines };\n}\n\nexport function codeFrameColumns(\n  rawLines: string,\n  loc: NodeLocation,\n  opts: Options = {},\n): string {\n  const shouldHighlight =\n    opts.forceColor || (isColorSupported() && opts.highlightCode);\n  const defs = getDefs(shouldHighlight);\n\n  const lines = rawLines.split(NEWLINE);\n  const { start, end, markerLines } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n\n  const numberMaxWidth = String(end).length;\n\n  const highlightedLines = shouldHighlight ? highlight(rawLines) : rawLines;\n\n  let frame = highlightedLines\n    .split(NEWLINE, end)\n    .slice(start, end)\n    .map((line, index) => {\n      const number = start + 1 + index;\n      const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n      const gutter = ` ${paddedNumber} |`;\n      const hasMarker = markerLines[number];\n      const lastMarkerLine = !markerLines[number + 1];\n      if (hasMarker) {\n        let markerLine = \"\";\n        if (Array.isArray(hasMarker)) {\n          const markerSpacing = line\n            .slice(0, Math.max(hasMarker[0] - 1, 0))\n            .replace(/[^\\t]/g, \" \");\n          const numberOfMarkers = hasMarker[1] || 1;\n\n          markerLine = [\n            \"\\n \",\n            defs.gutter(gutter.replace(/\\d/g, \" \")),\n            \" \",\n            markerSpacing,\n            defs.marker(\"^\").repeat(numberOfMarkers),\n          ].join(\"\");\n\n          if (lastMarkerLine && opts.message) {\n            markerLine += \" \" + defs.message(opts.message);\n          }\n        }\n        return [\n          defs.marker(\">\"),\n          defs.gutter(gutter),\n          line.length > 0 ? ` ${line}` : \"\",\n          markerLine,\n        ].join(\"\");\n      } else {\n        return ` ${defs.gutter(gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n      }\n    })\n    .join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (shouldHighlight) {\n    return defs.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\n/**\n * Create a code frame, adding line numbers, code highlighting, and pointing to a given position.\n */\n\nexport default function (\n  rawLines: string,\n  lineNumber: number,\n  colNumber?: number | null,\n  opts: Options = {},\n): string {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n\n    const message =\n      \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      // A string is directly supplied to emitWarning, because when supplying an\n      // Error object node throws in the tests because of different contexts\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n\n  const location: NodeLocation = {\n    start: { column: colNumber, line: lineNumber },\n  };\n\n  return codeFrameColumns(rawLines, location, opts);\n}\n"],"names":["isColorSupported","process","env","FORCE_COLOR","picocolors","compose","f","g","v","buildDefs","colors","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","gray","invalid","white","bgRed","bold","gutter","marker","red","message","reset","defsOn","createColors","defsOff","getDefs","enabled","sometimesKeywords","Set","NEWLINE","BRACKET","tokenize","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","value","isStrictReservedWord","has","test","slice","toLowerCase","match","jsTokens","default","exec","matchToToken","index","highlight","defs","highlighted","split","map","str","join","deprecationWarningShown","getMarkerLines","loc","source","opts","startLoc","Object","assign","column","line","start","endLoc","end","linesAbove","linesBelow","startLine","startColumn","endLine","endColumn","Math","max","min","length","lineDiff","markerLines","i","lineNumber","sourceLength","codeFrameColumns","rawLines","shouldHighlight","forceColor","highlightCode","lines","hasColumns","numberMaxWidth","String","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","Array","isArray","markerSpacing","replace","numberOfMarkers","repeat","colNumber","emitWarning","deprecationError","Error","name","console","warn","location"],"mappings":"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","sourceRoot":""},"url":null}}}